{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.1", "title": "Overview", "page": 34, "level": 2, "parent_id": "1", "full_path": "1.1 Overview", "tags": [], "text": "1 Introduction\nUSB has evolved from a data interface capable of supplying limited power to a primary provider of power with a\ndata interface. Today many devices charge or get their power from USB Ports contained in laptops, cars, aircraft or\neven wall sockets. USB has become a ubiquitous power socket for many small devices such as cell phones and other\nhand-held devices. Users need USB to fulfill their requirements not only in terms of data but also to provide power\nto, or charge, their devices simply, often without the need to load a driver, in order to carry out \u201ctraditional\u201d USB\nfunctions.\nThere are, however, still many devices which either require an additional power connection to the wall, or exceed\nthe USB default current in order to operate. Increasingly, international regulations require better energy\nmanagement due to ecological and practical concerns relating to the availability of power. Regulations limit the\namount of powe[rU aSvBaBilaCb 1le.2 f]rom[ tUhSeB w Tayllp we-hCic 2h. 4h]as led to a pressing need to optimize power usage. The USB Power\nDelivery Specification has the potential to minimize waste as it becomes a standard for charging devices that are\nnot satisfied by or .\nWider usage of wireless solutions is an attempt to remove data cabling but the need for \u201ctethered\u201d charging\nremains. In addition, industrial design requirements drive wired connectivity to do much more over the same\nconnector.\nUSB Power Delivery is designed to enable the maximum functional[iUtyS BofB UCS 1B.2 b]y providing more flexible power\ndelivery along with data over a single cable. Its aim is to operate with and build on the existing USB ecosystem;\nincreasing power levels from existing USB standards, for example , enabling new higher power use\ncases such as USB powered Hard Disk Drives (HDDs), laptops and monitors.\nWith USB Power Delivery the power direction is no longer fixed. This enables the product with the power (USB\nHost or Peripheral) to provide the power. For example, a display with a supply from the wall can power, or charge,\na laptop. Alternatively, USB Chargers are able to supply power to laptops and other Battery powered devices\nthrough their, traditional power providing, USB Ports.\nUSB Power Delivery enables Hubs (including Hubs embedded in other devices such as doOcpksti oorn amlloynitors) to\nbecome the means to optimize power management across multiple peripherals by allowing each device to take\nonly the power it requires, and to get more power when required for a given application. the Hubs can\ncommunicate with the PC to enable even more intelligent and flexible management of power either automatically\nor with some level of user intervention.\nUSB Power Delivery allows low power cases such as headsets to Negotiate for only the power they require. This\nprovides a simple solution that enables USB devices to operate at their optimal power levels.\nThe Power Delivery Specification, in addition to providing mechanisms to Negotiate power also can be used as a\nside-band channel for standard and vendor defined messaging. The specification enables discovery of cable\nCapabilities such as supported speeds and current levels. Power Delivery enables alternative modes of operation\n\u00ae\nby providing the mechanisms to discover, enter and exit Modes such as EPR Mode, USB4 Mode or Alternate\nM1o.1des. Overview\n[USB 2.0]\n[TUhSisB s 3p.e2c]if[icUaStBio4n] d[eUfSinBe Ts yhpoew-C U 2S.B4 ]D\n\u00ae\nevi[cUeSsB cBaCn 1N.e2g]otiate for more current and/or higher or lower voltages over\nthe USB cable (using the USB Type-C CC wire as the communications channel) than are defined in the ,\nBUS\n, , or specifications. It allows Devices with greater power\nrequirements than can be met with today's specification to get the power they require to operate from V and\nNegotiate with external power sources (e.g., Chargers).\nIn addition, it allows a Source and Sink to swap Power Roles such that a USB Device could supply power to the USB\nHost. For example, a display could supply power to a laptop to operate or charge its Battery. This specification also\nCONN\nadds a mechanism to swap the Data Roles such that the upstream facing Port becomes the downstream facing Port\nand vice versa. It also enables a swap of the end supplying V to a powered cable.\nThe\uf06c USB Power Delivery Specification is guided by the following principles:\nWorks seamlessly with legacy USB Devices.\nPage 34 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.2", "title": "Purpose", "page": 35, "level": 2, "parent_id": "1", "full_path": "1.2 Purpose", "tags": [], "text": "\uf06c\n\uf06c Compatible with existing spec-compliant USB cables.\n\uf06c Minimizes potential damage from non-compliant cables (e.g., \u2018Y\u2019 cables etc.).\nOptimized for low-cost implementations.\nThis specification defines mechanisms to discover, enter and exit Alternate Modes defined either by a standard or\nby a particular vendor. These Alternate Modes can be supported either by the Port Partner or by a cable connecting\nthe two Port Partners.\nThe specification defines mechanisms to discover the Capabilities of cables which can communicate using Power\nDelivery.\nTo facilitate optimum charging, the specification defines two mechanisms a USB Charger can Advertise for the\ndevice to use:\n1) A list of Fixed Supply voltages each with a maximum current. The device selects a voltage and current\nfrom the list. This is the traditional model used by devices that use internal electronics to manage the\ncharging of their Battery including modifying the voltage and current actually supplied to the Battery.\nThe side-effect of this model is that the charging circuitry generates heat that can be problematic for\nsmall form factor devices.\n2) A list of programmable voltage ranges, in SPR PPS Mode, each with a maximum current. The device re-\nquests a voltage (in 20mV increments) that is within the Advertised range and a maximum current. The\nUSB PPS Charger delivers the requested voltage until the maximum current is reached at which time\nthe USB PPS Charger reduces its output voltage so as not to supply more than the requested maximum\ncurrent. During the high current portion of the charge cycle, the USB PPS Charger can be directly con-\nnected (through an appropriate safety device) to the Battery. This model is used by devices that want\nto minimize the thermal impact of their internal charging circuitry.\n3) A list of adjustable voltage ranges, in SPR AVS Mode or EPR AVS Mode, each with a maximum current.\nThe device requests a voltage (in 100mV increments) that is within the Advertised range and a maxi-\n1.2 mum c uPrruenrt.p Tohes UeSB AVS Charger delivers the requested voltage.\nThe USB Power Delivery specification defines a power delivery system covering all elements of a USB system\nincluding USB Hosts, USB Devices, Hubs, Chargers and cable assemblies. This specification describes the\narchitecture, protocols, power supply behavior, connectors and cabling necessary for managing power delivery\nover USB at up to 100W in SPR Mode and 240W in EPR Mode. This specification is intended to be fully compatible\nwith and extend the existing USB infrastructure. It is intended that this specification will allow system OEMs,\npower supply and Peripheral developers adequate flexibility for product versatility and market differentiation\nwithout losing backwards compatibility.\nUSB Power Delivery is designed to operate independently of the existing USB bus defined mechanisms used to\nNeg\uf06cotiat[eU pSBow 2e.0r ]w[hUiSchB a3r.e2:]\n\uf06c [USBBC 1,. 2] in band requests for high power interfaces.\n\uf06c [USB Type-C m2.e4c]hanisms for supplying higher power (not mandated by this specification).\nmechanisms for supplying higher power. [USB 2.0] [USB 3.2] [USB Type-C 2.4]\n[USBBC 1.2]\nInitial operating conditions remain the USB Default Operation as defined in , ,\nor \uf06c . vSafe5V BUS\n\uf06c The DFP sources over V BUS.\nThe UFP consumes power from V .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 35"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.3", "title": "Section Overview", "page": 36, "level": 2, "parent_id": "1", "full_path": "1.3 Section Overview", "tags": [], "text": "1.2.1 Scope\n[USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC\n1.2]\nThis specification is intended as an extens[iUoSnB t o2 .t0h]e [eUxSisBti 3ng.2 ] [USB Ty, pe-C 2.4] , [USBBC 1.2] and\nspecifications. It addresses only the elements required to implement USB Power Delivery. It is targeted at\npower supply vendors, manufacturers of , , and platforms,\ndNeovrimceast aivned cable assemblies.\nInformative\ninformation is provided to allow interoperability of components designed to this specification.\n1.3 i n Sfoermcattiioon,n w hOenv perorvvidieed, willustrates possible design implementation.\nThis specification contains the following sTeactbiolens1:.1 Section Overview\nSection Description\nSection 1, \"Introduction\"\nIntroduction, conventions used in the document, list of terms and abbreviations,\nPD\nSection 2, \"Overview\" references, and details of parameter usage.\nOverview of the document including a description of the operation of and the\nSection 3, \"USB Type-A and USB Type- PD\narchitecture.\nB Cable Assemblies and Connectors\" Deprecated [USBPD 2.0] PD\nMechanical and electrical characteristics of the cables and connectors used by .\nSection 4, \"Electrical Requirements\" Dead Battery\nSection .See for legacy connector specification.\nSection 5, \"Physical Layer\" PDPHY Layer\nElectrical requirements for operation and cable detection.\nProtocol Layer Message\nSection 6, \"Protocol Layer\" Details of the requirements\nrequirements including the s, timers, counters, and state\nSection 7, \"Power Supply\" Provider Consumer\noperation.\nDevice Policy Manager\nSection 8, \"Device Policy\" Power supply requirements for both s and s.\nPolicy EngineAtomic Message Sequence AMS\nrequirements.\nSection 9, \"States and Status PDUSB Device ( ) diag V ra B m US s and state diagrams\nReporting\" System Policy Manager\nrequirements including mapping of to USB states.\nSection 10, \"Power Rules\" PDP Rating PD\nrequirements including descriptors, events, and requests.\nSection A, \"CRC calculation\" CRC\ndefinitions for .\nSection B, \"Message Sequence\nExample calculatiDonevsi.ce Policy Manager Deprecated\nExamples (Deprecated)\"\nSection C, \"VDM Command Examples\" Scenarios illuSsttrruacttiunrge d VDM D oepperreactaiotend.\nSection D, \"BMC Receiver Design\nEBxMaCmples of usage.Section .\nExamples\"\nSection E, \"FRS System Level Example\" FRS Receiver Design Examples.\nSystem Level Example.\nPage 36 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.4", "title": "Conventions", "page": 37, "level": 2, "parent_id": "1", "full_path": "1.4 Conventions", "tags": [], "text": "1.4 Conventions\n1.4.1 Precedence\nShall\nIf there is a conflict between text, figures, and tables, the precedence be tables, figures, and then text. Shall\nIn there is a conflict between a generic statement and a more specific statement, the more specific statement\n1ap.p4ly..2 Keywords\nThe following keywords differentiate betweenT tahbel ele1v.e2ls Koef yrewqourirdesments and options.\nKeyword Definition\nConditional Normative\nConditional Normative is a keyword used to indicate a feature that is mandatory\nwhen another related feature has been implemented. Designers are mandated to\nimplement all such requirements, when the dependent features have been\nDeprecated\nDeprecated implemented, to ensure interoperability with other compliant devices.\nis a keyword used to indicate a feature, supported in previous\nDiscard Discarded\nreleases of the specification, which is no longer supported.\nDiscard Discards Discarded\nSee .\nPacket Shall PHY Layer\nDiscarded Proto, col Layer and areG oeoqduCivRaCleMnte ksseaygweoSrhdasl lindicating that a\nP wachkeent received be thrown away by the and not passed to\nthe for processing. No be sent in response\nDiscards Discarded\nto the .\nIgnore Ignored\nSee .\nIgnore Ignores Ignored Message\nSee .\nMessage Shall\nIgnored , Igno arnedd Message aSrhea elqluivalent keywords indicatGinogo dCRCMess soarg e\nfields wMhiecshs,a wgehen receiveMd,e ssage result in Ingon sopreecdial actiSohna blly the\nreceiver. An only result in returninIgg na ored\nto acknowledge receipt. A with an field be\nIgnores Ignored\nprocessed normally except for any actions relating to the field.\nInformative\nInformative See .\nis a keyword indicating text with no specific requirements,\nInvalid Packet Packet\nprovided only to improve understanding.\nInvalid\nis a keyword wEhxepnli cuist eCdo innt rraeclattion to a indicates that the \u2019s\nInvalid uEsxapgliec iot rC foinetldras cftall outside of the defined specification usagSeo. uWrcheen Inv iasl id\nused in relation to an K-code it inKdi-ccaotdees that a previously established\nSignalin wghich can no longer be maintained by the . When\nis used in relation to individual s or sequences indicates that the\nMay May\nreceived falls outside of the defined specification.\nMay Not May\nMay Not is a keyword that indicates a choice with no implied preference.\nis a keyword that is the inverse of . Indicates a choice to not\nN/A\nN/A implement a given feature with no implied preference.\nShall Not\nis a keyword that indicates that a field or value is not applicable and has no\nNormative Shall\ndefined value and be checked or used by the recipient.\nOptional Optionally Optional Normative\nSee .\nOptional\nOptional , and Shall are equivalent keywords that\ndescribe features not mandated by this specification. However, if an\nfeature is implemented, the feature be implemented as defined by this\nOptional Normative Optional\nspecification.\nOptionally Optional\nSee .\nSee .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 37\nTable1.2 Keywords (Continued)\nKeyword Definition\nReserved\nMay\nis a keyword indicating bits, bytes, words, fieSldhsa, laln Ndo ctode values that\nReserved are set-aside for future standardizationR.e Tsherevire udse and interpretation Sh ablel\nspecified by future extensionsS thoa tlhlis sIpgencoifriceadtion and R ebsee urvtielidzed or\nadaptedSh bayl lv Nenodtor implementation. A Shall bit, Ibgynteo,r wedord, or field be\nset to zero by the sender and be by the receiver. field\nShall Normative\nvalues be sent by the sender and be by the receiver.\nShall\nand are equivalent keywords indicating a mandatory\nrequirement. Designers are mandated to implement all such requirements to\nShall Not Shall\nShall Not ensure interoperability with other compliant devices.\nis a keyword that is the inverse of indicating non-compliant\nShould\nShould operation.\nis a keyword indicating flexibility of choice with a preferred alternative;\nShould Not Should\nShould Not equivalent to the phrase \u201cit is recommended that\u2026\u201d.\nis a keyword is the inverse of ; equivalent to the phrase \u201cit is\nStatic Static\nrecommended that implementations do not\u2026\u201d.\nValid Invalid\nis a keyword indicating that a field that never changes.\nValid Signaling Explicit Contract\nis a keyword thaSto iusr tchee inverse of indicating either a Packet or\nthat fall within the defined specification or an that can\nbe maintained by the .\n1.4.3 Numbering\nNumbers that are immediately followed by a lowercase \u201cb\u201d (e.g., 01b) are binary values. Numbers that are\nimmediately followed by an uppercase \u201cB\u201d are byte values. Numbers that are immediately followed by a lowercase\n\u201ch\u201d (e.g., 3Ah) or are preceded by \u201c0x\u201d (e.g., 0xFF00) are hexadecimal values. Numbers not immediately followed by\neither a \u201cb\u201d, \u201cB\u201d, or \u201ch\u201d are decimal values.\nPage 38 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.5", "title": "Related Documents", "page": 39, "level": 2, "parent_id": "1", "full_path": "1.5 Related Documents", "tags": [], "text": "1.5 Related Documents\nTable1.3, \"Document References\"\nDocument references listed in are inclusive of all approved and published ECNs\nand Errata. Table1.3 Document References\nBookmark Reference Title\n[DPTC2.1] USB Type-C www.vesa.org\nTM\n[IEC 60950-1] DisplayPort Alt Mode on Standard .\nwww.iec.ch\nIEC 60950-1:2005 Information technology equipment \u2013 Safety \u2013 Part 1: General\n[IEC 60958-1] www.iec.ch\nrequirements: Amendment 1:2009, Amendment 2:2013. .\n[IEC 62368-1] IEC 60958-1:2021 Digital Audio Interface Part:1 General. .\nwww.iec.ch\nIEC 62368-1:2018 Audio/Video, information, and communication technology\nequipment \u2013 Part 1: Safety requirements. .\n[IEC 62368-3]\nIEC 62368w-3w:2w0.i1e7c .cAhudio/video, information, and communication technology\nequipment - Part 3: Safety aspects for DC power transfer through communication cables\n[IEC 63002] and ports .\nwww.iec.ch\nIEC 63002:2021 Interoperability specifications and communication method for external\n[ISO 3166] power supplies used with computing and consumer electronics devices .\nhttp://www.iso.org/iso/home/standards/country_codes.htm\nISO 3166 international Standard for country codes and codes for their subdivisions.\n[TBT3]\n.\nUSB Type-C TM https://\n[UCSI] see [USB4] Chapter 13 for Thunderbolt 3 device operation.\nwww.usb.org/documents\nConnector System Software Interface (UCSI) Specification\n[USB 2.0] https://www.usb.org/documents\n.\n[USB 3.2] https://www.usb.org/documents\nUniversal Serial Bus 2.0 Specification, .\nhttps://www.usb.org/\n[USB Type-C 2.4] Universal Serial Bus 3.2 Specification .\ndocuments\nUniversal Serial Bus Type-C Cable and Connector Specification,\n[USB4] https://www.usb.org/documents\n.\n\u00ae\n[USBBC 1.2] Universal Serial Bus 4 Specification (USB4 ), .\nhttps://www.usb.org/documents\nUniversal Serial Bus Battery Charging Specification plus Errata (referred to in this\n[USBPD 2.0] https://www.usb.org/documents\ndocument as the Battery Charging specification). .\n[USBPDCompliance] https://www.usb.org/documents\nUniversal Serial Bus Power Delivery Specification, .\nhttps://\n[USBPDFirmwareUpdate 1.0] USB Power Delivery Compliance Test Specification, .\nwww.usb.org/documents\nUniversal Serial Bus Power Delivery Firmware Update Specification,\nhttps://www.usb.org/\n[USBTypeCAuthentication 1.0] .\ndocuments\nUniversal Serial Bus Type-C Authentication Specification,\n[USBTypeCBridge 1.1] https://www.usb.org/documents\n.\nUniversal Serial Bus Type-C Bridge Specification, .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 39"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.6", "title": "Terms and Abbreviations", "page": 40, "level": 2, "parent_id": "1", "full_path": "1.6 Terms and Abbreviations", "tags": [], "text": "1.6 Terms and Abbreviations\n[USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC 1.2]\nThis section defines terms used throughout this document. For additional terms that pertain to the Universal Serial\nBus, see Chapter 2, \u201cTerms and AbbreTvaiabtlieon1s.,4\u201d i Tn erms and, Abbreviat, ions and .\nTerm Description\n(A)PDO PDO APDO\nAC Supply\nRefers to both the and collectively.\nAC Supplied\nActive Cable Refers to the mUaSinB ATCyp peo-Cwer source typically provided to the wall AKA \u201cmains\u201d.\nDiscover IdentityCommand\nA cable with a plug on each end that incorpCoormamteas nddata bus signal conditioning\ncircu[UitSsB. T Thyep cea-bCl e2 .s4u]pports the Structured VDM to expose its\ncharacteristics in addition to other Structured VDM s (Electronically Marked Cable\nActive Cable VDO\nsee ).\nActive Mode Mode Mode Entry Mode Exit\nVDO defining the Capabilities of an Active Cable.\nAdjustable Voltage Supply\nA which has been through the process but not the process.\nCapabilities Adjustable Voltage Supply AVS APDO\nA powSeecrt isounp 6p.l4y. 1w.2h.4o,s \"eA ouugtmpuent tveodl tPaogwe ecra nD abtea a Odbjujesctet d(A tPoD aOn) o\"perating voltage within its\nAdvertised range. These are exposed by the ( )\nNote: SPR PPS SPR AVS EPR AVS\n(see ).\nAdvertise Source Source_Capabilities EPR_Source_CapabilitiesMessage\nUnlike the , the and do not support current limit.\nAPDO PDO\nAn offer made by a in the / (e.g.,\nAlternate Mode SVID\nan or ).\nAlternate Mode\nOpeAraltteironna dtee fMinoedde by a VendMoor doer ESntatrnydard\u2019Ms oordgea Enxizitation, which is associated[ UwSitBh T ay pe-C. 2T.h4e]\ndefinition of s is outside the scope of USB-IF specifications. Entry to and exit from\nAlternate Mode Adapter PDUSB Device Alternate Mode [USB Type-C 2.4]\nthe uses the and processes. As defined in .\nNote: AMA PDUSB Device UFP SOP\nA which supports s as defined in .\nPacket\nSince an is a , it has a single that is only addressable by\nAlternate Mode Controller DFP AMA [USB Type-C 2.4] DFP AMC\ns.\nPDUSB Host\nA that supports connection to s as defined in . A that is an\nAMA Alternate Mode Adapter\ncan also be a .\nAMC Alternate Mode Controller\nSee .\nAMS Atomic Message Sequence\nSee .\nAPDO Augmented Power Data Object\nSee .\nAssured Capacity Charger [USB Type-C 2.4] Charger Guaranteed Capability\nSee .\nPort\nAs defined in . This maps to a with one or more\nAssured Capacity Group [USB Type-C 2.4] Guaranteed Capability Port\ns.\nAtomic Message Sequence Message Section 8.3.2, \"Atomic Message Sequence Diagrams\"\nAs defined in . This maps to a group of s.\nPE_SRC_Ready PE_SNK_Ready\nAPE fi_xCeBdL s_Reqeuaednyce ofA MS Nosn a-sin dteefrirnuepdt iibnl e\ntypically starting and ending in one of the following states: , or\nAttach Port Pair\n. An is .\nAttached Port\nMechanical joining of the by a cable.\nAttachment Attach\nUSB Power Delivery s which are mechanically joined with USB cable.\nAugmented Power Data Data Object Source Port Sink Port Capabilities\nSee .\nObject Source_Capabilities EPR_Source_Capabilities Sink_Capabilities EPR_Sink_Capabilities\nMessage used to exposSeP aR PPSData Ob'sje ocrt SPR AVS'Ds aptoaw Oebrj ect EPR AaVs SpDaratt ao fO ab ject\n/ or /\nrespectively. An , and are\nAVS Adjustable Voltage Supply\ndefined.\nAVS Mode AVS AVS Mode\nSee .\nBattery Port Source Sink\nA power supply, currently operating as an , is said to be operating in .\nA power storage device residing behind a that can either be a or of power.\nPage 40 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nBattery Slot Hot Swappable Battery Battery Slot\nHot Swappable Battery Battery Slot\nA physical location where a can be installed. A might or\nBattery Supply Battery VBUS\nmight not have a present in a at any given time.\nBattery SupplyPDO Section 6.4.1.2.3, \"Battery Supply Power Data Object\"\nA power supply that directly applies the output of a to . This is exposed by the\nBDO BIST Data Object\n(see ).\nBFSK Binary Frequency Shift Keying\nSee .\nBi-phase Mark Coding\nSee .\n[IEC 60958-1]\nModification of Manchester coding where each zero has one transition and a one has two\nBinary Frequency Shift Signaling Scheme Deprecated BFSK\ntransitions (see ).\nKeying VBUS [USBPD 2.0]\nA now in this specification. used a pair of discrete\nfrequencies to transmit binary (0s and 1s) information over . See for further\nBIST PHY Layer\ndetails.\nBIST Data Object Data Object BISTMessage\nBuilt-In Self-Test - Power Delivery testing mechanism for the .\nBIST Mode BIST BISTMessage\nused by s.\nBIST Carrier Mode BIST Mode PHY Layer BMC\nA receiver or transmitter test mode enabled by a .\nA in which the sends out a encoded continuous string of\nBIST Test Data Mode BIST Mode PHY Layer GoodCRCMessage\nalternating \"1\"s and \"0\"s.\nMessage GoodCRCMessage\nMA essage in which the sends out a and then enters a test mode\nwhere it sends no further s, except s, in response to received\nBIST Shared Capacity Test BIST Mode Shared Capacity Group Port Source\ns.\nMode Capabilities Port\nA applicable only to a of s where the maximum\nare always offered on every , regardless of the availability of shared power i.e.,\nBMC Bi-phase Mark Coding\nall shared power management is disabled.\nCable Capabilities Capabilities Cable Plug\nSee .\nCable Discovered Port Message GoodCRCMessage\noffered by a .\nCable Plug VPD Port\nUCaSbBl eP oPwluegr Delivery s thaPtD h Caavep aebxlcehanged a Revisio annd a response\nwith a or a using the USB Power Delivery protocol so that both the and the\nCable Discovery Cable Discovered\nknow that each is and which they each support.\nCable Plug PD Capable Multi-Drop SOP\u2019 Packet\nSee .\nSOP\u2019\u2019 Packet Cable Plug USB Type-C\nTerm used to describe a element in a system addressed by s/\ns. Logically the is associated with a plug at one end of the\nCable Reset Cable ResetSignaling DFP Cable Plug\ncable. In a practical implementation, the electronics might reside anywhere in the cable.\nPD\nThis is initiated by Port Partner from the . It Vr C e O st N o N res theA ttachments to their\ndefault, power up condition and resets the communications engine in the cable to its default\nCable VDO VDO Cable Plug Cable Capabilities\nstate. It does not reset the s but does restore to its state.\nCapabilities\nreturned by the containing .\nBattery [USB4]\nFeatures supported by a product. These can include, for example, power levels supplied/\nCapabilities Mismatch Sink Source Advertise Capabilities Sink\nneeded, cable type, support or support.\nCC Configuration Channel\nIndication from the that the \u2019s d don\u2019t match the \u2019s needs.\nCert Stat VDO Cert Stat VDO\nSee .\nThe contains the XID assigned by USB-IF to the product before certification in\nCharge Through VCONN Powered USB Device VPD CC\nbinary format.\nPort\nA mechanism for a ( ) to pass power and communication from\nCharge Through Port USB Type-C USB Device Source\none to the other without any interference or re-regulation.\nUSB Device Attached\nThe PortUSB r eHcoespttacle on a USB Dev ticheat is designed to allow a to be connected\nthrough the to charge a system to which it is . Most common use is to allow\nCharger Provider Consumer Consumer\na single to support a while being charged.\nBattery\nwhose primary purpose is to supply power to a or s in order to\nChunk MaxExtendedMsgChunkLen Data Block Data Block\ncharge their .\nMessage Chunk\nA (26 byte) or less portion of a . s can be sent\neither as a single or as a series of s.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 41\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nChunked Chunking\nChunked Extended Message Extended Message Chunk\nSee .\nChunking Data Block MaxExtendedMsgLegacyLen\nwhich has been broken up into s.\nChunk\nThe process of breaking up a larger than (26-bytes)\nChunking Layer Protocol Layer Chunking\ninto two or more s.\nCL Current Limit\nPart of the responsible for .\nCold Socket Port vSafe5V VBUS Sink Attached\nSee .\nCollision Avoidance Source Sink Cable Plug CC\nA that does not apply on until a is .\nCommand Structured Vendor Defined Message Section\nMechanisms to prevent simultaneous communication by the , and on .\n6.4.4.2, \"Structured VDM\"\nRequest and response pair defined as part of a (see\nConfiguration Channel BMCPHY LayerSignaling Scheme [USB Type-C 2.4]\n).\nConnect Connected\nSingle wire used by the (see ).\nConnected Message GoodCRCMessage\nSee .\nPort Partner PD Capable\nUSB Power Delivery ports that have exchanged a and a response\nConstant Voltage SPR PPSSource SPR PPSSource\nusing the USB Power Delivery protocol so that both s know that each is .\nCurrent Limit\nA constant voltage feature of an . The output voltage remains\nConsumer PDPort Device UFP\nconstant as the load changes up to its .\nVBUS USB Type-CPort R CC\nThe capability of a (typically a 's ) to sink power from the power conductor\nConsumer/Provider Consumer Provider Dual-\n(e.g., ). This corresponds to a with d asserted on its wire.\nRole Power Port R CC\nA with the additional capability to function as a . This corresponds to a\nContinuous BIST Mode BIST Mode Port Cable Plug\nwith d asserted on its wire.\nContract Port Pair Contract\nThe where the or being tested sends a continuous stream of test data.\nNegotiated Port Pair\nAn agreement oSnta bteoth power level and direction is reached between a . A\nEcoxuplldic ibte C eoxnptrliaccittly Implicit Co bnettrwaceten the Co onrt rcaocutld be an implicit power level defined\nbNye gthoeti actuirornenRte -nego. tWiahtiiolen oPpoewraetrin Rgo ilne SPwowaper FDaeslti vReorlye mSwoadpe tHhaerrde Rweislle atlwEraryosr bRee ceoitvheerry an\nSou rocre in place. The can only be altered in the case of a\n/ , , , , or\nControl Message Control Message Message Number of Data Objects Message\nfailure of the .\nHeader Control Message Message Header CRC\nA is defined as a with the field in the\nCRC CRC\nis set to zero. The consists only of a and a .\nstands for Cyclic Redundancy Check. It is an error-detecting code used to determine if a\nCT-VPD VCONN Powered USB Charge Through Device\nblock of data has been corrupted.\nCurrent Limit SPR PPSSource Sink SPR PPS\nSee .\nSource Current Limit\nSAo cuurrcreent limiting feature of an . When a operating in mode\nattempts to draw more current from the than the requested value, the\nreduces its output voltage so the current it supplies remains at or below the requested\nNote: Current Limit SPR AVS EPR AVSSource\nvalue.\nCV Constant Voltage\nis not supported by and s.\nData Block Extended MessagePayload Data Block\nSee .\nMaxExtendedMsgLen Data Object\nAnD ata Message data unit. The size of each type of is specified as a series\nof bytes up to bytes in length. This is distinct from a used by\nData Message Data Message Message Header Data Object Data\na which is always a 32-bit object.\nMessage Number of Data Objects Message\nAH eader consists of a followed by one or more s.\ns are easily identifiable because the field in the\nData Object Data MessagePayload\nis always a non-zero value.\nData Message BIST Data Object\nA data unit. This 32-bit object contains information specific to different\nData Reset\ntypes of . For example Power, Request, , and Vendor s are defined.\nData Role Port Partner Data Role DFP USB Host UFP USB Device\nProcess which resets USB Communication.\nData Role Swap Data Role Port Partner\nA will be in one of two s; either ( ) or ( ).\nDead Battery Dead Battery Battery\nProcess of exchanging the s between s.\nA device has a when the in a device is unable to power its functions.\nPage 42 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nDefault Contract Port Pair USB Type-C\n[USB Type-C 2.4]\nAn agreement on current at 5V is reached between a based on current\nDetach Port Pair\n( ).\nDetached Port\nMechanical unjoining of the by removal of the cable.\nDetaches Detach\nUSB Power Delivery s which are no longer mechanically joined with USB cable.\nDevice USB Device USB Host\nSee .\nUSB Device Peripheral Hub\nWhen lower cased (device), it refers to any USB product, either or . When\nDevice Policy Port Source Sink\nin upper case refers to a ( or ).\nDevice Policy Manager Source Sink Device Policy Port Local\nPolicy applied across multiple s in a or .\nPolicy Policy Engine\nModule running in a or that applies to each in the device, as\nDFP Downstream Facing Port\n, via the .\nDFP VDO VDO DFP Capabilities\nSee .\nDifferential Non-Linearity LSB LSB\nreturned by the containing .\nSource PPS AVS DNL DNL\nThe difference between an ideal step, LanSBd the real observable step when the Power\nis operating in either or mode. A of 0 indicates that the step is ideal. If\nis positive the step is larger than the ideal , and if it is negative then the step is smaller than\nDiscovery Process Command Structured Vendor Defined Message\nideal.\nPort Partner Cable Plug SVID Alternate Mode\nsequence using s resulting in identification of the\nDNL Differential Non-Linearity\nand , and their supported s and s.\nDownstream Facing Port Port USB Host\nSee .\nPort Hub Port [USB Type-C 2.4] Port\nIndicates the S'osu procseition in thUe SUBS BH otostpology wUhSiBch C toympimcaulnlyic caotriornesponds to a root\nor downstream as defined in . At connection, the defaults to\nDPM Device Policy Manager\noperation as the and as a (when is supported).\nDRD Dual-Role Data\nSee .\nDRP Dual-Role Power\nSee .\nDual-Role Data DFP UFP\nSee .\nDual-Role Data Port Port DRD\nCapability of operating as either a or .\nDual-Role Power Source Sink\nA capable of operating as .\nDual-Role Power Device Dual-Role Power Port Source\nCapability of operating as either a or .\nSink\nA product containing one or more s that can operate as either a or\nDual-Role Power Port Port DRP\na .\nEM Extended Message\nA capable of operating as a .\nEnd of Packet K-code Packet\nSee .\nEOP End of Packet\nmarker used to delineate the end of a .\nEPR Extended Power Range\nSee .\nEPR AVS EPR Mode\nSee .\nAdvertise SPR PPS AVS\nCAa ppoawbielirt iseuspply operating in Adjustab wleh Vooselt aoguetp Suutp vpolyltAagPeD cOan be Saedcjtuisotne d6 .t4o.1 a.2n. 4o,p erating\n\"vAoultgamgee nwtietdh iPno iwtse r Data Obdje rcat n(AgeP.D UOn)l\"ike it does not support current limit. The\nare exposed by the (see\nEPR AVS Mode EPR Source EPR AVSContract EPR AVS\n).\nMode\nA , currently operating in an , is said to be operating in\nEPR Cable SPR Mode EPR Mode\n.\nEPR Capabilities EPR CapabilitiesMessage EPR_Source_Capabilities EPR_Sink_Capabilities\nA cable which is rated to operate in both and .\nExtended Message SPR (A)PDO\nTheS PR CapabilitiesM essage s S(ource_Capabilities Si nakn_dC apabilities ) are EPR\n(A)PDO s with the first seven positions filled with the same s returned by\nthe s ( and ) followed by the\nEPR Capable EPR Mode\ns starting in the eighth position.\nA product which has the ability to operate in .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 43\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nEPR Mode Sink\n[IEC 62368-1] Source Source\nA Power Delivery mode of opera[tIiEoCn 6 w2h3e6r8e- 1m]aximum allowable voltagSei nisk 48V. The\ncomp[lIiEesC t6o2 t3h6e8 r-e1q]uirements of EPR Mode for operation wEPitRh Sao PuSr3ce Atta. cThheed E PR\nScoinmkplies to thEeP rRe CqaubirleementsE oPfR Source for operationE wPRit Mh ao dPeS3 . The cable complies\nwith Sink . Entry into the Attache rdequiresE tPhRa tS iannk EP Ris C apable to an\nwith an . The will only enter the when requested to do so\nEPR_Source_Capabilities EPR_RequestMessage NegotiateEPR\nby the and it has determined it is to an with an cable.\nExplicit Contract SPR ModeMessage Source_Capabilities Request\nOnly the EPR Mode and the s are allowed to\ns. The s ( and ) are not allowed\nEPR (A)PDO Fixed SupplyPDO\nto be used while in .\nAdjustable Voltage Supply AVS APDO Fixed SupplyPDO\nthat offers either 28V, 36V or 48V.\nEPR_Source_CapabilitiesMessage\n( ) whose Maximum voltage is the highest\nEPR Sink Sink SPR Mode EPR Mode\nvoltage in the and no more than 240W.\nEPR Sink Port Port EPR Sink\nA that supports both and .\nEPR Source Source SPR Mode EPR Mode\nA exposed on an .\nEPR Source Port Port EPR Source\nA that supports both and .\nError Recovery Port ErrorRecoveryState [USB Type-C 2.4]\nA exposed on an .\nExplicit Contract Port Pair Negotiation\nenters the as defined in .\nExplicit Contract Source Accept\nAMne sasgargeeement reached beRtweqeueens at Message as a resuSlitn okf the Power DePlivSe_RryD YMessage\nprocSeosusr. cAen is established (or continued) when a sendPs Ea_nS RC_Rea dy\nState in SroeusprcoenPseo ltiocy a E ngine PE _sSeNnKt b_Ry eaa dyS ftoaltleowed bSyo uar cePolicy Engine sent by\ntEhxep licit Con ttor aincdticate that the power supplyR ise -rneeagdoyt.i aTthioisn corresponds to the\nfor a and the for a . The\nExtended Capabilities Extended Message Capabilities\ncan be altered through the process.\nExtended Control Message Extended Message\nAn containing information.\nExtended Message Message Data Block Extended Message Extended\nAn containing control information only.\nMessage Header Extended Message Header\nA conMtaeisnsiangge Header s. The is defined by the field in the\nbeing set to one and contains an immediately\nExtended Message Header Extended Message Extended Message Header\nfollowing the .\nMessage Header Data Block Chunking\nEvery contains a 16-bit immediately following the\nExtended Power Range SPR EPR\ncontaining information about the and any being applied.\nEPR Mode EPR Message EPR_Source_CapabilitiesMessage\nExtends EthPeR p_Roewqeure rsatnMgee sfsraogme a maximum oNf e1g0o0tiWat e(Exp)l itcoit a C monatxriamcutm of 240W ( ). When\noperating in the , only specific s (the\nExternal Supply\nand the ) are used to s.\nPower supply external to the device. This could be powered from the wall or from any other\nFast Role Swap Source SinkPower Role Port Partner\npower source.\nProcess of exchanging the and s between s rapidly due to the\nFast Role Swap Request Initial Source Initial Sink Fast Role Swap Fast\ndisconnection of an external power supply.\nRole Swap Request CC\nAMne sisnadgiecatioSnig fnroamlin agn to the that a is needed. The\nis indicated by driving the line to ground for a short period; it is not a\nFirst Explicit Contract Explicit Contract Attach Hard Reset Power Role Swap\nor .\nFast Role Swap\nThe that immediately follows an , power on ,\nFixed Battery orB attery event.\nFixed Batteries\nA that is not easily removed or replaced by an end user e.g., requires a special tool to\nFixed Supply access or is soldered in. Fixed SupplyPDO\nSection 6.4.1.2.1, \"Fixed Supply Power Data Object\"\nA well-regulated fixed voltage power supply. This is exposed by the (see\nFrame PD Packet Test\n)\nFrame Signaling\nGeneric term referring to an atomic communication transmitted by such as a ,\nFRS Fast Role Swap\nor .\nSee .\nPage 44 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nGuaranteed Capability Port Guaranteed Capability Port Port Maximum PDP\nPort Present PDP Port Maximum PDP\nA C aisp aalbwilaityiess capable ofS dtealtiivcering its and\nindicates this by setting its to be the same as its except\nHard Reset Hard ResetSignaling Port Partner VBUS USB Default\nwhen limited by the cable\u2019s . This is a capability.\nOperation PD State Port Partner\nThis is initiateAdt btayc hedCable P lug from eitherP ort Partner . It restores D toa ta Role\nanVd C O r N e N se Stos uthrcee comSmouurnciecaPtoiortns eDngRiPneS otou rictse dPeofratult in bothS ource s as\nwell as in any Source s. It restores both s to their default s and\nreturns the to the . A operating as a will\nHost USB Host\ncontinue to operate as a .\nHot Swappable Battery Battery Battery\nSee .\nHub USB Device\nA that is easily accessible for a user to remove or change for another .\nID Header VDO VDO Discover IdentityCommand VDM Header ID\nA that provides additional connections to the USB.\nHeader VDO\nThe in a immediately following the . The\nIdle CC Section\ncontains information corresponding to the Power Delivery Product.\n5.8.6.1, \"Definition of Idle\"\nCondition on where there are no signal transitions within a given time window. See\nImplicit Contract Port Pair\n.\nNegotiation Power Role Swap Fast Role Swap Implicit\nAConn atgrarecetment on power levels betPwoeret nP aa ir which occurs, not bNeceaguosteia otef the EPxopwliceirt\nDCoenlitvrearcyt Pow perro cReoslse, Sbwuat pbecauIsmep olifc ait ContractShall or USB Ty. pe-C\n[USBs aTryep ter-aCn 2si.t4o]ry since the is required to immediately an\nafter the . An be limited to current\nInitial Sink Sink Power Role Swap Fast Role Swap New\n(see ).\nSource\nat the start of a or which transitions to being the\nInitial Source Source Power Role Swap Fast Role Swap New\n.\nSink\nat the start of a or which transitions to being the\nInitiator Command\n.\nInvariant PDOs Source Port Invariant PDOs PDO\nThe initial sender of a request in the form of a query.\nA that offers will always Advertise the same s except when\nIoC Negotiated [IEC 63002]\nlimited by the cable.\nIR Drop Source Sink\nThe current value as defined in .\n[USB Type-C 2.4]\nThe voltage drop across the cable and connectors between the and the as defined in\n. It is a function of the resistance of the ground and power wire in the cable plus\nK-code K-code Hard Reset\nthe contact resistance in the connectors times the current flowing over the path.\nCable Reset Packet\nSpecial symbols provided by the 4b5b coding scheme. s are used to signal and\nLocal Policy PD Capable Policy Local Policy Policy\nand delineate boundaries.\nEngine Local Policy\nEvery device has its own , called the that is executed by its\nto coUnStBro Hl oitsst power delivery behavior. The Local P oalti caynOy pgtiivoenna tlilmye might be the\ndefauSlyts pteomlic Pyo, lhicayr dM caondaegde ror modified by changes in operating parameters or one provided by\nthe system or some combination of these. The can be changed\nLPS [IEC 62368-1]\nby a .\nLSB\nLimited Power Supply as defined in .\nManaged Capability Port Managed Capability Port Port Present PDP Port\nAn abbreviation for Least Significant Bit.\nMaximum PDP Port Present PDP\nA can have its set to a different value than its\n. Its value can be dynamic and change during normal\nMessage PacketPayload Message Header Control Message Message Header\noperation.\nData Message Extended Message Section 6.2, \"Messages\"\nThe consisting of a for s and a\nMessage Header Message Message Header\nand data for s and s as defined in .\nMessage PDPort Capabilities\nEvery starts with a 16-bit containing basic information about the\nMessaging Message Section 6, \"Protocol Layer\"\nand the \u2019s .\nModal Operation Active Mode Modal Operation\nCommunication in the form of s as defined in .\nActive Mode\nOperation where there are one or more s. ends when there are no\nMode Mode\nlonger any s.\nAlternate Mode EPR Mode SPR Mode\nis a general term used to describe a particular type of operation of a given device.\nExamples of modes are: , , .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 45\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nMode Entry Mode\nMode Exit Mode\nProcess to start operation in a particular .\nMulti-Drop Multi-Drop Port\nProcess to end operation in a particular .\nPartner\nPD is a system sharing the Power Delivery communication channel between the\nNegotiate Negotiation\ns and the cable.\nNegotiated Negotiation\nSee .\nNegotiation\nSee .\nSourceAdvertise Capabilities\nThis is the PD process whereby:\nSink Advertise Capabilities\n1) The s its .\nSource\n2) The requests one of the d .\nSink\n3) The acknowledges the request, alters its output to satisfy the request and informs\nNegotiation Contract Port\nthe .\nPair\nThe result of the is a for power delivery/consumption between the\nNew Sink Sink Power Role Swap Fast Role Swap Initial\n.\nSource\nat the end of a or which has transition from being the\nNew Source Source Power Role Swap Fast Role Swap\n.\nInitial Sink\nat the end of a or which has transition from being the\nNon-interruptible Message AMS Non-interruptible\n.\nAMS Message AMS GoodCRCMessage\nThere cannot be any unexpecMteedss age s Sdeucrtiinogn a8n.3 .2.1.3; ,i t\" Aist othmeirce Mfoerses age Sequences\" . An\nstarts when the first in the has been sent (i.e., a has been\nOCP\nreceived acknowledging the ). See .\nOTP\nOver-Current Protection.\nOVP\nOver-Temperature Protection.\nPacket Preamble SOP* Payload CRC EOP\nOver-Voltage Protection.\nSection 5.6, \"Packet Format\"\nOne entire unit of PD communication including a , , , and as\nPassive Cable Cable Plug SOP\u2019\ndefined in .\nStructured VDMDiscover\nICdaebnleti wtyith a USB plug on each end at least one of which is a supp[oUrtSiBn gT ype- tCh 2a.t4 d]oes\nnot incorporate data bus signal conditioning circuits. Supports the\nNote: Passive Cable\nto determine its characteristics (Electronically Marked Cable see ).\nPassive Cable VDO\nThis specification does not discuss s that are not Electronically Marked.\nPayload Packet Protocol Layer\nVDO defining the Capabilities of a Passive Cable.\nPD\nData content of a , provided to/from the .\nPD Capable Port\nUSB Power Delivery\nPD Connection Connected\nA that supports USB Power Delivery.\nPD Power Source Fixed\nSee .\nSupplyPDO Section 10, \"Power Rules\"\nThe output power, in Watts, of a , as specified by the manufacturer and expressed in\nPD SID USB-IF PD SID\ns as defined in .\nPDO Power Data Object\nSee .\nPDP PD Power\nSee .\nPDP Rating PDP Rating PDP Source Port\nSee .\nPDP Rating\nThe is the saPmDeP aRsa tthineg ManufSaeccttuiorner 6 d.4e.c1l1a.r2e, d\"P ort M foarx aim um PDP Fie eldx\"cept where\nthere is a fractional value, in which case the corresponds to the integer part of the\nPDUSB USB DevicePort USB HostPort PD Capable USB Communication\nManufacturer declared (see ).\nPDUSB Host PDUSB Device PDUSB Hub\nor that is both and capable of . See\nPDUSB Device USB Device PD CapableUFP PDUSB Device SOP Packet\nalso , and .\nPDUSB Host USB Host PD Capable DFP PDUSB Host\nA with a . A is only addressed by s.\nSOP Packet\nA which is on at least one of its s. A is only addressed by\ns.\nPage 46 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nPDUSB Hub USB Device UFP DFP PD Capable\nPort PDUSB Hub SOP Packet\nA port expander with a and one or more s which is on at least\nPDUSB Hub USB Type-C Multi-Port Charger\none of its s. A is only addressed by s.\nPDUSB Peripheral USB Device PD CapableUFP PDUSB Hub PDUSB Peripheral\nA self-powered is treated as a .\nSOP Packet\nA with a which is not a . A is only\nPE Policy Engine\naddressed by s.\nPeripheral Attached USB Device\nSee .\nPHY Layer Message USB Type-CCC\nA physical entity that is to a USB cable and is currently operating as a .\nPort Pair\nThe Physical Layer responsible for sending and receiving s across the\nPolicy Policy PD Capable Capabilities\nwire between a .\nAdvertise Negotiate\ndefines the behavior of parts of the system and defines the it\nPolicy Engine Policy Engine Device Policy Manager Policy\ns, requests made to (re) power and the responses made to requests received.\nPort Protocol Layer Message\nThe interprets the \u2019s input to implement for a given\nPort\nand directs the to send appropriate s.\nPort Pair\nAn interface typically exposed through a receptacle, or via a plug on the end of a hard-wired\nPort Pair AttachedPD CapablePort\ncaptive cable. USB Power Delivery defines the interaction between a .\nPort Partner Contract Negotiated Port Pair\nTwo s.\nPort Partner\nA is between a connected by a USB cable. These ports are known\nPower Conductor Source Sink VBUS\nas s.\nPower Consumer Consumer\nThe wire that delivers power from the to . For example, USB\u2019s .\nPower Data Object Data Object Source Port Sink Port Capabilities\nSee .\nSource_Capabilities EPR_Source_Capabilities Sink_Capabilities EPR_Sink_Capabilities\nMessage used to exFpioxseed aS upply Varia\u2019bs loe rS upply \u2019sB paotwteerry SupplyPowe ars D paatrat Oofb aje ct\nSPR Mode / EPR Mode or Fixed Suppl y/ AVSPDO\nrespectively. , and s are\nPower Delivery Mode Contract Port Pair Mode\ndefined; uses all four while uses only and s.\nPower Delivery Mode Power Delivery\nOMpoedreation after a hDaest aincihtially beePno retstablished beHtwarede nR eas et . ThSiosu rce persists\nduring normal Power DelIinvietriayl o Spoeurracteion, including after a VBUS Pow. er Role Swap\ncan only be exited by ing the s, applying a or by the removing\npower (except when the removes power from during the\nPower Provider Provider\nprocedure).\nPower Role Port Partner Power Role Source Sink\nSee .\nPower Role Swap Source SinkPower Role Port Partner\nA will be in one of two s; either or .\nPower Rules Source\nProcess of exchanging the and s between s.\nSink Section 10, \"Power\nRDuelfeins\"e voltages and current ranges that are offered by compliant USB Power Delivery s\nand used by a USB Power Delivery for a given value of PDP Rating. See\nPPS Programmable Power Supply\n.\nPPS Mode SPR Source PPS PPS Mode\nSee .\nPreamble\nAn , currently operating as an , is said to be operating in .\nPreamble\nStart of a transmission which is used to enable the receiver to lock onto the carrier. The\nconsists of a 64-bit sequence of alternating 0s and 1s starting with a \"0\" and ending\nProduct Type Discover IdentityCommand\nwith a \"1\" which is not 4b5b encoded.\nProduct Type VDO VDO Product Type ID Header VDO Discover IdentityCommand\nProduct categorization returned as part of the .\nProduct VDO Product VDO\nidentifying a certain in the of a .\nProgrammable Power SPR Mode\nThe contains identity information relating to the product.\nSupply Advertise\nA power supplSyP, oRp AerVaSting inE PR AVS , whose outpCuat pvaobltialigteie csan be programmaticaSlPlyR adjusted\nPinr osmgraalml imncarbelme ePnotwse orv Seurp itpsl yAPDO d raSnegctei oann d6 .h4a.1s. 2a. 4p,r \"oAgurgammemnatebdle P oouwtperu tD cautrar Oenbtje fcotl d back\n((nAoPtDeO t)h\"at the and does not).The are exposed by the\n(see\nProtocol Error Message Atomic Message Sequence Protocol Error AMS\n).\nSoft Reset Hard Reset\nAn unexpected during an . A during an will\nresult in either a or a .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 47\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nProtocol Layer Message Port Partner\nProvider PDPort USB Host Hub ChargerDFP\nThe entity that forms the s used to communicate information between s.\nVBUS USB Type-CPort R CC\nA (typically a , , or ) that can source power over the power\nProvider/Consumer Provider Consumer Dual-Role\nconductor (e.g., ). This corresponds to a with p asserted on its wire.\nPower Port R CC\nA with the additional capability to act as a . This corresponds to a\nPS1\nwith p asserted on its wire.\nPS2 [IEC 62368-1]\nPS3\nClassification of electrical power as defined in .\nPSD Sink Alternate Mode\nwhich draws power but has no other USB or communication function e.g., a\nR VCONN R VCONN\npower bank.\nR USB Type-CCC Port Sink [USB\na Prior to application of , a powered cable applies a pull-down resistor a on its pin.\nType-C 2.4]\nd Pull-down resistor on the wire used to indicate that the is a (see\nRDO Request Data Object\n).\nRe-attach Attach Port Pair Detach\nSee .\nRe-negotiate Re-negotiation\nof the by a cable after a previous .\nRe-negotiated Re-negotiation\nSee .\nRe-negotiation Port Partner NegotiatedContract\nSee .\nRequest Message Sink Port Negotiate Contract Request EPR_Request\nA process wherein one of the s wants to alter the .\nMessage\nused by a to a ; refers to either a /\nRequest Data Object Data Object Sink Port Negotiate Contract Request EPR_Request\n.\nMessage\nused by a to a as a part of a /\nResponder Command Initiator Command\n.\nRevision Revision Version\nThe receiver of a request sent by an that replies with a response.\nMajor release of the USB Power Delivery specification. Each will have various s\nRevision 1.0 Deprecated Revision\nassociated with it.\nRevision 2.0 Revision [USBPD 2.0]\nmajor of the USB Power Delivery Specification.\nSuperseded major of the USB Power Delivery Specification as defined in ,\nRevision 3.x Revision\nwith which this specification is compatible.\nR USB Type-CCC Port Source [USB\nCurrent major s of the USB Power Delivery Specification.\nType-C 2.4]\np Pull-up resistor on the wire used to indicate that the is a (see\nSafe Operation Source vSafe5V Port Partner\n).\nShared Capacity Charger [USB Type-C 2.4] Charger Managed Capability Port\ns must have the ability to tolerate applied by both s.\nShared Capacity Group [USB Type-C 2.4] Managed Capability Port\nAs defined in . This maps to a with multiple s.\nSID Standard ID\nAs defined in . This maps to a group with s.\nSignaling K-code\nSee .\nHard Reset Section 5.4, \"Ordered Sets\"\nA Preamble followed by an ordered set of four s used to indicate a particular line symbol\nSignaling Scheme BMCSignaling Scheme\ne.g., as defined in .\nPhysical mechanism used to transmit bits. Only the is defined in this\nNote: BFSKSignaling Scheme Revision 1.0\nspecification.\nDeprecated\nThe supported in of this specification has been\nSingle-Role Port Port Source Sink\n.\nDRP\nA that is only capable of operating either as a or , but not both. E.g., the port is\nSink Port VBUS USB Device\nnot a .\nSink Capabilities Capabilities Sink\nThe consuming power from ; most commonly a .\nSink Directed Charge Sink Source Battery\nwanted by a .\nSPR PPSCurrent Limit Source\nA charging scheme whereby the connects the to its through safety and other\ncircuitry. When the feature is activated, the automatically controls\nits output current by adjusting its output voltage.\nPage 48 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nSink Port Port Sink\nSink Standby Sink Standby iSnkStdby\noperating as a .\nSoft Reset PD\nDuring the Sink reduces its current draw to\nSOP K-code Port Partner Start of Packet\nA process that resets the communications engine to its default state.\nSOP Communication SOP Packet AMS\nmarker used for communication between s. See also .\nSOP Packet Packet SOP\nCommunication using s also implies that an is being followed.\nSOP\u2019 Communication Cable Plug SOP\u2019 Packet AMS\nAny Power Delivery which starts with an .\nSOP\u2019 Packet Packet SOP\u2019 Cable Plug\nCommunication with a using s, also implies that an is being followed.\nSOP\u2019\u2019 Communication Cable Plug SOP\u2019\u2019 Packet AMS\nAny Power Delivery which starts with an used to communicate with a .\nSOP\u2019\u2019 Packet Packet SOP\u2019\u2019 Cable Plug\nCommunication with a using s, also implies that an is being followed.\nSOP\u2019 Packet Cable Plug\nAny Power Delivery which starts with an used to communicate with a\nSOP\u2019\nwK-hceond e s are being used to communicateP woritth the oCthaebrle Plug . Start of Packet\nSOP\u2019\u2019\nSOP* marker used for comKm-ucondiceation betwSeOenP aS OP\u2019 andS aO P\u2019\u2019 . SeSeta arlts oof Packet .\nSOP* Communication SOP* Packet AMS\nUsed to generically refer to markers: , and . See also .\nSOP* Packet Packet SOP SOP\u2019 SOP\u2019\u2019\nCommunication using s, also implies an is being followed.\nSource Power Role Port VBUS USB Host\nA term referring to any Power Delivery starting with either , , or .\nHub\nThe a is operating in to supply power over ; most commonly a or\nSource Capabilities Capabilities Source\ndownstream port.\nSource Port Port Source\noffered by a .\nSpecification Revision Revision\noperating as a .\nSPM System Policy Manager\nSee .\nSPR Standard Power Range\nSee .\nSPR AVS SPR Source\nSee .\nAdvertise SPR PPS SPR AVSCapabilities\nAn wShPoRs AeV oSuAtpPuDtO voltagSee ccatnio bne 6 a.4d.1ju.2s.t4e.d2 ,t \"oS aPnR oApdejurasttainbgle v Vooltlatagge ew Siuthpipnl yit As PDO\"\nd range. Unlike , it does not support current limit. The are\nSPR AVS Mode SPR Source SPR AVSContract SPR AVS\nexposed by the (see ).\nMode\nA , currently operating in an , is said to be operating in\nSPR Capabilities SPR CapabilitiesMessage Source_CapabilitiesMessage Sink_CapabilitiesMessage\n.\nPower Data Object vSafe5V Power Data Object\nAn ( or ) has at\nSPR Contract Explicit ContractNegotiate SPR Mode SPR (A)PDO\nleast one for followed by up to 6 additional s.\nSPR Mode Explicit Contract Negotiated SPR (A)PDO\nd, in , based on s.\nSPR (A)PDO Fixed SupplyPDO\nThe classic mode of PD operation where s are using s.\nVariable SupplyPDO\nthat offers up to 20V and no more than 100W.\nBattery SupplyPDO\nwhose Maximum voltage offers up to 21V and no more than 100W.\nAdjustable Voltage Supply AVS APDO\nwhose Maximum voltage offers up to 21V and no more than 100W.\n( ) whose Maximum voltage is up to 20V and no more than\nProgrammable Power Supply PPS APDO\n100W.\n( ) whose Maximum voltage is up to 21V and no more\nSPR PPS\nthan 100W.\nAdvertise SPR AVS EPR\nAAV pSower sCuapppalbyi lwithieosse output voltage anPdr oougtrpaumt mcuarbrleen Pto cwaner b Seu pprpolygrAaPmDmOaticallyS eacdtjiuosnt ed in\n6sm.4.a1l.l2 i.n4c, r\"eAmugemntesn otevde rP iotws er Data Odb jreacnt g(eA.P IDt sOu)p\"ports current limit unlike and\n. The are exposed by the s (see\nSPR PPS Mode SPR PPSContract SPR PPS\n).\nMode\nA power supply, currently operating in an , is said to be operating in\nSPR Sink Sink SPR Mode EPR Mode\n.\nSPR Sink Port Port SPR Sink\nA which only supports and does not support .\nSPR Source Source SPR Mode EPR Mode\nA exposed on an .\nA which only supports and does not support .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 49\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nSPR Source Port Port SPR Source\nStandard ID\nA exposed on an .\n16-bit unsigned value assigned by the USB-IF to a given industry standards organization\u2019s\nStandard or Vendor ID VID SID SVID\nspecification.\nGeneric term referring to either a or a . is used in place of the phrase \u201cStandard or\nStandard Power Range Source_Capabilities RequestMessage NegotiateSPRExplicit\nVendor ID.\u201d\nContract EPRMessage EPR_Source_CapabilitiesMessage EPR_Request\nOMnelsys athgee and the SP R Modes are allowed to\ns. The s (the and the\nStart of Packet K-code Packet\n) are not allowed to be used while in .\nState PD Section 6.12, \"State behavior\" Section 8.3.3, \"State\nmarker used to delineate the start of a .\nDiagrams\"\nstate machine state as defined in and\nStructured VDM Structured Vendor Defined Message\nstate machines.\nStructured VDM Header VDM Header Structured Vendor Defined Message\nSee .\nStructured Vendor Defined Vendor Defined Message VDM Header\nThe for a .\nMessage\nA where the contents and usage of bits 14...0 of the are\nSVDM Structured Vendor Defined Message\ndefined by this specification.\nSVID Standard or Vendor ID\nSee .\nSwap Standby Swap Standby Source VBUS\nSee .\niSnkSwapStdby\nDuring the does not drive and the Sink's current draw does not\nSystem Policy Policy Port\nexceed .\nPair System Policy\nOverall system gPeonleicrya tEendg binye the system, broken up into the policies required by each\nto affect the . It is programmatically fed to the individual devices for\nSystem Policy Manager USB Host System Policy PD\nconsumption by their s.\nCapableConsumer Provider USB Host\nModule running on the . It applies the through communication with\nTest Frame Frame Preamble SOP* Section 5.9, \"Built in Self-Test\ns and s that are also connected to the via USB.\n(BIST)\"\nconsisting of a , , followed by test data (See\nTest Pattern Section 5.9, \"Built in Self-Test (BIST)\"\n).\nTester Tester BIST\nContinuous stream of test data in a given sequence (See ).\nPDUUT\nThe is assumed to be a piece of test equipment that manages the testing process of\nUFP Upstream Facing Port\na .\nUFP VDO VDO UFP Capabilities\nSee .\nUI Unit Interval\nreturned by the containing .\nUnchunked Unchunked Extended Message\nSee .\nUnchunked Extended\nSEexete nded Message . Chunking\nMessage\nUnexpected Message Message Por tthat has been transmitted whole without using State .\nUnit Interval\nthat a supports but has been received in an incorrect .\nUnit Under Test PD Tester BIST\nThe time to transmit a single data bit on the wire.\nThe device that is being tested by the and responds to the initiation of a particular\nUnrecognized Message Message Port Message ReservedMessage\ntest sequence.\nMessage Revision Revision Port\nUnstruct uthreadt aV endo rd oDeesfi nnoedt uMnedsesarsgteand e.g., a VID using a type, a\ndefined by a higher specification than the this supports, or an\nUnstructured VDM Unstructured Vendor Defined Message\nfor which the is not recognized.\nUnstructured VDM Header VDM Header Unstructured Vendor Defined Message\nSee .\nUnstructured Vendor\nThVee ndor Defined fMore sasna ge . VDM Header\nDefined Message\nUnsupported Message AM essage Port where the contents of bits 14...0 of tMhee ssage are undefined.\nPort\nthat a recognizes but does not support. This is a defined by the\nspecification, but which is not supported by this .\nPage 50 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable1.4 Terms and Abbreviations (Continued)\nTerm Description\nUpstream Facing Port Port Port Device [USB\nType-C 2.4] Port USB Device USB\nICnodmicmatuensi ctahtei on \u2019s position in the SUinSkB topology typically a on a as defined in\n. At connection, the defaults to operation as a (when\nUSB Attached State [USB 2.0] [USB 3.2] Attached\nis supported) and .\nUSB Communication Packet [USB 2.0] [USB 3.2]\nSynonymous with the and definition of the state\nUSB Default Operation Port Attach Hard Reset DFPSource vSafe5V VBUS\nTransfer of USB data s as defined in and .\nUFPSink vSafe5V [USB 2.0] [USB 3.2] [USB Type-C 2.4]\nO[UpSeBraBtCio 1n. 2o]f a at or after a where the applies on\nand the is operating at as defined in , , or\nUSB Device Hub Peripheral [USB 2.0] [USB 3.2] [USB4]\n.\nUSB Host USB Host [USB 2.0] [USB\nEither a or a device as defined in , and .\n3.2] [USB4]\nThe computer system where the controller is installed as defined in ,\nUSB Hub Hub\nand .\nUSB Powered State [USB 2.0] [USB 3.2]\nSee .\nUSB Safe State USB Type-C [USB Type-C 2.4]\nSynonymous with the and definition of the powered state.\nPort Partner\nState of the connector when there are pins to be re-purposed (see )\nUSB Type-A\nso they are not damaged by and do not cause damage to their .\nUSB\nTTyeprme- Aused tUoS rBe fTeyrp teo- Bany A plug or receptacle including USB Micro-A plugs and USB Standard-\nA plugs and receptacles. USB Micro-AB receptacles are assumed to be a combination of\nUSB Type-B\nand .\nTerms used to refer to any B-plugU SoBr rTeycpeep-tAacle inUcSluBd Tinypg eU-BSB Micro-B plugs and USB Standard-\nB plugs and receptacles, including the PD and non-PD versions. USB Micro-AB receptacles are\nUSB Type-C USB Type-C [USB Type-C\nassumed to be a combination of and .\n2.4]\nTerm used to refer to the connector plug, or receptacle as defined in\nUSB Type-C Multi-Port USB Type-CSourcePort\n.\nCharger USB Device [USB Type-C 2.4]\nA product that exposes multiple s for the purpose of charging multiple\nUSB-C Port Control PD Capable Attach Detach R\nconnected s as defined in .\n\u00ae\nModule in a device which controls / and either detects or sets the p\nUSB-IF PD SID\nvalue.\nUSB4 Mode Mode [USB4]\nStandard ID allocated to this specification by the USB Implementer\u2019s Forum.\nU\u00aeUT Unit Under Test\nDevice is operating in a as defined in .\nVariable Supply Battery Variable SupplyPDO\nSee .\nSection 6.4.2, \"Request Message\").\nA poorly regulated power supply that is not a . This is exposed by the\nVBUS VBUS Source Sink\n(see\nVCONN USB Host CC\nThe wire delivers power from a to a .\nCC\nOnce thVe C c O o N n N nection between Cab laen Pdlu dgevVic C e O N is N ePsotawbelrieshde Adc,c tehses ory pinV ( C C O C N 1 N o Pro CwCe2r)e din U tShBe\nrDeecveipcetacle t[hUaSt Bis Tnyopt ec-oCn 2n.e4c]ted via the wire through the standard cable is re-purposed to\nsource to power circuits in a , or\nVCONN Powered Accessory VCONN Alternate Mode [USB Type-C\n(see ).\n2.4]\nAn accessory that is powered from to operate in an (see\nVCONN Powered USB Charge CT-VPD VPD Source Charger\n).\nThrough Device [USB Type-C 2.4]\nA is a with an additional port for connecting a (e.g., a ) as defined in\nCharger CT-VPD VPD\n.\nCharger PD CT-VPD CC\nWhen no is connected, a behaves as a .\nCharger Charger\nWhen a is connected, no communication to the itself is possible as is\nconnected to the port. Hence all PD communication then is with the and the\ncable with which it is connected.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 51"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.7", "title": "Parameter Values", "page": 52, "level": 2, "parent_id": "1", "full_path": "1.7 Parameter Values", "tags": [], "text": ""}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.8", "title": "Changes from Revision 3.0", "page": 52, "level": 2, "parent_id": "1", "full_path": "1.8 Changes from Revision 3.0", "tags": [], "text": ""}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "1.9", "title": "Compatibility with Revision 2.0", "page": 52, "level": 2, "parent_id": "1", "full_path": "1.9 Compatibility with Revision 2.0", "tags": [], "text": "Table1.4 Terms and Abbreviations (Continued)\nTerm Description\nVCONN Powered USB Device USB Device VCONN VBUS [USB Type-\nC 2.4]\nA captive cable that can be powered by either or as defined in\nVPD USB Device VCONN VBUS\n.\nSOP\u2019 Communication Section 6.12, \"State behavior\")\nA is a captiveM ceasbslaeg e thaStp ceacnif ibcea tpioonw Rereevdis iboyn either Re voirs ion 3. xand VoPnDly\nresponds to Alternate Mod aes defined in the Tables in . It\nonly responds to s sent with a of at least . A is not\nVPD VPD CT-VPD Charger\nallowed to support s.\nVCONN Source USB Type-CPort VCONN\nThe term refers to either a or a with no connected.\nVCONN Swap VCONN Source Port Partner\nThe responsible for sourcing .\nVDEM Vendor Defined Extended Message\nProcess of exchanging the between s.\nVDM Vendor Defined Message\nSee .\nVDM Header Data Object Message Header Vendor Defined Message VDM\nSee .\nHeader SVID VDM\nTheC foirmstm and followingS ttrhuec tured VDM S ienc ati on 6.4.4, \"Vendor Defined. TMhees sage\")\ncontains the relating to the being sent and provides information relating to\nVDO Vendor Data Object\nthe in the case of a (see .\nVendor Data Object Data Object Message\nSee .\nVendor Defined Extended PDExtended Message VDEM\nused to send Vendor specific information as part of a .\nMessage Message\ndefined for vendor/standards usage. A does not define any\nVendor Defined Message PDData Message\nstructure and s can be created in any manner that the vendor chooses.\nStructured Vendor Defined Message Command\nUns tructured Ven ddoerf iDneefdin foedr vMeensdsaogr/estandards usage. These are further partitSioencteido nin 6t.o4 .4,\n\"Vendor Defined Message\") s, where s are defined in this specification, and\ns which are entirely vendor defined (see\nVendor ID\n.\nVersion Revision\n16-bit unsigned value assigned by the USB-IF to a given Vendor.\nVersion VDM\nA minor release of the USB Power Delivery specification associated with a particular .\nVI\nnumbers are also defined in s.\nVID Vendor ID\nSame as power (i.e., voltage * current = power)\nVPD VCONN Powered USB Device\nSee .\nSee .\n1.7 Parameter Values\n[USBPDCompliance]\nThe parameters in this specification are expressed in terms of absolute values. For details of how each parameter\ni1s m.8easured in Ccohmaplinangcee psle fasreo seme Revision 3.0.\nE1x.t9ended Pow eCr Roamngep (EaPtRi)b iniclluidtiyng w Adijutshta bRlee Vvolitasgieo Snup p2ly. 0(AVS) has been added.\n[USBPD 2.0]\n[USB Type-C 2.4]\nThis Revision of the USB Power Delivery specification is designed to be fully inter-operable with\nsystems using BMC Signaling over the connector and to be compatible with Revision 2.0\nhardware.Section 2.3, \"USB Power Delivery Capable Devices\"\nPlease see for more details of the mechanisms defined to enable\ncompatibility.\nPage 52 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.1", "title": "Introduction", "page": 53, "level": 2, "parent_id": "2", "full_path": "2.1 Introduction", "tags": [], "text": "2 Overview\nNormative\nT2h.i1s section c o nItnaitnrs nood uction requirements.\nPD AttachedPort Port\nPartner Port Pair Negotiate\nUUSSBB TPyopwee-Cr Delivery ( ) CdCefines the mechanisms for pairs of directly PD s (also referred to as\ns or \u00ae s) to voltage, cu[rUrSeBnt 2 a.n0d]/[oUrS dBi r3e.c2t]io[nU oSfB pBoCw 1e.r2 f]low o[vUeSrB t hTey UpeSB-C c 2a.b4l]e. It uses the\nconnector's wire as the communications channel. The mechanisms operate independently of\nand supersede other USB methods defined in , , and USB Typ.e-C\nStructured Vendor Defined Message Structured VDM PD\nUSB Power Delivery also defines sSidtreubcatunrde md VecDhManisms used for configuration manAagcteimvee Mnto odfe devices\nand cUabSlBe4s. U Msiondge USB Type-CAlternate Mode Alst e(rnate Mode s), facilitates dStisacnodvaerrdy o orf Vdeenvdicoer aIDnd\ncSaVbIlDes feat \u00ae ures and performance. s areA altlseorn uasteed M too deneter/exit some s, either USB-based\n(e.g., ) or s. s are associated with s\n2( .1.s1) and can b eP eoithwere srta nDdaerdli (ve.eg.r, Dyis SploayuPorrct e Operatio) onr aprlo Cproientartyr (ae.cg.t, sIntel Thunderbolt\u2122 3).\nPDSource Contract\nA \uf06c Defa wulitl lC boen tirna ocnte of three s: Connect Source\nAdvertise R [USB Type-C 2.4]\nSource Defau lwt hCiocnht rita cetnters immediately fCoollnotwrainctg a Si wnkherDee tthaec hed proSvoiudrecse 5V anSdin k\nNegotiates the amount oEfx cpulricrietn Cto int tcraanc tdeliver using the p value as defined in . A\nin a will remain in this until the is or the and\n\uf06c Implicit Co anntrda ecntter an . Power Role Swap Fast Role Swap\nPDSource Advertise R\n[USB Type-C 2 .w4]hichS oimurmceediatelIym fpollilcoiwt Cso an tract or Negotiate and is tSrainnksitory. The\nExplicit p Croonvtirdaecst 5V and s the amount of current it can deliver using the p value as defined\nin . A in an will immediately with the and enter\n\uf06c Eanxp licit Contract . Source PD Negotiation Source\nSource_CapabilitiesMessage Sink RequestMessage Source\nis the state of the Accep atfMteers saangye power Source consistinPgS o_Rf DthYe Messag e\nsending a Source , the responding with a , the PD\nSaockunrcoewledgiEnxgp tlhicei tr Ceoqnutersatc wtith an Expli caitn Cdo fnintraallcyt the sends a Re-negot iation\nwCohnetnra tchte is ready tEox dpelilcivite Cro tnhter raecqtuested power. This is the normal operational state for . A\nin an will remain in an during and after a of its\n\uf06d and will exit the Sink when: Default Contract Sink\n\uf06d DisconnecteHd afrrodm R etsheet where it will restart in a Detached whAettna rcehceodnnectedS itnok the .\n\uf06d Following a Power Role wSwhearpe it Fwaisllt rReosltea rStw aasp if it were thenI mplicit Co tnot rtahcet .\n\uf06d Following Ua SB Type-CError R oecro very where it wilDl eetnatcehr aRne -attach .\nR\nFollowing which is an electrical / (remove and assert\n2.1.2 p). Power Delivery Contract Negotiation\nContract Negotiate\n[USB 2.0] [USB 3.2] [USBBC 1.2] [USB Type-C 2.4]\ns Power Dde ulisvienrgy tMhoed UeSB Power DelivCeorny tSrpaectcification superseEdxpe laicniyt Caonndt raallc ptrevImiopulsi cpiot Cwoenrt craocnttracts\nestablished whether from standard , , or Port Pair mechanPisomwse.r W Dheliilvee ry\nMopoedreating in Port Pair Detach tehdere will be aH ard Rese tin plaUcSeB ( eTiytphee-rC Error Recovery or Source ) that\ndetermines the power level Paovwaielarb Rleo laen Sdw tahpe dirFeacstti oRno loef Sthwaatp power. The will remain in\nuntil the is , there is a , or , or the removes\npNoowtee:r exc[eUpSt Ba4s ]part of the or procePsDses. Contract Attached\n[USB4] [USB 3.2]Mode USB Default Operation\ndoes not define a default power, rather relies on a power . When first the\nExplicit Contra dctevicNee ogpoetiraattees in whSiochur icse its Capabilit.ies Sink\nSource\nAn is d by the process of the sending a set of , from which the is\nrequired to request a particular capability and then the accepting this request.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 53"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.2", "title": "Compatibility with Revision 2.0", "page": 54, "level": 2, "parent_id": "2", "full_path": "2.2 Compatibility with Revision 2.0", "tags": [], "text": "Implicit Contract Power Role\nSwap Fast Role Swap Implicit Contract Port Pair Negotiate\nAExnp licit Contract is the specified level of power allowed in particular states (i.e., during and after a\nor ). s are temporary; s are required to immediately an\nProvider . Local Policy Port Consumer Local Policy\nSystem Policy Local\nEPoaclihcy has a , governing power allocation to its s. s also have their own\ngoverning how they draw power. A can be enacted over USB that allows modification to this\naPnDd C haepnacbel emanagementA otft aocvheerdall power allocationD inF Pthe sysUteFmP. USB Default\nOperation DFP vSafe5V UFP [USB 2.0]\nW[UhSeBn 3 .2] [USB Ty dpeev-iCc e2s. 4a]re [USBBC t1o.2 e]ach other, the s and s initially Ndeegfaoutilat ttioo nstandard\n. The supplies and the draws current in accordance with the rules defined by ,\n, or specifications. After Power Delivery has taken place,\npower can be supplied at higher, or lower, voltages and higher currents than defined in these specifications. It is\nalso\uf06c possible Ptoow: er Role Swap Fast Role Swap Power Role DFP\nUFP\nDo a or to exchange the s such that the receives power\n\uf06c and tDhea ta Ro sleu pSwplaieps power. DFP UFP\n\uf06c Do a VCONN Swap such that tPhoer t becomeVs CtOhNeN and vice-versa.\n\uf06c Do a EPR M otod echange the supplying to the cable.\n\uf06c Enter into USB4 Mo.de\n\u00ae\n\uf06c Enter into Alternate Mo.de\n\uf06c EnterV inentod or Defined Messsa.ge\nSendF irst Explicit Contract s. Source Port VCONN Source\nAttached EPR\nPrior to the only the , which is also the , can communicate with the\ncable assembly. This is important where 5A and capability are marked as well as other details of the\ncCaabbllee aDsissecomvbelryy such as the supported speed. Attachment Port Pair\nExplicit Contract Cable Discovery Power Role\nSwap Fast Ro,l de eStwerampining whether the cable canE cxopmlicmit uCnoinctartaec, tcan occur onU iFnPitial Source of a Implicit\nCboenfotrrea catn Cable D hisacso bveeeryn established. It is also possiEblxep ltioc icta Crorny toruatc t after a\nor prior to re-establishing an , where the is the , and an\nis in place. can be carried out after an has been established, if the cable\nh2a.s1 n.o3t yet been d iOsctohveererd .Uses for Power Delivery\nExplicit Contract PD Port\nOnce an is in place, can be used to manage the s and cables for non-power related\nfPuDnctionality. USB4 Mode Port\n\u00ae VCONN Port\nAlte irsn uasteed M tood eenter the oPfD operation. s and cables can support functionality beCyaopnadb ipliotiweser. For\nMexoadmeple, a cable can have active components that require power or a /cable can support a video display\nsuch as DisplayPort. defines an infrastructure to discover these additional and\n\uf06c s that include: Port Cable Plug Capabilities\n\uf06c Discovering a SV oIDr Port 'Csa ble Plug .\n\uf06c Discovery of the Modes a Port or Cable Plug supports.\n\uf06c Discovery ofM thoed e s a or Port suppCoarbtsl.e Plug\n\uf06c Entry inMtoo ad e supported by tPhoer t and/Coarb le Plug .\n2.2 Exitin g C oms spupaptoirbtedil biyt tyhe w it ahn dR/oer vision .2.0\nRevision 3.x [USBPD 2.0]\nBMCSignaling [USB Type-C 2.4] Revision 2.0\nof the USB Power Delivery specification is designed to be fully inter-operable with\nsystems using over the connector and to be compatible with\nhardware.\nPage 54 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.3", "title": "USB Power Delivery Capable Devices", "page": 55, "level": 2, "parent_id": "2", "full_path": "2.3 USB Power Delivery Capable Devices", "tags": [], "text": "Revision 3.x Revision 2.0\nRevision Port Partner Cable Plug\nThis specificationR emviasniodnates that all Section 6. 2sy.1s.1te.5m, s\"S fpuellcyi fsicuaptpioonr tR evision\" operation. They must discover\nthe supported used by their and any connected s and revert to operation using the\nlowest common nEuxmtebnedre (ds Meee ssage ). Section 6.2.1.2, \"Extended\nMessage Header\" Message Revision 2.0\nThis specificationC hduenfikniensg s containing data Mofe usspa gtoe 260 bytes (see Revision 2.0\n). These s can be larger tMhaens seaxgpeected by existing PHY HW. To accommodate\nbased systems a mechanism is mandated such that s are limited to sizes unless it is\ndiscovered that both systems support the Vloenngdeorr Data Ob jleecntgthVsD. O\nAlternate Mode Adapter AMA Section 6.4.4.2, \"Structured VDM\"\nThis specification VinDcOludes changes to the Structured Vensd (or De)f iunseedd M ine stshaeg deisScVoDveMry Voef rpsaiosnsive/active\nmarked cables and Version s ( ) (see VDO ). To enable systems to\ndetermine which format is being used the ( ) number has\nbeen incremented to 2.x. numbers have also been incorporated into the s themselves to facilitate\n2fut.u3re change s Uif tSheBse Pbeocowmee nre cDessealryiv. ery Capable Devices\nFigure 2.1, \"Logical Structure of USB Power\nDelivery Capable Devices\" USB Host USB Device Hub Charger\nSome examples of USB Power Delivery capable devices can be seen in\n(a , a , a , and a ). These are given for reference only and\nare not intended to liFmigitu trhee 2 p.1os Lsoibgliec caol nSftirguucrtautiroen os fo Uf SpBro Pdouwctes rt hDaet lciavne rbye C baupilat bulsei nDge tvhiicse sspecification.\nUSB Host USB Device USB Hub USB Charger\nExternal UFP External UFP External External\npower power power power\nPower Power Power Power\nStorage Storage Storage Storage\nDFP DFP DFP\nLegend\nMultiple Power Multiple Power\ninputs/outputs outputs\nOptional Optional\nPower input Power input Feature\nPort Provider\nSource Consumer Sink\nEach USB Power Delivery capable device is assumed to be made up of at least one . s are assumed to\nhav\uf06ce a UFP and s a . Each device contains one, or more, of the following components:\n\uf06d s that:\n\uf06d Sink Power. SOP Packet\n\uf06d COopmtiomnuanlilcyate using sS.OP\u2019 Packet SOP\u2019\u2019 Packet\n\uf06d Optionally Communicate usiDnuga l-Role Powesr/ Device s.\n\uf06d Optionally source power (a ).\n\uf06d Optionally communAicltaetren vaitae U MSoBd.e\n\uf06c DFP support s.\ns that:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 55\n\uf06d\n\uf06d Source Power SOP Packet\n\uf06d COopmtiomnuanlilcyate using sS.OP* Packet\n\uf06d Optionally Communicate uDsuianlg-R ole Power Dse.vice\n\uf06d Optionally Sink power (a ).\n\uf06d Optionally communAicltaetren vaitae U MSoBd.e\n\uf06c Source support s.\n\uf06dA that can be:\n\uf06d An externally powerBeda tstoeuryrce (e.g., AC powered).\n\uf06d Power Storage (e.g., Port /Power Bank). Hub\n\uf06c SiDnekrived from another (e.g., bus-powered ).\n\uf06dA that can be: Battery\n\uf06d Power Storage (e.g., a /Power Bank).\n\uf06d Used to power internal Afuttnaccthioends. Hub\n\uf06c VCUOsNeNd Stoo uprocweer devices to other devices (e.g., a bus-powered ).\n\uf06dA thPaotr:t Partner DFP UFP Source Sink\n\uf06d Can be eitheCra ble Plug , either the / or / .\n\uf06d Powers tVhPeD VCONN P(osw).ered USB Device\n\uf06d Powers Pso r(t Cablse) .Plug\nIs the only allowed to talk to the (s) at any given time.\nPage 56 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.4", "title": "SOP* Communication", "page": 57, "level": 2, "parent_id": "2", "full_path": "2.4 SOP* Communication", "tags": [], "text": "2.4 SOP* Communication\n2.4.1 Introduction\nStart of Packet SOP\nPort Partner SOP Communication Cable Plug SOP\u2019 Communication SOP\u2019\u2019\nTCohme munication SO (PorS OP\u2019) is uSsOedP \u2019a\u2019s an addressing scheme to ideSnOtiPfy* wheStOhPe*r Cthoem cmomunmicuantiiocnations were\nintended for oCnCe of the Cable Plsu (g SOP\u2019 Commun)i coar toionne oSfO tPh\u2019e\u2019 C ommunicast i(on /\n). / and are collectPivDely referred to as . All s take place over\na single wire ( ). The term in the / case is used to represent\na logical entity in the cable which is capable of Communication, and which might or might not be physically\nlNoocatete:d in the plug. SOP\nThere are there are other s defined for special operation suchP aosr tdebuPgo rwthich Paroer tnot Cdaisbclue sPsleudg here.\nThe following sections describe how this addressing scheme operates for -to- and to\nc2o.m4m.2unication. SOP* Collision Avoidance\nSOP* Source Sink\nExplicit Contract Source\nFor all the R co-ordinates communicSaintikon to avoid bus collisioAntosm biyc aMlleoswsaingge Stheqe uence toA inMiStiate AMS\nmessaging when it does not needSo tuor ccoemmunicate itself. OCnacbel ea nP lug is iSno purlaccee, the\nmaAnMipSulates its p value (3A) Rto indicate to the that it can initiaStein akn Source ( ). This\nScainnk bSeO cPo*m Cmomunmiucantiicoanti wonith the or with one of the AMS s. As soon as the Port itself needsA tMo Sinitiate\nan CC , it wiIldl lmeanipulate its p valuMee (s1sa.5gAe) to CinCdicate this to the . The then waits for any outstanding\nto complete before initiating an itself. In all cases, the initiating an waits\nf2or.4 .3 to be b eSfoOreP pu Cttoinmg thme unica otni on.\nSOP Communication Port Port Source Sink SOP Communication\nPort Partner Cable Plug SOP Communication\nSOP* Commun iicsa utisoend for -to- communication between the and the .\nis recognized by both s but not by any intervening s. takes priority over\no2th.4er. 4 SOP'/sS sOincPe 'i't iCs corimticmal tou cnomicpalettei oponw ewr rietlahte Cd oapberlaeti oPnsl uasg ssoon as possible.\nSOP\u2019 Communication Cable Plug [USB Type-C 2.4] SOP\u2019\u2019 Communication\nSOP\u2019 Communication SOP\u2019 SOP\u2019\u2019\nis recognized by electronics in one (see ).\ncan also be supported when is also supported. and assignment in the cable\naSsOsPe mCobmlym isu nfiixceadti oannd does not chaPnogrte Pdayrntanmerically. Cable Plug Figure 2.2, \"Example SOP'\nCommunication between VCONN Source and Cable Plug(s)\" SOP* Communication\nVCONN Source DFP U bFePtween the Cable Plug s is not recognized by the .\noutlines the usage of s between a\nSOP* (Comm/unic)a atniodn the s. CC SOP* Communication\nSSOinPceS aOllP \u2019 SOP\u2019\u2019Packet s take place over a sinIdgllee wire ( ), the Packet periods must be\ncoordinated to prevent importPaonrt tc Poamrmtnuenrication from being blocked. For a product which does not rCeacbolgen Pilzueg\n/ or s, this will look lSiokfet aR ensoent- H acrhda nRneesel,t leading to missed s and retries.\nCommunications between the s take precedence meaning that communications with the\ncan be inDteefraruulpt tCeodn btruatc wtill nImotp lliecaitd C toon at ract or . Power Role Swap Fast Role Swap\nSource Port VCONN Packet Cable Plug SOP\u2019\nWhen a Packet or Cable Plug SOP \u2019is in placGe o(eo.dgC., RatC sMtaerstsuapg, eafter a oCr able Plug )\nonly the F tihgautr ies 2s.u2p, \"pElyxianmgp le SOP i's C aolmlomwuedni tcoa tsieonnd b etweens Vto CO a N N Source an (d Cab)l ae nPdlu igs (asl)l\"owed to\nrespond to s from the C(able )P wluigth a in order to dVi\nC\ns\nO\nc\nN\no\nN\nv eSro uthrece 's\ncharacteristics (see SOP Packet SOP\u2019 Packet Sink Cabl)e. PDluurging\nDthiissc pahrdasse, all ScOomP\u2019 mPaucnkiectation with the is initiated and controlled by the which acts to\nprevent conflicts between s and s. The does not communicate with the and\nEaxnpyl icit Contracts received. VCONN Source DFP UFP\nCable Plug SOP\u2019 Packet SOP\u2019\u2019 Packet Figure 2.2, \"Example SOP' Communication between VCONN\nWSohuercne a ann d Cable Plug(s)\" is in place, only the (either the C aobr lteh Pel ug ) can communicate with the\nVCONN S(so)u urcseing s/ s (see SOP* Packet VCONN Source\n). During this phase, all communication with the is initiated and controlled by\nthe which acts to prevent conflicts between s. The Port that is not the is not\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 57\nCable Plug SOP\u2019 Packet SOP\u2019\u2019 Packet\nDFP VCONN Source SOP* Packet Mode\nallowed to commMuodnaicla Otep ewraitthio tnhe and does not recognize any s/ s received. Only\nthe , when acting as a , is allowed to send s to control the entry and exiting of s\nand to managFei gure 2.2 Exampl.e SOP' Communication between VCONN Source and Cable Plug(s)\nVCONN Source VCONN C P a lu b g le 1 Electronically Marked C P a lu b g le 1\n(DFP/UFP) (SOP\u2019) Cable (SOP\u2019\u2019)\nSOP\u2019\nsignaling\nSOP\u2019\u2019\nsignaling\nSOP signaling\nPage 58 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.5", "title": "Operational Overview", "page": 59, "level": 2, "parent_id": "2", "full_path": "2.5 Operational Overview", "tags": [], "text": "2.5 Operational Overview\nPort Source Port Sink\nSource Port Sink Port PD Connection Port Partner Attach\nASo UuSrcBe P Poowrter DelPivoerrty R supplying powe[Ur iSsB k Tnyopwen- Ca s2 a.4 ] and a DFP consVu C m ON in N g S poouwrceer is kAntotawcnh as a Sink .\nPTohretre is oPnolyrt one R and one UFP in each VCONN So ubrecteween the s. At the\n(the with p asserted see ) is also the and . At the\n(the witPhD d asserted) is also theS ourc aend is not the . Mode\nStandard Power Range SPR First Explicit Contract Contract Default Contract\nTImhpe loicriitg Cinoanlt UraScBt specificatiSoPnR alCloownterdac t s to deliOveprt iuopn taol 100W. This claMssoicd e of operation isE rxetefenrdreedd\ntPoo wase trh Rea nge EPR So (urce). The , the first EPR Mod aefter a or\nSPR Mode , is always an . There is an higher power referMreodd teo as the\n(SPR)E wxphliecriet Cthoen tract is allowed to deliver upSo tuor 2c4e 0PWor.t The Sink Port can only be entered from the\nEPR . The entry process is designed to prevent accidental entry into this higher power . It can be entered\nonly when an is in place and both the and as well as the cable support\n.Source SinkPower Role DFP UFPData Role VCONN Source\nPort Source SinkPower Role Dual-Role Power Port\nTDhReP Po/rt s, D/FP UFPDatsa a Rnodl e D ruoalel- Rcaonle a Dlla stuab PsoerqtueDnRtDly be swapped\northogonally to each other. A that supports both and s is called a\n( ).U AS B Co mthmatu snuicpaptoiornts both and s iDs FcPalDleadt aa Role Port ( ).\nUSB Host USB Communication UFPData Role Port\nWhen USB Devisc ecapability is supported in the then the will also be able to act as a\n. Similarly, when s capability is supported in the then the will also\nbe able to act as a . DFP UFP Source Sink\nThe following sectiPoDns describe the high-levelP oDpUeSraBt iDoenv oicfe portsS etactkiionng 9o.1n. 2th, \"eM roalpepsi nogf to U,S B De, vice Sta atnesd\" .\nF2o.r5 d.e1tails of how So muarpcs eto OUSpBe straatets iino an see .\nSource Attachment\nThe\uf06c A otptaecrhates dPifDfe Creonntnleyc dtieopnendCinogn torna citts status:\n\uf06dAt S (onuor ce Port orS ource ): SinkAttachment\n\uf06d For a DRP -only the So duertceects Sin k . Port Source Port\nAttachment Sink\nFor a that toggles between and operation, the becomes a on\n\uf06d Source of a vSafe5V\n\uf06c The PD Conn tehcetnio snuppliPeDs Connect.ion Contract\n\uf06dBefore So (unroc e_Capabilities oMre ssage ): Source Cable Capabilities\nAdvertise Capabilities Cable Capabilities\nPrior to sending s the can detect the and\n\uf06e s its depending on the USB Type-C detected:\n\uf06e The dSoeufarucelt current carrying capability of a cCaabblel ei sP 3luAg. SOP\u2019 Packet\nCable Plug Capabilities\nThe can attempt to communicate with one of the s using s. If the\nresponds, then communication takes place to discover the cable's (e.g., 5A\n\uf06d caSpouarbclee). Advertise Capabilities Source_CapabilitiesMessage\ntTypeCSendSourceCap\nThe periodically s its by sending s every\n\uf06c PD Connection. PD Connection Contract\n\uf06dEstablishing PD Capabl e(nPoo rt Partner or ):\n\uf06ePresence of a GoodCR CMessage is detected eithSeoru:rce_CapabilitiesMessage\n\uf06e By receiving Ha ard Reset Signalin gin response to a .\n\uf06c By receiviFnigr st Explicit Co ntract . Attach Hard Reset USB Type-CError Recovery Implicit\nContract Power Role Swap Fast Role Swap\nEstablishing the after an , , or\nas a result of a or :\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 59\n\uf06d Source RequestMessage Sink Valid\nAcceptMessage PS_RDYMessage\nThe receives a Expl ifcriot mCo tnhter act and, if this is a request, responds with\nan followed by a when its power supply is ready to source power\n\uf06d at DthFeP agreed level. At this poiSnOt Pa\u2019n P acket SOP\u2019\u2019 Pa hcakse tbeen agreed. SOP\u2019 Packet\nSOP\u2019\u2019 Packet Discards\nA that does not generate s or s, is not required to detect s or\n\uf06c Expsli caint dC ontract P tEh_eSmRC. _Ready\n\uf06dWhen inS oaunr ce ( State): Message\nMessage Local Policy\nThe processes and responds (if a response is required) to all s received and sends\n\uf06eapproprSioauter ce s whenSienvker its Cap raebqiuliitrieess: Source_Capabilities\nMessage\nThe informs the whenever its change, by sending a\n\uf06e Sour.ce SinkRequestMessage Capabilities\nSource_CapabilitiesMessage\nThe responds to a with the mismatch bit set, by\n\uf06e sendSinoug rac e R with its maximuCmC available powCeor.llision Avoidance\n\uf06e The P woriltl alwDayRsP haveS aonu rcpe value asserted on its wire used for Powe.r\nRole Power Role Swap Port Sink Implicit Contract\nEWxhpelinci tth Cios ntrac its a Nego tthiaet e can initiate or receive a request for the exchange of\ns. After the this will be a and in an until an\n\uf06e Port is DRD Sodu irmcemediately afterwards. Data Role\nData Role Swap DFP USB Host UFP USB Device Port\nWSohuercne this iVs C a O NN So tuhrec e can initiate or receive a request for an exchange of s.\nAfter a the ( ) becomes a ( ). The remains a\n\uf06e So uarncde the role remains unchanged. VCONN Source VCONN\nSwapVCONN Port Port Source DFP\nTUhFeP Data R ocalen initiate or receive a request for an exchange of role. During a\nis applied by both s (make before break). The remains a and /\n\uf06d Sou rce s remainV uCOnNcNh aSnoguerdce. Cable Plug SOP\u2019\nCommunication SOP\u2019\u2019 Communication SOP\nCTohme munica wtiohnen it is the can communicate with a using\nor at any time it is not engaged in any other\n\uf06e SOP Packe:t Source SOP\u2019 Communication SOP\u2019\u2019 Communication\nSOP\u2019 Communication SOP\u2019\u2019 Communication Cable Plug\nIf s are received by the , during or ,\nthe or is immediately terminated (the\n\uf06e times Soouutr acned does not retry). SOP Communication SOP\u2019 Communication\nSOP\u2019\u2019 Communication Capabilities SOP\u2019 Communication SOP\u2019\u2019\nCIfo tmhem unicat inoeneds to initiate an during an ongoing or\n(e.g., for a change) then the or\n\uf06d Source Posr wtill be inteDrFrPupted.\n\uf06eWhen thSeo urce is also a : Mode Cable Plug Modal\nOperation\nThe can control the entry and exiting of s in the (s) and control\n\uf06e Sourc.e Unstructured VDM Structured VDM\n\uf06e The Source can initiate s or Mode Sisn.k Modal Operation\nStructured VDM\nThe can control the entry and exiting of s in the and control\n\uf06c Detachusing s.\n\uf06d So ourr cceommunicationDse ftaaicluhre: VBUS vSafe5V tSafe5V vSafe0V\ntSafe0V USB Type-CDetach CC\nA detects plug and takes down to within and within\n\uf06d (i.Seo. uurscieng detection Gvioao dC)R.CMessage Message\ntReceive\nWhen the detects the failure to receive a in response to a within\n\uf06e : Soft Reset tSoftReset CRCReceiveTimer\nLeads to a , within of the expiring.\nPage 60 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06e Soft Reset Hard Reset tHardReset\nCRCReceiveTimer VBUS USB Default Operation\nIf the process cannot be completed a will be issued within of\n\uf06fthe Source to restorVeC ONN Stoou rce VCONN within ~1-1.5s: Hard\nReset\nWhen the is also the , will also be power cycled during the\n\uf06d So.urce SPR PPS Mode Request\nMessage Sink tPPSTimeout\nWhen the operating in fails to receive periodic communication (e.g., a\n\uf06e Sourc)e from the Hard w Rietsheitn VBUS: vSafe5V\n\uf06d Sisosuurecse a and EtaPkRe Ms ode to .\nEPR_KeepAliveMessage Message Sink tSourceEPRKeepAlive\nWhen the operating in the fails to receive periodic communication (i.e., an\n\uf06e Source Hard Roers aenty other VBUS ) fvroSamf et5heV within :\n\uf06d issues a and takes to . Source\nReceiving no response to further attempts at communication is interpreted by the as an error\n\uf06d (see Error handling). Hard Reset\nErrors during power transitions will automatically lead to a to restore power to default\n\uf06c levels.\n\uf06dErroPrr ohtaoncdoll iEnrgr:or Soft_ResetMessage Port Partner\nNegotiate Port\nSoursc earDeF hPanUdFlePdV b C y O N a N Source issued by either Modal O, pthearat trieosnets\ncounters, timers and states, but does not change the d voltage and current or the 's\n\uf06d role (e.g., , / , Hard Rese)t aSnigdn daoliensg not cause an exit Pfroormt P artner Hard R.eset\n\uf06eSerious errors are handled Sboyf t Reset issued by either USB De.f Aau lt Operatio:n\nvSafe0V vSafe5V Sink\nResets protocol as for a but also returns the power supply to\n\uf06e ( or Port D aotuat Rpuolte) in oDrFdPer to protect the .\n\uf06e Restores the Port's to .\n\uf06e Restores tShien k 's pVoCwOeNrN tSoo iutrsc UeSB default sVtaCtOeN.N Source Port VCONN\nSource\nWhen the is the it removes then the is restored as the\n\uf06e . Active Mode Source Modal Operation\n\uf06d CausHeasr adl lR eset s to be exited sPuocrht tPhaartt tnheer is no longer itnN oResponse .\nnHardResetCount Hard Reset Source\nAfter a Error R eitc oisv eerxypected that the [USB T ywpiell- Cre 2s.p4o]nd within ErrorR. eIcf othviesr dyoes\nnot occur then further s are carried out before the performs\nadditional steps, as defined in , by entering the\nstate.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 61\n2.5.2 Sink Operation\n\uf06c Attach PD Connection Contract\n\uf06dAt Sink (no SourceAttac homr ent ): vSafe5V\n\uf06d dDetRePcts tShoruorucgeh theS pinreksence of Po.rt Sink Port\nAttachment Source\nFor a that toggles between and operation, the becomes a on\n\uf06d Sin okf a . vSafe5V VBUS Source_CapabilitiesMessage\nPD CapableSource\nOnce the detects the presence of on it waits for a\n\uf06d indicaStiinnkg the presence of a Source_Ca pabilit.iesMessage tTypeCSinkWaitCap\nHard ResetSignaling Source Port Source_CapabilitiesMessage\nIf the Sour cdeo Peos rntot rPeDc eCiavpe aab le within then it can\nissue in order to cause the to send a\n\uf06d if theS ink is SOP.\u2019 Packet SOP\u2019\u2019 Packet SOP\u2019 Packet\nSOP\u2019\u2019 Packet Discards\nThe does not generate s or s, is not required to detect s or\n\uf06c PDs C aonndn ection tPhDem C.onnection Contract\n\uf06dEstablisShiinnkg Sour (cneo_C apabilitiesMe ossra ge ): GoodCRCMessage\n\uf06d The Sink receives a SOP\u2019 Packet SOP\u2019\u2019 P aancdk ertesponds with a SOP\u2019 Pa.cket\nSOP\u2019\u2019 Packet Discards\nThe does not generate s or s, is not required to detect s or\n\uf06c s Fainrdst Explicit C othnetrma.ct Attach Hard Reset Implicit Contract\nPower Role Swap Fast Role Swap\nEstablishing the after an , or as a result of a\n\uf06d Sink or Source_Capa:bilitiesMessage Source Request\nMessage Valid Sink AcceptMessage PS_RDYMessage\nThe rSeocuerivcees a from the and responds with a Sou rce\nSink. If this is a requeEstx pthliec it Co nrtercaecivtes an followed by a\nwhen the 's power supply is ready to source power at the agreed level. At this point the\n\uf06eand S ihnakv Peo ernttered into an Capabil:ities Source vSafe5V\n[USB 2.0] [USB 3.2] [USB Type-C 2.4] [USBBC 1.2]\nThe cNaeng roetiqauteiosnt one of the offered by the , even if this is the\noutput offered by , , or , in order to enable\n\uf06ffutureS ipnokwer : Valid RequestMessage\n\uf06f A Sink not requesting any capability wCiatpha ab ilities results in an error.\nCapability Mismatch\nRAe que ustnMabelses atog efully operate at the offered requests the default capability but in-\ndicates that it would prefer another power level by setting the bit in the\nand also providing a physical indication of the failure to the end user (e.g.,\n\uf06d Sinuksing an LED). SOP\u2019 Packet SOP\u2019\u2019 Packet SOP\u2019 Packet\nSOP\u2019\u2019 Packet Discards\nThe does not generate s or s, is not required to detect s or\n\uf06c PD Connse catnidon Explicit tChoenmtr.act PE_SNK_Ready\n\uf06dDuring Sink ( - state): Message\nMessage Local Policy\nThe processes and responds (if a response is required) to all s received and sends\n\uf06d apSpirnokpriate s whenever its requires. Source RequestMessage\nSink Port Capabilities Source\nvAS afe5 wVhose power needs[ hUaSvBe 2c.h0a]n[gUeSdB i n3d.2ic]a[tUesS Bth Tisy tpoe t-Ch e2 .4] [ UwSiBthB aC n1e.2w] .\nThe cNaeng oretiqautieosnt one of the previously offered by the , even if this is the\noutput offered by , , or , in order to enable\n\uf06efuture power : RequestMessage\n\uf06e NoSti nrkequesting any capability with a Ca pabilitie rsesults in an error.\nCapabilities Mismatch\nA unable to fully operate at the offered requests an offered capability but\nindicates a i.e., that it would prefer another power level also providing a\nphysical indication of the failure to the end user (e.g., using an LED).\nPage 62 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06d Sink SPR PPS Mode RequestMessage tPPSRequest\nA operating in the periodically sends within even\n\uf06d if iStisn rkequest is unchangEePdR. Mode Source\nEPR_KeepAliveMessage Message tSourceEPRKeepAlive\nA operating in the periodically communicates with the (i.e., sends an\n\uf06d Sink orR any other CC) within .\n\uf06d The wPilol ratlwaysD hRaPve dS aisnskerted on its wire. Power Role\nPower Role Swap Port Source Implicit Contract\nEWxhpelinci tth Cios ntrac its a Nego, ttihaete d can initiate or receive a request for the exchange of s.\nAfter the this will be a and an will be in place until an\n\uf06d Port is DRD Sin kimmediately afterwards. Data Role\nData Role Swap UFP USB Device DFP USB Host Port Sink\nVW C h O e N n N tShoius rce is a the can initiate or receive a request for an exchange of s. After\na the ( ) becomes a ( ). The remains a and\n\uf06d Sink role (or not) remains unchanged. VCONN Source VCONN Swap\nVCONN Port Sink DFP UFPData Role\nThe can initiate or receive a request for an exchange of . During a\nis applied by both ends (make before break). The remains a and / s\n\uf06d remaSiinn kunchanged. VCONN Source Cable Plug SOP\u2019 Communication\nSOP\u2019\u2019 Communication SOP Communication\nThe when it is the can communicate with a using\n\uf06eor SOP Packet at any time itS iisn nkot engagSeOdP i\u2019n C aonmym outhneicra tion SOP\u2019\u2019 Commu:nication\nSOP\u2019 Communication SOP\u2019\u2019 Communication Cable Plug\nIf s are received by the , during or , the\nor is immediately terminated (the times\n\uf06e out anSdin dkoes not retry) SOP Communication SOP\u2019 Communication\nSOP\u2019\u2019 Communication Capabilities SOP\u2019 Communication SOP\u2019\u2019\nCIfo tmhem unic anteieodns to initiate an during an ongoing or\n(e.g., for a change) then the or\n\uf06d Sink Ports will be iDntFePrrupted.\n\uf06eWhen thSein k is alsUon as truct:ured VDM Structured VDM\n\uf06e The Sink can initiate Mode Entry s oMro de Exit Modes. Source Modal\nOperation [USB4]\nThe can control the and of s in the and control\n\uf06c Detach (e.g. ).\n\uf06d Si nokr Communications FailurVeB:US PD Connection\n\uf06eA detects the remvSoavafel 0oVf and interpretHsa trhdi sR aess ettheP eonwde ro Rf tohlee Swap Fast R:ole Swap\n\uf06d SiTnhkis is unless the is due to eitheRr a VBUS , VBUS or .\n\uf06d A deteScintsk plug removal (i.e., absence of pG ooro dCRC) Maneds sdaigsecharges . Message\ntReceive\nWhen the detects the failure to receive a in response to a within\n\uf06e : Soft Reset tSoftReset CRCReceiveTimer\n\uf06e LeadsS toof ta R eset , within of the Hard Reset expiring. tHardReset\nCRCReceiveTimer VBUS USB Default Operation\nIf the process cannot be completed a will be issued within of\n\uf06e the to restore to within ~1-1.5s. Sink\nReceiving no response to further attempts at communication is interpreted by the as an\n\uf06d error (sSeinek Error handling). SPR PPS Mode Request\nMessage Source tPPSRequest Source Hard Reset VBUS\nWhen thev Safe5 oVperating in the fails to send periodic communication (i.e. a\n) to the within , the will issue a that results in\n\uf06d going to Sink . EPR Mode\nEPR_KeepAliveMessage Message Source tSourceEPRKeepAlive\nWSohuercne the operHaatirndg R iens ethte failVs B t U o S send perivoSdaicfe c5oVmmunication (i.e. an\nor any other ) to the within the\nwill issue a that results in going to .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 63\n\uf06d Hard Reset\nErrors during power transitions will automatically lead to a to restore power to default\n\uf06c levels.\n\uf06dErroPrr ohtaoncdoll iEnrgr:or Soft_ResetMessage Port Partner\nNegotiate Port\nSink DFPs UarFeP hVa C n O d N le N d S bouy rac e issued by eitheMr odal Operatio, tnhat resets\ncounters, timers and states, but does not change the voltage and current or the 's role\n\uf06d (e.g., , / , Har)d a Rndes deoteSsi gnnoatl icnaguse an exit from Port Partner .Hard Reset\n\uf06eSerious errors are handledS boyf t Reset issued by either USB Def. aAu lt Operatio:n\nvSafe0V vSafe5V Sink\nresets protocol as for a but also returns the power supply to\n\uf06e ( or Port Da otau tRpoulte) in UoFrdPer to protect the .\n\uf06e restores thSien k 's VCONN So utor ce . VCONN Source Port VCONN\nSource\nwhen the is the it removes then the is restored as the\n\uf06e . Active Mode Source Modal Operation\n\uf06c cHauarsde sR aelsle t s to be exitePdo srutc Pha trhtnate rthe is no longetrT iynp eCSinkWaitCap.\nHard Reset UFP\nPAEft_eSrN aK _Wait_for_ Cita ips aebxpileitciteesd that the will respond within . If this\ndoes not occur, then two further s are carried out before the stays in the\nstate.\nPage 64 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n2.5.3 Cable Plugs\n\uf06c Cable Plug VCONN Contract\ns are powered when is present but are not aware of the status of the between\n\uf06c Cthaeb lpeo Prltusg the cable assembAlyM isS connecting. Message\n\uf06c Detach s do not initiate s and only respond to s sent to them.\n\uf06d or Communications Failure:\n\uf06d Communications can be interrupted at any time. DFP UFP Cable Plug\n\uf06d TherCea ibsl ne oP lcuogmmunication timeout scheme between the / and .\n\uf06c The is ready to respond to potentially repeated requests.\n\uf06dError haCnadbllien Pg:lug Hard ResetSignaling Source Sink\nThe detects to determine that the and have been reset\n\uf06eand willC naebeled Ptolu rgeset itself (equivalHeanrt dto R ae pseotwSeigr ncaylcilneg).\n\uf06e The Hard Reset cannot generate V BUS VC iOtsNeNlf. Cable\nPlug\nThe process power cycles both and so this is expected to reset the\n\uf06c Cable Plusg by itselfC. able ResetSignaling\nA detects to determine that it will need to reset itself (equivalent to a\npower cycle).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 65"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.6", "title": "Architectural Overview", "page": 66, "level": 2, "parent_id": "2", "full_path": "2.6 Architectural Overview", "tags": [], "text": "2.6 Architectural Overview\nThis logical architecture is not intended to be taken as an implementation architecture. An implementation\narchitecture is, by definition, a part of product definition and is therefore outside of the scope of this specification.\nTPDhis sectionP oDutlines the high-level logical architecture of USB PoweUrS DBe Cliovmermy urneifcearteinocned throuUghSBou t this\nCspoemcmifiucnaticioanti.o Inn practice various implemPoernttation options are possible based on many different possible types of\ndevices. devices can have many different configurations e.g., or non-\n, single versus multiple s, dedicated power supplies versus sPuDpplies shared on multiple ports,\nhardware versus software-based implementations etc. The architecture outlined in this section is therefore\nprovided only for reference to indicate the high-level logical model used by the specification. This architecture\nis used to identify the key conPcoerptts aPnodrt to indicate logical blocks anPdD p Coasspiabblele links between them.\nThe USB Power Delivery is a to architecture in which each device is made up of several major\ncom\uf06cponFeingtusr.e 2.3, \"USB Power Delivery Communications Stack\"\nPort Pair\nillustrates the relationship of the layers of the\ncommunications stack between a .\nThe\uf06c commDuenviiccaet Pioonlisc ys tMacakn acognersists oSf:ection 8.2, \"Device Policy Manager\"\nPort Local\nPAo licy (see ) that exists in all devices and manages\nUSB Power Delivery resources within the device across one or more s based on the device's\n\uf06c Polic.y Engine Section 8.3, \"Policy Engine\" Port\nLocal Policy Port\nA (see ) that exists in each USB Power Delivery\n\uf06c imPprloetmoceonlt Lsa tyheer Section 6f,o \"rP rthotaotc ol La.yer\" Message Source\nPort Sink Port\nA (see ) that enables s to be exchanged between a\n\uf06c PH Yan Lda yae r Sec.tion 5, \"Physical Layer\"\nA (see ) that handles transmission and reception of bits on the wire\nand handles data transmission\nPage 66 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 2.3 USB Power Delivery Communications Stack\nProvider Consumer\nDevice Policy Device Policy\nManager Manager\nPolicy Engine Policy Engine\nProtocol Protocol\nPhysical Layer Physical Layer\nCC\nFigure\n2.4, \"USB Power Delivery Communication Over USB\" OptionalSystem Policy Manager Chapter 9 [UCSI]\nAdditionally, USB PUoSwBe Hr Dosetlivery devices which can oPpDeUrSaBte D aesv UicSeB devices can communicPaotert over USB (see\nPort Port ). An US B Hub Device Poli (csye Me anager and )\nthat resides in the communicates with the PD over USB, via the root and potentially\nmanages the individual to connections over a tree of s. The interacts with\ntNhoet Ue:SB intePrfDace in each device to provide and update related information in the USB domain.\nA device is not required to have a USB device interface.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 67\nFigure 2.4 USB Power Delivery Communication Over USB\nUSB Host\nSystem Policy\nManager\nUSB Root Hub\nUSB Hub\nUSB Hub\nPD USB\nPD USB\nDevice\nDevice\nUSB Interface\nUSB Interface\nDevice Policy\nDevice Policy\nManager\nManager\nPolicy Engine\nPolicy Engine\nProtocol\nProtocol\nPhysical Layer\nPhysical Layer\nCC\nCC\nFigure 2.5, \"High Level Architecture View\" AttachedPDPort Port Pair\nshows the logical blocks between two s ( ). In\nadd\uf06cition to theP rcoovmidmerunicDatuiaoln-R sotalec kP odwesecrr Dibeevdic aebove there areS aolusroc:e Port\n\uf06c For a Consume ror Dual-Role Power Devic:e oneS oinrk more s providing power to one or more s.\n\uf06c FoUrS aB -C Port C oonr trol Section:4 A.4 \"Cab cleo nTsyupme Dinegt epcotiwoner. Attach Detach\n\u00ae [USB Type-C 2.4]\nA module (see \") that detects cable /\n\uf06c as defined in . [USB Type-C 2.4]\nUSB Power Delivery uses standard cabling as defined in .\nPage 68 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nDevice Policy Manager Source Sink USB-C Port Control\nProvider Consumer \u00ae\nThe talks to the communication stack, / , and the block to\nmFiganuraeg e2 .t5h, e\" Hreigsho uLrecveesl iAnr cthheit ecture Vi eowr \" . Provider Consumer Dual-Role Power Device\nProvider Consumer Provider\nSource Port illustrates a and a U. SB-C Port Control s can be\nconstructed by combining the elements of both and into a single device. s can also\n\u00ae\ncontain multiple s each wFiigthu rthee 2ir.5 o Hwing hco Lmemveuln Aicracthioitnesc stutarcek V ainedw .\nProvider Consumer\nDevice Policy Manager Device Policy Manager\nSource Port Sink Port\nPolicy Engine Policy Engine\nProtocol Power Power Protocol\nSource(s) Sink\nUSB-C Port USB-C Port\nControl Physical Layer Physical Layer Control\nBMC BMC\nUSB Port USB Port\nCC VBUS VBUS CC\nVBUS\nCC\n2.6.1 Policy\nThere aSryes ttewmo P leovlieclys of Policy: System Policy Manager Provider Consumer\n1) Local Policy applied systePmro wviiddeer by tChoen sumer Device Po laiccyr oMssa nmaugletriple s or s.\n3) enforced on a or by the for a device.\nPoli\uf06ccy coSmysptermise Pso sleicvye Mraal nloaggiecral blocks:\n\uf06c Device Policy Manager (system wPriodvei)d.er Consumer\n\uf06c Policy Engine (Soonuerc pee Pro rt Sin ko rP ort ).\n2.6.1.1 S(oynset peemr Policy oMr anage)r.\nPort Port System Policy\n[UCSI]\nSSyinstceem th Peo UliScyB MPoawnaegre Drelivery protocol is to Devic, eim Ppolleicmy eMnatnataigoenr of a reSqyusitreems cPoomlicmyu Mnaicnaatgioenr\nby an additional data coSmysmteumn Picoalticioyn mechanism i.e., UPrSoBv. ider hasC boenesunm creerated to define an interfaceS yfostre tmhe\nPolicy Manager to comUmSuBn Hicoastte with the . WheDne pvricees ePnotl,i ctyh eM anager\nmonitors anDdev ciocentDroelvsi ce U SbBe tCwoememn uvnairciaotuiso n s and s connected via USB. The\nSy rsetseimde Pso ilnic tyhe and communicates via USB with the in each\nconnected . s without capability or are not data connected, will not be able to\npartiScyipstaetme iPno licy Manager. Optional Provider Consumer\nUSB Host System Policy Manager\nThe is sUo SUBS HBo Psotwer Delivery s aUnSdB Host s will operate without it\nbeing present. This includes systems where the does not provide a and can also\ninclude \"headlessU\"S sBy sHteomsts withouSty astneym Policy M.a Inna tgheorseP rcoavseidse wrhere aC onsumer is noNt epgroetsieantet, USB Power\nDelivery is useful for charging purposes, or the powering of devices since useful USB functionality is not possible.\nWhere there is a , but no , s and s can power between\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 69\nthemselves, independently of USB power rules, but are more limited in terms of the options available for managing\np2o.w6e.1r..2 Device Policy Manager\nDevice Policy Manager\nConsumer Provider Device Policy Manager Local Policy\nThe pSryosvtiedmes P moleiccyh Manainsmagse tro Lmoocanli tPoorl iacnyd control the USB PoPwoertr Delivery sysDteemvi cwe iPthoilnic ay\npMaarntiacguelarr or Source .P Tohrte Sink Port enables toP obleic eyn Efonrgciende acroUssS Bth-Ce s yPsotretm\nCboyn ctormolmunicatiPoonr wt ith thDee vice Policy Manager . is enacted on a per basis by Sthhae red Ca\u00aepacity\nCharger 's con[tUroSlB o Tf tyhpee -C 2.4] s/ s and by communication with the and\nfor that . The is responsible for the sharing algorithm used in\n2.6.1.s3 (see Policy E) ngine\nProvider Consumer Local Policy Source Port\nSink Port Negotiation Policy Engine\nPorts and Policy Engsin aere free to implement their oDwenvi ce Policy Ma noang tehreir directly connected Local Posl iocyr\ns. These wiDll ebveic seu Ppoploicryt eMda bnya ger and status mPeoclihcayn Einsmgisn eimplemented by the Lo cfoarl\ntPhoalitc y . ThCea pabilities interacts directly with the to determine the present\nto be enforced. The will also inform the whenever there is a change in\n2.6.2 (e.g., Mes chsaanggee). Formation and Transmission\n2.6.2.1 Protocol Layer\nProtocol Layer Message Port Pair\nCapabilitiesMessage Message\nThe forms the s used to commPoulinciyc aEtneg iinnfeormation betweenM a essage . It is responsible for\nforming Polsi,c rye Eqnugeisntes and acknowledgments. Additionally, it forms s used to swap roles\nand maintain presence. It receives inputs from the indicating which s to send and indicates\nthe responses back to the . Provider Capabilities Consumer\nConsumer Provider\nThe basiCc appraobtoilcitoiel suses a push model where the pushes its to the that in turn\nresponds with a request based on the offering. However, the can asynchronously request the 's\nEpxretesnednet d Message and can sDelaetcat SanizoetherM vaoxltEaxgtee/ncduerdreMnstg.Len Protocol\nLayer Port Partner Port Partner\nExtended Messages of uDpa ttao Sa ize of MaxExtendedMsgL ceagna cbyeL seennt and recePirvoetdo cporlo Lvaidyeerd the\nChunk dinegtermines that both Messs saugpeport this capabCihliutyn.k When oneM oafx bEoxtthe ndedMsgChusn dkoL nenot supPpoorrtt\nExtensd oefd Message greater thanM axExtendedMsgLegacyLen then the Cshuupnpkoirntgs a\nmechanism to break larger s into smaller s of size . All s\n2th.a6t s.2up.2port PHY Las yloenrger than are required to support .\nPHY Layer Message USB Type-CCC\nPD Multi-Drop CC Port Partner Cable Plug\nCTohleli sion Avoida ins creesponsible for sending and receivPinHgY Layer s across the Mess ag ewire and fCoRr Cmanaging\ndata. is a system, sharing between the s and the (s) that implements\n2.6.3 C aondl lriescoivoenry Amevcohaindisamns. cTehe detects errors in the s using a .\n2.6.3.1 Policy Engine\nPolicy Engine Source Protocol Layer Atomic Message Sequence\nAMS Source Policy Engine Sink Protocol Layer AMS\nTheS ink in a will indicate to theA MS the start andP eonrdt Poaf retancehr\n( ) that the initiates. The in a will indicate to the the start of each\nt2h.e6 .3. 2initiates. Th i sP ernaobtloesc coo-lo Lrdainyaetiorn of initiation between the s.\nProtocol Layer Source R SinkTxOK\nMessage Sink AMS Message\nTPrhoet ocol Layer in Sthoeu rce will request tPhHe YP HLaYy teor set the p vRalue to SinkTx wNGhen it is not actively seSnindking\ns. This indAicMaStes to the Sou trhcaet it can initiate an A bMy Ssending the first in the sequence. The\nin the will request the to set the p value to to indicate that the\ncannot initiate an since the is about to initiate an .\nPage 70 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nProtocol Layer Sink Policy Engine AMS R\nSinkTxOK AMS Message\nThe in the , when the indicates that an is being initiated, will wait for the p\n2va.l6ue.3 to. 3be set to PHY bLeafoyree irnitiating the by sending the first in the sequence.\nPHY Layer Source R SinkTxOK SinkTxNG Protocol Layer\nPHY Layer Sink R Protocol Layer\nThe in the will set the p value to either or as directed by the .\n2Th.e6 .4 in tPheo we wri lls duetpecpt tlhye present p value and inform the .\n2.6.4.1 Source\nProvider Port\nLocal Policy Source Port USB Type-C Port\nvESaachfe 0V VB w US ill contain one or more poweDre stoauchrces that arHe asrhda Rreedse btetween oneS oour rmceore sA. Ttthaecshe power\nsources are controlled byv Stahfee 5V . s start up in Operation where the applies\non and returns to this state on or after a . When the detects events it\nt2ra.6ns.i4tio.2ns its outpu t Stoi nk .\nConsumer Sink Port Sink Local Policy Sink\nUSB Default Operation Port vSafe5V\ns are assumeDde ttoa hchave one H caordn nReecsteetd to a . This is controlled by . s start up\nin where the can operate at with USB default specified current levels and\nr2e.t6ur.n4 t.o3 this state o n D ual- Roro alfteer P a ower Po.rts\nDual-Role Power Port Source Sink Power\nRole Power Role Swap Fast Role Swap\ns have the ability to operate as either a or a and to swap between the two\n2.6s. 4us.i4ng Dead o Br attery or L.ost Power Detection\n[USB Type-C 2.4] Sink DRP Dead\nBattery\ndefines mechanisms intended to communicate with and to charge a or with a\n2.6.4.. 5 VCONN Source\nSource Port Attach VCONN Source VCONN\nSource Port Sink Port Cable Plug\nThe at , is also the . ThCea rbelsep Polnusgibility for sPoourrtcing V c C a O n N b N e S sowuracpeped between\nthe s and Cables Pinlu ag make before break fashion to ensure that the s are continuously\npowered. To ensure reliable communication with the s only the that is the is permitted\ntNoo ctoem: municate witPho twhee r Role Swaps.Data Role Swap Fast Role Swap Source Port\nVCONN Source Cable Plug\nPrior to a , or each new needs to ensure that\n2.6.5 it is the DFP/UFP if it needs to communicate with the s after the swap.\n2.6.5.1 Downstream Facing Port (DFP)\nDownstream Facing Port DFP Port USB Device Attached\nDFP USB Host USB Communication DFP\nThe Charger or D iFsP equivalent in the UUSSBB t oCpoomlomguyn tioc atthieo n a is DFP to. The\nwill alAsolt ecronraretes pMoondde to the but only if is supported while acting as a .\nProducts such as s can be a while not having capability. Only the is allowed\nt2o. c6o.n5tr.o2l Up sotprereaatiomn. Facing Port (UFP)\nUpstream Facing Port UFP Port USB Device\nUSB Host USB Hub DFP UFP USB Device USB Communication\nThe orU FP is equivalent in the USB topologyU FtoP the on a USB Co tmhamt uisn cicoantnioencted to\nthe or 's . The will also correspond to the but only if is\nsupported while acting as a . Products which charge can be a while not having\ncapability.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 71\n2.6.5.3 Dual-Role Data Ports\nDual-Role Data Port DFP UFP Data Role\nData Role Swap\ns have the ability to operate as either a or a and to swap between the two s\nuNsointeg: . Dual-Role Data Port Dual-Role Power Port\nDFP UFPData Role Source Sink\nProducts can be s without being s that is they can switch\n2.6.6 logicall y C beatwbeleen and an Cd on nectorss even if they are -only or -only Ports.\n[USB Type-C 2.4]\nThe USB Power Delivery specification assumes certified USB cables and associated detection mechanisms as\nd2e.f6in.e6d. i1n the USB-C P soperctif iCcaotinont.rol\nUSB-C Port Control\n\u00ae\nThe\uf06c Devic eb Plooclkic py rMoavnidaegse mr echanismAtst atoc:h Detach\n\uf06c Inform tShinek Device Policy Manag oerf cable R / events.\n\uf06c InformS ourc'es Device Policy Manage rof the p vaRlue.\n2.6.7Allow In'st eractions betw toe seetn th Ne opn va-lPueD. , BC, and PD devices\nUSB Power Delivery only operavteSsa wfeh5eVn two USB Power D[UeSliBv e2r.y0 ]de[vUiScBes 3 a.2re] d[UirSeBctBlyC c1o.n2n]ect[eUdS. WB Thyenp ea- Cd e2v.4ic]e\nfinds itself a mixed environment, where the other device does not support the USB Power Delivery Specification,\nthe existing rules on supplying as defined in the , , or\nspecifications are applied.\nThe\uf06cre are twUoS pBr HimoastryD cFasPesS otou rccoensider: PD Advertise AttachedPD\nCapable Advertise [USB 2.0]\nT[UhSeB 3.2] [US (BBC /1.2] [)U iSs Bn oTny-pe-C a n2d.4 a]s such will not send any ments. An\ndevice will not see any ments and operates using the rules defined in the ,\n\uf06c Devic,e UFP Sink or PD specifications. Advertise\nUSB Host DFP Source vSafe5V VBUS [USB\nT2.h0e] [USB 3 (.2] [/USBB)C i s1 n.2o]n- [U aSnBd T aysp seu-cCh 2 w.4il]l not see any ments and therefore will not\nrespond. The ( / ) will continue to supply to as specified in the\n2.6.8 , Pow, er Rule osr specifications.\nPower Rules Source\nSink PDP Rating Chapter 10 \"Power Rules\"\ndefine voltages and current ranges that are offered by compliant USB Power Delivery s and used\nby a USB Power Delivery for a given value of . See for further details.\nPage 72 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.7", "title": "Extended Power Range (EPR) Operation", "page": 73, "level": 2, "parent_id": "2", "full_path": "2.7 Extended Power Range (EPR) Operation", "tags": [], "text": "2.7 Extended Power Range (EPR) Operation\nExtended Power Range Mode\nPD SPR Mode Mode Explicit\nContract is a Pthoartt provides Cfoarb ulep P tlou g240W which EisP cRonsiderably more power than the 100W\nthe original specification ( ) offered. It is a of operation that can be entered only when an\nisE iPnR p Mlaoced eand both the s and the (s) support .\nEPR CapableSource EPR CapableSink EPR Capable EPR Source\nEntry into F fioxelldo wSusp ap slytrict pArodcjuesstsa; bthleis V aoslstaugrees S tuhpaptl tyheA hViSgher voltages, at power levEePlsR a Mboovdee 100W, are\nonly transferred between known PsD and s over cables. EPRs\nSaoreu rccaepableE oPf Rb oStinhk aHnadr d Reset ( ) operation. MaSiPnRtaining operation\nalso requires maintaining a regular cadence of USB communications; loss of communications between the\nEP Ran Mdo de will cause a to be initiated resulting in a return to operation.\nThe Negoti aetnetry, operational anEdx pexliicti tp Crooncetrsasc its summSatarinzdeadr bdy P tohwee fro Rllaonwgieng steps: EPR Capable\nSource Sink EPRCapabilities PDO APDO RDO\n1) and enter into an in the . During this step,\nEPRs Sainndk s will declare their EsuPpRp Soorutrecde EP Rth Mrooudgeh / and exchanges.\n2) An EPR Sou,r hcaeving discovered an , can Aretqtaucehsetd entry. EPR Capable\nFirst Explicit ContractNegotiation EPR Sink EPR\n3) MThoed e , having already confirmed that the cable assembly is during the\n, will respond to the with an acknowledgment of the\nentEryP Rre Mquoedset.\n4) While inE PR Source: Capabilities Fixed SupplyPDO AVSAPDO EPR Sink\nSink Explicit Contract\na) The sends EPR ( s and an ) to the which\nrequEirPeRs Sthinek to evaluate and respond as appropriate to adjust the EPR Source . EPR\nMode\nb) The maintains a regular cadence of communications with the to allow\nto contiEnPuRe. Source EPR Sink EPR Mode\nEPR Mode Explicit Contract SPR\n5) W(Ah)PeDn Oeither the or EPR Mod neo longer wants to remain in operation, a normal\nexit from will first require adjusting the to a voltage of 20V or lower (\nSour)c feollowed byE aPnR e Sxopulricciet E PexRi_tS roeuqrucees_tC.apabilitiesMessage SPR\nEPR Sink EPR Mode EPR Mode\na) initiated:S PR Contract senNdesg aont iate SPR Mod e that only includes\nvoltages to force the to drop to 20V or below followed by the exit. Once\niSsi nekxited, a newE PR Sink is d to return to operatiEoPnR. Mode EPR\nMode SPR Contract Negotiate SPR Mode\nb) initiated; requests a drop to 20V or below followed by the exit. Once\nFigure 2.6, \"Exam ipsl ee xoift ead N, oar nmeawl EPR Mode Op eirsa tional Flodw t\"o return to operation. EPR Mode\nEPR Mode Source\nEPR Mode EPRCapabilities Sink illustratSePs Ra n( Ae)xPaDmOple of a normalS ink Neg otiate\nopeSrPaRti Cononalt rfalocwt. In this example, at some timeS oduurrcieng the oEpPeRr aMtioodne, tehxeit Messa gdeecides tEhPaRt iMt noedeeds to\nexit S, PsRo iCto rnetsreancdts thNee gotia te to thSeP R Mo wdeith only s to cause the to\nan of 20V or lower and then the follows with an . Once is\nexited, a new is d to return to operation.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 73\nFigure 2.6 Example of a Normal EPR Mode Operational Flow\nEPR Source EPR Cable EPR Sink\nEstablish SPR Contract\n(Source/Sink EPR Status)\nEnter EPR\nMode?\nRequest EPR Mode\nEPR Mode\nEntry\nCable is EPR?\nPhase\nAccept EPR Mode\nEstablish EPR Contract\nEPR Mode\nOperation\nMaintain PD Repetitive Communications\nExit EPR\nMode?\nEstablish EPR Contract (20V or less)\nEPR Mode\nExit Phase\nExit EPR Mode\nEstablish SPR Contract\n(Source/Sink EPR Status)\nFigure 2.6, \"Example of a Normal EPR Mode Operational Flow\" EPR Mode\nSink EPR Mode Sink\nNExopt liilcliut sCtorantterdac itn Source EPR_Mode exit,M wehsislaeg ien EPR Mopoedreation, the\nmSigPhRt Cdoenctidraec itt waNnetgso ttoia etxeit . In this case, theS PR M moduest initiate the exit process by reviEsxinpgli citits\nContract with the at 20V or less followed EwPiRth M aond e Hard R.e Osentce is exited,\na new is d to formalize the return to operation. Failure to revise the\nto one at 20V or less before attempting to exit will result in a .\nPage 74 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "2.8", "title": "Charging Models", "page": 75, "level": 2, "parent_id": "2", "full_path": "2.8 Charging Models", "tags": [], "text": "2.8 Charging Models\nFixed Supply\nProgrammable Power Supply Adjustable Voltage Supply\nThis section provides a charging model overview for each of the primary power delivery methods: ,\n2.8.1 Fixed S aundp ply Charging Mo.dels\nFixed Supply\nSource Advertise Capabilities Table2.1, \"Fixed Supply Power\nURaSnBg Peos\"wer Delivery supports charging usingS at asnetd oafr dd ePfoinweedr sRtaanngdeardSP vRoltages with cuErxrteenndt eadv aPiolawbeler\nuRpa ntoge thEe PliRmit of the 's and cable's d . As summarized in\n, the standard voltages are available in either the ( ) and/or the\nTable2.1 Fixed Supply Power Ranges\n( ).\nPower Range Available Current and PDP Range Notes\nVoltages\nStandard Power Range SPR\n( ) 3A: 5V, 9V, 15V, 20V 15 \u2013 60W\n1\nExtended Power Range EPR 5A : 20V >60 \u2013 100W EPR Mode\n2\n( ) 3A : 5V, 9V, 15V, 20V 15 \u2013 60W Requires entry into .\n2 >60 \u2013 100W\n5A : 20V\n2 >100 \u2013 240W\n5A : 28V, 36V, 48V\n1) Requires 5EAPR cable.\n2.28).2 Requires Pr coabgler.ammable Power Supply (PPS) Charging Models\nProgrammable Power Supply PPS\nSource Advertise Capabilities\nUSB Power Delivery includes supSpPoRr Mt foodre ( )O cphearragtiinngg u Csuinrgr ean stet of defined\nRsteaqnudeasrtdM voesltsaaggee ranges. With current up to the limit of the 's and cable's d .\nAdditionally, when operating in the current is also limited by the field value in the\nNote: PPS . EPR Mode\noperation is not available in Standar.d Power Range SPR PPS Table2.2,\n\"PPS Voltage Power Ranges\"\nThe standard voltage ranges available in the ( ) for are summarized in\nTable2.2 PPS Voltage Power Ranges\n.\nAvailable Current Prog Min Voltage (V) Max Voltage (V) PDP Range\n3A 9V Prog 5 11 16 \u2013 60W\n15V Prog 5 16\n20V Prog 5 21\n1\n5A 20V Prog 5 21 61 \u2013 100W\n1) Requires 5A cable.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 75\n2.8.3 Adjustable Voltage Supply (AVS) Charging Models\nSPR Mode PDP EPR Mode\nAdjustable Voltage Supply AVS Source PDP\nRUaStBin Pgower Delivery operating in (when is higher than 27W) and includes support for\n( ) charging using a set of defined standard voltage ranges based on the 's\n. AVS Table2.3, \"AVS Voltage Power Ranges\"\nTable2.3 AVS Voltage Power Ranges\nThe standard voltage ranges available for are summarized in .\nPDP\nMinimum Maximum Maximum Minimum Maximum Maximum\nVoltage (V) Voltage (V) Available Voltage (V) Voltage (V) Available\n3\nCurrent N/A Current\n>27\u202645W 9 15 3A\n>45\u202660W 9 20 3A\n1\n>60\u2026100W 9 20 5A\n2 2\n100\u2026140W 9 20 5A 15 28 5A\n2 2\n>140\u2026180W 9 20 5A 15 36 5A\n2 2\n>180\u2026240W 9 20 5A 15 48 5A\n1) Requires 5A EcaPbRle.\n2) Requires an Cable. SPR AVS\nFixed Supply PDO Fixed Supply PDO\n3) The maximum available current is determined by the maximum available current in the\n15V in the 9 - 15V range and 20V in the 15 - 20V range.\nPage 76 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n3 USB Type-A and USB Type-B Cable Assemblies and\nConnectors\nDeprecated [USBPD 2.0]\nBFSKSignaling Scheme USB Type-A USB Type-B\nThis section has been . Please refer to for details of cables and connectors used in scenar-\nios utilizing the in conjunction with or connectors.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 77"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "4.1", "title": "Interoperability with other USB Specifications", "page": 78, "level": 2, "parent_id": "4", "full_path": "4.1 Interoperability with other USB Specifications", "tags": [], "text": ""}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "4.2", "title": "Dead Battery Detection / Unpowered Port Detection", "page": 78, "level": 2, "parent_id": "4", "full_path": "4.2 Dead Battery Detection / Unpowered Port Detection", "tags": [], "text": ""}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "4.3", "title": "Cable IR Ground Drop (IR Drop)", "page": 78, "level": 2, "parent_id": "4", "full_path": "4.3 Cable IR Ground Drop (IR Drop)", "tags": [], "text": ""}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "4.4", "title": "Cable Type Detection", "page": 78, "level": 2, "parent_id": "4", "full_path": "4.4 Cable Type Detection", "tags": [], "text": "4 Electrical Requirements\nT4h.i1s chapter c o Ivnerts ethre oplpatfeorrma'sb eilelcittriyca lw reiqtuhire moetnhtse forr iUmpSleBm eSnptineg cUiSfBi Pcoawteir oDenlivsery.\nMay [USB 2.0] [USB 3.2] [USB4] [USBBC 1.2] [USB Type-\nC 2.4] USB Type-C Device [USBBC 1.2]\nUSB Power Delivery be impSlehmalelnted alongside the , , , Port P aainrd Detached\n( Hard R)e sspeetcifications. In the case where a requests poPwoerrt vSihaa ll and then the USB\nSPeocwtieorn D 6e.8li.v3e, \"rHy aSrpde cRiefisceatt\"ion, it follow the USB Power Delivery Specification until the is\nor there is a . If the USB Power Delivery connection is lost, the return to its default state, see\n4.2 Dead B. attery Detection / Unpowered Port Detection\nDead Battery USB Device USB Host\nUSB Host\n/unpowered operation is when a needs to provide power to a under the\ncirc\uf06cumstancesD weahde rBea tthteer y :\n\uf06c Has a that requires charging or\n\uf06c Has lost its power source or\n\uf06c Does not have a power source or\nDead BaDttoeerys not want to provide power. USB Type-C [USB Type-C 2.4]\n4.3 c hCaragibngl eop eIrRat ioGnr foor uconnndec tDionrso bpetw (eIeRn Drop) connectors is defined in .\nPDSink Port USB Communication USB Communication\nEvery capable of can be susceptible to unreliable if the\nvoltage dro[pU aScBr oTsysp ger-oCu 2n.d4 ]falls outside of the acceptable common mode range for the USB Hi-Speed transceivers\ndata lines due to excessive current draw. Certified USB cabling is specified such that such errors don't typically\no4c.c4ur (See Cable Ty).pe Detection\nUSB Type-C PD vSafe5V\n[USB Type-C \u00ae2.4] SourceShall Capabilities Capabilities\nStandard cable assemblies are rated for voltages higher than and current levels of at least\n3A (See ). The limit maximum it offers so as not to exceed the\noSof uthrcee type of cabling detected. Shall Attached Capabilities\nCable Capabilities\nDiscovse rca Ipdaebnltei toyf Cooffmerminagn mdore thSeacnt i3oAn 6.4.4. 3d.e1t,e \"cDti tshcoe vteyrp Ied oefn tity\" cable anSdO lPim\u2019 Ciot mthme unication theSye cotfifoenr\nb2.a4s, e\"dS OoPn* t Choe mcumrurennicta ctaiorrny\"ing capaCbailbitley Polfu tghe cabClea dbleet eVrDmOined by the Disco dveerte Irdmeinnteitdy uCsoinmgm thane d\n(see Shall Negoti)a steent using (seEex plicit\nContract ) to the . The returned as part of the\ndetails the maximum current and voltage values that be d for a given cable as part of an\nCabl.e Discovery Source Power Role Swap Fast Role\nSwap Sink Shall\nThe process is usually run when the is powered up, after a or\nor when power is applied to a . The method used to detect these events meet the following\nreq\uf06cuiremSoeunrtcse: Shall Cable Discovery Source Source_CapabilitiesMessag-\ne\ns run the process prior to the sending\n\uf06c Ssin okffering UcuSrBr eTnyptse -inC excess of 3AS ahnadll/or voltCaagpeasb iinli etixecsess of 20V. Source Capabilities\nSource Capabilities\ns with connectors select from the offered assum-\n\uf06c iSningk that the Dua lh-Raso lael rPeoawdye rdeterminSehda tlhle G oeft t_hSeo ucarcbele_C. apMessage\nSource Capabilities Capabilities\ns with the bit set, respond to a by declaring their\nfull , without limiting them based on the cable's .\nPage 78 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.1", "title": "Physical Layer Overview", "page": 79, "level": 2, "parent_id": "5", "full_path": "5.1 Physical Layer Overview", "tags": [], "text": ""}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.2", "title": "Physical Layer Functions", "page": 79, "level": 2, "parent_id": "5", "full_path": "5.2 Physical Layer Functions", "tags": [], "text": "5 Physical Layer\n5.1 Physical Layer Overview\nPHY Layer Signaling\nPHY Layer PDUSB Device\nThe Physical Layer ( ) defines the technology for USB Power Delivery. This chapter defines the\ne5le.c2trical requ iPremheynstsi acnad lp aLraamyeteerrs oFf uthne ctions required for interoperability between s.\nPHY Layer\nCC PHY Layer Collision Avoidance\nThe USB PD consists of a pair of transmitters and receivers that communicate across a single signal wire\n( ). All communication is half duplex. The practices to minimize communication\nerrors on the channel.\nThe\uf06c transmitter Ppaercfkoertms the followinPgr ofutonccotilo Lnasy:er\n\uf06c Receive data fromCR tChe .\n\uf06c Calculate anPda acpkpetend a . CRC Payload\n\uf06c Encode the Packe dtatPar ienacmlubdleingSO thPe* Pay (loi.aed., tChRe C EO)P. Bi-phase Mark\nCoding BMC CC\nTransmit the ( , , , and ) across the channel using\n( ) over .\nThe\uf06c receiver performs the following functionPsa:cket Preamble\n\uf06c Recover thSeO cPlo*ck and lock onto the from the .\n\uf06c Detect the . CRC\n\uf06c Decode theE rOePceived data includCinRgC the .\n\uf06dDetect thCe RC Vanadli dvalidate the Pa:cket Protocol Layer\n\uf06d If the CRC is Inval,i ddeliver the data to the .\nIf the is , flush the received data.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 79"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.3", "title": "Symbol Encoding", "page": 80, "level": 2, "parent_id": "5", "full_path": "5.3 Symbol Encoding", "tags": [], "text": "5.3 Symbol Encoding\nPreamble Shall\nExcept for the , all communications on the line be encoded with a line code to ensure a reasonable\nlevel of DC-balance and a suitable number of transitions. This encoding makes receiver design less complicated and\nallows for moreS hvaarlilations in the receiver design.\n4b5b line code be used. This encodes 4-bit data to 5-bit symbols for transmission and decodes 5-bit symbols\nto 4-bit data for consumption by the receiver. Hard Reset\nPacket Table5.1, \"4b5b Symbol Encoding\"\nThe 4b5b code provides data encoding along with special symbols. Special symbols are used to signal ,\nTable5.1 4b5b Symbol Encoding\nand delineate boundaries (see ).\nName 4b 5b Symbol Description\n0 0000 11110 hex data 0\n1 0001 01001 hex data 1\n2 0010 10100 hex data 2\n3 0011 10101 hex data 3\n4 0100 01010 hex data 4\n5 0101 01011 hex data 5\n6 0110 01110 hex data 6\n7 0111 01111 hex data 7\n8 1000 10010 hex data 8\n9 1001 10011 hex data 9\nA 1010 10110 hex data A\nB 1011 10111 hex data B\nC 1100 11010 hex data C\nD 1101 11011 hex data D\nE 1110 11100 hex data E\nSync-1 K-code\nF 1111 11101 hex data F\nSync-2 K-code\n11000 Startsynch #1\nRST-1 K-code Hard Reset #1\n10001 Startsynch #2\nRST-2 K-code Hard Reset #2\n00111\nEOP K-code EOP End of Packet\n11001\nShall Not be used\n01101\nShall Not be used\nError 00000\nShall Not be used\nError 00001\nShall Not be used\nError 00010\nShall Not be used\nError 00011\nShall Not be used\nError 00100\nSync-3 K-code\nError 00101\nShall Not be used\n00110 Startsynch #3\nShall Not be used\nError 01000\nShall Not be used\nError 01100\nShall Not be used\nError 10000\nError 11111\nPage 80 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.4", "title": "Ordered Sets", "page": 81, "level": 2, "parent_id": "5", "full_path": "5.4 Ordered Sets", "tags": [], "text": "5.4 Ordered Sets\nShall Figure 5.1, \"Interpretation of ordered sets\"\nOrdered sets be interpKre-cteodd eaccording to Figure 5.1, \"Interpretation of ordere.d sets\"\nAn ordered set consists of 4 Fs isgeunrte a 5s .s1h Ionwtenr ipnr etation of ordered sets .\nTransmit last Transmit first\nK-code 4 K-code 3 K-code 2 K-code 1\nb4 b0\nBIT BIT BIT BIT BIT\n4 3 2 1 0\nTransmit last Transmit first\nTable5.2, \"Ordered Sets\" SOP*\nSOP SOP\u2019 SOP\u2019\u2019\nA list of the ordered sets used by USB Power Delivery can be seen in . is a generic term\nTable5.2 Ordered Sets\nused in place of / / .\nOrdered Set Reference\nCable Reset Section 5.6.5, \"Cable Reset\"\nHard Reset Section 5.6.4, \"Hard Reset\"\nSOP Section 5.6.1.2.1, \"Start of Packet Sequence (SOP)\"\nSOP\u2019 Section 5.6.1.2.2, \"Start of Packet Sequence Prime (SOP')\"\nSOP\u2019_Debug Section 5.6.1.2.4, \"Start of Packet Sequence Prime Debug (SOP'_Debug)\"\nSOP\u2019\u2019 Section 5.6.1.2.3, \"Start of Packet Sequence Double Prime (SOP'')\"\nSOP\u2019\u2019_Debug Section 5.6.1.2.5, \"Start of Packet Sequence Double Prime Debug (SOP''_Debug)\"\nShall K-code K-code Shall\nValid K-code May\nThe receiver search for all four s. When the receiver finds all four s in the correct place, it\ninterpret this as a ordered set. When the receiver finds three out of four s in the correct place, it\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 81\nValid Should K-code Valid\nTable5.3, \"Validation of Ordered Sets\"\ninterpret this as a ordered set. The receiver ensure that all four s are to avoid ambiguity\nTable5.3 Validation of Ordered Sets\nin detection (see ).\n1st code 2nd code 3rd code 4th code\nValid K-code K-code K-code\nValid 1 CKo-rcroudpet K-code K-code\nValid 1 K-code CKo-rcroudpet K-code\nValid 1 K-code K-code CKo-rcroudpet\nValid 1 K-code K-code K-code CKo-rcroudpet\nInvalid2 K-code K-code\n(perfect)\nMay Valid\n(example) Corrupt Corrupt\nShall Valid\n1) be interpreted as a ordered set.\n2) be interpreted as a ordered set.\nPage 82 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.5", "title": "Transmitted Bit Ordering", "page": 83, "level": 2, "parent_id": "5", "full_path": "5.5 Transmitted Bit Ordering", "tags": [], "text": "5.5 Transmitted Bit Ordering\nShall\nTable5.4, \"Data Size\"\nThis section describes the order of bits on the wire that be used when transmitting data of varying sizes.\nFigure 5.2, \"Transmit Oshrdoewrs f othr eV adrififoeurse nSitz desa toaf sDizaetas \"that are possible. Shall\nTable5.4 Data Size\nshows the transmission order that be followed.\nUnencoded Encoded\nByte 8-bits 10-bits\nWord 16-bits 20- bits\nFiguDrWe 5or.2d Transmit Ord32e-rb iftosr Various Size40s -obfit Dsata\nb31 b0\nb31 Transmit last b16 b15 Transmit first b0\nb15 b8 b7 b0\nb7 b4 b3 b0\nb\n5\nb\n4\nb4 b0\nBIT BIT BIT BIT BIT\n4 3 2 1 0\nTransmit last Transmit first\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 83"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.6", "title": "Packet Format", "page": 84, "level": 2, "parent_id": "5", "full_path": "5.6 Packet Format", "tags": [], "text": "5.6 Packet Format\nPacket Shall Preamble SOP* Section 5.6.1.2, \"Start of Packet Sequences\" Packet\nMessage Header CRC EOP Section 5.6.1.5, \"End of Packet (EOP)\" Packet\nThe F fiogrumrea 5t .3, \"US cBo nPsoiwste or fD ae livery Pac, kaent Form, a(ste\"e PacketSha),l l data\nincluding the , a and aPna cket (Ssheea ll BMC CC ). The format is\nshown in and indicates which parts of the be 4b/5b\nNenoctoed:ed. Once 4b/5b encodPeadc, kthete entire Pream bbele transmBMitCted using over .\nSectionA l6l .t2h.1e, b\"Mitse sinsa tghee C onstru,c itnioclnu\"ding the , are Pack eentcoded. Control Message Data\nMessage Extended Message\nSee for more details of the construction for s,\ns and sF.igure 5.3 USB Power Delivery Packet Format\nSOP* (Start Message ...\nPreamble(training for receiver) Byte 0 Byte 1\nOf Packet) Header\n... EOP (End Of\nByte n-1 Byte n CRC\nPacket)\nLEGEND:\nTraining sequence provided by the Provided by the Physical Provided by the Protocol\nPhysical layer, not encoded with 4b5b layer, encoded with 4b5b layer, encoded with 4b5b\n5.6.1 Packet Framing\nPreamble\nSOP* Start of Packet Packet EOP End of Packet K-code\nThe transmission starts with a that is used to allow the receiver to lock onto the carrier. It is followed by\n5a .6.1 (.1 P).r Tehae mble is terminated with an ( ) .\nPreamble\nPacket PreambleShall\nThe is used to achieve lock in the receiver by presenting an alternating series of \"0s\" and \"1s\", so the\naverPagreea fmrebqlueeSnhcayl lis the carrier frequency. Unlike the rest of the , the Preamb leSha Nllot be 4b/5b encoded.\nShall\nThe consist of a 64-bit sequence of alternating 0s and 1s. The start with a \"0\" and\n5.6. 1en.2d with a \"1\" . Start of Packet Sequences\n5.6.1.2.1 Start of Packet Sequence (SOP)\nSOP SOP Sync-1K-code Sync-2K-code\nTable5.5, \"SOP Ordered Set\"\nis an ordered set. The ordered set is defined as: three s followed by one (see\nTable5.5 SOP Ordered Set\n).\nK-Code Number K-Code in Code\nTable\nSync-1\nSync-1\n1 Sync-1\n2 Sync-2\n3\nSource SinkShall4 Packet SOP Valid\nSOP Table5.3, \"Validation of Ordered Sets\" Shall Discarded\nA Power Delivery Capable or be able to detect and communicate with s using . If a\nis not detected (see SOP Packet Shall PD Ca)p tahbelne tPhoer twholeP DtrUaSnBsm Hiossstion PD UbSeB Device .\nCable Plug VPD Shall SOP Packet\nSending and receiving of s be limited to s on s and s.\ns and s neither send nor receive s.\nPage 84 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nNote: PDUSB Device AMA\nSOP Packet\ns, even if they have the physical form of a cable (e.g., s), are still required to respond to\n5.6.1.2.2 s. Start of Packet Sequence Prime (SOP')\nSOP\u2019 Sync-1K-code Sync-3K-code Table5.6, \"SOP\u2019\nOrdered Set\"\nThe ordered set is defined as: two s followed by two s (see\nTable5.6 SOP\u2019 Ordered Set\n).\nK-Code Number K-Code in Code\nTable\nSync-1\nSync-1\n1 Sync-3\n2 Sync-3\n3\nVPDShall SOP\u2019 Communication 4 VPD Cable Plug SOP\u2019 Communication Shall\nPacket SOP\u2019\nA have capability. A and a capable of s\nonPlyo rdtetect and communicate with Cabsl es tPalrutging with S.OP\u2019 Communication Attached Port Pair\nPacket SOP\u2019 Cable Plug\nA S OnPeeding to communicate witPho rat Partner capable of s, between a\nwill be able to communicate using both s starting with to communicate with the and starting\nwith VPD to coCmambleu nPilcuagte with its SOP\u2019 Comm.unication ValidSOP\u2019 Table5.3, \"Validation\nof Ordered Sets\" Shall Discarded Port SOP\u2019 Communication\nFVoarli ad SOP or aS OP\u2019 supporting Table5.3, \"Validatios,n i fo af Order ed Set iss\" not detected (see Shall\nDiscarded ) then the whoElxep tlriacints Cmoinstsriaocnt bIme plicit Contr.a Fcotr a supSpinokrtSihnag ll Not SOP\u2019 Packse tif a\nSh all Doirs card is noPta dckeetetcted (see SOP\u2019 ) then the whole transmission be\n. When there is no or an in place a send s\n5an.d6 .1.2. 3 all Stasr stt aortfi nPga wcikthe t Se.quence Double Prime (SOP'')\nSOP\u2019\u2019 K-code Sync-1 Sync-3 Sync-1 Sync-3 Table5.7,\n\"SOP\u2019\u2019 Ordered Set\"\nThe ordered set is defined as the following sequence of s: , , , (see\nTable5.7 SOP\u2019\u2019 Ordered Set\n).\nK-Code Number K-Code in Code\nTable\nSync-1\nSync-3\n1 Sync-1\n2 Sync-3\n3\nVPDShall Not SOP\u2019\u2019 Communication 4 Cable Plug SOP\u2019\u2019 Communication Shall\nSOP\u2019 Communication Cable Plug Shall SOP\u2019\u2019 Communication Cable\nAPl ug SO Ph\u2019a\u2019 vCeo mmunication capSahbaillilty. A capable of Packet , haSvOe Pa\u2019 \u2019\nShallDiscard capabilitPya icnk ethte other . No cable only support . A\nto which is assigned only detect and communicate with s starting with\nanPdo rt any other s. Cable Plug Attached Port Pair\nPacket SOP\u2019 SOP\u2019\u2019 Cable Plug Packet SOP\nA needing to commPournt iPcaatretn werith sPuocrht a , SOP\u2019\u2019 C boemtwmeuenni caa tionShal lwill be able toS cOoPm\u2019 municate\nuCosimngm unicatiso sntartinSgh walilth and SOP* t oC ocmommmunuincaictaioten with the s and s starting with to\ncommunicate with its . A which supports also support\nCable Pl uagnd co-oSrOdiPn\u2019\u2019a Cteo mmunication Vali sdoS aOsP t\u2019o\u2019 avoid collisions. Table5.3, \"Validation of\nOrdered Sets\" Shall Discarded Port ValidSOP*\nTFoarb lteh5e .3, \"Validati osunp opf oOrrtdinegre d Sets\" , if a iSsh naoltl detDecistecda r(dseeed\n) then the whole transmission be . For the if a is not detected (see\n) then the whole transmission be .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 85\n5.6.1.2.4 Start of Packet Sequence Prime Debug (SOP'_Debug)\nSOP\u2019_Debug K-code Sync-1 RST-2 RST-2 Sync-3\nTable5.8, \"SOP\u2019_Debug Ordered Set\"\nThe ordered set is defined as the following sequence of s: , , , (see\nTable5.8 SOP\u2019_Debug Ordered Set\n). The usage of this Ordered Set is presently undefined.\nK-Code Number K-Code in Code\nTable\nSync-1\nRST-2\n1 RST-2\n2 Sync-3\n3\n5.6.1.2.5 Start of Packet S4equence Double Prime Debug (SOP''_Debug)\nSOP\u2019\u2019_Debug K-code Sync-1 RST-2 Sync-3 Sync-2\nTable5.9, \"SOP\u2019\u2019_Debug Ordered Set\"\nThe ordered set is defined as the following sequence of s: , , , (see\nTable5.9 SOP\u2019\u2019_Debug Ordered Set\n). The usage of this Ordered Set is presently undefined.\nK-Code Number K-Code in Code\nTable\nSync-1\nRST-2\n1 Sync-3\n2 Sync-2\n3\n5.6.1.3 Packet Payload 4\nPacket Protocol Layer Section 6.2, \"Messages\" Shall\nTable5.1, \"4b5b Symbol Encoding\"\nThe data is delivered from the (see ) and be encoded with the\n5he.x6 d.1at.a4 codes from CRC .\nCRCShall Payload Section 5.6.2, \"CRC\"\nT5h.6e .1.5 be ins e Ertnedd ju ostf a Pftearc thkee t (EO.P It) is described in .\nPacket Shall EOPK-code Figure 5.1, \"Interpretation of ordered sets\"\nShall CRC EOP CRC Shall CRC\nThe end of Sha lml arkDeirs carde bde a single Pack aest dSehfainlled in Protocol Layer . This\nmark the end of the . After the , the -residual be checked. If the is not good, the whole\nNtroantes:mission EOPM baey , if it is good, the Pac kbeet delivered to the Hard Rese.tSignaling\n5.6.2 An CR Cbe used to prematurely terminate a e.g., before sending .\nMessage Header Shall CRC\nThe\uf06c CRC and data be protected by a P32ay-bloita d CR. C\n\uf06c -C3R2C protects the dataS hinatlelgrity of the data . -32 is defined as follows:\n\uf06c The CRC-32 polynomial Shall be = 04C1_1DB7h.\n\uf06c TCRhCe S-h3a2l Ilnitial value be = FFFF_FFFFPha.y load Packet\nPreamble SOP* EOP\n-32 be calculated for all bytes of the not inclusive of any framing symbols (i.e.,\n\uf06c eCxRcCludes the Sha, ll , ). Packet\n\uf06c -32 calculationC RC bSehgainll at byte 0, bit 0 and continue to bit 7 of each of the bytes of the .\n\uf06c The remainder oCfR C -3S2h all be complemented.\nThe residual of -32 be C704 DD7Bh.\nPage 86 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nCRC CRC\nThis inversion of the -32 remainder adds an offset of FFFF_FFFFh that will create a constant -32 residual of\nCN7o0te4:_DD7Bh aCtR thCe receiver side. [USB 3.2]\nFigure 5.4,T \"hCeR C-32 iGmepnleermateionnta\"tion is identical to thCeR Cone used in . Shall\nTable5.10, \"CRC-32 Mapping\"\nis an illustration of -32 generation. The output bit ordering be as detailed\nin .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 87\nFigure 5.4 CRC-32 Generation\n31302928 27262524 23222120 19181716 15141312 1110 9 8 7 6 5 4 3 2 1 0\n7 6 5 4 3 2 1 0 1514131211109 8 2322212019181716 3130292827262524\n= Flip Flop\nTable5.10 CRC-32 Mapping\nCRC-32 Result Bit Position in CRC-32 Field\n0 31\n1 30\n2 29\n3 28\n4 27\n5 26\n6 25\n7 24\n8 23\n9 22\n10 21\n11 20\n12 19\n13 18\n14 17\n15 16\n16 15\n17 14\n18 13\n19 12\n20 11\n21 10\n22 9\n23 8\n24 7\n25 6\n26 5\n27 4\n28 3\n29 2\n30 1\nCRC Shall 31 0\nThe -32 be encoded before transmission.\nPage 88 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n2 etyB\nataD\n1 etyB\nataD\n0 etyB\nataD\n01234567\nBit\nOrder\nByte Order Input\n0 4 C 1 1 D B 7\n5.6.3 Packet Detection Errors\nCRC Shall\nMessageShall Discarded GoodCRCMessageShall Not\nerrors, or errors detected while decoding encoded symbols using the code table, be treated the same\nway; the be Pac kaentd a CC be returned. Shall\nPacket Discard GoodCRCMessage Section 5.8.6.1, \"Definition of Idle\"\nWhile the recBeMivCerI disl eprocessing a , if at any time the -line becomes Idle the receiver stop processing\nthe and it (no is returned). See for the\nd5e.f6in.it4ion of Ha.rd Reset\nHard ResetSignaling PHY Layer Hard\nResetSignaling RST-1K-code RST-2K-code Table5.11, \"Hard\nReset Ordere d Set\" is an ordered set of bytes sent with the purpose to be recognized by the . The\nordered set is defined as: three s followed by one (see\nTable5.11 Hard Reset Ordered Set\n).\nK-Code Number K-Code in Code\nTable\nRST-1\nRST-1\n1 RST-1\n2 RST-2\n3\nShall Hard Reset 4 Hard ResetSignaling Hard Reset\nSignaling Shall Section 6.8.3, \"Hard Reset\" ValidHard Reset\nATa dbelvei5c.e3 , \"Vali dpaetrifoonr mof aO rdered Sets \"when it receives Shall . ADftiescr arredceeidving the\n, the device reset as described in . If a is not detected (see\nCable PlugShall Hard Rese)t then the whole tHraanrsdm RiessseiotnS ignali nbge . Port Partner\nHard ResetSignaling Shall Section 6.8.3, \"Hard Reset\"\nA perform a when it detects being sent between the s.\nAfter receiving the Har d ResetSi, gtnhae ldinegviSchea ll reset as described in .\nThe\uf06c procedurPe HfoYr Lsaeynedring Me ssage be asM feosllsoawges:Shall EOPK-\ncode MessageDiscarded\nIf the is currently sending a , the be interrupted by sending an\n\uf06c CC and thIed rleest of the Idle . Section 5.8.6.1, \"Definition of Idle\"\n\uf06c If itsI nntoetr Fra,m weaGita fpor it to become (see ).\n\uf06c WCaCit Idle . Preamble K-code Hard ResetSignaling\n\uf06c If is still send the followed by the 4 s foPrH Y Layer . Protocol Layer\nPHY Layer\nDisable the channel (i.e., stop sending and receiving), reset the and inform the\n\uf06c that the has been reset. Protocol Layer\nFigure 5R.5e, -\"eLninaeb lfeo rtmhea tc hoaf nHnaerld w Rheseent \"requested by the Hard R.esetSignaling Preamble\nHard Reset\nshows the line format of which is a followed\nby the Ordered Set. Figure 5.5 Line format of Hard Reset\nPreamble(training for receiver) RST-1 RST-1 RST-1 RST-2\nLEGEND:\nPreamble provided by the Physical layer, Provided by the Physical\nnot encoded with 4b5b layer, encoded with 4b5b\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 89\n5.6.5 Cable Reset\nCable ResetSignaling PHY Layer Cable\nResetSignaling K-code RST-1 Sync-1 RST-1 Sync-3\nTable5.12, \" Cable Rese its Oanrd oerrdeedr Seedt \"set of bytes sent with the purpose to be recognized by the . The\nordered set is defined as the following sequence of s: , , , (see\nTable5.12 Cable Reset Ordered Set\n).\nK-Code Number K-Code in Code\nTable\nRST-1\nSync-1\n1 RST-1\n2 Sync-3\n3\nCable ResetSignalingShall 4DFP Cable Reset Cable Plug\nHard Reset Port Partner Cable Plug Cable ResetSignalingShall\nonly beC saebnlet bPylu tghe . The Ordered Set is used to reset the s\nwithout the need to the s. The state of the after the\nbFieg euqreu i5v.a6l, e\"nLtin teo fpoormwaetr ocfy Cclaibnlge tRhees et\" . Cable ResetSignaling Preamble\nCable Reset\nshows the line format of which is a followed\nby the Ordered Set. Figure 5.6 Line format of Cable Reset\nPreamble(training for receiver) RST-1 Sync-1 RST-1 Sync-3\nLEGEND:\nPreamble provided by the Physical layer, Provided by the Physical\nnot encoded with 4b5b layer, encoded with 4b5b\nPage 90 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.7", "title": "Collision Avoidance", "page": 91, "level": 2, "parent_id": "5", "full_path": "5.7 Collision Avoidance", "tags": [], "text": "5.7 Collision Avoidance\nPHY LayerShall CC Idle\nIdle Shall\nThSee ction 5.8.5 .4, \"Int mero-Fnritaomr et hGea cph\"annel for data tranIdslmeission and Sohnalyll initiate transmissions when is . If\nthe bus condition is present, it be considered safe Ptoa sctkaerttS ah tarallnsmDisissicoanr pdreodvided thPea ccoknetditiDonissc daertdaeilded\nin CC Idle PHY Layer aSrhe amllet. The bus Pr cootoncdoitl iLoany er be checkDeisdc iamrmdeeddiateMly epsrsiaogre to\ntraCnCsmission. IfI dtrleansmiSsesicotino nca 5n.8n.o6t. 1b, e\" Dineiftiinaitteiodn, tohfe Ind lteh\"e be IdleCC. If the is\nbecause is not , the signal to the that it has the as soon\nas becomes . SeeE xplicit Contract PHY LayerSha flolr the definitiRon of .\nSource Sink SourceShall R\nInSi andkdTixtiOoKn, during an Sink , thMea y AM ScontroSlo tuhrec e p S hreaslilstor valRue to avoid collisions\nbetween aSnindk TxN GtransmSishsaiollns. The Sink set an Sh p avlall Nueo tcorrespondiAnMg Sto a cuSrhraelnlt of 3A\n( Message) to indicate toA MthSe [ UthSaBt iTt ype-C i n2i.t4i]ateU SaBn Type.- TChe set an p value coRrresponding to a\ncurrIemnpt loicfi 1t .C5oAn (tract ) this iEnxdpilcicaitte C toon tthrea ct that it Power R oinleit Siawtea pan Fa asnt dR ole Sw oanply resRpond\nto s as part of an . SeUe SB Type-C ( ) for detCaoillsl iosifo tnh eA cvooridreasnpcoending p values. During\nthe that precedes an (including and ) the p\nrTeasbisleto5r.1 v3a, l\"uRe i sv aulsueeds utos esdp efocrif Cyo llision Avoid caunrcree\"nt and is notR used for Shall . Source\nSink AMS\np details the p values that be used by the to control\ninitiation of an . Table5.13 R values used for Collision Avoidance\nSource R Parameter Descriptpion Sink Operation Source Operation\nSinkShall Not\np Source AMS\nAMS tSinkDelay\nSinkTxNG Sink The SinkT ixnNitGiate tSinkT x can initiate an R\nan once has\n1.5A@5V Transmit \u201cNo Go,\u201d after setting p to\nelapsed after is\ntShoiusr vcaelue.\nasserted.\nSinkTxOK Sink Sink AMS AMS\ncannot initiate an\n3A@5V Transmit \u201cOk\u201d can initiate an . while it has this value\nset.\nSection 6.6.16, \"Collision Avoidance Timers\" Section 6.10, \"Collision Avoidance\"\nSee also and .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 91"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.8", "title": "Bi-phase Mark Coding (BMC) Signaling Scheme", "page": 92, "level": 2, "parent_id": "5", "full_path": "5.8 Bi-phase Mark Coding (BMC) Signaling Scheme", "tags": [], "text": "5.8 Bi-phase Mark Coding (BMC) Signaling Scheme\nBi-phase Mark Coding BMC PHY LayerSignaling Scheme Message\nCC Message\n( ) is the for carrying USB Power Delivery s. This\neBni-cpohdaisneg M asasrukm Coeds ian gdedicated DC connection, over the wir[IeE, Cw 6h0ic9h5 i8s -u1s]ed foBr MseCnding PD s.\nUI UI BMC\nis a version of Manchester coding (see ). In , there is a transition at the\nstart of every bit time ( ) and there is a second transition in the middle of the Pac wkehten a 1 is transmitted. is\neffectively DC balanced, (each 1 is DC balanced and two successive zeros are DC balanced, regardless of the number\noFfig inurteer 5v.e7n, \"inBgM 1C' sE)x. aItm hpalse \"bounded disBpi-aprhitays e(l Mimairtked C otod i1n gbit over an arbitrary , so a very low DPCr leeavmelb).l e\nSync-1K-code SOP Message\nillustrates . This example shows the transition from a to\nNthoet e: K-sc oofd ethe Ordered Set aPt rtehaem stbalert of aS ignaling. Hard Reset Cable Reset\nOther s can occur after the Figure 5. 7fo Br MC Exam psluech as and .\nPreamble Sync-1 Sync-1\n0 1 0 1 0 1 0 1 0 0 0 1 1 0 0 0 1 1\nData In\nBMC\n5.8.1 Encoding and signaling\nBMC Signaling CC Figure 5.8, \"BMC Transmitter Block Diagram\"\nFigure 5.9, \"BMC Receiver Block Diagram\"\nuses DC coupled baseband on . shows a block\ndiagram for a Transmitter and shows a block diagram for the\ncorresponding Receiver. Figure 5.8 BMC Transmitter Block Diagram\nData\n4b5b BMC\nto CC\nEncoder Encoder\nCRC\nPage 92 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 5.9 BMC Receiver Block Diagram\nData\nfrom CC BMC SOP 5b4b\nDecoder Detect Decoder\nCRC\nShall CC Shall vSwing\nCC Section 5.8.5, \"BMC Transmitter\nTSpheec UifiScBa tPioDn bs\"aseband signal be driven on the wire with a tristaUteS Bdr Tivyepre -tChat cause a sw[UiSnBg\nTony pe-.C T 2h.e4 ]tristate driver is slew rate limited (see min rise/fall time in\n) to limit coupling to D+/D- and to other signal lines in the fully featured cables (see\n). This sPlreewa mrabtlee limiting can be peSrhfoarllmed either with driver design or an RC filter on Sthhea ldlriver output.\nMay Preamble tStartDrive Figure 5.10, \"BMC\nWEnhceond esde nSdtainrtg othf Pe reamble\" , the transmitter start by transmitting a low level. The receiver tolerate the\nloss of the first edge. The transmitter vary the start of the by min (see\n). Figure 5.10 BMC Encoded Start of Preamble\n0 1 0 1 0 1 etc\nHigh Impedance\n(level set by R/R)\np d\n1UI 1UI 1UI 1UI 1UI 1UI\ntStartDrive\nShall Frame\nCC UI\nFTrhaem treansmitter Figu rtee r5m.1i1n,a \"tTer tahnes mfinitatli nbgit o orf R tehcee iving B MbyC aEnn ceoddgeed ( Fthraem \u201cter aTielirnmgi nedagteed\u201d )b tyo Z hereolp w einths uHrieg hth-taot- Lthoew\nrLeacset iTvrear ncsloitciokns \"the finFaigl ubrite. 5If. 1th2e, \" tTrraailninsmg eitdtigneg r oers uRletsc einiv itnhge BtrManCs Emnictotedre dd rFivrainmge Te lromwi n(ia.ete.,d t hbey fOinnael whaitlhf- Hi gohf -tthoe-\nLow La isst hTirgahn, ssieteio n\"\nand\n\uf06c Shall ), then the tCrCansmittert:HoldLowBMC\n\uf06c Shoul cdontinue tCoC drive low for . tHoldLowBMC Shall CC\ntEndDriveBMC\nrelease to high impedance as soon as possible after min and release\nFigure 5b.1y1 m, \"aTxr ansmitting or Re.ceiving BMC Encoded Frame Terminated by Zero with High-to-Low Last Transition\"\nBMC Frame Frame\nFigure 5.12, \"Transmitting or Receiving BMC Encoded Frame Terminated by One with\niHlliugsht-rtaot-eLso twh eL aesntd T orfa an sition e\"ncoded with an eBnMcoCded zero foFrr wamhiech the final bit of the is terminated\nby a high Ftor alomwe transition. tInterFrameGap\nillustrates tFhrea emned of a EPnorctoded with an encoded one for which the final\nbit of the Frame is terSmecintiaotne d5 .b8.y5 .a4 h, \"iIgnht etor- lForwam trea Gnasipt\"ion. Both figures also illustrate the timing\nrequirement before the start of the next when the has either been transmitting or receiving the\nprevious (see ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 93\nFigure 5.11 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with High-to-Low Last\nTransition\nfinal bit\ntrailing edge of pre-amable for\nof frame\nfinal bit next frame\n0\n0\nHigh Impedance\n(level set by Rp/Rd)\n1UI\nmin tHoldLowBMC\nmax tEndDriveBMC\ntInterFrameGap\nFigure 5.12 Transmitting or Receiving BMC Encoded Frame Terminated by One with High-to-Low Last\nTransition\nfinal bit\ntrailing edge of pre-amable for\nof frame\nfinal bit next frame\n0\n0\nHigh Impedance\n(level set by Rp/Rd)\n1UI\nmin tHoldLowBMC\nmax tEndDriveBMC\ntInterFrameGap\nCC UI Frame Figure\n5.13, \"Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition\"\nIFfi gthuer et r5a.1il4in, g\"T erdagnes mreisttuilntgs ionr tRheec etrivainnsgm BiMtteCr E dnrcivoidnegd Fra hmigeh T (ei.rem., itnhaet efidn ably h Oanlfe- wi tohf Lthoew to Hig his L laoswt ,T sreaen sition\"\nand\n),\nthen\uf06c theS thraanllsmitter: CC UI\n\uf06d conSthinaulel to driCveC high tfoHro 1ld Lo.wBMC\n\uf06c ShoTuhlden dCrCive low for . tHoldLowBMC Shall CC\ntEndDriveBMC\nrelease to high impedance as soon as possible after min and release\nFigure 5b.1y3 m, \"aTxr ansmitting or Re.ceiving BMC Encoded Frame Terminated by Zero with Low to High Last Transition\"\nBMC Frame Frame\nFigure 5.14, \"Transmitting or Receiving BMC Encoded Frame Terminated\niblylu Ostnrea wteist hth Leo wen tdoi nHgig ohf La ast Tr eanncsoitdioend\" that ends with an enBcMoCded zero foFrr wamhiech the final bit of the\nis terminated by a low to high traFnrsaimtioen.\ntInterFrameGap illustrates the ending of Far ame encoded Port that ends with an encoded\none for which the final bitF orfa tmhee Se icst itoenr m5.i8n.5a.t4e,d \" Ibnyt ear -loFwra mtoe h Gigahp \"transition. Both figures also illustrate the\ntiming requirement before the start of the next when the has either been transmitting\nor receiving the previous (see ).\nPage 94 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 5.13 Transmitting or Receiving BMC Encoded Frame Terminated by Zero with Low to High Last\nTransition\no fi f n f a r 0 a l m bit e trail f i i n n g a l e b d i g t e of pr n e e -a x m t 0 f a r b a l m e e for\nHigh Impedance\n(level set by Rp/Rd)\n1UI 1UI\nmin tHoldLowBMC\nmax tEndDriveBMC\ntInterFrameGap\nFigure 5.14 Transmitting or Receiving BMC Encoded Frame Terminated by One with Low to High Last\nTransition\no fi f n f a r 1 a l m bit e trail f i i n n g a l e b d i g t e of pr n e e -a x m t 0 f a r b a l m e e for\nHigh Impedance\n(level set by Rp/Rd)\n1UI 1UI\nmin tHoldLowBMC\nmax tEndDriveBMC\ntInterFrameGap\nNote: Packet\nThere is no requirement to maintain a timing phase relationship between back-to-back s.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 95\n5.8.2 Transmit and Receive Masks\n5.8.2.1 Transmit Masks\nShall Not Figure 5.15, \"BMC Tx 'ONE' Mask\" Figure 5.16, \"BMC\nTx 'ZERO' Mask\" Table5.14, \"BMC Tx Mask Definition, X Values\" Table5.15, \"BMC Tx Mask Definition, Y Values\"\nThe transmitted signal violate the masks defined in Secti,o n 5.8.3,\n\"Transmitter Loa, d Model\" RandR [USB Type-C 2.4]\nat the output of a load equivalent to the cable model and receiver load model described in\nNote: . The masks apply to the full range of p/ d values as defined in .\nThe measurement of the transmitter does not need to accommodate a change in signal offset due to the\nground offsetS whahleln current is flowing in the cablet.Rise Shall\ntFall\nThe transmitted signal have a rise time no faster than . The transmitted signal have a fall time no\nfaster than . The maximum limits onF itghuer reis 5e. 1an5d B fMalCl t Timx e'Os NarEe' eMnafosrkced by the Tx inner masks.\n1UI\nY9\nY8\nY7\nY6\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 X5 X6 X7X8 X9 X10 X11 X12 X13X14\n0.5UI\nPage 96 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 5.16 BMC Tx 'ZERO' Mask\n1UI\nY9\nY8\nY7\nY6\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 X5 X6 X7X8 X9 X10 X11 X12 X13X14\n0.5UI\nTable5.14 BMC Tx Mask Definition, X Values\nName Description Value Units\nX1Tx UI\nX2Tx Left Edge of Mask 0.015 UI\nX3Tx see figure 0.07 UI\nX4Tx see figure 0.15 UI\nX5Tx see figure 0.25 UI\nX6Tx see figure 0.35 UI\nX7Tx see figure 0.43 UI\nX8Tx see figure 0.485 UI\nX9Tx see figure 0.515 UI\nX10Tx see figure 0.57 UI\nX11Tx see figure 0.65 UI\nX12Tx see figure 0.75 UI\nX13Tx see figure 0.85 UI\nX14Tx see figure 0.93 UI\nRight Edge of Mask 0.985\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 97\nTable5.15 BMC Tx Mask Definition, Y Values\nName Description Value Units\nY1Tx\nLower bound of Out-\n-0.075 V\nY2Tx er mask\nLower bound of in-\n0.075 V\nY3Tx ner mask\nY4Tx see figure 0.15 V\nY5Tx see figure 0.325 V\nInner mask vertical\n0.5625 V\nY6Tx midpoint\nY7Tx see figure 0.8 V\nY8Tx see figure 0.975 V\nY9Tx see figure 1.04 V\nUpper Bound of Out-\n1.2 V\n5.8.2.2 Receive Maskser mask\nSource BMCSignaling SchemeShall\nFigure 5.17, \"BMC Rx 'ONE' Mask when Sourcing Power\" Figure 5.18, \"BMC Rx 'ZERO'\nAM ask whe uns Sinogu rtchien g Pow er\" Table5.1 6, \"BM bCe R cxa Mpaabskle D oeff irneicteioivni\"ng a siSgonuarlc tehat complies with the mask when\nsourcing power as defined in vNoiseActive So,u rce\nand . The Rx mask is bounded by sweeping\na TCxo nmsuasmke crompliant sBigMnCalS, wigintahl iandgd Secdh emeShall between power neutral and offsets.\nFigure 5.21, \"BMC Rx 'ONE' Mask when Sinking Power\" Figure 5.22, \"BMC Rx\nA'Z ERO' Mask uwshinegn tShinek ing P ower\" Table5 .16, \" BbMe Cca Rpxa bMlae sokf Dreecfieniivtiinong \"a signCalo tnhsautm ceormplies with the mask\nwhen sinking power as defined in vNoiseActive , Consumer\nand . The Rx mask is bounded by\nsweeping a Tx mask comBpMliaCnSt isginganlainl,g w Sicthh eamdedeSdh all between power neutral and offsets.\nFigure 5.19, \"BMC Rx 'ONE' Mask when Power neutral\" Figure 5.20, \"BMC Rx\nE'ZvEeRrOy 'p Mroadsku cwt huesnin Pgo twheer neut ral\" Table5.1 6, \"BM bCe R cxa pMaabslke Dofe frienciteiiovnin\"g a signal that complies with the mask\nwhen power neutral as defined in , F\nDual-Role Power Device Shall and Source.\nBMCSignaling Scheme Sink\nBMCSignaling Scheme s meet the receiver requirements for a when providing power during any\ntransmission using the or a when consuming power during any transmission using the\nCable Plug Shall . Source Sink\nBMCSignaling Scheme\ns meet the receiver requirements for both a and a during any transmission using the\n.\nThe parameters used in the masks are specified to be appropriate to either edge triggered or oversampling\nreceiver implementations. BMC\nThe masks are defined for 'ONE' and 'ZERO' separately as enforces a transition at the midpoint of the unit\ninterval while a 'ONE' is transmitted.\ntRxFilter\nThe Rx masks are defined to bound the Rx noise after the Rx bandwidth limiting filter with the time constant\nhas been applied. Y1Rx Y5Rx vSwing\nvNoiseActive vIRDropGNDC\nThe boundaries of Rx outer mask, and , are specified according to max and accommodate half\nof from cable noise coupling and the signal offset due to the ground offset when\ncurrent is flowing in the cable. Y4Rx Y2Rx\nY7Tx Y3Tx X3Tx vNoiseActive\nThe vertical dimension of the Rx inner mask, - , for power neutral is derived bvyN roeidseuAcicntgiv tehe vertical\ndimension of the Tx inner mask, - , at time location by to account for cable noise\ncoupling. The received signal is composed of a waveform compliant to the Tx mask plus .\nvNoiseActive vIRDropGNDC\nThe vertical dimension of the Rx inner mask for sourcing power is derived by reducing the vertical dimension of\nthe Tx inner mask by and to account for both cable noise coupling and signal DC offset.\nPage 98 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nvNoiseActive\nvIRDropGNDC vIRDropGNDC\nThe received signal is composed of a waveform compliant to the Tx mask plus the maximum value of\nplus where the value transitions between the minimum and the maximum values as\nallowed in this spec.\nvNoiseActive vIRDropGNDC\nThe vertical dimension of the Rx inner mask for sinking power is derived by reducing the vertical dimension of the\nTvNx oinisneeArc mtiavsek by vIRDropGND mCax and vIRDropGN mDCax for account for both cable noise coupling and signal\nDC offset. The received signal is composed of a waveform compliant to the Tx mask plus the maximum value of\nplus where the value transitions between the minimum and the\nmaximum values as allowed in this spYe3cR. x vSwing\nvIRDropGNDC vIRDropGNDC\nThe center line of the Rx inner mask, , is at half of the nominal for power neutral, and is shifted up by\nhalf of maSxh faolrl sourcing power and is shifted down by half of max for sinking power.\nvNoiseIdle Shall BMC Idle\nThe receiver sensitivity be set such that the receiver does not treat noise on an undriven signal path as an\nincoming signal. Signal amplFitiugduerse b5e.1lo7w B MC Rx 'ON Em' aMx ask w hbee ntr Seoatuerdc iansg n Pooiswe ewrhen is .\n1UI\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 0.5UI X5 X6 X7 X8\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 99\nFigure 5.18 BMC Rx 'ZERO' Mask when Sourcing Power\n1UI\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 0.5UI X5 X6 X7 X8\nFigure 5.19 BMC Rx 'ONE' Mask when Power neutral\n1UI\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 0.5UI X5 X6 X7 X8\nPage 100 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 5.20 BMC Rx 'ZERO' Mask when Power neutral\n1UI\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 0.5UI X5 X6 X7 X8\nFigure 5.21 BMC Rx 'ONE' Mask when Sinking Power\n1UI\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 0.5UI X5 X6 X7 X8\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 101\nFigure 5.22 BMC Rx 'ZERO' Mask when Sinking Power\n1UI\nY5\nY4\nY3\nY2\nY1\nX1 X2 X3 X4 0.5UI X5 X6 X7 X8\nTable5.16 BMC Rx Mask Definition\nName Description Value Units\nX1Rx UI\nX2Rx Left Edge of Mask 0.07 UI\nX3Rx Top Edge of Mask 0.15 UI\nX4Rx See figure 0.35 UI\nX5Rx See figure 0.43 UI\nX6Rx See figure 0.57 UI\nX7Rx See figure 0.65 UI\nX8Rx See figure 0.85 UI\nY1Rx See figure 0.93\nY2Rx Lower bound of Outer Mask Y3Rx -0.3325 V\nY3Rx 1 1\n\u2013 0.205 when sourcing power or sinking power .\nLower Bound of Inner Mask V\n1\nY3Rx \u2013 0.33 when power neutral .\n1\n0.6875 Sourcing Power .\n1\nCenter line of Inner Mask 0.5625 Power Neutral . V\n1\nY4Rx Y3Rx 0.4375 Sinking Power .\nY3Rx 1 1\n+ 0.205 when sourcing power or sinking power .\nUpper bound of Inner mask V\n1\nY5Rx + 0.33 when power neutral .\nUpper bound of the Outer mask 1.5325 V\n1) The position of the center line of the Inner Mask is dependent on whether the receiver is Sourcing or Sinking power\nor is Power Neutral (see earlier in this section).\nPage 102 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n5.8.3 Transmitter Load Model\nShall Figure 5.23, \"Transmitter Load Model for\nBMC Tx from a Source\" Source Figure 5.24, \"Transmitter Load Model for BMC Tx from a Sink\" Sink\nThe transmitter load model be equivalent to the circuit outlined in [USB Type-C 2.4]\nR R for a and for a . It\nis formed by the concatenation of a cable load model and a receiver load model. See for details of\ntNhoet e:p and d resistors. [USB Type-C 2.4]\nThe parameteFrisg zuCraeb 5le.2_C3C T, rtCaanbslmeDitetleary _LCoCa dan Md ocdCeabl lfeoPrl BugM_CCC T axr efr doemfi nae Sdo iunr ce .\nFigure 5.24 Transmitter Load Model for BMC Tx from a Sink\nInformative\nSection 5.8.5, \"BMC Transmitter Specifications\"\nThe transmitter system components rOutput and cShunt are illustrated for purposes, and do not form\npart of the transmitter load model. See for a description of the\ntransmitter system design. Shall\nThe value of the modeled cable inductaLnac=e t,C Laab, l(eiDn enlHay)_ CC b* ez Ccaalbcluel_aCtCed from the following formula:\nmax min\ntCableDelay_CC is the modeled signal propagation delay through the cable, and zCable_CC is the modeled cable\nimpedance.\nThe modeled cable inductance is 640nH for a cable withS hzCaallble_CCmin = 32\u2126 and tCableDelay_CCmax = 20ns.\nThe value of the modeled cable capacitCaan=cteC, aCbal, e(Dine lpaFy)_ CC /bzeC caabllceu_lCaCted f rom the following formula:\nmax min\nThe modeled cable capacitance is Ca = 625pF for a cable with zCable_CCmin = 32\u2126 and tCableDelay_CCmax = 20ns.\nTherefore, Ca/2 = 312.5pF. cReceiver\nShall\ncCablePlug_CC models the capacitance of the plug at each end of the cable. models the capacitance of the\nreceiver. The maximum values be used in each case.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 103\ncCablePlug_CC\nTransmitter Load\nModel Output\nCable Model Receiver\nLoad Model\nConnector L a\nc cShunt a cReceiver\n2\nCC_gulPelbaCc\nR\np\nrOutput\nc a R d\n2\ncCablePlug_CC\nTransmitter Load\nModel Output\nCable Model Receiver\nLoad Model\nConnector L a\nc cShunt a cReceiver\n2\nCC_gulPelbaCc\nR\np\nrOutput\nR d c a\n2\nNote:\nThe transmitter load model assumes that there are no other return currents on the ground path.\nPage 104 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n5.8.4 BMC Common specifications\nT5h.8is .s4ec.t1ion defines t hBeM coCm mCoonm recmeivoenr a Pnda trraanmsmeittteerr rsequirements.\nTable5.17, \"BMC Common Normative Requirements\"Shall\nThe electrical requirements specified in apply to both\nTable5.17 BMC Common Normative Requirements\nthe transmitter and receiver.\nName Description Min Nom Max Units Comment\nfBitRate\ntUnitInterval Bit rate 270 300 330 Kbps fBitRate\n1\nUnit Interval 3.03 3.70 \u00b5s 1/\nBMC UI\n1) Denotes the time to transmit an unencoded data bit, not the shortest high or low times on the wire after encoding\nwith . A single data bit cell has duration of 1 , but a data bit cell with value 1 will contain a centrally placed\n01 or 10 transition in addition to the transition at the start of the cell.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 105\n5.8.5 BMC Transmitter Specifications\nShall Table5.18, \"BMC Transmitter Normative Requirements\"\nTable5.18 BMC Transmitter Normative Requirements\nThe transmitter meet the specifications defined in .\nName Description Min Nom Max Units Comment\npBitRate\nMaximum difference between the The reference bit rate is the\nPacket Preamble Preamble\nbit-rate during the part of the average bit rate of the last 32 bits\n0.25 %\nfollowing the of the .\nrFRSwapTx a F n a d st t R h o e l e r e S f w er a e p n R ce e q b u it e - s r t ate.\nFast Role Swap Request\ntransmit Maximum driver resistance of a\ndriver resistance (excluding cable\nresistance) transmitter. Assumes a worst case\n[USB Type-C 2.4]\ncable resistance of 15\u03a9 as defined\nNote:\nin .\n5 \u2126\nBased on this value the\nmaxFimasut mRo cleo mSwbainpe Rde quest\ndriver and cable resistance\nof a\ntEndDriveBMC transmitter is 20\u03a9.\ntHoldLowBMC\nTime to cease driving the line Min value is limited by\nFrame\nafter the end of the last bit of the 23 \u00b5s .\ntFall .\nFall Time 10% and 90% amplitude points,\n300 ns minimum is under an unloaded\ntHoldLowBMC condition.\ntEndDriveBMC\nTime to cease driving the line Max value is limited by\nafter the final high-to-low 1 \u00b5s .\ntInterFrameGap transition.\nFrame\nTime from the end of last bit of a\nPreamble\nuntil the start of the first 25 \u00b5s\ntFRSwapTx bFaits ot fR tohlee nSwexatp Request. Fast Role Swap Request\nInitial Source\ntransmit is\nInitial Sink CC\nduration indicated from the\n60 120 \u00b5s\nto the by driving\ntRise low for this time.\nRise time 10% and 90% amplitude points,\n300 ns minimum is under an unloaded\ntStartDrive condition.\nPreamble\nTime before the start of the first\nShall\nbit of the when the\n-1 1 \u00b5s\ntransmitter start driving\nvSwing the line.\nVoltage Swing Applies to both no load condition\nSection 5.8.3,\nand under the load condition\n1.05 1.125 1.2 V \"Transmitter Load Model\"\nspecified in\nzDriver Source .\n[USB 2.0]\nTransmitter output impedance output impedance at the\nNyquist frequency of\n33 75 \u2126 Source CC\nlow speed (750 kHz) while the\nis driving the line.\nPage 106 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n5.8.5.1 Capacitance when not transmitting\ncReceiver DFP UFPShall CC DFP UFP\nMay cReceiver CC\nShall is the capacitance that a or present on the line when the or Sh'asl rleceiver is not\ntransmitting on the line. cTRheec teriavnesrmitter C Chave more captIanctitearnFcrea tmhaenG ap while driving the line, but\nmeet the waveform mask requirements. Once transmission is complete, the transmitter disengage\nc5a.p8ac.5ita.2nce in exces s Sofo urce O ufrotmp uthte Im wpireed waitnhicn e .\nSource zDriver Source\nzDriver\noutput impedance is determined by the driver resistance and the shunt capacitance of the\nand is hence a frequency dependent term. impacts the noise ingression in the cable. It is specified such that\ntzhDer nivoeirse at the Receiver is bounded.\nis defined by the following eqzuDartiivoenr:=rOutput/(1+s*rOutput*cShunt)\nFigure 5.25 Transmitter diagram illustrating zDriver\nrOutput\nzDriver\ncShunt\nShall cReceiver\nc5S.h8u.n5t .3 Not cau sBe ait v iRolaattioen Dofr ift when not transmitting.\nfBitRate\nfLBimitRitas toen the drift in are set to help low-complexity receiver implementations. Packet\nfBitRate PacketShall pBitRate\nfBitRate is the reciprocal of the averPargeea bmitb dleurfaBtiitoRna ftreom the previous 3P2a bckitest at a given portiEoOnP ofS thhae ll . The\ncphBaintRgae tien durinpgB iat Rate be less than . The reference bit rate (refBitRate) is the average\nover the last 32 bits of the . throughout the , including the , be within\nof refBitRate. pBi tiRs aextep r=e |s sfBedit Rasa ate p -e rrecfeBnittRagaete: | / refBitRate x 100%\nShall pBitRate Packet BIST Carrier Mode\nPayload pBitRate SOP\nThe transmitter have the same May for all types. The Packet and Bit StrPeraemam sbiglenals\nare continuous signals without a . When checking Preamb aleny set of 1044 bits (20 bit followed by\n1024 PRBS bits) within a continuous signal be considered as the part of the following the and\nthe 32 preceding bits considered to be the last 32 bits of the used to compute refBitRate.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 107\n5.8.5.4 Inter-Frame Gap\nFigure 5.26, \"Inter-Frame Gap Timings\" Frame\nFi gilulurset 5ra.2te6s Itnhtee irn-tFerra-me Ga pga Tpi mtiminingsgs.\nEnd of Frame Bus driven after end Bus driven before Preamble\nof Frame Preamble\ntInterFrameGap\ntEndDriveBMC tStartDrive\nShall tEndDriveBMC Frame\nThe transmitter drive the bus fForra nmoe lonPgreear mthbalne after transmFriattminegS thhae lflinal bit of the .\ntInterFrameGap\nBefore starting to transmit the next 's the transmitter of the next ensure that it waits\nfor \uf06c after either: Frame Message AMS\nGoodCRCMessage\nTransmitting the previous , for example sending the next in an immediately after\n\uf06c having sent a Frame , or Message GoodCRC\nMessage\nReceiving the previous , for example when responding to a received with a\n\uf06c , or Idle CC Section 5.7, \"Collision Avoidance\" Port\nAMS Idle Section 5.8.6.1, \"Definition of Idle\" tInterFrameGap\nObserving an conditFiroanm oen (see Section 5.7, \"Collision Avoidance\"). In this case the isA wMaSiting\nto initiate an observes (see ) and then waits\nbefore transmitting the . See also for details on when an can\nNote: be initiated. Idle\nFrame Section 5.8.6.1, \"Definition of Idle\"\nThe transmitter is also required to verify a bus condition immediately prior to starting transmission\nof the next F (rsaeme eMay Pream)b.le tStartDrive Section 5.8.1, \"Encoding\nand signaling\"\nThe transmitter of the next vary the start of the by (see\nSectio)n. 5.8.1, \"Encoding and signaling\"\nIdle Frame\nSee also for figures detailing the timings relating to transmitting, receiving,\n5an.d8 o.5bs.e5rving in Srehlaotinrgt iton g of sT.ransmitter Output\nPort Cable PlugShall tFRSwapTx\nFast Role Swap\nA TraSnescmtioitnt e5r.8 in.5 .a6 , \"Fa sot rR ole Swap T ransm tiossleiornat\"e having its output be shorted to ground for max.\nThis is due to the potential for to be signaled while the Transmitter is in the process of transmitting\n(see ).\nPage 108 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n5.8.5.6 Fast Role Swap Transmission\nFast Role Swap PDUSB Hub\nPort USB Device USB Host\nThe process is intendedF faosrt uRsoel eb Syw aa p tVh B a U t S presently has an external supply and is USB\nHproosvtiding powveSra fbeo5tVh through its dVo B w U n S stream s tvoS afe5V s and upstream toF aas t Role Sw aspucShig ansa ali nlagptop.\nOFans rt eRmoloev Sawl oafp tAhMe eSxternal wall supply Sou ernceabSleinsk aP owe rs uRpoplely to be maintained bRy aRllowing the\nSecti oton a8p.3p.2ly.8 , \"Fast R owleh Sewn aitp s\"ees droop below after having detected . The\nis then used to correctly assign / s and configure the p/ d resistors (see\nInitial SourceShall )F.ast Role Swap Request CC\nrFRSwapTx tFRSwapTx Initial SourceShall Fast Role Swap Request Explicit\nTCohnet ract Initi al Sou rscigenMaal ay Fast Role Swap Re bqyu desrtiving to ground with a resSiisntka nCcaep aobf illeitsise sthan\nInitia lf Soirn k . The Fast R ole S wonalpy R seeqnude ast Message Swhhaelnl it hDaiss caanr ded\nSection 6.. 1T2h.e2 .2.1, \"Common Pro tsoecnodl Laa yer Message Transmiss eiovne nS tiaf tite hDaisa gnroat mye\"t had its queried\nby the . On transmission of the any pending s be (see\nFast Role SwapSignalingMay ).\nThe Initial Sink oveFrarisdt eR aonley S awcatipve transmissions. FR_SwapMessage Initial SourceShall\nR SinkTxOK Fast Role SwapSignaling\nSince the 's response to the signal is to send an , the\nensure p is set to once the is complete.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 109\n5.8.6 BMC Receiver Specifications\nShall Table5.19, \"BMC Receiver Normative Requirements\"\nTable5.19 BMC Receiver Normative Requirements\nThe receiver meet the specifications defined in .\nName Description Min Nom Max Units Comment\ncReceiver DFP UFP Shall\nCC\nThe or system have ca-\nreceiver capacitance 200 600 pF pacitance within this range when not\nnBER transmitting on the line.\n-6\nnTransitionCount Bit error rate, S/N = 25 dB 10\nIdle\nNumber of transitions to be detected to\ntFRSwapRx T Fa ra st n R si o ti le o n S s w f a o p r R si e g q n u a e l s d t etect 3 de F c a la s r t e R b o u le s S n w o a n p - Req . uest\nA results in the\nde-\n30 50 \u00b5s receiver detecting a signal low for at\ntection time\ntRxFilter least this amount of time.\nRx bandwidth limiting filter Time constant of a single pole filter to\n100 ns\ntTransitionWindow (digital or analog) limit broad-band noise ingression1.\nIdle\nTime window for detecting\nvFRSwapCableTx Fnaosnt- Role Swap Request 12 20 \u00b5s Fast Role Swap Request\nThe must be be-\nvolt-\n490 520 550 mV low this voltage threshold to be detect-\nvIRDropGNDC age detection tIhRr Desrhopold ed. [USB Type-C 2.4]\nvNoiseActive Cable Ground 250 mV As specified in VBUS [U . SB\nBMC 2.0]\nPeak-to-peak noise from ,\nNoise amplitude when\n165 mV\natnRdx SFBilUte lrines after the Rx band-\nis active. width limiting filter with the time con-\nvNoiseIdle stant has been a V p B p U l S ie [ d U . SB\nBMC 2.0]\nIdle Peak-to-peak noise from ,\nNoise amplitude when\n300 mV\natnRdx SFBilUte lrines after the Rx band-\nis . width limiting filter with the time con-\nzBmcRx stant has been applied.\nReceiver Input Impedance 1 M\u03a9\n51.8) .6.1Broad-band n oDisee infignreisstiioon nis douef tIod coluepling in the cable interconnect.\nBMCCollision Avoidance\nnTransitionCount tTransitionWindow\ntTra nsitionWindow is performed byn tThera dnesteitcitoinonC oouf nsitgnal transitions at thSeh raeclleiver. DetectioIdnl eis active when\ntransitions occur at the receiver within a time window of . After waiting\nSection 5.8.5 .w4, i\"tIhnotuert -dFertaemctei nGga p\" transitions the buMs ay be declared .\nRefer to for details of when transmissions start.\nPage 110 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n5.8.6.2 Multi-Drop\nBMCSignaling Scheme Multi-Drop BMCMulti-Drop\nCC Multi-Drop\nThe is suiMtaublltei- fDorro upse in configurations coCnabtalein Pinlugg one or two\ntransceivers connected to the wire, where one or both ends of a cable contains a transceiver. In this\nFspigeucrifei c5a.2ti7o,n \" Ethxea mlopclaet iMonul otif- Dthreo p Configura ttiroann sshceoiwveinrg i st wreof eDrRrePds\" to as the . Multi-Drop\nDRP\nbelow illustrates a typical\nconfiguration with twFoi gures .5.27 Example Multi-Drop Configuration showing two DRPs\nSwitch Switch\nDRP VCONN VCONN DRP\nCable\nConnector Connector\ncReceiver cReceiver\ncCablePlug cCablePlug\nMulti-Drop Shall\nMulti-Drop\nThe transceive[rU SB Ty opbee-Cy a2l.l4 t]he electrical characteristics specified in this sectionM euxlctei-pDtr foopr those\nrelating to capacitance. The maximum capMaucilttai-nDcreo apllowed for the May node when not driving the line is\ncCablePlug_CC defined inM ulti-Drop . There are no constraints as to the distance of the\nUtrSaBn sHcoesivter fUroSmB Dtheevi ecend of the plug. The transceiver(s) be located anywhere along the cable\nincluding the plugs. The transceiver suffers less from ground offset compared to the transceivers in the\nor and contributesA nttoa scihgnificant reflPeocrttions. VCONN Source Port\nVCONN Source Port DFP Attached\nIt is pUoFsPsible to have a configuration at Figure w 5.h2e8r, e\" Eoxnaem ple Mcaunl tbi-eD ar op Configurati aonnd s hthoew ointgh ear DFP a ins dn oUtF aPb\"le\nto be a , suCcCh that thereP oisr tno switch in the sVe C c O o N n N d S ourc. eASnh eaxlalmple of a wcRitehc eai svweritch\nto a without a switch is outlined in .\nThe capacitance on the line for a not able to be a still be within except when\ntransmitting. Figure 5.28 Example Multi-Drop Configuration showing a DFP and UFP\nSwitch\nDFP VCONN UFP\nCable\nConnector Connector\ncReceiver cReceiver\ncCablePlug cCablePlug\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 111\n5.8.6.3 Fast Role Swap Detection\nInitial Sink Fast Role Swap Fast Role Swap Request\nvSafe5V Section 7.1.13, \"Fast Role\nASwn ap\" Ini tpiarel pSianrkesS hfoarl la by eFnasustr iRnogl et hSawt aopn Rcee qitu heasts detected the its\npower supply is ready to respond by applying according to the timing detailed in\n. The only respond to the when all the following conditions have\nbee\uf06cn met: Explicit Contract Sink Capabilities Initial Source\nInitial Sink\nAn has been established and the of the have been\n\uf06c receiSviendk _bCya, paandb ialitt tiehse Mreeqsusaegste of, the . Initial Source Fast Role Swap\nFixed SupplyPDO\nThe received from the has at least one of the\n\uf06c bits sIneitt iina li Stsin 5kV . Initial Source Fast Role\nSwap Sink_CapabilitiesMessage\nThe is able and willing to source the current requested by the in the\nbits ofF iatsst Role Swap Reques t . Message Shall Discarded Section 6.12.2.2.1,\n\"Common Protocol Layer Message Transmission State Diagram\"\nOn detection of the any pending s be (see\nInitial Sink Fast Role Swap ). CC tFRSwapRx\n[USB Type-C 2.4] SourceR vNoiseIdle\nWhenM thaey CisC prepared for a vNo ainsedI dthlee bus is idle the voltage averageIdn oitviaelr Sink\nmin remains abFoavste R0o.7leV S (wseaep ) since the Initi al p S ios uerictheer 1.5A or 3.0FAas. tH Roowlee Svwera, p Request\nnoise cause the line voltage to reach 0.7V- CC /2 for short duravtiFoRnSsw. WaphCeanb tlheeT x is\nprepared fIonrit aia l Sink while it iFs atrsat nRsomlei tStwinagp andS thhael l Not iFsa ssetn Rdoinleg S aw ap Request C,C the\ntransmission will be attteFnRuSawteadp sRuxch that the peak voltage wilIln niotita el xScineked Fa smt Rino. lTe hSewraepfore,\nwShhaelnl the CC is prepared for avF RSwapCableT,x it tFR dSewteacpt Rax Fast Role Swap Re qwuhesetn the\nvoltage, averaged over min, is above 0.7V. When the is prepared for a , it\nNote: detect a Ini tvioallt Saignek lower than mCCin for as a .\nInitialT Shinek Shall is not reFqausti rReodl et oS wavaeprAagMeS the vtoFltRaSgwe atop Imneitet these requiremFeanstts R.ole Swap\nR R Port Section\nT6.h3e.1 9, \"FR_Swa p Mes siangiteia\"te the within of detecting the Request\nin order to assign the p/ d resistors to the correct s and to re-synchronize the state machines (see\nInitial SinkShall ). New Source Shall vSafe5V USB Type-C [USB\nType-C 2.4] tSrcFRSwap VBUS vSafe5V Initial SinkShall VBUS\nThe become the anFda st Rol es tSawrta spupplying at current (see\n) no later than after has dropped below . An disable its\nDNiostceo:nnect Threshold detection circuitry wVhCilOeN N Source dCeatbelect Piolung is active.\nWhile power is transitioning the to the (s) cannot be guaranteed.\nPage 112 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "5.9", "title": "Built in Self-Test (BIST)", "page": 113, "level": 2, "parent_id": "5", "full_path": "5.9 Built in Self-Test (BIST)", "tags": [], "text": "5.9 Built in Self-Test (BIST)\nBIST Shall\nT5h.e9 f.o1llowing sec tBionIsS dTef iCnea rri efurnc Mtionoadlitey which be supported.\nBIST Carrier Mode PHY LayerShall BMC\nIn , the send out a encoded continuous string of alternating \"1\"s and \"0\"s.\nTNhoitse e:nables the measurement of power supply noise and frequency drift.S hall Not Packet\nSeTchtiios ntr 6a.n4s.3m, \"isBsIiSoTn M ise ass paugree\"ly a sequence of alternating bits and be formatted as a .\nS5e.e9 a.ls2o BIST Test Da. ta Mode\nBIST Test DataMessage Tester Tester Test Pattern UUT\nUUT Section 6.4.3, \"BIST Message\"\nA is used by the to send various generated s to the in order\nFtoig tuerset t5h.2e9 , \"Te'sst r Fercaemivee\"r. See also Test Frame Shall . Tester UUT BISTMessage\nBIST Test DataBIST Data Object Preamble SOP* Message Header\nDa stah oOwbsje tchte BwIhSTic hT est Da btea sBeInStT b Dya tthae O bject to the . ThDea ta Ob ject ,\nwith a CR Cconsists of a EOP , followed by , followed by the\nwith a data length of 7 s, followed a , followed by 6 s\ncontaining test data, followed by the andF itghuenre a 5n .29 T.est Frame\nSOP* (Start Header BIST Test Data ...\nPreamble(training for receiver) Of Packet) Data Objects = 7 BDO Test Data 192 bits\n... EOP (End Of\nCRC\nPacket)\nLEGEND:\nPreamble, not encoded Provided by the Physical Provided by the Protocol\nwith 4b5b layer, encoded with 4b5b layer, encoded with 4b5b\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 113"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.1", "title": "Overview", "page": 114, "level": 2, "parent_id": "6", "full_path": "6.1 Overview", "tags": [], "text": "6 Protocol Layer\n6.1 Overview\nProtocol Layer\nThis\uf06c chapter describes Mthees sraegqeuirements of the USB Power Delivery Specification's including:\n\uf06c Details of how s are constructed and used.\n\uf06c Use of tMimesesrasg aend timeout values.\n\uf06c Use of and retry counters.\n\uf06c Reset operation.\n\uf06c EStrartoer handling.\nSecti obne h2a.6v, i\"oArr.chitectural Overview\"\nRefer to for an overview of the theory of operation of USB Power Delivery.\nPage 114 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.2", "title": "Messages", "page": 115, "level": 2, "parent_id": "6", "full_path": "6.2 Messages", "tags": [], "text": "6.2 Messages\nMessage\nThis\uf06c speCcoifnictarotilo Mn edsesafignees three types of s: Message Port Partner\nMessage Control Message\ns that are short and used to manage the flow between s or to\n\uf06c eDxacthaa Mngeess age s that require no additional data. s areP 1or6t bPiatsr tinne lrengDtaht.a Message\ns that are used to exchange information between a pair of s. s\n\uf06drange from 48 to 240 bDiatsta in M leesnsgatghe.\n\uf06eSome examples of Capabisli tairees: Negotiate\n\uf06e Those used to expoBseIS T and power.\n\uf06e Those used for Vthene dor D.efined Message\n\uf06c ExtendTedh oMsees tshaagte are s. Port Partner Extended\nMessage MaxExtendedMsgLen\ns that are used to exchange information between a pair of s.\n\uf06d s are up to Extended Message bytes.\n\uf06eSome examples of Source Batterys are:\n\uf06e Those used for and information.\n\uf06e Those used for Security.\n\uf06e Those used for VFeirnmdowr aDreef iUnpedda Etxet.ended Message\n6.2.1 Th o Mse ethsats aareg e Construction s.\nMessage Shall Message Header Message\nProtocol Layer PHY Layer PHY Layer\nAll s Proto bceo cl oLmaypeorsed of a and a variable length (including zero) data portion. A\neither originates in the and is passed to the , or it is received by the and is\npFiagsusreed 6 t.o1 ,t h\"Ue SB Power Delive.ry Packet Format for a Control Message\" Control Message\nPacket Protocol Layer PHY Layer\nillustrates a as part of a\nshowing the pFaigrtusr aer 6e .p1r UovSiBd ePdo bwye trh De elivery Packet a Fnodr mat for a .Control Message\nSOP* (Start Message Header EOP (End Of\nPreamble CRC\nOf Packet) (16 bit) Packet)\nLegend:\nPHY Layer Protocol Layer\nFigure 6.2, \"USB Power Delivery Packet Format including Data Message Payload\" Data Message\nPacket Protocol Layer PHY Layer\nillustrates a as part\nof a showing the parts are provided by the and .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 115\nFigure 6.2 USB Power Delivery Packet Format including Data Message Payload\nSOP* (Start Message Header EOP (End Of\nPreamble 0..7 Data Object(s) CRC\nOf Packet) (16 bit) Packet)\nLegend:\nPHY Layer Protocol Layer\nFigure 6.3, \"USB Power Delivery Packet Format including an Extended Message Header and Payload\"\nExtended Message Packet Protocol Layer PHY Layer\nillustrates an\nFigure 6.3 US Bas P poawrte orf D ae livery sPhaocwkientg F tohrem paatr tisn acrlue dpirnogv iadne dE xbtye tnhdee d Message He aandde r and Payl.oad\nSOP* (Start Message Header Extended Message Header EOP (End Of\nPreamble Data (0..260 bytes) CRC\nOf Packet) (16 bit) (16 bit) Packet)\nLegend:\nPHY Layer Protocol Layer\n6.2.1.1 Message Header\nMessageShall Message Header\nEve\uf06cry Figure 6.1, \"U sStBa rPto wwiethr Da elivery Packet Fo rams asht ofowr na iCno:ntrol Message\"\n\uf06c Figure 6.2, \"USB Power Delivery Packet Format including Data Message Payload\"\n\uf06c Figure 6.3, \"USB Power Delivery Packet Format including an Extended Message Header and Payload\"\nTable6.1, \"Message Header\" Message Header Message\nPortCapabilities\nand as defined in . The contains basic information about the\nand tMhees PsaDg e He aderMay . Control Message Number of Data Objects\nData Message Number of Data Objects\nThe be used standalone as a when the field is zero\nor as the first part of a whenT tahbe le6.1 Message Header field is non-zero.\nBit(s) Start of Packet Field Name Reference\nSOP* Extended Section 6.2.1.1.1\n15 SOP* Number of Data Objects Section 6.2.1.1.2\n14\u202612 SOP* MessageID Section 6.2.1.1.3\n11\u20269 SOP Port Power Role Section 6.2.1.1.4\nSOP\u2019 o S n O l P y \u2019\u2019 Cable Plug Section 6.2.1.1.7\n8\nSO / P* Specification Revision Section 6.2.1.1.5\n7\u20266 SOP Port Data Role Section 6.2.1.1.6\nSOP\u2019 SOP\u2019\u2019 Reserved Section 1.4.2\nonly\n5\nSO / P* Message Type Section 6.2.1.1.8\n4\u20260\n6.2.1.1.1 Extended\nExtended Shall Control Message Data Message\nExtended Message\nThe 1-bit field be set to zero to indicate a or and set to one to indicate\nan .\nPage 116 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nExtended Shall SOP* Packet\nT6h.2e .1.1.2 fie l dN umb aepprl yo tfo Dalal ta Object tsypes.\nExtended Number of Data Objects Shall\nData Object Message Header Message Control Message\nWhen the Mes sfaiegled is seDta ttoa z Mereoss tahgee 3-bit field indicate the number of 32-bit\ns that follow the . When this field is zero the is a and when it\nis noNnu-zmerboe, rt hoef Data Ob jiesc at s Shall . SOP* Packet\nThe Extended fieldC hunke adpply to all Ntyupmesb.er of Data Objects Shall\nData Object Message Extended Message Header\nWhen both the Data Obje cbtit and bit are set to one, the field indicate the\nnumber of s in the padded to the 4-byte boundary including the as\npart of theE fxirtsetn ded . Chunked Number of Data Objects Shall\nReserved\nWhen the bit is set to one and bit is set to zero, the field be\nNote: . Message Data Size Extended Message\nHeader\nIn this case, the length is determined solely by the field in the\n6.2.1.1.3 . MessageID\nMessageID Message\nMessageIDCounterShall Soft Reset Hard Reset\nMThees s3a-bgietI DCounterS hfiaelldl is the value generated byM ae srsoalglieng counter maintained by the originator of the .\nGThooe dCRCMessage be initialized to zero at power-on as a result of a , or a . The\nbe incremented when a is successfully received as indicated by receipt of a\nNote: . MessageID BISTMessage [USBPDCompliance]\nMessaTgheeI Dusage oSfh all duriSnOgP t*e Pstaicnkge wt ith s is defined in .\nT6h.2e .1.1.4 f i ePldo rt Po apwpelyr t oR aolll e types.\nPort Power Role Shall Port Power Role\nThe\uf06c 1-bit Sink field indicate the 's present :\n\uf06c 0b Source\nMessage1b Get_Sink_Cap_Extended Source Shall Port Power\nRole Source Message RequestMessage SinkShall\ns, such aPs ort Power Role , thSaitn akre only ever sent by a , always have the\nfield set to . Similarly, s such as the that are only ever sent by a\nalways haveP othwee r Role SwapAMS field setIn tiot ial So.urcePort Port Power Role Shall Sink\nPS_RDYMessage Initial Source Table8.60, \"Steps for a\nDSuucrciensgs ftuhle S ource Initiated Po wer ,R foolre t Shwe ap Sequence\" T, tahbele 8.63, \"Steps for a fSieulcdc essful Sbien kse Itn tioti ated Pino wtheer\nRole Swa p Sequen icned\"icating that the 's power supply is turned off (see\nand\nPower Rol)e. SwapAMS Initial Sink Port Power Role Shall Source Message\nPolicy Engine PS_RDYMessage Initial Source Table8.60, \"Steps for\naD uSuricncge stshfeu l Source Initiated Powe, rf oRro tlhe eS wap Sequen, cthe\"e Table8.63, \"S tfeieplsd f or a S ubcec seesstf tuol Sink In iftoiart ed Powesr\nRinoilteia Stweda pb yS ethqeu ence\" after receiving the from the (see\nand\nFast Role )S.wapAMS Initial SourcePort Port Power Role Shall Sink\nPS_RDYMessage VBUS Initial Source vSafe5V Figure 8.39,\n\"DSuurcicnegs stfhuel Fast Role Swap Sequ,e fnocre t\"he , the field be set to in the\nindicating that is not being driven by the and is within (see\nFast Role SwapAMS ). Initial SinkPort Port Power Role Shall Source\nMessage Policy Engine PS_RDYMessage Initial Source Figure 8.39,\n\"DSuurcicnegs stfhuel Fast Role Swap Sequ,e fnocre t\"he , the field be set to for\ns initiated by the after receiving the from the (see\nNote: GoodCRCMessage ). Initial Sink PS_RDYMessage Initial Source\nPort Power Role Sink Protocol Layer\nThe sent by the in response to the from the\nwill have its field set to since this is initiated by the . Subsequent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 117\nMessage Policy Engine PS_RDYMessage VBUS\nPort Power Role Source\ns initiated by the , such as the sent to indicate that is ready,\nPort Pwoiwll ehra Rveo ltehe M fieeslsda sgeet Stho all Not. Shall Not Soft\nReset Hard Reset Error Recovery\nThe field of a received be verified by the receiver and lead to\nP, ort Power R oorl e Shall if it is incorrect. SOP Packet\n6Th.2e .1.1.5 Sp eficelidf icati oonnly R bee vdeifsiinoedn for s.\nSpecification Revision Shall\nThe\uf06c Revision 1.0 D feieplrde cated be one of the following values (except 11b):\n\uf06c 00b - Revision 2.0 ( )\n\uf06c 01b - Revision 3.x\n\uf06c 10b - Reserved Shall Not\n11b - , be usePdD. USB PDUSB Shall Specification\nRevision [USB 2.0] SOP* VPD ShallIgnoreMessage\nTo eSnpseucirfeic ianttieorno Rpeevriasbioilnity with existing products, products support every PD\nstarting from for ; the only exception to this is a which s sent with\nPD 2U.0S aBn Tdy peaer-ClierE.rror Recovery Attach Port Specification Revision\nPort Partn\u00aeer Cable Plug Specification Revision\nDAfettearc ah pHhayrsdic Rale osert logiEcarlr o(r Recovery ) , a discovers the common\nlevel between itself and its and/or the (s), and uses this level until a\n, or Specification Re hviaspiopnens. Shall\nRevision\nAfter detection of the to be used, all PD communications comply completely with the\nrelevant Specific oaft itohne RPeDv sispieocnification. GoodCRCMessage Shall\nMessage GoodCRCMessageShall Specification Revision\nThe 2-bit Revision 2.0 field of a Mes sage does not carry any mSepaencinifgic aantdio n Rev bisei oconnsidered\nas dMone'sts caagree H beya tdheer recipient of the GoodCR. CThMee ssesnagdeerM oaf ya Spe cificatio n Rev siesito thne\nfield to 01b ( Message) when responding Rtoe vai sion 3.x that cSopnetaciinfisc a0t1ibo nin R tehvei sion Message f iHeleda doef r\nthe . The sender of a set the field to 01b or 10b when\nrespSopnedcinifgic taot aio n Revisi othnat contSahianlsl 10b ( SOP*) P ianc tkheet field of the .\nTheA ttach Hard R efiseeltdS hall apply to all types. Specification Revision\nPort Cable Plug\nAn event or a cause the detection of the applicable to be performed\nfor both Sousr acned P ort s according to the ruleSsi nskta Pteodrt belowSp:ecification Revision Shall\nWhen the first communicates with the the field be used as\ndescribed byS tohuer cfoe lPloowrting stepsS:ource_CapabilitiesMessage Sink Port Specification\nRevision Revision Source Port\n1) The sends a to the setting the\nSink Pfioerltd to the highest Reque sotf Mthees sPaogweer Delivery SSppeecciiffiiccaattiioonn tRheev ision supports.\nRevision Sink Port\n2) TSpheec ification R reevsipsioonnds with a Source P soerttting the field to the highest\nof the Power Delivery Specification the supports that is equal to or lower than the\nSource Sink P roercteiSvheadl lfrom the Specification. Revision RequestMessage Sink\nDetach Hard Reset Error Recovery\n3) The and s use the in the from the in\nstep 2 in all suFibrsset qEuxepnlitc icto CmomnturancictationVsC uOnNtNi lS ao urceSh,a ll , or happens.\nSpecification Revision\nPrior to entering the , the use the following steps to establish a\nVCONN Sou lercveel: Discover IdentityREQ Cable Plug SOP\u2019 Specification\nRevision Message Revision VCONN\n1) TSohuer ce sends Va C ONN Swap Stoo ftth_eR eset Acce p(tMe)s ssaegtteing the\nfield in theS ection 6.3 t.o1 3t,h \"eS hofitg hReesste t Messag eo\"f the Power Delivery Specification the\nsupports. After a the required / exchange is used for the\nsame purpose (see ).\nPage 118 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nCable Plug Discover IdentityACK Specification Revision\nMessage Revision VCONN Source\n2) The responds wSitphe cai fication Revision setting the Source Port field in the\nto the highest of the Power Delivery Specification the supports that is\nequaCl atob loe rP llouwger thVaCnO tNhNe SourceShall it received from the .\nExplicit Contract\n3) The and communicate using the lower of the two revisions until an\nTable6.2, \"Revisi ohna sIn bteeeronp eesrtaabbilliisthy eddu.ring an Explicit Contract\" Specification Revision\nShall Port Partner Cable Plug Specification Revision\n4) Explicit Contract shows the that\nbe used between the s and the s when the has been\nNotes: discovered and an is in place.\n\uf06c VCONN Source Cable Plug May\n\uf06c A Cable P ltuhgat does not communicatRee wviistiho nt h3e.x Discover (Ids)e ntity sRkEipQ the abovDei spcroovceerd Iudreen.tity\nACK BUSY VCONN SourceMay Revision 2.0Discover IdentityREQ\nWhen a does not respond tCoa ab le Plug with a\nor the repeat steps 1-4 using a in step\nVCONN1 S obuerfcoere establishing tRheavti stihoenr 3e .xis no to communicate withM. ay Cable Plug\nRevision 3.x Revision 3.x Specification Revision\nA Port Partn ethrat supporEtsx plicit Contra cotf the Power DeliEvexpryli cSipt eCcoinfitcraatciotn communicate withP ao rt Partner\nalso Csaubplpeo Prltuingg Shall Tuasbinleg 6.2, \"Revisio nC Ionmteprloiapnetr aCboimlitmy udunricinagti oanns E rxepglaicridt lCeosns torfa tcht\"e\nRofe ivtiss ion while no exists. After an has been established the s\nand (s) use to determine the\nto beM uesessda.ge Shall Specification Revision Message Header\nMessage\nAll data in all s be consistent with the field in the for that\npaCratibcluel aPrlu gShall N. ot Specification Revision Cable PlugShall\nSpecification Revision Specification Revision\nAM essage saveV t C h O e N s N t aStoeu orcf ethe agreed . A respond with the\nhighest it supports that is equal to or lower than the contained in the\nCable Plu rgecSehivaeldl from the .Specification Revision SOP\u2019 SOP\u2019\u2019\nCable Plug Shall Specification Revision Cable Plug\ns operate using the same for both and . Cable assemblies with two\nTable6s. 2, \"Re voipsieorna tIen tuesrionpge trhaeb isliatmy deu ring an Explicit Contr afocrt \"both s. Shall\nSee for details of how various Revisions\ninter-operate. Table6.2 Revision Interoperability during an Explicit Contract\nPort 1 Revision Cable Plug Revision Port 2 Revision Port to Port Port to Cable\nOperating Plug Operating\nRevision\nRevision\n2 2 2 2 2\n2 2 3 2 2\n2 3 2 2 2\n2 3 3 2 2\n3 2 2 2 2\n3 2 3 3 2\n3 3 2 2 2\n3 3 3 3 3\n6.2.1.1.6 Port Data Role\nPort Data Role Shall Port Data Role\nThe\uf06c 1-bit UFP field indicate the 's present :\n\uf06c 0b DFP\n1b\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 119\nPort Data Role Shall SOP Packet SOP* Packet Port Data Role\nReserved Shall\nThe field only be defined for s. For all other s the field\nis USB Type a-nCdP ort be set toM zeesrsoa.ge Port Data Role Data Role Data\nRole GoodCRCMessage USB Type-CError Recovery [USB Type-C 2.4]Shall\nIf a receives a with the field set to the same as its current\n, except for the , actions as defined in be\nperforUmSBed T.ype-CPort Port Data Role Shall Attachment Hard Reset\nPort R Port R\nFor a the field be set to the default value at after a : 0b\nfor a with d Paosrsterted anUdS B1 bC ofomrm a unica wtioitnh p asserted.Attachment Source PortShall DFP\nSink PortShall UFP\nIn the case that a is not s capable, at a default to and a\n6.2.1.1 .7 de fCaualbt tloe Plu. g\nCable Plug Shall Message Cable Plug VPD\nThe\uf06c 1-bit Message field indicaDteF PwhetUhFePr this originated from a or :\n\uf06c 0b Message originated from a Cabl eo rP lug . VPD\nCab1leb Plug oSrihgainllated from a SOP\u2019 Pac oker t SOP\u2019\u2019 Packet\n6Th.2e .1.1.8 f i eMld essa gonel yT aypppley to and types.\nMessage Type Shall Message Message Type\nNumber of Data Objects Message Control Message Data\nTMhees s5a-gbeit fieMlde ssage i nTdyipcaete the type of Table b6e.5in, \"gC soennttr.o Tl oM feuslslya gdee cToydpee st\"he Table6.6, \"Da,t ath e\nMessage Types\" field is first examined to determine whether the is a or a\n. Then the specific can be found in or\nMessage Ty.pe Shall SOP* Packet\n6Th.2e .1.2 f i eEldx ten dapepdly Mto aells sage He atydpeesr.\nExtended Message Extended Message Header Shall Extended\nMessage Header Message Header Figure 6.3, \"USB Power Delivery Packet Format including\nan Extended Messasg (ei nHdeiacadteerd a bnyd tPhaey load\" field being sTeatb ilne t6h.3e , \"Extended Messa) ge Hea cdoenrt\"ain an\nfollowing the as shown in\nExtended Message Data Block Danatda d Seifzineed in \u201c Extended Message .\nMessage Chunk Data Block Chunk Chunk\nsC chounntkainSh all s Mofa xExtende,d dMefsignCehdu inn kthLee n Ch, tuhnakt are either seSnht ainll a\nsingle or as a series oDfa ta Blosc.k When the is senMt aasx Eax steerniedse odfM sgChus,n ekaLcehn in thSeh saelrlies,\nexcept for the last , Data cOobnjetacitn bytes. The last in the series\ncontain the remainder of the and so could be less than bytes and be\n6pa.d2d.1ed. 2to.1 the ne x tC 4h-buyntek ed boundary.\nTable6.3 Extended Message Header\nBit(s) Start of Packet Field Name Reference\nSOP* Chunked Section 6.2.1.2.1\n15 SOP* Chunk Number Section 6.2.1.2.2\n14\u202611 SOP* Request Chunk Section 6.2.1.2.3\n10 SOP* Reserved\n9 SOP* Data Size Section 6.2.1.2.4\n8\u20260\nPort Partner Shall Unchunked Extended Messages Supported Source_Capabilities\nMessage Unchunked Extended Messages Supported RequestMessage\nThe Message sD ata S uizsee thMe axExtendedMsgLegacyLen Ufienlcdh uinn ktheed Extended Message\nSection 6 a.4n.1d. 2.1.6, \"Unchunked Extended Messages Support feide\"ld in thSeec tion 6.4.2 .6, \"Unch tuon dkeedte Ermxtienned wedh Metehsesra gtoe s\nsSeunpdp orted\" s of > bytes in a single (see\nand\n).\nPage 120 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPort Partner Chunked Extended Message\nWh\uf06cen eitherC hunked only supEpxotretnsd ed MessageShall s:\n\uf06c The Extende db iMt iens seavgeery Data Size MaxE xtend bede Msestg tLoe ognaec.yLenShall\nPort Partner Chunk\nEvery of > be transmitted between the\n\uf06c Numbers o inf Data Osb jects Message HeaderShall Data Object\nMessage Extended Message Header Data\nOThbjee ct in the indicate the number of s in the\npadded to the 4-byte boundary including the as part of the first\n. Shall Port Pair Detached Hard Reset Error Recovery\nSource Power Role Swap Fast Role Swap Initial Source\nThe conditions listed abovNee w Sou arpcpely until the is , there is a , there is\nor the removes power (except during a or when the removes\npower in orPdoerrt t Po afortrn tehre Unc thou anpkpedly E pxotwenedre)d. Message\nWh\uf06cen both Chunked s support Extended MessageShall s:\n\uf06c The Extende bdi Mt iens seavgeeryS hall be set to Pzeorrot .Partner Unchunked\n\uf06c EverNy umber of Data Ob jects be traMnsemssiatgteed H beeatdweeren Rthees erved s .\nThe Shall in the Port Pair D iest ached . Hard Reset Error Recovery\nSource Power Role Swap Fast Role Swap Initial Source\nThe conditions listed abovNee w Sou arpcpely until the is , there is a , there is\nor the removes power (except during a or when the removes\npower in orderE txot efonrd ethde M essage to aCpapbllye pPoluwger). VCONN SourceShall Chunked Extended Message\nCable Plug Shall Extended Message Data Size MaxExtendedMsgLegacyLenChunked Shall\nWhen sCehnduinnkge d Extesn tdoe tdh Me essage the only send s.\ns always send s of > and\nset theE xtended M beits siang eevery Chunki tnog oSnhea.ll\nW6.h2e.n1 .2.2 Chunsk ar Ne suumppboreterd be supported.\nChunk Number Shall Valid Message Chunked Chunked\nChunk Number Shall\nThe field only be in a if the flag is set to one. If the flag is\nset tCo hzuenrok tNhuem ber field also be set to zero. Message\nData Block\nThe field is used differently depending on whether the is a request for Data, or a requested\n\uf06c being returned: Chunk Number Chunk\nShall Chunk Chunk\nIn a request foCrh udnakta the field indicates the number of the being requested. The\nrequester only set this field to the number of the next in the series (the next after the\n\uf06c last received Dat)a. Block Chunk Number Chunk\nChunk Number Chunk Shall Shall Chunk\nIn the requested the fielCdh inudnkicates the number of the being returned.\nThe for each in the series start at zero and increment for each\n6.2.1.2by.3 one up Rtoe aq muaexismt uCmh ouf n9 kcorresponding to 10 s in total.\nRequest Chunk Shall Chunked Extended Message Chunked\nFigure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" Unchunked Extended\nTMhees sage M beists age S ohnallyl be used for the transfer of an when the Figure 6 b.4it,\ni\"sE sxeatm top l1e (Sseeceu rity_Request sequence Unchunked (Chunked bit = 0)\" ). For\ntransfers, s be sent and received without the request/response mechanism (see\nRequest Chunk Shall ). Chunk Data Block Shall\nChunk Chunk Chunk Chunk\nThe Data BlockShal lbit be set to one tCoh inudnkicate that this is a request for a of a Chunk and be\nsCehtu tnok zero to indicate tChhaut nthkis is a Sh arellsponse containing a . ExcMepest sfaorg e Type zero, a requesteRd equest\noCfh au nk only bDea rteat uSrizneed as aS hall response to a corresponding request for that . Both the\nrequest and the response contain the same value in the field. When the\nbit is set to one the field be zero.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 121\n6.2.1.2.4 Data Size\nData Size Shall Data Block\nMessageShall Not MaxExtendedMsgLen\nThe field indicate how many bytes of data in total are in being returned. The total\nnumbDera otaf dSaiztae bytes in the Max Extended MexscgeLeedg acyLen Chunk.ed PacketPayload\nShall Data Object\nIf the field is less than and the bit is set then the\nDbea tpaa dSdizeed to the next 4-byte boundaryE wxtitehn dzeedro Ms e(0ssxa0g0e).\nMaxExtendedMsgLen MessageShall\nIf the Shall Ig fineoldr eisd greater than expected for a given but less than or equal to\nthen the expected fields in the be processed appropriately and the additional\nf6ie.2ld.s1 .2.5 be Exte.nded Message Examples\nExtended Message Chunked Chunked\nUnchunked Chunked Security_RequestMessage Data Size\nThe following examSepcluesr iitlylu_Rstersapteo nthsee tMraensssamgiessioDna otfa Size s both M (essage bit is one) and\n( M beits sias gzeero). The examples use a of 7 bytes which is\nMreesspsoangdeed to by a of 30 bytes. The sizes of these s are arbitrary and\nare used to illustrate transmission; they are not intended to correspond to genuine security related\nNse.gotiation Explicit Contract Port Partner Unchunked Extended\nMessages Supported Source_CapabilitiesMessage Unchunked Extended Messages Supported\nDuring Request oMf ethssea ge after connectionC,h tuhne ked Tsa ubslee t6h.4e, \"Use of Unchunked Message\nSupported bit\" field inP otrhte P artner Unc hunked E xatnedn ded Message Chunked\nfield in the Chun ked to determine the value of the bit (see\n). When both s support s then the bit is zero\notheCrwhuisnek tehde bit is one.\nThe\uf06c C hbuitn iks used to determine whether:\n\uf06c TExhtee nded M reesqsaugeest/respCohnusnek emdechanism is used.\n\uf06c s are .\n\uf06c PaddNinugm ibs earp polfi eDda.ta Objects\nThe field is used.\nThe following examples illustTraatbel eth6e. 4e x Upesect oedf Uunsacgheu innk eeadc hM ceasssea.ge Supported bit\nSource Source_CapabilitiesMessage\nUnchunkedM: essage Unch unkedMessage\nSink RequestMessage UnchunkedMessage ChunSkuepdported bit = 0 ChunSkuepdported bit = 1\n: bit = 1 bit = 1\nUSnucphpuonrkteeddM beits s=a 0ge Chunked Chunked\nbit = 1 bit = 0\nSupported bit = 1\n6.2.1.2.5.1 Security_Request/Security_Response Unchunked Example\nFigure 6.4, \"Example Security_Request sequence Unchunked (Chunked bit = 0)\"\nSecurity_RequestMessage Security_ResponseMessage UnchunkedExtended Message\nChunked USB Host Charger Data Bloc ikllustrates a typical seMqeusesangcee for a\nChunk responded to by a using s\n( bit is zero) between a and a . The entire is returned in one . The\nrequest/response mechanism is not used.\nPage 122 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.4 Example Security_Request sequence Unchunked (Chunked bit = 0)\nHost Charger\n(Data S\nS\ne\niz\nc\ne\nu r\n=\ni t\n7\ny\n,\n_\nC\nR\nh\ne\nu\nq\nn\nu\nk\ne\ne\ns\nd\nt\n= 0)\nGoodCRC\n(Data S e Si c z u e r i = t y 3 _ 0 R , e C s h p u o n n k s e e d = 0)\nGoodCRC\nFigure 6.5, \"Example byte transmission for Security_Request Message of Data Size 7 (Chunked bit is set to zero)\"\nSecurity_RequestMessage Figure 6.4, \"Example Security_Request sequence Unchunked\n(Chunked bit = 0)\"\ndetails theN umber of Data Ob jects shown in Reserved Chunked Data\nSize . The figure showsE txhtee nbdyetde oMredsesraigneg on the buCs haus nwkeeldl as the fact that there is no padding in this\ncase. The field has a value of 0 since it is when the bit is zero. The\nFig ufireeld 6 i.n5d Eicxaatmesp thlee bleyntget thr oafn tshme ission for Securit wy_hReenq tuhees t Messag bei ot ifs D saett ato S 0iz, ew 7h i(cChh inu nthkies dca bsiet iiss 7 s bety tteos .\nzero)\nMessage Header\nExtended Message\n(16 bit)\nHeader\nMessage Type = (16 bit) Data (7 bytes)\nSecurity_Request\nChunked = 0\nNumber of Data\nData Size = 7\nObjects = 0 (Reserved)\nMessage Message Message Message\nHeader Header Header Header B0 B1 B2 B3 B4 B5 B6\nLSB MSB LSB MSB\nFigure 6.6, \"Example byte transmission for Security_Response Message of Data Size 30 (Chunked bit is set to zero)\"\nSecurity_ResponseMessage Figure 6.4, \"Example Security_Request sequence Unchunked\n(Chunked bit = 0)\"\ndetails theN umber of Data Obje cts shown in Reserved Chunked Data\nSize . The figure shows Ethxtee bnydteed o Mrdesesraingge on the busC ahsu wneklel das the fact that there is no padding in this\ncase. The field has a value of 0 since it is when the bit is zero. The\nfield indicates the length of the when the bit is set to zero, which in this case is 30\nbytes.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 123\nFigure 6.6 Example byte transmission for Security_Response Message of Data Size 30 (Chunked bit is set to\nzero)\nMessage Header\nExtended Message\n(16 bit)\nHeader\nMessage Type = (16 bit) Data (30 bytes)\nSecurity_Response\nChunked = 0\nNumber of Data\nData Size = 30\nObjects = 0 (Reserved)\nMessage Message Message Message\nHeader Header Header Header B0 B1 B28 B29\nLSB MSB LSB MSB\n6.2.1.2.5.2 Security_Request/Security_Response Chunked Example\nFigure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\"\nSecurity_RequestMessage Security_ResponseMessage Chunked Extended Message\nChunked USB Host Charger illustrates a typical sequence for a\nresponded to by a using s\nN(ote: Cbhitu ins ko nNeu)m bebtewreen a E xatnendd ae d Messag.e Chunk Chunk\nNumber Chunk\nzero in every is sent without the need for a Request, but\none and following need to be requested with a request.\nPage 124 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.7 Example Security_Request sequence Chunked (Chunked bit = 1)\nHost Charger\nSecurity_Request Chunk\nR C e h q ( u N u n e u k s m e t d b C S e = h e r u c 1 o u n , f r k C i D t h = y a u _ 0 t n R a , k e D O q N a b u t u j a e e m s c S t b t i z s e e = r = = 3 7 , 0 ) ,\nGoodCRC\nSecurity_Response\nR C e h ( q N u u u n e m k s e S t b e d C e c = h r u u r o 1 i n f , t y k C D _ h = a R u t e 0 a n s , k O p D o N b a n j t u e a s m c e S t b s iz e = e r 7 = = , 3 0 0 , )\nGoodCRC\nS R C e e h c q ( u u N u r n e u i k t s m y e t _ d b C R e = h e r u s 1 o p n , f o k C D n h = s a u 1 e t n a , \u201c k D O C N a h b t u u j a e m n c S k b t i z s r e e e = r q = = 1 u 0 , 1 e ) , st\u201d\nGoodCRC\nR C e h ( q N u u u n e m k s e S t b e d C e c = h r u u r o 1 i n f , t y k C D _ h = a R u t e 0 a n s , k O p D o N b a n j t u e a s m c e S t b s iz e = e r 2 = = , 3 1 0 , )\nGoodCRC\nFigure 6.8, \"Example Security_Request Message of Data Size 7 (Chunked bit set to 1)\" Security_Request\nMessage Figure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\"\nshows the Message\nshown in Data Object Numb einr mofo Drea tdae tOabilj ects\nincluding the byte ordering on the bus and pCadhudninkg. ThreCeh buyntke sN oufm pabdedring have been added toD tahtea Size so that\nthe total number of bytes is a multiple oEfx 3te2n-bdietds ,M coersrsaesgpeonding to 3 s. The\nfield is set to 3 to indicate the length of this . The is set to zero and the field is set\nto 7 to indicate the length of the whole .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 125\nFigure 6.8 Example Security_Request Message of Data Size 7 (Chunked bit set to 1)\nExtended Message\nMessage Header\nHeader\n(16 bit)\n(16 bit)\nS M ec e u s r s i a ty g _ e R T e y q p u e e = st Chunked = 1 Data (7 bytes) Padding (3 bytes)\nNumber of Data Chunk Number = 0\nRequest Chunk = 0\nObjects = 3\nData Size = 7\nMessage Message Message Message\nP0 P1 P2\nHeader Header Header Header B0 B1 B2 B3 B4 B5 B6\n(0x00) (0x00) (0x00)\nLSB MSB LSB MSB\nData Object 0 Data Object 1 Data Object 2\nFigure 6.9, \"Example Chunk 0 of Security_Response Message of Data Size 30 (Chunked bit set to 1)\" Chunk\nNumber Security_ResponseMessage Figure 6.7, \"Example Security_Request sequence Chunked\n(Chunked bit = 1)\" shows\nChunk zero of the Payload sEhxotewnnd eind Message Header\nData Object in mNourem dbeetra iol fi nDcalutad iOnbg jtehcet sbyte ordering on the bus and padding. No padCdhiunngk is need foDra tthais\nSize since the full 26-byte plus 2-byte Extended Message is a multiple of 32-bits, corresponding\nto 7 s. The field is set to 7 to indicate the length of this and the\nfFieigldu irse s 6et.9 t oE x3a0m top ilned Cichauten kth 0e olefn Sgetchu orfi ttyh_eR wehspoloen se Message of Da.ta Size 30 (Chunked bit set to 1)\nExtended Message\nMessage Header\nHeader\n(16 bit)\n(16 bit)\nSe M cu es ri s t a y g _ e R e T s y p p o e n = s e Chunked = 1 Data (26 bytes)\nNumber of Data Chunk Number = 0\nRequest Chunk = 0\nObjects = 7\nData Size = 30\nMessage Message Message Message\nHeader Header Header Header B0 B1 B22 B23 B24 B25\nLSB MSB LSB MSB\nData Object 0 Data Object 6\nFigure 6.7, \"Example Security_Request sequence Chunked (Chunked bit = 1)\" Message\nSecurity_ResponseMessageChunk Chunk Number\nFigure 6.7, \"Example Security_Request sequence Chunked (Chunked s hboitw =s 1 a)n\" exampCleh oufn tkhe\nfNourmmabte, rb oytfe D oartdae Oribnjge actnsd padding foMr tehssea ge Pa yrleoqaudest for one\nshown in Figure 6.10, \"Example byte transmission for a Security_Response Message C. hInu nthke r equest r(Ceqhuuenskte tdh bei t is\nset to 1)\" Chun fkieedld in the isC sheutn tko 1 to indicCahtuen tkhat the is 32 bits equivalenMt teos s1a dgeata\nobCjheuctn (ksee Request Chunk Chunk Chunk\nNumber). Since the Data Si zbeit is set to 1 the request/ respDoantsae Bmloecckhanism is used. The is\na request so the bPita iysl osaedt to one, and in this case one is being requested so\nis set to one. is set to zero indicating the length of the being transferred. Two bytes\nof padding are added to ensure that the is a multiple of 32 bits.\nPage 126 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.10 Example byte transmission for a Security_Response Message Chunk request (Chunked bit is set\nto 1)\nExtended Message\nMessage Header\nHeader\n(16 bit)\n(16 bit)\nMessage Type =\nPadding (2 bytes)\nChunked = 1\nSecurity_Response\nChunk Number = 1\nNumber of Data\nRequest Chunk = 1\nObjects = 1\nData Size = 0\nMessage Message Message Message\nP0 P1\nHeader Header Header Header\n(0x00) (0x00)\nLSB MSB LSB MSB\nData Object 0\nFigure 6.11, \"Example Chunk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1)\" Chunk\nNumber Security_ResponseMessage Figure 6.7, \"Example Security_Request sequence Chunked\n(Chunked bit = 1)\" shows\none of the Payload shown in Data Object Number of Data\nObjects in more detail including the byte Cohrudnekring on thDe abtuas S ainzed padding. Two bytes of padding are\nadded to ensuErxete tnhdaet dt hMee ssage is a multiple of 32 bits, corresponding to 2 s. The\nfield is set to 2 to indicate the length of this and the field is set to 30 to indicate the length\nof thFei wguhroele 6 .11 Example Chu.nk 1 of Security_Response Message of Data Size 30 (Chunked bit set to 1)\nExtended Message\nMessage Header\nHeader\n(16 bit)\n(16 bit)\nMessage Type = Chunked = 1 Data (4 bytes) Padding (2 bytes)\nSecurity_Response\nChunk Number = 1\nNumber of Data\nRequest Chunk = 0\nObjects = 2\nData Size = 30\nMessage Message Message Message\nP0 P1\nHeader Header Header Header B0 B1 B2 B3\n(0x00) (0x00)\nLSB MSB LSB MSB\nData Object 0 Data Object 1\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 127"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.3", "title": "Control Message", "page": 128, "level": 2, "parent_id": "6", "full_path": "6.3 Control Message", "tags": [], "text": "6.3 Control Message\nMessage Control Message Number of Data Objects Message Header\nControl Message Message Header CRC Protocol Layer Control\nAM essage is deAfcinceepdt aMs aes sage RejectMes wsahgeen the field in the is set to\nzero. The consists only of a and a . The originates the\nContsr (oil. eM., essage , Metecs.s)a.ge Header Message Type\nTable6.5, \"Control Message Types\" May\nMTheess age Source Sink typeCsa balree P slpuegcified in the Shall No'ts field (bitMs 4e\u2026ss0a)g eand are\nsummarized in Message S. hTahlel Sent by column inSdOicPa Pteasc eknettities whicMh essag seend the gMivaeny\n( SOP,* Pac koert ); entities not listed issue the corresponding . The \"Valid Start\nof Packet\" column indicates the s which only be issued in s and the s which\nbe issued in s. Table6.5 Control Message Types\nBits 4\u20260 Message Type Sent by Description Valid\nStart of\nPacket\nReserved N/A Reserved\nAll values not explicitly\nShall Not\n0_0000 defined are and\nGoodCRC Source Sink Cable Plug Section b 6 e . 3 u . s 1 ed. SOP*\n0_0001 GotoMin (Deprecated) Deprec, ated or See Section 6.3.2 . N/A\n0_0010 Accept Source Sink Cable Plug See Section 6.3.3 . SOP*\n0_0011 Reject Source , Sink or Cable Plug See Section 6.3.4 . SOP*\n0_0100 Ping (Deprecated) Deprec, ated or See Section 6.3.5 . SOP\n0_0101 PS_RDY Source Sink See Section 6.3.6 . SOP only\n0_0110 Get_Source_Cap Sink o D r R P See Section 6.3.7 . SOP only\n0_0111 Get_Sink_Cap Sour c o e r DRP See Section 6.3.8 . SOP only\n0_1000 DR_Swap Source or Sink See Section 6.3.9 . SOP only\n0_1001 PR_Swap Source or Sink See Section 6.3.1 . 0 SOP only\n0_1010 VCONN_Swap Source or Sink See Section 6.3.11 . SOP only\n0_1011 Wait Source or Sink See Section 6.3.12 . SOP only\n0_1100 Soft_Reset Source or Sink See Section 6.3.13 . SOP* only\n0_1101 Data_Reset Source or Sink See Section 6.3.14 . SOP\n0_1110 Data_Reset_Complete Source or Sink See Section 6.3.15 . SOP only\n0_1111 Not_Supported Source o S r in k Cable Plug See Section 6.3.16 . SOP* only\n1_0000 Get_Source_Cap_Extended Sink , DRP or See Section 6.3.17 . SOP\n1_0001 Get_Status Sour c o e r Sink See Section 6.3.18 . SOP* only\n1_0010 FR_Swap Sink or See Section 6.3.19. SOP\n1_0011 Get_PPS_Status Sink 1 See Section 6.3.20. SOP only\n1_0100 Get_Country_Codes Source Sink See Section 6.3.21 . SOP only\n1_0101 Get_Sink_Cap_Extended Source or DRP See Section 6.3.22 . SOP only\n1_0110 Get_Source_Info Sink o D r R P See Section 6.3.23 . SOP only\n1_0111 Get_Revision Sour c o e r Sink See Section 6.3.24 . SOP* Only\n1_1000 or See .\nReserved N/A Reserved\nAll values not explicitly\n1_1001\u2026 Shall Not\ndefined are and\n1_1111 Port vSafe5V R R Port Power\nbe used.\nRole Sink Fast Role SwapAMS\n1) In this case the is providing however it will have d asserted rather than p and sets the\nfield to , until the has completed.\nPage 128 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.3.1 GoodCRC Message\nGoodCRCMessageShall Message\nGoodCRCMessage GoodCRCMessageShall Message MessageID\nThe beM seesnsta bgye the receiver to acknowledge that the previoGuoso dCRCMe wssaasg ecoSrhraelcltly\nreceived (i.e., hadt Ta ransmit ). The retMurenss tahgee 's so the sender\ncan determine that the correct is being acknowledged. The first bit of the be\nBreItSuTrned within Goo daCftReCr rMeecsesiapgt eof the last biCto onft tinhue opurse BviIoSuTs M ode . Section 6.4.3, \"BIST Message\"\ndoes not send the whMieles siang ae (seGeo odCRCMessage ).\nCRCReceiveTimer Message Message\nThe reMtryes msaegcehanism is triggered when the sender fails Ctoon rfeigceuirvaet iao n Channel CC before the\nShall Not expires. It is used by the sender to detect that the was not correctly received\nby the Me rsescaigpeient due to noise or other disturbance on the ( ). The retry mechanism\nbe used for any other purpose such as a means of gaining time for processing the required response to\n6th.e3 re.2ceived Go. toMin Message (Deprecated)\nGotoMin (Deprecated)Message Deprecated Message Type Valid Shall\nNot_SupportedMessage\nThe has been . The 0_0010 is no longer and\n6be. 3re.s3ponded to b yA ac cept Mess age .\nAcceptMessage Valid\nThe\uf06c Sh all is a Sreosuprocense iSnP tRh eM foodlleowing cases: Sink Source\nRequestMessage\nIt be sent by the , in , to signal the that the is willing to meet the\n\uf06c Shall . Source EPR Mode Sink Source\nEPR_RequestMessage\nIt be sent by the , in , to signal the that the is willing to meet the\n\uf06c Shall . PR_SwapMessage Power Role\nSwap Power Role SwapAMS\nIt be sent by the recipient of the to signal that it is willing to do a\n\uf06c Sha lalnd has begun the DR_S wap.Message Data Role Swap\nData Role SwapAMS\nIt be sent by the recipient of the to signal that it is willing to do a\n\uf06c anSdh haalls begun the VC.ONN_SwapMessage VCONN Swap\nVCONN SwapAMS\nIt be sent by the recipient of the to signal that it is willing to do a\n\uf06c anSdh haalls begun the . FR_SwapMessage Fast Role Swap\nAMS\nIt be sent by the recipient of the to indicate that it has begun the\n\uf06c Sh.all Soft_ResetMessage Soft Reset\n\uf06c It Shall be sent by the recipient of the Enter_USB Messag eto indicate that it has completed its .\nAMS\nIt be sent by the recipient of the to indicate that it has begun the Enter USB\n\uf06c Sh.all Data_ResetMessage Data Reset\nAMS\nIt be sent by the recipient of the to indicate that it has begun the\nAcceptM.essageShall tReceiverResponse Message Section\n6.6.2, \"SenderResponseTimer\"\nThe be sent within of the receipt of the last bit of the (see\n6.3.4 Reject M). essage\nRejectMessage Valid\nThe\uf06c S hall is a responSsien kin thSeP fRol Mloowdieng cases: Source RequestMessage\nMay Invalid Source\nAItd vertis bee sent to signal the , in , that the is unable to meet the .\nThis be due an request or because the can no longer provide what it previously\nd.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 129\n\uf06c Shall Sink EPR Mode Source EPR_Request\nMessage May Invalid Source\nIt be sAednvte trot issiegnal the , in , that the is unable to meet the\n. This be due an request or because the can no longer provide what it\n\uf06c prSehviaolulsly d. PR_SwapMessage Power Role Swap\n\uf06c It Shall be sent by the recipient of a PR_Swap Message to indicaEteP iRt Mis oudneable to do a .\n\uf06c It Shall be sent by the recipient of a DR_Swap Message while in . Data Role Swap\n\uf06c It Shall be sent by the recipient of a VCONN_Sw apMessa tgoe indicate it is unable to doV aC ONN Source .\nVCONN Swap\nIt be sent by the recipient of a that is not presently the , to\n\uf06c indShicaaltle it is unablUeF tPo do a En. ter_USBMessage\nMode\nIt be sent by on receiving an to indicate it is unable to enter the requested\nUSB Re.quest EPR_Request PR_Swap DR_Swap VCONN_Swap Enter_USBMessage\nRejectMessage Shall Not Message\nThe sender of a , , , , , or , on receiving a\n\uf06c E rxepslpicoint sCeo, ntractNeg soetniadt itohnis same toS tohuer creecipient untSilo ounrec eo_fC tahpea foblilloitwieinsgM heasssa ogcecurred:\nEPR_Source_CapabilitiesMessage\nA New as a result of the sending a or\n\uf06d Source Device Po licy Mana. Tgehris can be triggered by:\n\uf06d ThGee t_Sour'cse _CapMessage . Sink Source SPR Mode\n\uf06d A EPR_Get_Sourc e_CapMe ssesnatg efrom the toS tihnek S ionu rce EPR. Mode\n\uf06d AnP ower Role Swap sent from the to the in .\n\uf06d A Soft Reset .\n\uf06d A Hard Rese.t\n\uf06d A .\n\uf06c DAat Da iRscoolen nSwecatp/Re-connect.\n\uf06c A Data Reset .\nSinkAM ay . RequestMessage Shall Not\nRequestMessage RDO Explicit ContractNegotiation Data Role Swap\nTheD ata R eset send a different to the one which was rejected but repeat the same\n, using the same , unless there has been a New ,\nor RejectMe asss adgeescSrhiabelld above. tReceiverResponse Message Section\n6.6.2, \"SenderResponseTimer\"\nThe be sent within of the receipt of the last bit of (see\nNote: RejectMessage). Valid Message\nNot_SupportedMessage Section 6.3.16, \"Not_Supported Message\"\nThe is not a response when a is not supported. In this case the\n6.3.5 Ping Mess aisg reeturned (see ).\nPing (Deprecated)Message Message Type Valid\nThPeo rt P ing (Dep rheacsa tbeede)nM deespsraegceaMteady. The 0_0101 Not_Suppo ritse ndoM loenssgaegre Ig.nore Ping\n(Deprecated)Message Cable Plug Ping (Deprecated)MessageShallIgnore Ping (Deprecated)\nMA essag tehat receives a respond with a or the\n. A that receives a the\n6.3.6. PS_RDY Message\nPS_RDYMessageShall Source New Sink New Source Power Role\nSwapAMS Fast Role SwapAMS\nTSehcet ion 8.3.2 .2, \"Powe r Nego btiea stieonnt\" by the (or by both the and during the\nor ) to indicate its power supply has reached the desired operating condition (see\n).\nPage 130 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.3.7 Get_Source_Cap Message\nGet_Source_Cap Source Capabilities MessageMay Port Source Capabilities\nDual-Role Power Port Partner Dual-Role Power PortShall\nThSeo urce_Capabilitie (sGMete ssage Section 6). 4.1.5, \"SP R So ubrec ese Cnatp bayb ail ities Mtoe rsesaqguee\"st the and\ncapability of its (e.g., capable). The respond by returning\n6a .3.8 Ge t_Sink (_seCea p Message ).\nGet_Sink_Cap Sink Capabilities MessageMay Port Sink Capabilities Dual-\nRole Power Port Partner Dual-Role Power PortShall\nSTihnek _Capabilities M(Geests age Section )6 .4.1.6, \"SP R Sin bke C saepnatb biyli taie s Me tsosa rgeeq\"uest the and\ncapability of its (e.g., capable). The respond by returning a\n6.3.9 DR_Sw (saeep Message ).\nDR_SwapMessage DFP UFP Port Partner\nVBUS Data Role Swap Port Partner\nThe USB C ommunic aist iuosned to exchangeD FP and operUaStiBo nC obmetmwueneinc ation s while maintainUiSnBg Hthoes t\ndireActttiaocnh mofe pnotweUr FflPow over . ThUeS B Communicatio nprocess can be used by USB Devices whAetttahcehrm ore nntot they\nsupport s capability. A that supports capability starts as the\n[oUnS B Type-C 2.. 4A] Dua lt-hRaotl es uDpaptaortDs RD Port Shall capability starts as the Data R oolne Swap .\nPE_SRC_Ready PE_SNK_Ready DFP UFP May Data Role Swap\nPE_SRC_Read y PE_SNK_Re a(dy ) s Data R hoalve eS wthaep cSahpaalblility to perform a from Dtheeta ch\nRe-attach or USB Co smtamteusn. icatiso annd s have the capabilitPyo trot pPearrftonremr a A fcrtoivme\ntMhoed e oPro rt Partner stateDs.R A_ SwapMessage be regarded inH tahred s Raemseet wSahya alls a cable /\nSectio inn 6re.4la.4t.i3o.n4 ,t \"oE anntyer Mode Command\" whichC aisb loen Pglouigng betweeAnc ttihvee Mode s. If DthFePreS haraell a Nnoyt\nDR_sS wbeatpwMeeens stahgee Shall s when Aa ctive Mode C iasb al er ePcluegived, then a be pDearftoar Rmoeled\n(Ssweaep ). If the has any s then the issue\na and cause all s in the to be exited before accepting a\nrequest.VBUS VCONN SourceShall R R CC\nData Role Swap\nThe source of and remain unchanged as well as the p/ d resistors on the wire during\nthe DR_SwapMess apgreocMeassy. Port Partner DR_SwapMessageShall\nAcceptMessage WaitMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\"\nThe be sent by either . The recipient of the respond\nby s\uf06cending anA cceptM essage , a Source or a SinkSh all (see Data Role ).\n\uf06c If anR ejectM essage is sent, the and exchange s.\nData Role Swap Shall\nIf a is sent, the requester is informed that the recipient is unable, or unwilling, to do a\n\uf06c WaitMessag aend no action be taken. Data Role Swap\nShall\nIf a is sent, the requester is informed that a might be possible in the future\nbDuat ttah aRto nleo S iwmampediate actioDnF PSha lble taken. Port Data Role DFP UFPShall\nPort Data Role UFP\nBefore a the initial have its bit set to , and the initial have\nits D baitta s eRto tloe Swa.p DFP HostShall UFP Device DFPShall\nPort Data Role DFP UFPShall Port Data Role UFP USB\nCAoftmerm au snuiccacteisosnful the Port /Partn er become the / Sho uanldd vice-versa; the new\nhave Ditast a Role bit set to , and the new have its bit set to . Where\nis supported by both s a USB data connection be established according to the\nnew Data Roles .Swap Port Partner\nUSB Type-CError Recovery\nI[fU tShBe Type-C 2.4] , after having been accepted by the , is subsequently not successful, in order to\nattempt a re-establishment of the connection, actions, such as disconnect, as defined in\nSection 8.3.2.9 w, \"iDlla btea nReoclee sSswarayp.\"\n6Se.e3 .10 PR_Swap M.essage\nPR_SwapMessageMay Port Partner Power Role\nMessageShall AcceptMessage WaitMessage RejectMessage Section 6.9,\nT\"Ahcec ept, Reject and Wa it\" be sent by either to request an exchange of s. The recipient of\nthe respond by sending an , a or a (see\n).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 131\n\uf06c AcceptMessage Source SinkShall Power Role Swap\n\uf06c If anR ejectM essage is sent, the and do a .\nPower Role Swap Shall\nIf a is sent, the requester is informed that the recipient is unable, or unwilling, to do a\n\uf06c WaitMessage and no action be taken. Power Role Swap\nShall\nIf a is sent, the requester is informed that a might be possible in the\nPR_fSuwtuarpe Mbuests tahgaet Snhoa imll mNoetdiate action E bPeR t aMkoedne. EPR Mode Power Role Swap\nEPR Mode Shall\nThe be sent while in . While in if a is required,\nan exit Powe rb eR odloen Sew fairpst. Port Partner Shall Protocol Layer\nSoft Reset MessageIDCounter RetryCounter Protocol Layer\nAfter a successfuFli rst Explicit Contra tchte s New r eSsoeutr ctheeSihr arellspective CapsCouns t(eerquivalent to a\n): resetting their , and state machines before attempting\nto esNtaebwli sSho utrhcee Shall R . At this pCoCint the New SinkS ahlasoll reset iRts . CC\n[USB Type-C 2.4] Power Role Swap Source Sink PortShall CC\nThe R haRve p asserted on the P owwireer Ranodle tShwe ap S ink Shoauvrec e d asseProtretdS ohna ltlhe wire aCsC\ndefined in R R . WhDenFP peHrfoosrtmiUnFgP a Device Data Role from VCONN tSoo urce, Sthhea ll change its\nwireP orewseisrt Roor lfer oSmwa p p to d. When performing a from to , the change its\nwire resistor from d to p. The ( ), ( ) s and remain unchanged by\ntNhoet e: pProowceers sR.ole Swap Initial Sink VBUS\nvSafe5V\nDuring the process the does not disconnect even though drops below\n. Power Role Swap\nFor\uf06c morSee icntfioornm 7a.3t.i2o,n \" Treraganrsditiinogn st hCea used by Power Ro,l er eSfwera pto\":\n\uf06c Section 8.3.2.5, \"Data Reset\"\n\uf06c Section 8.3.3.19.3, \"Policy En.gine in Source to Sink Power Role Swap State Diagram\"\n\uf06c Section 8.3.3.19.4, \"Policy Engine in Sink to Source Power Role Swap State Diagram\".\n\uf06c Section 9.1.2, \"Mapping to USB Device States\" .\n6.3.11 VCONN_Swap Message.\nVCONN_SwapMessageShall Port VCONN Source\nThe VCONN_Swap Message May be supported byP oarnty P artn ethrat can operate as a VCONN S.ource\nMessageShall AcceptMessage RejectMessage WaitMessage Section 6.9,\nT\"Ahcec ept, Reject an d Wait\" N obte_ Sseunptp boyr eteitdhMere ssage to request an exchange of . The recipient\nof the respond by sending an , , (see\n\uf06c AcceptMessa) goer Port P artner .Shall VCONN Swap VCONN SourceShall\nPS_RDYMessage tVcONNSourceOn VCONN\nIVf C a O n N N Sourc eShall is sent, the VCONN s tVC p O e N r N fSoorumr ac eOff . The new E OP\nsendP Sa_ RDYMe ssage within to indicate that it is now sourcing . The initial\ncease sourcing within of receipt of the last bit of the of\n\uf06c the RejectM essage .\nVCONN Swap Shall RejectMessageShall Port\nIf a VCONN i sS osuenrcte, the requester is iVn C fo O r N m N_eSdw tahpatM theess raegceipient Piso rutnable, or unwilling, toV d CO o N a N\nSourceShall a Nnodt no actioRne jectM bees staagkeen. A VCON N_Swa opnMlye bsesa sgeent by the that is not\npresently the in response to a . The that is presently the\n\uf06c Wa itMessage send a in response to VCONN Swa p .\nShall Port VCONN Source\nVIf C a O NN Sw ap is sSehnatl, lt hNeo trequester iVs C i O n N fo N r Smweadp that a tVCO N m N iSgwhta bpeD peloasysDibFleP in the future\ntbVu C t O t N h N aSt wnoa pimDmeleadyiUatFeP action be taken. A afVte C r O N lo N s iSnwga tpheA MS role due to incoming\nrequest initiate a until at least /\n\uf06c Not_SupportedMes saaftgeer completing the previous VCON.N Swap\nPort VCONN SourceMay VCONN Not_SupportedMessage\nIf a VC O is N N se_Snwt, athpeM reesqsuaegseter is informed that is not supported. The\nthat is not presently the turn on when a is\nreceived in response to a .\nPage 132 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nDFP Host UFP Device Data Role Source VBUSShall R R\nCC VCONN Swap\nThe ( ), ( ) s and of remain unchanged as well as the p/ d resistors\noVnCO tNhNe Sha wllire during the processV.CONN Swap Cable Plug\nbe continually sourced during the process to maintain power to the (s) i.e., make\nbefore break. Cable Plug PortShall VCONN Source Cable Plug\nVCONN Swap VCONN Source\nBefore comVm CO u N n N icating with a a C eanbsleu Prelu tghat it is the Po arntd that the s are\npowereCda,b bley Ppleurgforming a VCONN iSfo nuercceessaryN. Soitn_cSeu iptp coarntneodt Mbee sgsuaagreanteed that the present is\nVsu C p O p N l N y_iSnwg apMes, stahgee only meanPs otrot ensure that the Vs C a O r N e N p Soowuerrceed is for aH ard R wesisehtingD toet caocmhmunicate\nwith a to become the . If a is returned in response to the\nVCONN Sour ce , then thSeo urce is allowed to become tDhies cover Identity uCnotiml am and S oOrP \u2019 C.able Plug\nFirst Explicit Contract\nA that is also a can attempt to send a using to a\nNproitoer: to the establishment of the VCONN Source . Sink AMS Cable Plug\nR SinkTxOK Section 6.9, \"Accept, Reject and Wait\"\nEven when it is presently the , the is not permitted to initiate an with a\n6.3.12unless Wp isa seitt t oM essag e(see ).\nWaitMessage Valid Message\nThe\uf06c Shall is a responsSei ntok one of the followRinegq uestMesss:age SPR Mode Negotiation\nSource\nIt be sent to signal the , in response to a in during , to\n\uf06c indSihcaaltle that the is cuSrrinekntly unable to meeEt PthRe_ Rreeqquueesstt.Message EPR Mode\nNegotiation Source\nIt be sent to signal the , in response to a in during\n\uf06c Shall , to indicate that the PR _iSsw cuarpreMnetslysa ugneable to meet the request. Power\nRole Swap\nIt be sent by the recipient of a to indicate it is currently unable to do a\n\uf06c Shall . DR_SwapMessage Data Role\nSwap\nIt be sent by the recipient of a to indicate it is currently unable to do a\n\uf06c Sha.ll VCONN_SwapMessage VCONN Source\nVCONN Swap\nIt be sent by the recipient of a that is not presently the to\n\uf06c indSihcaaltle it is currently unable to do a Enter_USBM. essage\nMode\nIt be sent by the recipient of an to indicate it is currently unable to enter the\nWairteMqueesssategde SUhSaBl l . tReceiverResponse Message Section\n6.9, \"Accept, Reject and Wait\"\nThe be sent within of the receipt of the last bit of the (see\n6.3.12.1 Wait )i.n response to a Request Message\nWaitMessage Source Re-\nnegotiation Sink Source SourceShould WaitMessage\nRTehqeu estM essage allows tEhxep licit Co ntitmraec tto recover the powerP iotr rte Pqauritrneesr to meet the request, e.g., through\nwith other s or an upstream . A only send a in response to a\nSink when an RequestM eexssisatgse between thSein kRequestTism. er Shall\ntSinkRequest WaitMessage RequestMessage\nThe is allowed to repeat the using the and ensure that there is\n6.3.12.2 after r e Wceiaviintg itnhe resp onse tboef oare P seRn_dSinwg aanpot hMere ssage .\nWaitMessage PR_SwapMessage Power Role Swap\nPR_SwapMessage\nThe is used when responding to Sai nk Capabi lities to indicate that a PR_SwapMe smsaigghet be\npossible in the future. This can occur in anyP coarste P warhtenreer thSeh oduevldice receiving Pthoew er Role Sw ap needs to\nevaluate thPeR r_eSqwuaepstM fuerstshaegre e.g., by requesting from the originator of the . Once\nit has completed this evaluation one of the s initiate the process again by\nsendWinagi at Message . Hub\n[UCSI]\nThe is also used where a is operating in hybrid mode when a request cannot be satisfied (see\n).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 133\nPort WaitMessage PR_SwapMessageShall tPRSwapWait\nWaitMessage PR_SwapMessage\nA that receives a in response to a wait after receiving\n6th.e3 .12 .3 be f oWrea sietn diinng r aenostpheorn se to a DR_S.wap Message\nWaitMessage DR_SwapMessage Data Role Swap\nDR_SwapMessage\nThe is used when responding to a to indicaPteo rtth Pata rat ner Should might bDe ata\npRoosles iSbwlea ipn the future. This can occur iDn Ran_Syw caaspeM wehssearge ethe device receiving the needs to\nevaluate the request further. Once it has completed this evaluation one of the s initiate the\nPort process agaWina bity Mseenssdaingge a DR_.SwapMessageShall tDRSwapWait\nWaitMessage DR_SwapMessage\nA that receives a in response to a wait after receiving\n6th.e3 .12 .4 be f oWrea sietn diinng r aenostpheorn se to a VCON.N_Swap Message\nWaitMessage VCONN_SwapMessage VCONN_Swap\nVCONN_SwapMessage\nThe is used when responding to a to indicPaotert t Phaart tan er Should might be\npVo\nCO\ns\nN\nsi\nN\nb lSew ianp the future. This can occur in Van\nCO\ny\nN\nc\nN\na_sSew wahpeMree tshsaeg deevice receiving the needs to\nevaluate the request further. Once it has completed this evaluation one of the s initiate the\nPort process agWaainit bMy essesnadgieng a VCONN_Sw. apMessageShall tVCONNSwapWait\nWaitMessage VCONN_SwapMessage\nA that receives a in response to a wait after\nrePceoirvting the V bCOeNfoNr Seo suerncdeiSnhga alnlother Ac ceptMes.sage WaitMessage\nPort Partner Revision Version RevisionMessage Port Partner\nA that is currentlyR ethvies ion Versio n respond withW aani tMessa ge (rather than aS oft Re set ) if the\n's and , as reported in the , is earlier than R3.2 V1.1. A\n6su.p3p.o1rt2in.g5 an earlier Wait i ann dr espo nwsille n otto e xapnec tE an ter _USB M aned swsilal ggeenerate a in response.\nWaitMessage UFP Enter_USBMessage\nMode UFP\nThNe egotia te is used, by the , when respondUinFgP to an DF tPoS ihnoduicladte that entering the\nrequested USB might bEe nptoesrs_iUblSeB inM tehsesa fgueture. This can occur, for example, in any case where the needs\nto more power to enter the mode. Once the has completed this the initiate the Enter USB\nprDoFcePss again by sendWinagi taMn essage . Enter_USBMessageShall tEnterUSBWait\nWaitMessage Enter_USBMessage\nA that receives a in response to an wait after receiving\nt6he.3 .13 bSeofofrte sRenedsinegt a nMotehesrs age .\nSoft_ResetMessageMay Source Sink Port Partner Soft Reset\nSoft_ResetMessageShall Soft Reset Port Pair Section 6.8.1, \"Soft Reset and Protocol\nAEr ror\" Soft_Re setM beses aingietiated byH aeirtdh eRre stehteS hall or to its tHardRe rseeqtuesting a . The\nCRCReceiv eTimer cause a nRetryCou onf tthe connected (see\n). If the fails a be initiated within of the last\nSoft_ResetMessa gexepiring after Pr roettorcioels Lhaayveer been completed. Message\nMessage Soft_ResetMessage Source Sink\nA N egotiated is used to recover from errors; puttinMg othdea l Operati ocnounters to a knowSno sftta te\nRtoe sreetgain syncShorfot nRiezsaettion. The Explicit C ohnatsr naoct eNffeegcot toiant itohne or ; that is the\npreviously direction. Voltage and current rPeomrta Pina urtnncehranged. PE_S iNs Kun_Raeffaedctyed by\nPE_SR. HC_oRweeavdeyr after a has compSleetcetdio, na n8 .3.3.4, \"SOP Soft R eset and Pro otocccuorl sE, rirno orr Sdteart eto D riea-gersatmabsl\"ish PD\nCommunication and to bring state operation for both s back to either the or\nSoft_ResetM esstsaategse aMsa ayppropriate (see Source Sink Message ).\nSoft Reset Hard ResetSignalingShall Section 6.8.3, \"Hard Reset\"\nA be sent by either the or when there is a synchronization error. If\nthSeo efrtr_oRre sise ntoMte csosarrgeecStehda lbly the , be issued (see SOP* Packet Soft_Res).et\nMessage SOP Packet ShallSoft Reset Port Partner Soft_ResetMessage SOP\u2019 Packet\nASO P\u2019\u2019 Packet ShallSo ft Rese bte targeted at a speciCfiacb elen tPiltuyg depending on the type of used.\ns sent using s the only. s sent using /\nVCONsN Swap VCONN tShoeu crocreresponding Cab loen Plylu.g Protocol Layer MessageID\nVCONN Swap VCONN Source Cable Plug SOP\u2019\nPAaftcekre at Shall the Soft_ResetMe nsesaegdes to resetS tOhPe\u2019 Packet 's tCoa ebnlseu Prleu g Protocol Layer\nsynchronization. If after a the wants to communicate with a using\ns, it issue a using a in order to reset the 's . If\nPage 134 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nVCONN Source Cable Plug SOP\u2019\u2019 Packet Shall Soft_ResetMessage\nSOP\u2019\u2019 Packet Cable Plug Protocol Layer\nthe wants to communicate with a using s, it issue a\nu6s.i3ng. 1a 4 D ian toard_eRr teo sreesett Mthee ssage's .\nData_ResetMessageMay DFP UFP Shall\nAlternate Mode Port Partner VBUS USB4 Mode Shall\nTheD ata_Reset Message be sent by eMitahyer the or Dat aa_nRde setM reesssaegt eth \u00ae e USB data connection and exit all\ns with its while preserving the power on . capable ports support\nthe Data_Reset Message aSnhda ollt hNeort ports support the .\nThe\uf06c C ontract change the existing:\n\uf06c PDoawtae Rr ole Port DFP UFP\ns (Di.aet.,a w_Rheicshe tMes issa tgheeS hall or ) AcceptMessage\nShall VCONN Swap Data Reset\nThe receiver of the Da ta_Reset _Com prelestpeoMnde sbsya gseending an and then followAc tcheep ptrocess\noMuetslsinaegde in tGhoe ofodlCloRwCing steps. NeithAecrc ethpet sender nor receivePro rt initiateD aa ta_ResetMe ussnatgile the\nprocess is complete, and the has been sent. Following receipt of the\n, or DFPShal lfollowing the , depending which sends the :\n1) \uf06dThe : Port [USB 2.0]\n\uf06d Disconnect the[ USB' s3 .2] D+/DP-o sritgnals. [USB 3.2]\n\uf06d If operating in [USB4] removeP tohret 's Rx Terminations (se[eU SB4] ).\nIf operDaFtPing in UFPSha dlrlive the Alter'sn aSBteT MX otdoe a logic low (see ).\n2) Both the and exit all s if any.\n3) \uf06dReset theV cCaObNlNe: SourcePort UFP Shall UFPVCONN\nSection 7.1.15.1, \"UFP VCONN Power Cycle\"\nIf the is also the , then it run the Power Cycle process de-\n\uf06d scribeVdC iOnN N SourcePort DFP Shall. DFPVCONN\nSection 7.1.15.2, \"DFP VCONN Power Cycle\"\nIf the is also the , then it run the Power Cycle process de-\n\uf06d scribDeFdP inS hall VCONN . VCONN Source VCONN\nThteD ataR eset exitD tFhPe Shall Power Cycle process as the and be sourcing .\n4) \uf06dAfter t[hUeS B 2.0 ] :\n\uf06d ReconPnoerctt the D+[/UDS-B s i3g.n2a]ls. [USB4] Port [USB 3.2]\nIfD tahtea Rese wt as operating in D oFrP Shall reappDlya tthae_ Rese'ts_ CRoxm TeprlmetienMateiossnasg (esee ).\n[USB Type-C 2.4]\n5) The process is complete; the send a and enter the\n\u00ae\nIniUtiSaBto4r DiscoDvaetray _aRneds eEtnMtreys sFalogwe (See Valid). tSenderResponse Shall\nErrorRecovery\nIf the of the does not receive a response within it enter\n6th.e3 .15 D Satattea._Reset_Complete Message\nData_Reset_CompleteMessageShall DFP UFP Data Reset\nSection 6.3.14, \"Data_Reset Message\"\nThe be sent by the to the to indicate the completion of the\n6pr.o3ce.s1s 6(see Not_Supported Mes)s.age\nNot_SupportedMessageShall Port Cable Plug Message\nNot_SupportedMessage\nThSee ction 6.13, \"Mes sage App licabil ibtey \"sent by a or in reNspoto_nSsuep tpoo arnteyd Messag eit does not support.\nReturning a is assumed in this specification and has not been called out explicitly except\nin which defines cases where the is returned.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 135\n6.3.17 Get_Source_Cap_Extended Message\nGet_Source_Cap_ExtendedMessage Port Port Source\nCapabilities PortShall Source_Capabilities_ExtendedMessage Section 6.5.1,\nT\"Shoeu rce_Capabilities_Extended M essage\" is sent by a to request additional information about a 's\n. The respond by returning a (see\n6.3.18 Get_Status Me).ssage\nGet_StatusMessage Port SOP Port Partner\nThe Port Partne rShall is sent by a using Stat utos Mreeqsusaesgte the Section 6.5.'2s, p\"Sretasteunst Msteastsuasg. e\" Port\nAlertMessage Section 6.4.6, \"Alert Message\" Source Sink\nThe Should respondG beyt_ rSetatutrunsinMge sas age (see ). A that\nreceives an (see ) indicates that the or 's Status has changed\nand Get_Sta btues rMe-ersesaadg uesMinagy a Act.ive Cable SOP\u2019 SOP\u2019\u2019\nThe Active Cable Shall also be sent to anS tatusMessag teo get itSse pctrieosne 6n.t5 s.2ta, \"tuStsa utusisn Mg essag/e\" .\n6Th.e3 .19 FR _reSswponadp b yM reetusrsniangg ae (see ).\nFR_SwapMessageShall New Source tFRSwapInit Fast Role Swap\nSection 5.8.6.3, \"Fast Role Swap Detection\" Section 6.6.17.3, \"tFRSwapInit\" Fast Role SwapAMS\nThe R beN seewn tS bouy rtchee R wNiethwi nS ink after it has detected a\ntsFigRnSawl (aspeIen it Shall anFda st Role Swap Request ). The tFRSwapRx\nis necessary to apply E p OtoP the FR_Swap aMnde ssa d gtoe the and to re-synchPrHonYi zLea ythere state machines. The\ntime be measured from the time the has been sent for (max)\nuntil the last bit of thFeR _Swa opf tMhees sageShal l has been transmAictcteedp tbMy tehssea ge .\nThe recipient of thFea st Role Sw ap Po rt Par rtneseproSnhda blyl sending an Protoc.ol Layer Soft\nReset MessageIDCounter RetryCounter Protocol Layer\nAfter a succesFsifruslt Explicit Contra tchte s Sou rreceseSth tahellir respective CapsCounters (equivalent to a\n): resetting their , and state machines before attempting to\nestablish the Cable Plu. gAt this point the Good CRCM aelsssoa greeset its Discover Ide.n tityCommand\nThis ensuresF athsta Rt oolnel yS wthaep AMS N erwes Spoounrdcse wShitahl la R to thCeC New SinkShall.\nR CC\nPrior to the , the have d asserted on the wire and the have\nNpo atess:erted on the wire. R R R Source R Sink\n[USB Type-C 2.4] Fast Role SwapAMS\nThis is an incorrect assignment of p/ d (since p follows the and d follows the as defined\ninF ast Role SwapAMS) that Nise cwo SrroeucrtceedS bhya tlhle CC . R R New Sink\nShall CC R R DFP Host UFP Device Data Role VCONN SourceShall\nDuring the F, athset Role Swap change its wire resistor from d to p and the\nchange its wire resistor from p to d. The ( ), ( ) s and\nremaIninit uianlc ShoaunrgceedS hdouurilndg the VCO NpNr oScoeusrsc.e VCONN Swap\nInitial Source VCONN Fast Role\nSTwhea p avoid being the (by using the process) whenever not actively\ncommunicating with the cable, since it is difficult for the to maintain power during the\nNote: procesFsa.st Role Swap PDUSB Device\nAMS Hard\nRAe set [USB Typ ies -aC \" 2b.e4s]t Eerfrfoorrt R\" escooluvetiroyn to a situation where a has lost its external\npower. This process can occur at any time, even during an in which case error handling such as\nNote: or Fast Role Swap Ini twiaill lS binek triggered. VBUS\nvSafe5V\nDuring the process the does not disconnect even though drops below\n. Fast Role Swap\nFor\uf06c morSee icntfioornm 7a.1t.i1o3n, r\"eFgaastr dRionlge tShwea p\" process, refer to:\n\uf06c Section 7.2.10, \"Fast Role Swap\"\n\uf06c Section 8.3.3.19.5, \"Policy Engine in Source to Sink Fast Role Swap State Diagram\"\n\uf06c Section 8.3.3.19.6, \"Policy Engine in Sink to Source Fast Role Swap State Diagram\"\nPage 136 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Section 9.1.2, \"Mapping to USB Device States\" VBUS\n6.3.20 Get_PPS_Status for mapping to USB states.\nGet_PPS_StatusMessage Sink Source Port\nShall PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\"\nThe is sent by the to request additional information about a 's status. The\n6.3. r2e1spond by rGeteurtn_inCgo a untry_C odes (see ).\nGet_Country_CodesMessage Port Port Partner\n[ISO 3166] Port PartnerShall Country_CodesMessage Section 6.5.11,\nT\"Choeu ntry_Codes Message \" is sent by a to request the alpha-2 country codes its supports as\ndefined in . The respond by returning a (see\n6.3.22 Get_S).ink_Cap_Extended Message\nGet_Sink_Cap_Extended Sink Capabilities Message Port\nPort Sink Capabilities PortShall Sink_Capabilities_Extended\nMTheess age Section 6.5.13, \" S(Ginekt_ Capabilities_Exte Endxteedn Mdeedss)a ge\" is sent by a to request additional\ninformation about a 's . The respond by returning a\n6.3.23 (see Get_Source_Info Message ).\nGet_Source_InfoMessage Port Capabilities Capabilities\nPort Source PortShall Source_InfoMessage\nTSehcet ion 6.4.11, \"Sourc e_Info Me isss asegne\"t by a to request the type, maximum and present\nof the when it is operating as a . The respond by returning the (See\n6.3.24 Get_Revisio)n. Message\nGet_RevisionMessage Port SOP Revision Version\nPort Partner\nThe is sent by a using to request the and of the Power Delivery\nSpecPifoicrat tPioanrt intesr Shall supports. Message Section 6.4.12, \"Revision Message\"\nThe Get_Revision Mess aregsepMonady by returning a ReCvaibsileo nP lug (See Revision Version ).\nSOP\u2019 SOP\u2019\u2019\nThe also be sent to a to request the and of the Power\nDelivAecrtyiv Sep CeacbifliecaSthioanll it supports using / . Message Section 6.4.12, \"Revision Message\"\nThe respond by returning a Revision (see ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 137"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.4", "title": "Data Message", "page": 138, "level": 2, "parent_id": "6", "full_path": "6.4 Data Message", "tags": [], "text": "6.4 Data Message\nData MessageShall Message Header Data Object Data Message\nNumber of Data Objects Message Header\nA consist of a and be followed by one or more s. s are\neasily identifiable becausDe atthae Object D faietlad M ine stshaeg e is a non-zero value.\nThe\uf06cre arPeo mwearn yD atytap eOsb ojef ct PDO s used to compSoosuer ce Port s. SCoampaeb eilxitaimesples aSrien:k\n( ) used to expose a 's power or a 's power\n\uf06c Rreeqquuiersetm Deantats O. bject RDO Sink Port Negotiate Explicit Contract\n\uf06c Vendor Data Object (VDO) used by a to an .\n\uf06c BIST Data Object B D(O ) used toP HcoYn Lvaeyye vrendor specific information.\n\uf06c ( ) used for compliaBnacttee treysting.\n\uf06c Battery Status Data Object (BSDO) used to convey status iSnofuorrcmeatioSnin. k\nAlerDt aDtaat aO bOjbecjetct (ADO) used toD iantdai cMatees seavgeents occurring on thMee ssage H oera der . Message Type\nTable6.6, \"Data Message Types\" May\nTMhees staygpee oSfo urce Sink bCeaibnlge uPsluegd in a isS hdaelfli nNeodt by the 's Message field and\nis summarized in Message S. hTahlel Sent by column inSdOicPa tPeasc eknettities whichM essag seend the gMivaeny\n( SOP,* Pac koert ); entities not listed issue the corresponding . The \"Valid Start\nof Packet\" column indicates the s which only be issued in s and the s which\nbe issued in s. Table6.6 Data Message Types\nBits 4\u20260 Type Sent by Description Valid Start of\nPacket\nReserved N/A N/A\nReserved Shall Not\nAll values not explicitly defined are\n0_0000 Source_Capabilities Source Dual-Role Power Section 6.4.1.5 SOP\nand be used.\nRequest Sink Section 6.4.2 SOP\n0_0001 or See only\nBIST Tester Source Sink Section 6.4.3 SOP*\n0_0010 only See only\nSink_Capabilities Sink Dual-Role Power Section 6.4.2 SOP\n0_0011 , or See\nBattery_Status Source Sink Section 6.4.5 SOP\n0_0100 or See only\nAlert Source Sink Section 6.4.6 SOP\n0_0101 or See only\nGet_Country_Info Source Sink Section 6.4.7 SOP\n0_0110 or See only\nEnter_USB DFP Section 6.4.8 SOP*\n0_0111 or See only\nEPR_Request Sink Section 6.4.9 SOP\n0_1000 See\nEPR_Mode Source Sink Section 6.4.10 SOP\n0_1001 See only\nSource_Info Source Section 6.4.11 SOP\n0_1010 or See only\nRevision Source Sink Cable Plug Section 6.4.12 SOP*\n0_1011 See only\n0_1100 Reserved N/A , or See N/A\nReserved Shall Not\n0_1101\u20260 All values not explicitly defined are\nVendor_Defined Source Sink Cable Plug Section 6.4.4 SOP*\n_1110 and be used.\n0 1111 Reserved N/A , or See N/A\nReserved Shall Not\n1_0000\u20261 All values not explicitly defined are\n_1111 and be used.\nPage 138 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.1 Capabilities Message\nCapabilitiesMessage SPR Mode EPR Mode\nCapabilitiesMessage SPR Mode Section 6.5.15, \"EPR Capabilities Message\"\nThere are twCaop daibstiliintciets Message s: oneE PuRse Md owdheile in and another while in . This\nsection defines the s specific to the and\nd6e.f4in.e1s .t1he P ower Ds sapetcaif iOc tbo jtehec ts .\nSection 6.4.1.5, \"SPR Source Capabilities Message\" Section 7.1.3, \"Types of Sources\" Power\nData Object PDO CapabilitiesMessage SPR Mode EPR Mode\nSections and describes the\ns ( s) usedP oinw tehre D caotnas Otrbujcetciton of a for both and .\nMessage Header Power Data Object\nThere are three types of s. They contain additional information beyond that encoded in the\n\uf06c Fixed Su ptop liydentify each of the three types of s:\n\uf06c Variable Sup pisly used to expose well-regulated fixed voltage power supplies.\n\uf06c Battery Supply is used to expose very poorly regulated power supplies. VBUS\nisA uusgemd eton teexdp Pooswe ebra tDteartiae Os bthjeactt can be directly connected to .\nThe\uf06cre arSeP tRh PrePeS types of s:\nAdvertise Source\nis used to expose a power supply whose output voltage can be programmatically adjusted over\n\uf06c SthPeR AVS EdP vRo AltVagSe range and limited by the to a programmable current limit.\nAdvertise Fixed Supply AVS\nand are used to expose a power supply whose output voltage can be adjusted over the\nd voltage range but otherwise is equivalent to a ( does not support a\nPower Dpartoag Orbajmecmtable current limit). Capabilities May\nPower Role Swap\ns are also used to expose additional that be utilized, such as in the case of a\n. Power Data Object Shall Source Capabilities SinkMay\nCapabilities Request Data Object Power Data Object\nA lNiset goof toiantee or more Explicsi t Cont braec stent by the to convey its . The then\nrequest one of these by returning a that contains an index to a ,\nto a mutually agreeable . PDO Shall\nWhere Maximum and Minimum voltage and current values are given in s these be taken to be absolute\nvaluSeos.urce SinkShall NotNegotiate\nAttached [USB Type-C 2.4] SourceShall\nTCahpea bilities and a power level that would allowA tthtae cchuerdrent to exScienekdS thhael ml aximum current\nsupported by their receCpatapcalbeisl iotire tshe pluSgo u(srecee ). TheS ection 4.4, \"C alibmlei tT iytsp eo Dffeerteecdt ion\"\nto the maximum current supported by its receptacle and plug. A only make a\nSreoquurceest from any of the Capabil oitfifeesred by the Sou. rFcoer_ fCuarpthaebri ldietiteasilsM seeses age Sink .\nSink_CapabilitiesMessage Power Data Object\nTasb elexp6o.7s,e \" Pthoewire rp oDwatear Object\" by sending a . s expose their power\nrequirements by sending a . Both are composed of several 32-bit s\n(see ). Table6.7 Power Data Object\nBit(s) Description\nValue Parameter\nFixed Supply\nBattery\n00b (Vmin = Vmax)\nVariable Supply Battery\n01b\nB31\u202630 Augmented Power Data Object APDO\n10b (non- )\nCapabilities PDO\n11b ( )\nB29\u20260 Specific Power are described by the s in the following sections.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 139\nAugmented Power Data Object APDO PDO\nPower Data Object APDO\nThe Table6.8, \"Augmented Po w( er Da)t ais O dbejfeicnte\"d to allow support for more than the four types by\nextending the field from 2 to 4 bits when the B31\u2026B30 are 11b. The generic structure is\nshown in Table6.8 Augm.ented Power Data Object\nBit(s) Description\nValue Parameter\nAugmented Power Data Object APDO\nSPR PPS\nB31\u202630 11b ( )\nEPR AVS\n00b\nSPR AVS\n01b\nB29\u202628\nReserved\n10b\nCapabilities APDO\n11b\nB27\u20260 Specific Power are described by the s in the following sections.\nPage 140 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.1.2 Source Power Data Objects\nPDO Source SPR Capabilities EPRCapabilitiesMessage\nT6h.4is. s1e.c2ti.o1n lists the typ eFsi oxfe d Ssu a pply P coanw ueser i nD aant a Object or .\nTable6.9, \"Fixed Supply PDO \u2013 Source\" Fixed Supply PDO Section 7.1.3, \"Types of Sources\"\ndescribes the (00b) . See for\nthe electrical Prerqouviidreerments of thveS paofew5eVr supply. vSafe5VFixed SupplyPower Data Object\nFixed SupplyPower Data Object Shall\nSince all USB s support , the required is also used to\nconvey additional information that is returned in bits 29\u202623. All other s set\nbits 2S9o\u2026u2r3ce to zero. Capabilities Voltage Shall Maximum Current\nShall Dual-Role Power Capabilities\nFPoorw ae r Role offering no , the field (B19\u202610) be set to 5V and the field\nbe set to 0mA. This is used in cases such as a device which offers no in its default\nSou orcre when exteSrinnkal power is required to offVeBr UpSower. Voltage\nShall Maximum Current Shall\nWSohuercne a waSnintsk a , copnSsnukmSiunsgp power from , to go to its lowest power state, the field\n(B19\u202610) be set to 5V and the field be set to 0mA. This is used in cases where the\nwants the to draw Tab.le6.9 Fixed Supply PDO \u2013 Source\nBit(s) Field Description\nFixed Supply Fixed SupplyPDO\nDual-Role Power Dual-Role Power\nB31\u202630 00b -\nUSB Suspend Supported\nB29 Set to \u20181\u2019 for device.\nUnconstrained Power\nB28 Set to \u20181\u2019 if USB suspend is supported.\nUSB Communications Capable USB Communication\nB27 Set to \u20181\u2019 if unconstrained power is available.\nDual-Role Data Dual-Role Data\nB26 Set to \u20181\u2019 if capable of s capable\nUnchunked Extended Messages\nB25 Set to \u20181\u2019 foUrn ac hunked Extende dde Mviecses.age\nSupported\nB24 EPR Capable Set to \u20181 if EPR Capable s are supported.\nReserved Reserved Shall\nB23 Set to \u20181 if .\nPeak Current\nB22 \u2013 be set to zero.\nVoltage\nB21\u202620 Peak Current value.\nMaximum Current\nB19\u202610 Voltage in 50mV units\nB9\u20260 Maximum current in 10mA units\n6.4.1.2.1.1 Dual-Role Power\nDual-Role Power Shall Port Dual-Role Power PR_SwapMessage\nThe Static bit bSeh saeltl when the is capable i.e., supports the Po wer Role.\nDual-Role Power Source_CapabilitiesMessage Dual-Role Power\nTSihniks _iCs aap abilit cieaspaMbeislistayg wehSihcahl l remain fixed for a givDeuna dl-eRvoiclee Preogwaerdrless of the device's present .\nISfo tuhrec e_CapabilitiesMe bssiat gise set tDo uoanle- Rino tleh eP ower Sink_ Capabili ttihees MessageShall bit in the\nalso be set to one. If the bit is set to zero in the\n6.4.1.2.1.2 U tShBe Suspend Supp boirt tine dthe also be set to zero.\nExplicit Contract USB Communications Capable USB Suspend\nSupported Sink Shall [USB 2.0] [USB 3.2] [USB4]\n[PUriSoBr Ttoy pane- C 2.4] [USBBC o 1r. 2w]hen the Explicit Contract Neg obtiita itse sdet to zero, the\nflag is undefined and s follow the rules for suspend as defined in , , ,\n\uf06c USB o Sru spend Supp.o Artfteedr an S ihnaksS bheaelnl [:USB 2.0] [USB 3.2] [USB4]\nMay pSnkSusp PDUSB\nIHf uthbeM ay pHubSusp flag is set, then the Se ction f7o.2ll.o3w, \" Sthinek Standby\", or\nrules for suspend and resume. A PDUSB Peripheral draw up to during suspend; a\ndraw up to during suspend (see ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 141\n\uf06c USB Suspend Supported SinkShall Not [USB 2.0] [USB 3.2]\n[USB4] May Negotiated\nIf the flag is cleared, then the apply the , or\nNote: rules for suspend and continue to draw the power.\nSink MayWhen USB is suSsopuerncdeed, the USB device state is also suspUeSnBd Seuds.pend Supported\nRequestMessage Section 6.4.2.5, \"No USB Suspend\"\ns indicate to the that they would prefer to have the flag cleared by setting\nt6h.e4 N.1o. 2US.1B. 3Suspend flag in aU nconst rained ( Pseoew er ).\nUnconstrained Power Shall\nThe bit be set when an external source of power is available that is sufficient to\nadequately power the system while charging external devices, or when the device's primary function is to charge\nexternal deUvnicceosn.strained Power Should\nTo s\uf06cet the AC Supply Charg beirt because of an external souSricnek, the external source of power be either:\n\uf06c An , e.g., aP DUSB Hu, dbirectly connected to the .\n\uf06dOr, in theS coausrec eof a Uncon:strained Power\n\uf06d A PD Swoiuthrc iets Unconstr abiint esdet P. ower\n6.4.1.2.1.M4ultiple PD USs Bal lC woimth mtheuinr ications Capable bits set.\nUSB Communications Capable Shall Source\nThe bit only be set for s capable of communication over the USB data\n6lin.4es.1 (e.2.g..1, D.5+/- or SS Tx/Rx )D. ual-Role Data\nDual-Role Data Shall Port Dual-Role Data DR_SwapMessage\nStatic Shall Power Role\nTheD ata Role D buiatl -Role bDea steat when the is Source_Ca cpaapbabillieti ie.es.,M ite ssusapgpeorts tDheu al-Role Da ta .\nThisS iisn ak _Capab cialpitaiebsiliMtye swsahgicehS hall remain fixed for a givenD dueavlic-Re orleeg aDradtlaess of the device's present\nSoor urce_Capa. bIfi ltihteie sMessage D ubaitl -iRs oselet tDoa otane in the Sink_Capabilities Message Sthhae ll bit in\nthe also be set to one. If the bit is set to zero in the\n6.4.1.2.1.6 U tnhceh unked Exten bdite idn tMhee ssages Suppor ted also be set to zero.\nUnchunked Extended Messages Supported Shall Port Extended\nMessage Data Size MaxExtendedMsgLegacyLen Unchunked Extended Message\nThe bit be set when the can send and receive\n6.4.1.2s. 1w.7ith > EPR Mode Capable bytes in a single, .\nEPR Capable Static Shall Source\nEPR Mode\nThe bit is a bit that be set if the is designed to supply more than 100W and operate\nin . EPR Source\nWh\uf06cen this bit is set, aSnP R ModeSha:ll EPR_Source_CapabilitiesMessage\nEPR_Get_Source_CapMessage\nOperating in only send an in response to an\n\uf06c May EPR M ode Sink EPR Capable\n6.4.1.2.1.8 only enter Peak w Chuernr tehne tCable and the also report that they are .\nFixed Supply Operating\nCurrent IoC RDO\nThe USB Power Delivery is only required toS oduerlicveer the amount of current requested in the\nfield ( ) of an . In some usages however, for example computer systems, where there are short\nbursts of activity, it might be desirable to overload the for short periods.\nSection 7.2.8, \"Sink Peak Current Operation\"\nFor example, when aP ceoamkp Cuuterrr esnytstem tries to maSionutracien avAerdavgeer tpisoewer consumption, the higher the peak current,\nthe longer the low cPuorrrtent P(soeret Shall Not ) period neededS itnok maintaiHnu sbuch\naverage power. The field allows a to this additional capability. This capability is\nintended for direct to connections only and be offered to downstream s via a .\nPage 142 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFixed SupplyPDOShall Peak Current Capabilities\nShallAdvertise Peak Current Fixed SupplyPDO Table6.10, \"Fixed\nEPovwereyr Source Peak Curr ent Ca cpoanbtialiitny a\" field. Supplies that want to offer a set ofS ohvaelrlload\nthis througFhix tehde S upplyPDO field in the corresponding (see\nSource_C)a. Spuapbpilliietise tsh_Eatx dteon ndoetd sMupepssoargt ean oveSreloctaido nc a6p.5a.b1i, lity set these bits to\n\"0S0obu irnc et_hCea cpoarbrielistpieosn_dEixntegn ded Message \" Sh. aSullpplies that support an exteSnidnekd overload capability specEifxiteedn idne tdh e\nPCaeapkaCbuilritrieenstS1h\u2026a3ll fields of the Get_Source_Cap_ExtendedMe ssage (see Capabilities\nSource ) also set these bits to 00b. s wishing to utilize these\nfirst send the to determine what , if any are\nsupported by the . Table6.10 Fixed Power Source Peak Current Capability\nBits 21\u202620 Description\nIoC Source_Capabilities_ExtendedMessage\nGet_Source_Cap_ExtendedMessage\nPeak current equals (default) or look at the (send\n00 Capabilities\n)\nIoC IoC\nOverload :\nIoC IoC\n1. Peak current equals 150% for 1ms @ 5% duty cycle (low current equals 97% for 19ms)\n01 IoC IoC\n2. Peak current equals 125% for 2ms @ 10% duty cycle (low current equals 97% for 18ms)\nCapabilities\n3. Peak current equals 110% for 10ms @ 50% duty cycle (low current equals 90% for 10ms)\nIoC IoC\nOverload :\nIoC IoC\n1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms)\n10 IoC IoC\n2. Peak current equals 150% for 2ms @ 10% duty cycle (low current equals 94% for 18ms)\nCapabilities\n3. Peak current equals 125% for 10ms @ 50% duty cycle (low current equals 75% for 10ms)\nIoC IoC\nOverload :\nIoC IoC\n1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms)\n11 IoC IoC\n2. Peak current equals 175% for 2ms @ 10% duty cycle (low current equals 92% for 18ms)\n3. Peak current equals 150% for 10ms @ 50% duty cycle (low current equals 50% for 10ms)\n6.4.1.2.2 Variable Supply (non-Battery) Power Data Object\nTable6.11, \"Variable Supply (non-Battery) PDO \u2013 Source\" Variable Supply Battery PDO\nSource Section 7.1.3, \"Types of Sources\"\ndescribes a (non- ) (10b) for\na . See Shall for the electricSahl arellquirements of the power supply.\nShall Shall\nTNhoet voltage fields Minim deufmin eV tohleta rganege that output voSlhtaaglle N ot fall withinM. Tahxiism duomes V nooltt iangdeicate the voltage that\nwMiilnl ibme usmup Vpoliletda,g eexcept it S hfaallll w Niothtin that range. The absoluMtea vxoimltaugme, Vinocltluadgieng any voltage variation,\nfall below the field value and exceed the field value. The\nfield vaTluaeb le6.11 V baer ilaebssle t hSaunp 8p0ly% ( noof tnh-eB attery) PDO \u2013 Sour fcieeld value.\nBit(s) Field Description\nVariable Supply Variable Supply Battery PDO\nMaximum Voltage\nB31\u202630 01b - (non- )\nMinimum Voltage\nB29\u202620 Maximum voltage in 50mV units\nMaximum Current\nB19\u202610 Minimum voltage in 50mV units\nB9\u20260 Maximum current in 10mA units\n6.4.1.2.3 Battery Supply Power Data Object\nTable6.12, \"Battery Supply PDO \u2013 Source\" Battery Supply PDO Source Section 7.1.3,\n\"Types of Sources\"\ndescribes a (01b) for a . See\nS fhora ltlhe electrical reqBuaitrteemryents of the power supBpaltyt.eryShall\nShall Not\nMThine ivmolutmag eV foiletladgs e represent tShhea ll Not 's voltage raMnagxei.m Thuem Voltag e be capable of supplying the Power\nvalue over the entire voltage range. The absolute voltage, including any voltage variation, fall below the\nNote: Batte friey lSdu vpaplluyeP aDnOd exceed the field value.\nThe uses power instead of current.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 143\nSinkMay Battery\nThe monitor the vToaltbalgee6. .12 Battery Supply PDO \u2013 Source\nBit(s) Field Description\nBattery Supply Battery SupplyPDO\nMaximum Voltage\nB31\u202630 10b -\nMinimum Voltage\nB29\u202620 Maximum voltage in 50mV units\nMaximum Allowable Power\nB19\u202610 Minimum voltage in 50mV units\nB9\u20260 Maximum allowable power in 250mW units\nPage 144 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.1.2.4 Augmented Power Data Object (APDO)\nShall\nSPR PPS Mode SPR AVS Mode EPR AVSMode Maximum Current\nThe voltage fields define the output voltage raSnhgael olver which the power supply A bdev eardtjiusestable in 20mV steps\niSne ction 7.1.3, \"Ty paensd o 1f0 S0omurVc esst\"eps in both and . The field contains\nthe current the Programmable Power Supply be capable of delivering over the d voltage range. See\n6.4.1.2.4.1 SPR fo Pr trhoeg erleacmtrimcaal rbelqeu iPreomweenrts Souf tphpe lpyo wAePrD suOpply.\nTable6.13, \"SPR Programmable Power Supply APDO \u2013 Source\" SPR PPS APDO\nSource SPR Mode\nbelow describes the (1100b) for a\noperating in Table a6n.1d3 s u SpPpRly Pinrgo 5grVa umpm toa 2b1leV P. ower Supply APDO \u2013 Source\nBit(s) Field Description\nAPDO Augmented Power Data Object APDO\nSPR PPS SPR PPS\nB31\u202630 11b \u2013 ( )\nPPS Power Limited PPS\nB29\u202628 00b \u2013\nB27 Reserved SReet steor \u2018v1e\u2019 dwheSnh all Power Limited\nMaximum Voltage\nB26\u202625 \u2013 be set to zero.\nB24\u202617 Reserved MRaexsiemrvuemd voSlhtaaglel in 100mV increments\nMinimum Voltage\nB16 \u2013 be set to zero.\nB15\u20268 Reserved MRiensiemruvmed voSlthaaglel in 100mV increments\nB7 Maximum Current \u2013 be set to zero.\nB6...0\nMaximum current in 50mA increments\nPPSAPDO Sink Directed Charge Battery Sink\nBattery May Sink\nThe is used primarily for Directed Charge of a in the . When applying a\ncurrent to the greater than the cable supports, a high efficiency fixed voltage scaler be used in the\nt6o. 4re.1du.2ce.4 th.1e .c1able current. PPS Power Limited\nPPS Power Limited SPR PPSSourceShall PPS Power\nLimited Section 7.1.4.2, \"SPR Programmable Power Supply (PPS)\"\nWhen the bit is set, the operate in the same way as if the\n\uf06c M biaty is clear (see Source PDP Optiona wlith the below exceFpigtuiorne: 7.7,\n\"SPR PPS Constant Power\"\nsupply power that exceeds the 's rated within the operating area in\nPPS Power Limited . SPR PPSSourceShall Maximum Current\nMaximum Voltage Advertise APDO\nWhen the bit is cleared, the deliver the field value up\nto thSeP R PPSSourceShall N aost dR iDnO its .Operating Current\nMaximum Current APDO Operating Current\nSTohuer ce PDP reject an with an field value that is less than or equal to the\nfield value in the even if the requested field value is greater than the\n's /requested Output voltage.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 145\n6.4.1.2.4.2 SPR Adjustable Voltage Supply APDO\nTable6.14, \"SPR Adjustable Voltage Supply APDO \u2013 Source\" SPR AVS APDO Source\nSPR Mode\nbelow describes the (1110b) for a\noperating in andT asubplepl6y.i1n4g 9SVP Ru pA tdoj u2s0tVa.b le Voltage Supply APDO \u2013 Source\nBit(s) Field Description\nAPDO Augmented Power Data Object APDO\nSPR AVS\nB31\u202630 11b \u2013 ( )\nTable6.10, \"Fixed Power Source Peak Current\nB29\u202628 SPPeRa Ak VCSurrent 10b \u2013\nCapability\"\nPeak Current (see\nB27\u202626 Reserved Reserved Shall\n))\nB25\u202620 Maximum Current 15V \u2013 be set to zero.\nMaximum Current Fixed SupplyPDO\nFor 9V \u2013 15V range: Maximum current in 10mA units equal to the\nB19\u202610\nfield of the 15V\nMaximum Current 20V Maximum Current Fixed SupplyPDO\nFor 15V \u2013 20V range: MaSxPimRu AmV Scurrent in 10mA units equal to the\nB9\u20260 field of the 20V , set to 0 if the\nmaximum voltage in the range is 15V.\n6.4.1.2.4.2.1 Peak Current\nPeak Current Peak Current Section 6.4.1.2.1.8, \"Peak\nCurrent\" Table6.10, \"Fixed Power Source Peak Current Capability\"\nThe field follows the same definition as for the field (see\n6.4.1.2 .a4n.d3 EPR Adjustable Voltage Supply A.PDO\nTable6.15, \"EPR Adjustable Voltage Supply APDO \u2013 Source\" EPR AVS APDO Source\nEPR Mode\nbelow describes the (1101b) for a\noperating in anTd asbulpep6ly.1in5g 1E5PVR uApd tjou s4t8aVb.l e Voltage Supply APDO \u2013 Source\nBit(s) Field Description\nAPDO Augmented Power Data Object APDO\nEPR AVS\nB31\u202630 11b \u2013 ( )\nTable6.16, \"EPR AVS Power Source Peak Current\nB29\u202628 EPPeRa kA VCuSrrent (Source EPR AVS) 01b \u2013\nCapability\"\nPeak Current (see\nB27\u202626 Maximum Voltage\n)\nB25\u202617 Reserved MRaexsiemrvuemd voSlhtaaglel in 100mV increments\nMinimum Voltage\nB16 \u2013 be set to zero.\nPDP PDP\nB15\u20268 Minimum voltage in 100mV increments\nB7\u20260 in 1W increments\n6.4.1.2.4.3.1 PDP\nPDP Shall AVSPort PDP\nThe Sectio fnie 1ld0 .2.3.3, c\"oOnpttaioinn athl Ne orm ative' sE xtend.ed Power Range (EPR)\" Figure 10.6, \"Valid EPR AVS Operating\nRegion\" PDP AVSAPDO\nSee and\n6.4.1.2 f.o4r. 3m.o2re information r ePgeaardkin Cgu hrorwe nt in the relates to maximum available current.\nEPR AVS Operating\nCurrent IoC AVSRDO\nThe USB Power Delivery is only required to deSloivuerrc ethe amount of current requested in the\nfield ( ) of an . In some usages however, for example computer systems, where there are short\nbursts of activity, it might be desirable to overload the for short periods.\nSection 7.2.8, \"Sink Peak Current\nFOopre reaxtaimonp\"le, whePne aa kco Cmuprruetenrt s(ySsotuermce t rEiPesR t Ao VmSa)intain averageS poouwrceer coAndsuvemrtpitsieon, the higher the peak current,\nthe longer the low current period needed to maintain such average power (see\n). The field allows a to this additional capability. This\nPage 146 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPort Charger Shall Not Sink\nHub\ncapability is intended for direct to connections only and be offered to downstream s via\na .EPR AVSAPDOShall Peak Current (Source EPR AVS)\nCapabilitiesShallAdvertise Peak Current (Source EPR AVS)\nEEPveRr Ay VSAPDO T able6 .c1o6n, t\"aEiPnR a AVS Power Source Peak Current Ca fpiealbdi.l Situyp\"plies that want to offer a set of\noverload S hall this through the EPR AVSAPDO field in the corresponding\n(see Sour. cSeu_pCpalpieasb tihliatti edso_ Enxotte snudpepdort an\nMoveesrslaogaed capaSbeiclittiyo n 6.5.1 s, e\"tS othuercsee_ bCiatsp atob i0li0tibe si_nE txhtee ncdoerdre Mspeossnadgien\"g Shall . Supplies thaSti nskupport an\nextended oveErxloteandd ceadp Caabpilaitbyi lsitpieesciSfiheadl lin the PeakCuGrerte_nSto1u\u2026rc3e f_iCealdps_ Eofx ttehne dedMessage\nCapabilit (iessee Source ) set these bits to 00b. s wishing to\nutilize these first send a to determine what\n, if any are supTpaobrltee6d .b1y6 t hEeP R AVS .Power Source Peak Current Capability\nBits 21\u202620 Description\nIoC Source_Capabilities_ExtendedMessage\nGet_Source_Cap_ExtendedMessage\nPeak current equals (default) or look at the (send\n00 Capabilities\n)\nIoC IoC\nOverload :\nIoC IoC\n1. Peak current equals 150% for 1ms @ 5% duty cycle (low current equals 97% for 19ms)\n01 IoC IoC\n2. Peak current equals 125% for 2ms @ 10% duty cycle (low current equals 97% for 18ms)\nCapabilities\n3. Peak current equals 110% for 10ms @ 50% duty cycle (low current equals 90% for 10ms)\nIoC IoC\nOverload :\nIoC IoC\n1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms)\n10 IoC IoC\n2. Peak current equals 150% for 2ms @ 10% duty cycle (low current equals 94% for 18ms)\nCapabilities\n3. Peak current equals 125% for 10ms @ 50% duty cycle (low current equals 75% for 10ms)\nIoC IoC\nOverload :\nIoC IoC\n1. Peak current equals 200% for 1ms @ 5% duty cycle (low current equals 95% for 19ms)\n11 IoC IoC\n2. Peak current equals 175% for 2ms @ 10% duty cycle (low current equals 92% for 18ms)\n3. Peak current equals 150% for 10ms @ 50% duty cycle (low current equals 50% for 10ms)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 147\n6.4.1.3 Sink Power Data Objects\nPDO Sink SPR EPRCapabilitiesMessage\nT6h.4is. s1e.c3ti.o1n lists the typ eSsi onf k Fisx ae d S ucapnp ulsye iPn oanw er oDr ata Object .\nTable6.17, \"Fixed Supply PDO \u2013 Sink\" SinkFixed Supply PDO Section 7.1.3, \"Types of Sources\"\nSinkShall Voltage\nOperational Current describes the (00b) . See\nfor the electrical requirements of the power supply. The set the field to its required vSoilntakge and\nthe field to its required opeSraintking current. Required operating current is defined as the\namount of current a given device needs to be functional. This value could be the maximum current the will\never require oCro cnosuulmde bre sufficienvt Stoa foep5eVrate the inv oSnaef eo5f VitsF imxeodd Seus popfl oypPeorwateiro Dn.ata Object\nFixed SupplyPower Data Object\nSSihnaclel all USB s support , the required is also used to\nconvey additional information that is returned in bits 29 through 20. All other s\nSsientk bits 29\u202620 to zero. Source Voltage Shall Operational Current\nShall\nFor a requiring no power from the , the field be set to 5V and the\nfield be set to 0mA. Table6.17 Fixed Supply PDO \u2013 Sink\nBit(s) Field Description\nFixed Supply Fixed SupplyPDO\nDual-Role Power Dual-Role Power\nB31\u202630 00b -\nHigher Capability\nB29 Set to \u20181\u2019 if supported\nUnconstrained Power\nB28 Set to \u20181\u2019 if Higher Capability supported\nUSB Communications Capable USB Communication\nB27 Set to \u20181\u2019 if Unconstrained Power supported\nDual-Role Data Dual-Role Data\nB26 Set to \u20181\u2019 if s Capable\nFast Role Swap USB Type-C [USB Type-C\nB25\n2.4]\nrequired current (see also\nValue Description\n):\nFast Role Swap required USB Type-C\nFast Role Swap\nCurrent\nPort\nB24...23 00b not supported (default)\n01b Default USB\n10b 1.5A@5V\nReserved R1e1sberve3d.0AS@ha5lVl\nVoltage\nB22...20 \u2013 be set to zero.\nOperational Current\nB19\u202610 Voltage in 50mV units\nB9\u20260 Operational current in 10mA units\n6.4.1.3.1.1 Dual-Role Power\nDual-Role Power Shall Port Dual-Role Power PR_SwapMessage\nStatic Shall Power Role\nThe Dual-Role Powe brit be set when theS ourc ies _CapabilitiesMe scsaapgaeble i.eD.,u saulp-pRoorlets P thoew er .\nTSihniks _iCs aap abilit cieaspaMbeislistayg wehSihcahl l remain fixed for a givDeuna dl-eRvoiclee Preogwaerdrless of the device's present .\nISfo tuhrec e_CapabilitiesMe bssiat gise set tDo uoanle- Rino tleh eP ower Sink_ Capabili ttihees MessageShall bit in the\nalso be set to one. If the bit is set to zero in the\n6.4.1.3.1.2 H tihgeh er Capability bit in the also be set to zero.\nSink vSafe5V Higher\nCapability Shall\nIn the case that the needs more than (e.g., 15V) to provide full functionality, then the\n6.4.1.3.1 .b3it be set. Unconstrained Power\nUnconstrained Power Shall\nThe bit be set when an external source of power is available that is sufficient to\nadequately power the system while charging external devices, or when the device's primary function is to charge\nexternal devices.\nPage 148 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nUnconstrained Power Should\nTo s\uf06cet the AC Supply Charg beirt because of an external souSricnek, the external source of power be either:\n\uf06c An , e.g., aP DUSB Hu, dbirectly connected to the .\n\uf06dOr, in theS coausrec eof a Uncon:strained Power\n\uf06d A PD Swoiuthrc iets Unconstr abiint esdet P. ower\n6.4.1.3.1.M4ultiple PD USs Bal lC woimth mtheuinr ications Capable bits set.\nUSB Communications Capable Shall Sink\nThe bit only be set for s capable of communication over the USB data\nl6in.4es.1 (e.3.g..1, D.5+/- or SS Tx/Rx )D. ual-Role Data\nDual-Role Data Shall Port Dual-Role Data DR_SwapMessage\nStatic Shall Power Role\nTheD ata Role D buiatl -Role bDea steat when the is Source_Ca cpaapbabillieti ie.es.,M ite ssusapgpeorts tDheu al-Role Da ta .\nThisS iisn ak _Capab cialpitaiebsiliMtye swsahgicehS hall remain fixed for a givenD dueavlic-Re orleeg aDradtlaess of the device's present\nSoor urce_Capa. bIfi ltihteie sMessage D ubaitl -iRs oselet tDoa otane in the Sink_Capabilities Message Sthhae ll bit in\nthe also be set to one. If the a bit is set to zero in the\n6.4.1.3.1.6 F athset Role Swap US bBit iTny thpee -C Current also be set to zero.\nFast Role Swap required USB Type-C Current Shall Sink\nFast Role Swap\nThe field indicate the current level the will require after\na Initial Source hSahsa blel eNno tperformed.Fast Role Swap Request Fast Role Swap required USB Type-C Current\nThe transmit a if the\nfield is set to zero.New Source vSafe5V R Shall USB Type-C\nNew Sink New Source Shall Not\nInitially whFeanst t Rhoel e Swap apRplies it willN heawv eS ou d r acseserted but Fast R porloev Siwdea pthAeM S Secti ocunr 6r.e3n.1t9 ,\ni\"nFdRi_cSawteadp bMye tshsea ge\" in this fUieSldB. TIfy tphee-C is not ableR to Sshuaplplly this level of current, it\nperform a Fast Role. W Swheanp r p e iqsu aisrseedr tUeSdB b Ty ythpee -C Current during the (see\n), the value of current indicated by p be the same or greater than that\n6in.d4ic.a1t.e3d. i2n the Variable Supply (non-Batter fyie)ld P. ower Data Object\nTable6.18, \"Variable Supply (non-Battery) PDO \u2013 Sink\" Variable Supply Battery PDO\nSink Section 7.1.3, \"Types of Sources\"\ndescribes a (non- ) (10b) used\nby a . See Shall for the electrical requSiirnekments of the power supplyO.perational\nCurrent Shall Sink\nThe voltage fields be set to the outpSuhta vllo Nltoatge range that thMe inim ruemqu Viroeltsa tgoe operate. The Shall Not\nfieMlda ximu bme sVeotl ttoa gthee operational current that the requires at the given voltage range. The absolute\nvoltage, including any voltage variation, fall below the Sink field value and\nexceed the Sink field value. Required operating current is defined as the amount of current a given\ndevice needs to be functional. This value could be the maximum current the will ever require or could be\nsufficient to operate the T ianb olene6 .o1f8 it sV maroidaebsl eo fS ouppeprlayt i(onno.n-Battery) PDO \u2013 Sink\nBit(s) Field Description\nVariable Supply Variable Supply Battery PDO\nMaximum Voltage\nB31\u202630 01b - (non- )\nMinimum Voltage\nB29\u202620 Maximum voltage in 50mV units\nOperational Current\nB19\u202610 Minimum voltage in 50mV units\nB9\u20260 Operational current in 10mA units\n6.4.1.3.3 Battery Supply Power Data Object\nTable6.19, \"Battery Supply PDO \u2013 Sink\" Battery Supply PDO Sink Section 7.1.3,\n\"Types of Sources\"\ndescribes a (01b) used by a . See\nfor the electrical requirements of the power supply.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 149\nShall Sink Operational Power\nShall Sink\nThe voltage fields be set to tShhea ollu Ntpoutt voltage rangeM thianti mthue m Vo rletaqgueires to operate. ThSeh all Not\nMfiealdxi mum bVeo lsteatg teo the operational power that the requires at the given voltage range. The absolute voltage,\nincluding any voltage variation, fall below the field value and exceed the\nNote: B faietltde rvya Sluuep.p lyPDO\nOnly the uses power instead of current.\nSink Sink\nRequired operating power is defined as the amount of power a given device needs to be functional. This value could\nbe the maximum power the will ever require or could be sufficient to operate the in one of its modes of\noperation. Table6.19 Battery Supply PDO \u2013 Sink\nBit(s) Field Description\nBattery Supply Battery SupplyPDO\nMaximum Voltage\nB31\u202630 10b -\nMinimum Voltage\nB29\u202620 Maximum voltage in 50mV units\nOperational Power\nB19\u202610 Minimum voltage in 50mV units\nB9\u20260 Operational Power in 250mW units\n6.4.1.3.4 Augmented Power Data Objects\nSection 7.1.3, \"Types of Sources\"\nSee for the eSlheactlrlical requirements of the power supply. Sink\nThe Maximum and Minimum voltage fields be set to the output voltage range that the requires to\no6p.4er.1at.e3..4.1 SPR Programmable Power Supply APDO\nTable6.20, \"SPR Programmable Power Supply APDO \u2013 Sink\" SPR PPSAPDO Sink\nSPR Mode Maximum Current Shall Sink\nbelow describes a for a operating in\nand consuming 21V or less. ThSien k Directed Charge field be set to the maximum current the\nrequires over the voltage range. The maximum current is defined as the maximum amount of current the device\nneeds to fully support its fTuanbclteio6n. 2(e0. g S., PR Programmable P)o.wer Supply APDO \u2013 Sink\nBit(s) Field Description\nAPDO Augmented Power Data Object APDO\nSPR PPS SPR PPS\nB31\u202630 11b \u2013 ( )\nB29\u202628 Reserved 0R0ebs e\u2013r ved Shall\nMaximum Voltage\nB27\u202625 \u2013 be set to zero.\nB24\u202617 Reserved MRaexsiemrvuemd voSlthaaglel in 100mV increments\nMinimum Voltage\nB16 \u2013 be set to zero.\nB15\u20268 Reserved MRiensiemruvemd voSlthaaglel in 100mV increments\nMaximum Current\nB7 \u2013 be set to zero.\nB6...0 Maximum current in 50mA increments\nPage 150 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.1.3.4.2 SPR Adjustable Voltage Supply APDO\nTable6.21, \"SPR Adjustable Voltage Supply APDO \u2013 Sink\" SPR AVS APDO Sink\nSPR AVS Mode Maximum Current 15V Maximum Current 20V SPR AVSAPDO\nSink below describes the (1110b) for a\noperating in . The / fields in the for\nthe is defined as the mTaxaibmleum6. 2cu1r rSePnRt tAhdej duesvtaicbel en eVeodlst atoge f uSlulyp spulpyp AoPrDt iOts \u2013f uSninctkion.\nBit(s) Field Description\nAPDO Augmented Power Data Object APDO\nSPR AVS\nB31\u202630 11b \u2013 ( )\nReserved Reserved Shall\nB29\u202628 SPR AVS 10b \u2013\nB27\u202620 Maximum Current 15V \u2013 be set to zero.\nMaximum Current Fixed SupplyPDO\nFor 9V \u2013 15V range: Maximum current in 10mA units equal to the\nB19\u202610\nfield of the 15V\nMaximum Current 20V Maximum Current Fixed SupplyPDO\nFor 15V \u2013 20V range: MaSxPimRu AmVS Current in 10mA units equal to the\nB9\u20260 field of the 20V , set to 0 if the\nMaximum voltage in the range is 15V.\n6.4.1.3.4.3 EPR Adjustable Voltage Supply APDO\nTable6.22, \"EPR Adjustable Voltage Supply APDO \u2013 Sink\" EPR AVSAPDO Sink\nEPR AVS Mode PDP EPR AVSAPDO Sink PDP\nbelow describes a for a operating in\n. The field in the for the is defined as the the device needs to fully\nsupport its function. Table6.22 EPR Adjustable Voltage Supply APDO \u2013 Sink\nBit(s) Field Description\nAPDO Augmented Power Data Object APDO\nEPR AVS\nB31\u202630 11b \u2013 ( )\nReserved Reserved Shall\nB29\u202628 EPR AVS 01b \u2013\nMaximum Voltage\nB27\u202626 \u2013 be set to zero.\nB25\u202617 Reserved MRaexsiemrvuemd voSlhtaaglel in 100mV increments\nMinimum Voltage\nB16 \u2013 be set to zero.\nPDP PDP\nB15\u20268 Minimum voltage in 100mV increments\nB7\u20260 in 1W increments\n6.4.1.4 SPR Capabilities Message Construction\nSPR CapabilitiesMessage Source_CapabilitiesMessage Sink_CapabilitiesMessage Shall\nPower Data Object vSafe5V SPR CapabilitiesMessageShall Port\nAn (Power Data Object Power Da otra Object SPR C apabiliti)e sMess haagveeS ahta llelast one\nfor . The also contain the sending 's information\nfollowed by up to 6 additional s. s in an be sent\nin the followvinSga foer5dVerF:ixed SupplyPDOShall (A)PDO\n1) The Fixed Supp lyPD O always bSeh tahlel first .\n2) The rBeamttaeirnyi nSug pplyPDO s, ifS phraelslent, be sent in voltage order; lowest to highest.\n3) The Variable Supply s ifB partteesreyntP DO be sent in MShinailml um voltage order; lowest to highest.\n4) The (non- ) s, if present, be sent in Minimum voltage order; lowest to\nhighSePstR. AVSAPDO Shall\n5) The , if present, AP bDeO sent. Shall\n6) The Programmable Power Supply s, if present, be sent in Maximum voltage order, lowest to\nNote: highesEt.PR CapabilitiesMessage Section 6.5.15.1, \"EPR Capabilities Message\nConstruction\"\nThe construction is defined in\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 151\nFigure 6.12, \"SPR Capabilities Message Construction\" SPR CapabilitiesMessage\nMessage Fixed Supply PDO PDO\nSource Capabilities describes the construction of an . The\nwill always have at least one 5V and may have up to six more s depending on the\n. Figure 6.12 SPR Capabilities Message Construction\nHeader PDO PDO PDO PDO PDO PDO PDO\n2 bytes 1 2 3 4 5 6 7\n001b 010b 011b 100b 101b 110b 111b\nFigure 6.13 Example Capabilities Message with 2 Power Data Objects\nHeader Fixed 5V Fixed 9V\nNo. of Data Objects= 2 PDO PDO\nSource Figure 6.13, \"Example Capabilities Message with 2 Power Data Objects\" Number\nof Data Objects vSafe5V\nIn the 27W as shown in , the\nPower Data Obje cfiteldP iDs O2: Aug mpleunst eodn eP oowtheerr D vaotlata Ogbej.ect APDO Message Header\nMessage Type SPR CapabilitiesMessage\ns ( ) and s ( ) are identified by the 's\n6.4.1.5 field. T ShPeyR ar Se ousuedr ctoe f oCrma pabilities M essagse.\nSource Source_CapabilitiesMessage PortCapabilities\nGet_Source_CapMessage Section 6.5.15.2, \"EPR_Source_Capabilities Message\" EPR Source\nCapabisli tsieensdM ae ssage either as part of advertising , or in response to a\n. See for information about\nHard Resse.t Source PortShall Source_Capabilities\nMessage SourceCapabilityTimer Advertise Shall Sink\nPFoorlltowinAgt taa chment , aS poouwrceerS-ohna lelvent or plug insertion event, a nCapsCou ntSo usernced_ Ca apabilitiesMessage\nG oaoftdeCrR eCveMrye ssage timeout as an ments that be interpreted by the\non . The continue sending a minimum of s\nuntil a So urce_Ca pisa rbeicleitiiveesdM. essageShall Port\nAdd\uf06citionally, a Source Port PE_SRC_ Ready only be sent by a in the following cases:\nPort\nBy the from the state upon a change in its ability to supply power to this\n\uf06c .Source Port Dual-Role Power Port Get_Source_CapMessage\n\uf06c BOyp tai onally S ooru rce Port PE_S iRnC r_eRsepaodnyse to a . Port\nSource Capabilities Port\nby a from the state when available power in a multi- system\nSourcec hPaonrtgSehs,a elvlen if the Capabilities for this haPvoew neor tD cahtaan Ogebdje.ct Table6.7, \"Power Data\nObject\" Source_CapabilitiesMessage Figure 6.13, \"Example Capabilities Message with 2 Power\nAD ata Objects\" Pow erre Dpoartta iOtsb ject in a series of 3S2o-ubricte Port Capabilitiess (see Dual-\nRole Po)w aesr part of a Sink (see\n). s are used to convey a 's to provide power including\nPower pDoarttas OpbrejescetnSthlya ollperating as a . Source Battery Fixed Supply\nNumber of Data Objects Message HeaderShall\nEach Power Da ta Ob djeecstcribe a specific Mess acgaep aHbeialidtyer such aDsa at a Messa g(ee.g., 2S.8o-u4r.1ceV) Sohra al l\n(e.g., 15V)P aotw ae mr Daaxtima Oubmje acltlowable currevnSta. Tfeh5eV SourceShall Not field in thPeo wer Data Object define\nthe nuFmixbeedr S oufp ply Variable Supplsy thBaatt ftoerllyo Swu tphpely in a Shall . All s P omwienri mDaaltlay\noOfbfejerc otne that reports . SAo urce offer multiple s of the same\ntype ( , , ) and the same voltage but instead offer one\nwith the highest available current for that capability and voltage.\nPage 152 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nSink VBUS [USB Type-C 2.4] Sink\nSource VCONN VBUS Shall\nAdvesr twisiethv SAacfcee5ssVory SuppoMrta dxoim nuomt s oCuurrcree nt (see ). Powse rw Ditaht aA Occbejescstory Support are still\nconsidered s wSihnekn sourcing to an Accessory even tPhEo_uSgRhC _Rea disy not applied; in thisA lctaesren athtee yM ode\nwith the field set to 0mA in the first . The main purpose of\nthSisin iks to SePnRab Mleo dtheeS hall with AccessoryS Souuprpceo_rCt atop agbeti liintiteos tMhee ssage StateS thoa elnlter an Reque.st\nMessage Source Capabilities ShallRe-negotiate\nSAo urce in A devvearlutiastee eCvaeprayb ilities it receives and respond with a\n. If its power consumption exceeds the it so as not to exceed the\nSink's mSoPsRt Mreocdeently Explicidt Contract . PPSAPDO Shall PPSAPDO\ntPPSRequest\nA , in , in an with a , periodically re-request the at least\neve\uf06cry Sink until either: PPSAPDO\n\uf06c The rePqouweesrt sR soolem Sewthaipng other than .\n\uf06c There is a Hard Reset .\n\uf06c There is aE rror Recove.ry\nSink TEhPeRre M iso de . Source_CapabilitiesMessage Get_Source_CapMessageShall\nNot RequestMessage Sink EPR Mode Source_CapabilitiesMessage\nA Ge itn_S ource_Ca pthMate srseacgeeives aS inkShall H ard Reset in response to a\nrespond with a . If a in receives a , not in response\ntoS ao urce R, etqhue estM essag einitiate a . RDOShall Hard ResetSignaling\nRequestMessage RDO tPPSTimeout SourceShall\nA that has accepted a with a Programmable issue if it has\nnot received a with a Programmable within . The discontinue this\nbeh\uf06cavior after: RequestMessage Fixed Supply Variable Supply Battery SupplyRDO\n\uf06c Receiving aP ower Role Swap with a , or .\n\uf06c There is a Hard Reset .\n\uf06c There is aE rror Recove.ry\n6.4.1.T6here is SPR Sin. k Capabilities Message\nSink Sink_CapabilitiesMessage Section 6.4.2, \"Request Message\" Get_Sink_Cap\nMessage Section 6.5.15.3, \"EPR_Sink_Capabilities Message\" CapabilitiesMessage\ns send a (see ) in response to a\n. See Sink vSafe5V forV mBUoSre informatioSinn akbWouati ttChaep Timer .\nSource_CapabilitiesMessage Shall Hard Reset AttachedSource\nA USB Power Delivery capable , uponS oduerteccet_iCnagp abilities oMn essag eand after a Negotiat itoimneout\nwithout seeing a , send a . If the is USB Power\nDeSliinvke rPyo cratpSahballel, it responds by sending s thus alloPwoinwge rp oDwatear Object sS teoc tbieogni n.\nTable6.7, \"Power Data Object\" Sink_CapabilitiesMessage\nAG et_Sink_Ca pMe srseapgoert powFeigr ulerev e6l.s1 3it, i\"sE axbalme ptole o Cpaepraabteil iattie isn M a essesraigees owfi t3h2 2-b Pito wer Data Objects\" s (see\nSource PortCa)p. aTbhileistiee sare returned as paProtw oef ra Data Object Fi xed Suppl iyn Vraesripaobnles eS utop pal y\nBattery Supply (see Power Data Object Sink Port ). This is similar\nto that used for Dua l-Role Powe rw Pitohr tequivalent Sousr fcoer , and\nas defined in this section. s are used to convey the 's operational power\nrequiPreomweenr tDsa itnac lOubdjiencgt Shall s prSeisnekntly operating as a . Battery Supply\nFixed Supply Number of Data Objects Message HeaderShall\nEach Power Data O bject describe a specifMice ssag eo pHeeraadteiornal pDoawtear M leevsesal,g seuch as a (e.g., 2.8-\n4.1V) or a (e.g., 15V). The field in the define the\nnumSibnekr oSfh all s thatP foowlloerw D tahtea Object in a . Sink SinkShall\nNot Power Data Object Fixed Supply Variable Supply Battery Supply\nAll s Sh amllinimally offer one Power Data Object with a power level at which the can opSeinrakte. A\noffer multiple s of the same type ( , , ) and the same\nvoltage but instead offer one with the highest available current for that capability and\nvoltSaingek. Shall Power Data Object vSafe5V\nShall\nAll s include one that reports even if they require additional power to operate\nfully. In the case where additional power is required for full operation the Higher Capability bit be set.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 153\n6.4.1.6.1 Use by Dual-Role Power devices\nDual-Role Power Source_CapabilitiesMessage Section 6.4.1.5, \"SPR Source Capabilities\nMessage\" PortCapabilities Source Dual-Role Power\nSource_Capabili tdieevsiMceess ssaegned a Get_So urce_Cap (Mseees sage\n)D ausa pl-aRrot loe fP aodwveerrtising Sink_Ca wpahbeinl iotipeesrMateinssga igne Se rcotlieo.n 6.4.1.6, \"SPR Sin kd Cevaipcaebsi slietineds a\nMessage\" Ge tin_S rienskp_oCnaspeM toe sas age regardless of their present operating role.\nSimilarly devices send a (see\n6.4.1.6). 2in response t o M a anagemen t of th ere gPaordwleessr o Rf tehseier rpvreesent operating role.\nSection 8.2.5, \"Managing Power Requirements\"\nThis section has been removed. Refer to .\nPage 154 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.2 Request Message\nRequestMessageShall Sink Negotiation\nRequest Data ObjectShall Sink Shall\nA Sou rce_C baep saebnitl ibtiye as Mess taog reequesSt epcotwioenr 8 d.3u.r2i.n2g, \" tPhoew reerq uNeesgto pthiaatsioen o\"f an SPR poSwPeRr M ode .\nTRheqe uestMessageShall be returned by thSei nkR emquaeksint gD aat rae Oqbujeesctt for poSwhaelrl. It be sPenowt ienr rDeastpao Onsbeje tcot\nthe most recent (see ) when in . A\nreturn one and only one that identify the\nbeinSgo ruerqcueeSshteadll. RequestMessage AcceptMessage WaitMessage RejectMessage\nSection 6.9, \"Accept, Reject and Wait\"\nThe respond to a with an , a or a (see\nRequestMessage ). Source_CapabilitiesMessage\nFixed SupplyPDO Sink Operating\nTCuhrer ent includes the requested power level. For example, if the\nincludes a that offers 9V @ 1.5A and if the only wants 9V @ 0.5A, it will set the\nfield to 50 (i.e., 10mA * 50 = 0.5A).\nThe\uf06c request Fuisxeesd a S dupifpfelyrePnotw foerrm Daatt ad eOpbejencdting onV athriea bklien dSu opf pploywPoewr reerq Duaetsat eOdb.ject\nTable6.23, \"Fixed and Variable Request Data Object\"\nThe and share a common format\n\uf06c showBna titne ry SupplyPower Data Object . Table6.24, \"Battery Request Data\nObject\"\nThe uses the format shown in\n\uf06c PPS. Request Data Object Table6.25, \"PPS Request Data Object\"\n\uf06c The AVS Request Data Object's format is shown in Table6.26, \"AVS Request Data Object\".\nRequTehset Data Object 's formatE iPs Rs_hRoewqnu eins tMessage EPR Mode. Section 6.4.9,\n\"EPR_Request Message\" EPR_RequestMessage\nThe s are also used by the when operating in . See\nSource EP foRr M inofdoermation about thRee uqsuee ostf tMhees sageShall Ha.rd Reset\nA operating in Ta bthleat6 r.2ec3e iFviexse ad and Var iable Re quest i nDiatitaat eO ab ject .\nBit(s) Field Description\nObject Position\nReserved Shall Not\nObject position (0000b and 1110b\u20261111b are\nB31\u202628 Giveback Deprecated Shall\nand be used)\nCapability Mismatch Capabilities Mismatch\nB27 GiveBack flag = 0 - and be set to zero.\nUSB Communications Capable USB Communication\nB26 Set to \u20181\u2019 for a\nNo USB Suspend\nB25 Set to \u20181\u2019 if s Capable\nUnchunked Extended Messages Supported Unchunked Extended Message\nB24 Set to \u20181\u2019 if requesting No USB Suspend\nEPR Capable EPR Capable\nB23 Set to \u20181\u2019 if s Supported\nReserved Reserved Shall\nB22 Set to \u20181\u2019 if\nOperating Current\nB21\u202620 \u2013 be set to zero.\nMaximum Operating Current\nB19\u202610 Operating current in 10mA units\nB9\u20260 Maximum Operating current 10mA units\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 155\nTable6.24 Battery Request Data Object\nBit(s) Field Description\nObject Position\nReserved Shall Not\nObject position (0000b and 1110b\u20261111b are\nB31\u202628 Giveback Deprecated Shall\nand be used)\nCapability Mismatch Capabilities Mismatch\nB27 GiveBack flag = 0- and be set to zero.\nUSB Communications Capable USB Communication\nB26 Set to \u20181\u2019 for a\nNo USB Suspend\nB25 Set to \u20181\u2019 if s Capable\nUnchunked Extended Messages Supported Unchunked Extended Message\nB24 Set to \u20181\u2019 if requesting No USB Suspend\nEPR Capable EPR Capable\nB23 Set to \u20181\u2019 if s Supported\nReserved Reserved Shall\nB22 Set to \u20181\u2019 if\nOperating Power\nB21\u202620 \u2013 be set to zero.\nMaximum Operating Power\nB19\u202610 Operating Power in 250mW units\nB9\u20260 Maximum Operating Power in 250mW units\nTable6.25 PPS Request Data Object\nBit(s) Field Description\nObject Position\nReserved Shall Not\nObject position (0000b and 1110b\u20261111b are\nB31\u202628 Reserved Reserved Shall\nand be used)\nCapability Mismatch Capabilities Mismatch\nB27 \u2013 be set to zero.\nUSB Communications Capable USB Communication\nB26 Set to \u20181\u2019 for a\nNo USB Suspend\nB25 Set to \u20181\u2019 if s Capable\nUnchunked Extended Message\nB24 Unchunked Extended Messages Supported Set to \u20181\u2019 if requesting No USB Suspend\nSet to \u20181\u2019 if s\nB23 EPR Capable EPR Capable\nSupported\nReserved Reserved Shall\nB22 Set to \u20181\u2019 if\nOutput Voltage\nB21 \u2013 be set to zero.\nReserved Reserved Shall\nB20...9 Output voltage in 20mV units.\nOperating Current\nB8...7 \u2013 be set to zero.\nB6...0 Operating current 50mA units.\nTable6.26 AVS Request Data Object\nBit(s) Field Description\nObject Position\nReserved Shall Not\nObject position (0000b and 1110b\u20261111b are\nB31\u202628 Reserved Reserved Shall\nand be used)\nCapability Mismatch Capabilities Mismatch\nB27 \u2013 be set to zero.\nUSB Communications Capable USB Communication\nB26 Set to \u20181\u2019 for a\nNo USB Suspend\nB25 Set to \u20181\u2019 if s Capable\nUnchunked Extended Message\nB24 Unchunked Extended Messages Supported Set to \u20181\u2019 if requesting No USB Suspend\nSet to \u20181\u2019 if s\nB23 EPR Capable EPR Capable\nSupported\nReserved Reserved Shall\nB22 Set to \u20181\u2019 if\nB21 \u2013 be set to zero.\nOutput Voltage Shall\nOutput voltage in 25mV units, the least two\nB20...9 significant bits be set to zero making the\nReserved Reserved Shall\neffective voltage step size 100mV.\nOperating Current\nB8...7 \u2013 be set to zero.\nB6...0 Operating current 50mA units.\nPage 156 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.2.1 Object Position\nObject Position Shall Source_CapabilitiesMessage\nEPR_Source_CapabilitiesMessage RDO Fixed SupplyPDO\nThe value in the Sfioeuldr ce_Ca pinadbiiclaittiee wsMhiecshs aogbejectM iens tshaeg e Header EPR_Sou rce_Capa obri lities\nMessage Extended Messa ge Heade trhe refers to. The value 0001b alwayPsD iOndicates the 5V as\nit is the first object following the \u2019s or\nObje\u2019sc t Position . The numbeSrh 0a0l1l0b refers to the next SP aRn d(A s)oP DfoOrthS.PR (A)PDO May\nRequest EPR_RequestMessage Shall\nThe EPR (A)PDO fEiePldR v(Aal)uPeDsO 00S0h1abl\u2026l 0111b only be useEdP Rto_ Rreefqeur etsot Message s. Object Possit ion be\nrequReesqteude bstyM eietshsearg ae or an . ObjSeocut rpcoesSithioanlls 1000Hba\u2026r1d0 R1e1sbe tSign aolninlyg be used to\nrefer to s. s only be requested by an . If the field\n6in. a4 .2.2 GcoinvteaiBnsa ac vkal uFel gargea t(eDr tehapnr 0e1c1a1bt,e thde) send .\nGiveback Deprecated Shall\nT6h.4e .2.3 flag ha sC baeepna bility M iasnmd atc hbe set to zero.\nCapabilities Mismatch Source Sink Source\nCapabilities SinkShall Valid Source Capabilities\nASh all Capability oMccisumrsa wtchhen the Secti ocann 8n.2o.t5 s.2a,t i\"sPfoyw theer Capa'sb ipliotwy Meri srmeqautcirhe\"ments baseCda poanb tihlieti es\nMismatch it has offered. In this case thSein kSh all No mtake a Cap arbeqiluiteys tM firsomma tthceh offered and\nset the bit (see ). When a\nSi nckondition doReesq nuoest te Dxaistta, tOhbej ect Cap saebt itlhiety Mismatch bit. Source Capabilities\nMessage Source\nWhen a returns a with the bit set in response to a\n, it indicates that it wants more power than the is currently offering. This can be due to either a\nsSpoeucricfeic voltageP tohratt Rise npootr bteedin PgD oPffered or there is nPoot rstu Pffriceiseennt tc uPrDrPent forS tehceti voonl 6ta.4g.e1s1 t, h\"Saot uarrcee b_Ienifnog M oeffsesraegde.\"\nShall Capability Mismatch Source\ntCapabsi wlithieossMe ismatchResponse is lesPs Sth_RanD YthMeiers sageShall (seeS ource CapabilitiesMessage )\nrespond to the Requests with the bit set as follows. The within\nof the send a new that offers\neither: Source Capabilities Sink\n1) The set of to minimally satisfy the 's requirements based on what it actually\nrequirSeins kfo_Cr afuplal boiplietriaetsi_oEnx tbeyn edveadluMateisnsga gthee: Sink\na) Sink_Capabilities EPR_Sin k_Capab(iifl istuiepspMoretsesda gbey the ) and/or\nb) Source Capab iolirt ies Source . Port Present PDP\n2) The set of Source Should N othte canS osuurpcpel yC aapt athbiisli ttiiemseM beasssaedge on the . Request\nMessage Capability Mismatch Port Present PDP\nTo prevent looping, s send a new in response to subsequent\nwith the Source flag set until its Capability Mi scmhaantgcehs. Shall Not\nSource CapabilitiesMessage PDP Sink\nSOinncke C aa GpuabairlaitnieteseMde CsasapgaebilityS ink_Cap thaabti lhitaise rse_Espxtoennddeedd toM ae ssage , it Sour scuebsequently send\nout another May at a lowSeirn k Ca puanblielsitsi etshMe pesoswageer reqSuinirke_dC bayp athbeil ities _(Eaxs tiennddiceadteMde isns aitgse\nor ) has also been reduced. s wishing to\nmanage their power periodically check the or\ntNoo dtee:termineS owuhrceeth Cearp tahbeisliet iheasvMee cshsaagneged. Source_CapabilitiesMessage EPR_Source_Capabilities\nMessage Sink CapabilitiesMessage Sink_CapabilitiesMessage EPR_Sink_Capabilities\nAM essage Request R erqefueersst tMo aes sage EPR_Reques t or an\n, and a refers to a or\nVa, lidRequ erestfeMrse stsoa ag e or depending on operating mode.\nIn t\uf06chis conteOxtb aj ect Po sition Shall means the following:\nSource CapabilitiesMessage\nThe field contain a reference to an object that was present in the last received\n\uf06c Operating Cur rent Op.erating Power Shall\n(A)PDO Source CapabilitiesMessage\nThe / field contain a value which is less than or equal to the\nmaximum current/power offered by the selected the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 157\n6.4.2.4 USB Communications Capable\nUSB Communications Capable Shall Sink\n[USB 2.0] [USB 3.2] [USB4] USB Communications Capable\nTShhae ll Sink flag be set to one when the has USB data lines and is capable of\ncommu[UniScBa t2in.0g] u[sUinSgB e 3it.2h]er [USB4] , or protocoSlosu. Trchee flag\nbe set to zero when thUeS B Co mdomesu nnoicta htaiovne sU CSaBp daabtlae lines or is otherwise incapabSlein okf communSicoautrinceg using\neither , or protocols. This is used by Sthinek to determine operation in certain cases\nsuch as USB suspend. If the flag has been set to zero by a , then the needs\nt6o. b4e. 2aw.5are that USB SNuosp eUnSd Bru lSesu csapnneont bde observed by the .\nNo USB Suspend May Sink Source\nExplicit Contract Sink\nThe U flSaBg Comm buen siecta btiyo nthe to indicate toB athttee ry that this device is requesting to continue\nits during USB Suspend. s setting this flag typically have functionality that can use power for\npurpSoosuersc oether than e.g., foSr hcohuarldging a .Source_CapabilitiesMessage USB\nSuspend Supported\nThe uses this flag to evaluate whether it re-issue the with the\n6.4.2.6 fUlagn ccleharuedn.ked Extended Messages Supported\nUnchunked Extended Messages Supported Shall Port Extended\nMessage Data Size MaxExtendedMsgLegacyLen Unchunked Extended Message\nThe bit be set when the can send and receive\n6.4.2.7s with EP >R Mode Capable bytes in a single, .\nEPR Capable Shall Sink EPR Mode Sink\nEPR Mode Shall RequestMessage EPR Capable\nThe RDO bit indicate whether or not the is capable of operating in . When the 's\nability to operate in changes, it send a new with the updated bit set\n6in. t4he.2 .8. Operating Current\nOperating Current Request Data ObjectShall Sink\nExplicit Contract RequestMessage EPR_RequestMessage Operating Current\nTShhae ll field inS itnhke be set to the highest current the will draw during\nthe . A new or , with an updated value,\nO bpee risastuinegd Cwuhrerneenvter the 's power needs changRe.e quest Data Object Sink\nSource Current Limit Source\nThe S hfiaellld in the SPR Programmable Operating Current is used in additioSni nbky the to\nrequest the for the SourceShall level it needs. When the request is accepted the Oper'as toiuntgp Cuut rcurerrnetnt\nsupplied into any load be less than or equal to the value. When the attempts to\nconsume more current, the reduce the output voltage so as not to exceed the\nvalueO.perating Current AVSRequest Data ObjectShall Sink\nExplicit Contract\nThe field in the be set to the highest current the will draw\nNduortien:g the Source AVS M.o de SPR Source PPS Mode Sink\nA in , unlike the in , does not support current limit; the is\nReqrueespstonsEiPblRe_ nRoetq tuoe tsatkMe emssoargee current than it reqOupeestreadt.i ng Current Shall\nSink\nA new / , with an updated value, be issued whenever the\n's power neeOdps ecrhaatnigneg. Current Shall Not\nSource_CapabilitiesMessage EPR AVS Operating Current Shall Not PDP\nThe value in the field exceed the value in the Maximum Current field of the\n. For , the field exceed the / Output voltage\nrounded dSohwanll to the nearesFt i5x0ed m SAu.pply Variable Supply AVSRDO\nT6h.i4s .f2ie.ld9 appl y Mto athxe imum Op, erating Cu,r Prreognratm mable and s.\nDeprecated\nSource Maximum Operating Current RequestMessage\nTheE PMRa_xRimequumes OtpMeersastaingge Current fiSehlda lhlas been functionally O.p Ienr oartdinegr tCou mrraeinnttain backward\ncompatibility with s thSaot umracey tSrhyo tuol idntIegrnporreet the field in the\nor , the field be set equal to the value of the field. To ensure\nbackward compatibility, the this field.\nPage 158 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nShall Fixed Supply Variable SupplyRDO SPR Mode Fixed SupplyRDO EPR\nCapable\nThis field apply to the and in and the in\n6.4.2.1. 0 Operating Power\nOperating Power Request Data ObjectShall Sink\nExplicit Contract\nThe field in the be set to the highest power the will draw\nthroughouSth tahlel Batt.ery SupplyRDO\n6Th.4is .f2ie.ld1 1 appl y Mto athxe imum Ope rat.ing Power\nMaximum Operating Power Deprecated\nSource Maximum Operating Power RequestMessage\nThe Shall field has bOeepne rfuanticntigo Pnaolwlye r . In order to maintain backward Source\nScohmoupladtiIbginliotyr ewith s that may try to interpret the field in the ,\nthe field be set equal to the value of the field. To ensure backward compatibility, the\nShall this field. Battery SupplyRDO\nT6h.i4s .f2ie.ld1 2 appl y Otou thtep ut Voltage .\nAVSRequest Data Object Shall Sink\nSink Source Shall\nThe Output Voltage field in the Programmable and s be set by the to the voltage\nthe requires asA VmSeAasPuDrOed at the 's output connector. The Output Voltage field be greater than or\nequal to the Minimum Voltage field and less than or equal to the Maximum Voltage field in the Programmable\nPower SupSphlayl land s, respectively.RDO AVSRDO\n6Th.i4s f.i3eld a p pBlyI StoT th eM Preosgrsaamgmeable and .\nBISTMessage Port PHY Layer Section 5.9, \"Built in Self-Test\n(BIST)\"\nThe is sent to request the to enter a test mode (see\n\uf06c ) that perCfoonrtminsu oonues BofI StThe M foodlleowing functions: Tester\n\uf06c Enter a Shared Capa ctoit ys eGnrdo uap continuous stream of test data to the .\nMesEsangteer and leave a Figure 6.14, \"B tIeSsTt mMeosdsea.ge\"\nThe format is as shown in Figure 6.14 BIST M.essage\nHeader\nBIST Data Object\nNo. of Data Objects= 1or 7\nShall Unit Under Test UUT vSafe5V BIST\nMode Shall\nAll Ports be able to be a ( ) only when operating at . All of the following\n\uf06c s be supported: BIST Carrier ModeBIST Data Object Shall\nProcess reception of a that result in the generation of the\n\uf06c appropriate carrier sigBnIaSl.T Test DataBIST Data Object Shall Message Ignored\nUUT Process reception of a Shared Capacity Group [USB t Thaytp e-C 2. r4e]suSlht ainll the being BIST.\nMode\ns with Ports constituting a (see ) support the following\n\uf06c : BIST Shared Test Mode EntryBIST Data Object Shall UUT\nBIST Shared Capacity Test Mode UUT Source Capabilities Port\nProcesSsh raerceedp Ctiaopna ocfi tay Group that cause the to enter\n; a mode in which the offers its full on every\nin the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 159\n\uf06c BIST Shared Test Mode ExitBIST Data Object Shall UUT\nBIST Shared Capacity Test Mode\nProcess reception of a that cause the to exit\ntPhoer t BISTMessageBIST D.ata Object BIST Mode vSafe5V BIST\nMessageShall Ignored\nWhen a receives a for a when not operating at , the\nP ort be BIS.TMessageBIST Data Object BIST Mode BISTMessageShall\nIgnored\nWhen a receives a for a it does not support the\nbe Por.t Cable Plug BISTMessageBIST Data Object Continuous BIST Mode Port Cable\nPlug BIST Mode Shall BIST Mode tBISTContMode Shall\nWhen a or S reectcieoinv e6s.6 a.7 .2, \"B ISTContM odeTimer\" for a the or\nenters the requested and remain in that for and then return\nto normal operation (sePeH Y LayerBIST Mode ).\nPort Partner\nThe usage model of the s generally assumes that some controlling agent will request a test of\nits Section 8.3.2.1. 5, \"Built in Self-Test (BIST)\"\nIn there is a sequence description of the test sequences used for\ncompliance testinBgIS.T Data Object Table6.27, \"BIST Data Object\"\nThe fields in the are definTeadb lien 6th.2e 7 BIST Data Object .\nBit(s) Value Parameter Description Reference Applicability\nReserved Shall Not Section 1.4.2\n0000b\u20260100b be used Section 6.4.3.1 -\nBIST Carrier Mode\nRBIeSqTu Cesatr rier Mode\n0101b Transmitter to enter Mandatory\nReserved Shall Not Section 1.4.2\n0110b\u20260111b BIST Test Data Te s b t e F u r s a e m d e Section 6.4.3.2 -\n1000b Sends a UUT . Section 6.4.3.3.1 Mandatory UUT\nB31\u202628 BIST Shared Test Mode Entry BIST Shared\nCRaepqauceisttys T est M too de\nMandatory for s\n1001b enter\nUUT . Section 6.4.3.3.2 with shared cap U a U c T ity\nBIST Shared Test Mode Exit BIST Shared\nRCaepqauceisttys T est M too edxeit\nMandatory for s\n1010b\nReserved Shall Not . Section 1.4.2 with shared capacity\n1011b\u20261111b Reserved Shall be used Section 1.4.2 -\nB27\u20260 be set to zero. -\n6.4.3.1 BIST Carrier Mode\nBISTMessage BIST Carrier ModeBIST Data Object UUTShall\nBMC\nUpon receipt of a , with a , the send out a continuous\nstrinUgU oTf Shal lencoded aClotnertinnautoinugs \"B1IS\"sT aMnodd \"e0\"s. tBISTContMode Continuous BIST Mode\nSection 6.6.7.2, \"BISTContModeTimer\"\nThe exit the within of this being enabled\n6(s.e4e .3.2 BIST Test Data). Mode\nBISTMessage BIST Test DataBIST Data Object UUTShall GoodCRCMessage\nShall BIST Test Data Mode Message GoodCRCMessage\nUpon receipt of a M essage , withS eac tion 5.9.2, \"BIST Test Data Mode\", the return a Test Fram e\nand enter in which it sends no further s except for s in\nresponseS thoa rlleceived s. See Hard ResetSignaling UU fTor the definition of the .\nThe test be ended by sending to reset the .\nPage 160 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.3.3 BIST Shared Capacity Test Mode\nShared Capacity Group\nSource Capabilities [USB Type-C 2.4] BIST Shared Capacity Test ModeShall\nA of SPhoarrtse ds hCaarpea ac ictoym Grmoounp power source that is not capable of simultaneously powering all\nthe ports to their full (see ). The only be\nimplUemUTenStheadr ebdy Cpaopratsc iitny aG roup Shall .\nBIST Shared Test Mode EntryBIST Data Object BIST Shared Test Mode ExitBIST Data\nTOhbjee ct of Ports contain one or more Ports, designated as Master Ports, that\nrecognize both the and the\n6.4.3..3.1 BIST Shared Test Mode Entry\nPort Shared Capacity Group BISTMessage BIST Shared Test Mode Entry\nBIST Data Object PE_SRC_Ready UUTShall\nWhen any mSoausrtceer Capa binil iat ies receivesP ao rt with a\n, while in the State, the enter a compliance test mode where the\nmaximum are always offered on every , regardless of the availability of shared power i.e.,\nall shared poSwhaerre md aCnaapgaecmitye nGtr oisu dpisabled. Shall Not\nBIST Shared Test Mode EntryBIST Data Object\nPorts in the that are not Master Ports enter compliance mode on receiving the\nBISTMessage BIST Sha.red Test Mode EntryBIST Data Object UUTShall\nGoodCRCMessage Shall BIST Shared Capacity Test Mode\nUpon receipt of a , with a , the return a\nand U UenTtSehr athlle Source_Capabilities.M essage Port Shared\nCapacity Group tBISTSharedTestMode Tester\nOn entering this mode, the send a new from each in the\n6.4.3.3.2 within BIST Shared Tes. Tt hMe ode E wxililt not exceed the shared capacity during this mode.\nBISTMessage BIST Shared Test Mode ExitBIST Data Object UUTShall\nGoodCRCMessage Shall BIST Shared Capacity Test Mode Message BIST\nUMpeossna rgeeceipt of Ba IST Sh ared Te,s wt Mitho dae ExitBIST Data Object BIS,T t hShea red Capac irteyt Tuersnt aM ode\nShall Not and UUT exit the BIST Shared Capacity Test Mo. dIef any other , aside from a\n, with a , is received while in\nthis cause the UUT tMo eaxyit the Source_CapabilitiesMessage Port Shared Capacity\nGroup UUTMay ErrorRecovery Port\nOn exiting the mode, the send a new to each in the\nor theS hare d Cap paceirtfyo Grmro up on each S. hall Not BIST\nShared Test Mode EntryBIST Data Object\nPorts in the that are not Master Ports exit compliance mode on receiving the\nShared Capac ity Group . Should Not\nBIST Shared Test Mode ExitBIST Data Object\nPorts in the that are not Master Ports exit compliance mode on receiving the\n\uf06c UUTShall B IST Shared Capaci.ty Test Mode\n\uf06c The UUT Shall exit BIST Shared Capacity Test M wohdeen It is powered off. BIST Shared\nTest Mode ExitBIST Data Object UUTShall BIST Shared Capacity\nTTehset Mod e remain in for any PD event (except when a\n, is received); specifically the remain in\n\uf06d Hard R ewsehten any of the following PD events occurs:\n\uf06d Cable Reset\n\uf06d Soft Reset\n\uf06d Data Role Swap\n\uf06d Power Role Swap\n\uf06d Fast Role Swap\n\uf06d VCONN Swap\n\uf06c UUTMay . BIST Shared Capacity Test Mode Tester\nCapabilities UUT\nThe leave if the makes a request that exceeds the\nof the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 161\n6.4.4 Vendor Defined Message\nVendor_DefinedMessage VDM\nThe ( ) is provided to allow vendors to exchange information outside of that defined\nbyV tehnisd sopre_DciefifcinateidonM.essageShall Vendor Data Object VDO VDM Header May\nVDO\nA consist of at least one ( ), the , and\ncontain up to a maximum of six aVdednitdioonra_Dl efines.dMessage Vendor_DefinedMessage Shall Valid\nStandard or Vendor ID SVID VDM Header\nTo ensure vendor uniqueness of s, all s contain a\nUSB Vendor_Defin (edMe)s asallgoecated by USB-IFS tirnu tchtuer ed VDM . Unstructured VDM Structured VDM\nModal Operation Unstructured VDM\nTwo types of Message May s are defined: s and s. A\ndefines an extensible structure designed to support . An does not define any\nsVternudctourr_eD aenfidn edMessasg e Sh bael lc Nreoatted in any manner that theN veegnodtioart icohnooses. May\nLocal Policy Message\ns be used for direct power . They however be used to alter\nMessage, affectingS hwahlalt is offered or coFnigsuurme e6d.1 v5i,a \" tVheen ndoorr mDeafli PneDd Messages\".\nThe format be as showFni ginu re 6.15 Vendor Defined Message .\nHeader\nVDM Header 0-6 VDOs\nNo. of Data Objects= 1-7\nVDM HeaderShall Message VDM Header Command\nMessage May\nTCohme mand S tructu breed t hVeD fMirst 4-byte object in a Vendor Defined . The provides\nspace to allow vendors to customize s for their own purposes. Additionally, vendors make use of the\ns in a VDM Header . Unstructured VDM VDM Type Shall\nTable6.28, \"Unstructured VDM Header\" VDM Header Structured VDM VDM Type\nThe fields in theS hall for an Table6.29, \"Struc, wtuhreedn VthDeM Header\" Bit is set to zero, be as defined\nin . The fields in the for a , when the\nBit is Usents ttrou ocntuer ed VD bMe as deSfitnruedct iunr ed VDM Shall . Explicit Contract\nDiscover IdentityCommand May Source\nBDoeftahu lt Contract Ims apnlidci t Contract s onAltyt abceh senPt oawnedr r Reoceleiv Sewda apfter Faans t Role Swap has been\nestablished. The oCnalyb leex Cceapptaiboinli ttioe sthis is tSheec tion 8.3.3.25.3, \"So urce Startu wp hSticrhu cture db eV DseMn tD bisyc over Id ewnhtietny oaf a\nCable Plug State Doira agnra m\" (in place after , a or ) is in place in\norder to discover (see S\n6.4.4.1 Uns).tructured VDM\nUnstructured VDM VDM Header\nVID Port Partner Cable Plug Shall\nThe Unstr udcoteusr endo tV dDeMfine the coHnatredn tRse osef tbits B14\u20260 in the . Their definition and use are\nthe sole responsibility of the vendor indicated by the . The s and s exit any states\nentered using an whUenns atr uctured VD aMppMeeasrssa goen PD.\nThe\uf06c folloUwnisntrgu rcutulerse da pVpDlyM toS thhael ulse of E xplicit Cosn:tract\n\uf06c s E xopnlilcyi tb Ce ounsterda cwthUenns tarnu ctured VDM Sha lils N ino tplace. Shall Ignored\nPrior to establishing an s be sent and be if\n\uf06c received.DFPShall Initiator Unstructured VDM\n\uf06c Only the UFP C abbel ea nP lugShall of Responder Unss.tructured VDM\n\uf06c OUnnslytr tuhcet ured VorD aM Shall No t be a to .\ns be initiated or responded to under any other circumstances.\nPage 162 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Unstructured VDM Shall Modal Operation Active Mode\nUFP Enter ModeCommand Unstructured VDM\nActive Mode s only beU nussterdu cdtuurriendg VDM Shall in the conSVteIxDt of an i.e., only\nafter the has Ack'ed the can s be sent or received. The\n\uf06c Unstructured a VnDd MtheM asasyociated SOP* Packets use the same .\n\uf06c DFP UFPs be used withU nstructureds V. DM VID Shall\nNot_SupportedMessage\nWhen a or does not support s or does not recognize the it return\nTable6.2a8 , \"Unstructured VDM Hea.der\" VDM Header\nTab illelu6st.r2a8t e Us nthsetr uctured VD Mbi tHs.eader\nBit(s) Parameter Description\nVendor ID (VID)\nVDM Type Unstructured VDM\nB31\u202616 Unique 16-bit unsigned integer. Assigned by the USB-IF to the Vendor.\nB15 0 =\nB14\u20260 Available for Vendor Use Content of this field is defined by the vendor.\n6.4.4.1.1 USB Vendor ID\nVendor ID (VID) Shall Vendor ID VID\nShall\nThe field contain the 16-bit value assigned to the vendor by the USB-IF ( ). No\no6t.h4e.r4 v.a1lu.2e be pre sVenDt Min tThiys pfieeld.\nVDM Type Shall Unstructured VDM\nT6h.4e .4.2 field Str ubec steut rtoe zder oV iDndMicating that this is an .\nVDM Type Structured VDM Structured VDM Header\nStructured VDM Header Table6.29, \"Structured VDM Header\"\nSetting the field to 1 ( ) defines the use of bits B14\u20260 in the . The\nfields in the areS tdreufcintuerde idn V DMMessage .\nThe\uf06c folloSwtriuncgt urrueleds V aDpMplyS thoa tlhle use of E xplicit Cosn:tract\n\uf06d s only Fbier suts Eexdp wlichiet nC oannt ract SourceMa yis in plaDcies wcoivthe rt hIde efonltliotwyMinegs esaxgceeption:\nCable Plug SOP\u2019 Packet Initiator Section 8.3.3.25.3, \"Source Startup Structured VDM\nPDrisiocor vteor e Isdteanbtliitsyh oinf ga tChaeb le Plug State Diagram, \"a issue s, to a\nusing s, as an (see\n\uf06c PortMay Initiator Structured VDM ). Enter Mode Exit ModeCommand\nShall DFP\nEither be an of s except for the and s\n\uf06c whCiacbhl e Plug oSnhlayl ble initiatedR beysp tohned er . Structured VDM\n\uf06c ASt ructured V DM S hoanllly N boet a to s.\n\uf06c DFP Us FP be initiatedSt orru crteusrpeodn VdDedM to undSetrr uacntyu roetdh eVrD cMircumstanceSsh.all\nNot_SupportedMessage\nWhen a or does not support s any s received return a\n\uf06c SV.ID Command Structured VDM Header VDM Header\nResponderShallNAKMessage SVID VDM Header\nWhenS uVsIDing any of thSeV ID SpeciCfiocm mand s in the SVID Comma (nd b4\u20260 -\nvaluSeV 1ID6 - 31) the s where the in the is not recognized\nas an that uses Specific s or the use of Specific s is not supported for\n\uf06c the C.able Plug Structured VDM Structured VDM Shall Ignored\nWhen a does not support s any s received be .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 163\nDFP UFP Cable Plug Structured VDM Structured VDM SVID\nShall NAKCommand\nA , or which supports s and receiving a for a that it does\nnot recognize reply with a Table6.29. Structured VDM Header\nStandard or Vendor ID (SVID)\nBit(s) Field Description\nVDM Type Structured VDM\nB31\u202616 Unique 16-bit unsigned integer, assigned by the USB-IF\nVersion Structured VDM\nB15 1 =\nVersion\nStructured VDM Version Number (Major) of the (not this specification\n\uf06c Deprecated Shall Not\n(Major) ):\n\uf06c\nB14\u202613 Version 1.0 = 00b ( and be used)\n\uf06c Reserved Shall Not\nVersion 2.x = 01b\nCommand Version Structured VDM\nValues 2-3 are and be used\n\uf06c\nFor s 0\u202615 Number (Minor) of the\nStructured VDM Version Version 2.0 = 00b (Used for ports implemented prior to USB PD\n(Minor) \uf06c Revision 3.1, Version 1.6)\nB12\u202611 Version 2.1 = 01b (Used for ports implemented starting with USB\n\uf06c Reserved Shall Not\nPD Revision 3.1, Version 1.6)\n\uf06c SVID Command SVID\nAll other Values are and be used\nEnter Mode Exit Mode AttentionCommand\nSpecific s (16\u202631) defined by the .\nFor the , , and s (Requests/\n\uf06c Reserved Shall Not\nResponses):\n\uf06c VDO\n000b = and be used.\nAlternate ModeVDO\n001b\u2026110b = Index into the list of s to identify the desired\nObject Position \uf06c A ctive Mode Shall\n\uf06c Command\nB10\u20268 111b = Exit all s (equivalent of a power on reset).\nCommand\nonly be used with the .\n\uf06c\ns 0\u20263, 7\u202615:\n\uf06c Reserved Shall Not\n000b\nSVID Command SVID\n001b\u2026111b = and be used.\nREQ InitiatorPort\nSpecific s (16\u202631) defined by the .\nACK ResponderPort\n00b = (Request from )\nCommand Type\nNAK ResponderPort\n01b = (Acknowledge Response from )\nB7\u20266 BUSY ResponderPort\n10b = (Negative Acknowledge Response from )\nReserved 1S1hba =l l (Busy SRheaspllonseI gfrnoomre d )\nReserved Shall Not\nB5 be set to zero and be\nDiscover Identity\n0 = and be used.\nDiscover SVIDs\n1 =\nDiscover Modes\n2 =\nCommand\nEnter Mode\n3 =\n1 Exit Mode\nB4\u20260 4 =\nAttention\n5 =\n6 =\nReserved Shall Not\n7-15 = SVID andC ommand be used.\nVID\n16\u202631 = Specific s\n1) In the case where a SID is used the modes are defined by a standard. When a is used the modes are defined by the\nVendor.\nPage 164 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nSection Table6.30, \"Structured VDM Commands\" Command SVID Command\nSOP* Shall\nshows the s, which to use with each and\nthe values which be usedT.able6.30 Structured VDM Commands\nCommand VDM Header SVID SOP* used\nField\nDiscover Identity Shall PD SID Shall SOP SOP\u2019\nDiscover SVIDs Shall only use the PD SID. Shall only use SOP/SOP\u2019.\nDiscover Modes Valid only use tShVeI D . S hall only useS OP/SOP\u2019.\nEnter Mode Valid with any SVID. Valid only SuOseP * / .\nExit Mode Valid with any SVID. Valid with SOP*.\nAttention Valid with any SVID. Valid with SOP*.\nSVID Command Valid with any SVID. Valid with SOP*. SVID\nSpecific s with any . with (defined by ).\n6.4.4.2.1 SVID\nStandard or Vendor ID (SVID) Shall\nVID Shall\nThe field contain either a 16-bit USB Standard ID value (SID) or the 16-bit\naSsescitgionne dT atob lteh6e. 3v1e,n \"dSoVrI Db yV tahlue eUs\"SB-IF ( ). NoS VoItDher value be present in this field.\nlists specifiTc able 6v.a3l1u e Ss VreIDfe rVeanlcueeds by this specification.\nParameter Value Description\nPD SID\nDPTC SID [DPTC2.1]\n0xFF00 Standard ID allocated to this specification by USB-IF.\n0xFF01 Standard ID allocated to by USB-IF.\n6.4.4.2.2 VDM Type\nVDM Type Shall Structured VDM\nT6h.4e .4.2.3 field S btre usectt tuo roened i nVdDicaMtin Vg ethrasti tohins is a .\nStructured VDM Version (Major) Structured VDM Version (Minor)\nStructured VDM Version Version\nThe Structured VDM Ver/sion (Major)Shall fields indicate the level of fuSntcrtuiocntuarlietdy\nVsuDpMp oVretersdi oinn t (hMe inor) part of the specification. This is not Pthoret same as the of this\nspecification. The Version be set to 01b to indicate Version 2.x with the\nfield set as appropriate based on whether the is implemented to USB PD Revision 3.1,\nVersion 1.6 (or newer) or a prior P.DUSB PDUSB Shall Structured VDM\nVersion\nTo ensure interoperability with existing products, products support every\nnumbeVr DstMar Htienagd ferrom Version 1.0V.ersion Port Cable PlugShall\nVersion VDM Header Version\nOnP orretceipCt aobf lae PlugShall with a higher nuVmerbsieorn than it supports, a or respond using\nthe highest number it supports. On receipt of a with a lower number than it supports,\na St rour ctured VDM Vers rioensp (oMnadj ours)ingS ttrhuec stuamreed VDM Ve nrusmiobne (rM iti nroecre)ived. Discover IdentityCommand\nDiscovery ProcessShall Structured VDM\nTVehres ion Port Partner/ Cable Plug Shall fields of the Specificatio n Revision\nsent and receiDveedta dcuhreidng the S tructu breed u VseDdM toV edrestieornmine Sthtreu lcotwureestd c VoDmMm Voenr sion (Major)\nStructu rsuedp pVoDrMte dV berys tihoen (Minor) s orS hall and continue to Sotpreurcattuer euds iVnDg MthiVse rsion\nuntil they are . After discovering the , the /\nfields match the agreed common .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 165\n6.4.4.2.4 Object Position\nObject Position Shall Enter Mode Exit ModeCommand Discover Modes\nCommand VDO Alternate Mode Object Position\nThe field be used by the VDO aAnldte rnate Mod e s. TheE nter Mode E xit\nModeCom rmeatunrdns a list of zeroO tob sjeixc t Possi,t eioanchS hofa wllhich describes an Alterna. tTeh Me ovdaelue in SVID\nfieldV iIsD an index into that lisVtD tOhat indicaAtletse rwnahticeh M ode S(eh.ag.l,l ) in the list the Standard oarn dV endor\nID (SV ID) refers to. ThSeh all start with one for the first VDO in the list. IMf tahye\nis a , the content of the for the be definCedap bayb tihlitei evsendor. AIfl ttehren ate Mode\nRespon ids ear SID, the value be assigned, by the USB-IF, to the given Standard. The 's conAtletnert nate M boe daes\nsimple as a numeric value or as complex as bit mapped description of of the . In all cases,\nthe is responsible for deciphering the contents to know whether or not it supports the\nat the ObjeSchta Pllosition. REQ ACK NAK BUSY\nCommand\nThis field be set to zero in the Request or Response ( , , or ) when not required by the\n6sp.e4c.i4fic.2at.i5on of the indi v iCdouaml mand T. ype\n6.4.4.2.5.1 Commands other than Attention\nCommand Type Shall Command\nThiIsn itiatorShall fieldC omma bned u Tsyepde to indicaRteE tQhe type of requCeosmt/mreasnpdonse being sent. Initiator\nAnS tructured VDM set the field to to indicate that this is a request from an .\nIf \uf06c Respondesr aArCeK supported, then the responsSehsa alrle as follows: Command\n\" \" is the normal return and be sent to indicate that the request was\n\uf06c rReceespivoendd aenrdN AhaKndSlheda lnlormally. Command\n\uf06d\" I nvali\"d be returnedI nwvhaelind tShVeI D Altern raetqeu Mesotd:e\n\uf06d Has an parameter (e.g., or ). Alternate Mode\nAlternate Mode Alternate Mode Active\nMCaondneot be acted upon because the configuration is not correct (e.g., an which has a\ndependency on another or a request to exit an which is not an\n\uf06d ). Message\n\uf06d Is an UnrecognizeRde sponderN. AK Initiator\n\uf06c ReTsphoen hdaenrdBlUinSgY ofS \"hall \" is left up to the VDM . Responder\nCommand Command May InitiatorShall\n\"tVDMBusy \" Respo bned seernBtU inS Ythe response to a when the C iosm unmaabnled to respond to\nthe request immediately, but the request be retried. The wait\n6.4.4.2.5.2 after a \" Attentio n Co\"m remspaonnsde is received before retrying the request.\nCommand Type Shall Command InitiatorShall\nREQ Command Initiator Structured VDM\nThis Shall field bAet utesnedti oton iCnodmicamtae nthde type of request being sent. An set\nthe field to to indicate that this is a request from an . If s are supported, then\n6no.4 re.4sp.o2n.6se be m a dCeo tmo amn and .\n6.4.4.2.6.1 Commands other than Attention\nCommand VDMCommand Command\nCommand\nTCohme mand field contains the value for the being sent. The s explicitly listed in the\nfield are used to identify devices and manage their operational Modes. There is a further range of\nStructur evda lVuDeMs leCfot mfomr athned vendor to useC toom mmaannadge additional exCtoemnsmioannsd. ACK NAK BUSY\nStructured VDMCommand\nA conGsiosotsd oCfR aC Message request and a response ( Res, pond eorr ). A\nCommand is deemed to be completed (and if applicable, the transition to the requested\nfunctionality is made) when the has been successfully received by the in reply to its\nresponse.\nPage 166 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nStructured VDM Structured VDMCommand Message Shall\nTable6.32, \"Commands and Responses\"\nIf s are supported, but the request is an Unrecognized , it\n6be.4 N.A4K.2e.d6 (.s2ee Attention Command).\nCommand VDMCommand Attention AttentionCommand\nMay Initiator Responder\nThe field contains the value for the being sent ( ). The\nStr ubcet uurseedd VbDy MthAe ttention Ctoo mnomtiafyn dthe Cthomatm ita rnedquires service. Command Structured\nVDMAttentionCommand GoodCRCMessage\nA Initiator Attention cCoonmsimstas nodf a request but no response. A\nis deemed to be completed when the has been successfully received\nbyS tthruec tured VD iMn reply to its Structure rde VqDuMesAt.ttentionCommand Message\nShall Ignored Table6.32, \"Commands and Responses\"\nIf s are supported, but the request is an Unrecognized\n6it .4.4 .b3e ( s Uees e of Commands ).\nVDM Header Structured VDMMessage Command SVID\nSVID Command\nThe for a defines s used to retrieve a list of s the device\nsup\uf06cportsD, itsoc odvisecro Ivdeern tthiety Modes associated with each , and to enter/exit the Modes. The s include:\n\uf06c Discover SVIDs\n\uf06c Discover Modes\n\uf06c Enter Mode\n\uf06c Exit Mode\n\uf06c Attention\nCommand Reserved\nAddiCtioomnmal andAMS space is also Initiator for RSteasnpdoanrdde rand Vendor use and for future extensions.\nPort Provider Consumer\nThe Power Roles Suosue rtchee terSminsk Ini atinadto r Po rtto identify messagingC ormolmesa tnhde ports are taking on\nrReelsaptoivned teor each oPthoertr. This role is indepCeonmdemnat nodf the 's powSeerc ctaiopna b6i.4li.t4y. 4(, \"Comma, nd Process eest\"c.) or its\npresent ( or ). The is the sending the initial request and the\nis the replyingS hwaitllh the Di srceosvpeorn Isdee. nSetiet y Discover SVIDs Discover Mode.s Enter\nMode Exit ModeCommand\nAll Ports that support Modes support the , , the , the\nTable 6a.n3d2 , \"Comman ds and Resps.onses\" ResponderMay Command\nCommandShall Not Responder NAK Should\ndeCtoamilsm tahned responses a issue to each request.\nResponses not listed for a given be sent by a . A response be taken as\nan indication not to retry that particTulaabrl e6.32 Co.mmands and Responses\nCommand Allowed Response Reference\nDiscover Identity ACK NAK BUSY Section 6.4.4.3.1\nDiscover SVIDs ACK NAK BUSY Section 6.4.4.3.2\n, ,\nDiscover Modes ACK NAK BUSY Section 6.4.4.3.3\n, ,\nEnter Mode ACK NAK Section 6.4.4.3.4\n, ,\nExit Mode ACK NAK Section 6.4.4.3.5\n,\nAttention Section 6.4.4.3.6\n,\nNone\nCommand Appendix C, \"VDM Command Examples\"\nExamples of usage can be found in .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 167\n6.4.4.3.1 Discover Identity\nDiscover IdentityCommand Initiator Port Partner Initiator\nVCONN Source Responder Cable Plug VPD Discover IdentityCommand\nThe C able Plug is VpProDvided to enable an to idGeonotidfyC RitCs Message and for an\n( ) to identify the ( or ). The is also used to\ndeteDrmisicnoev werh Iedtheenrt iaty Command oSrh all is PD-Capable SbOy Plooking for a Expl icit Contr Racetsponse.\nThe Discover Identity Command Shall only be sent to when there is an Cable Plug VP.D\nSection 8.3.3.21.1, \"Initiator Structured VDM Discover Identity State Diagram\" Section 8.3.3.25.3, \"Source Startup\nSTthreu ctured VDM Discov er Identity of a Ca bbele u Psleudg tSot adteet eDrimagirnaem w\"hether a given Discover I doer ntity iCso PmDm Caanpdable (see\nSOP\u2019Shall Not Soft Reset GoodCRCMessage and\nVPD ). In this case a request\nsent to cause a if a response is not returned since this can indicate a\nNnoonte-P:D CapaCbalbel ec aPbluleg or VPD. CONN VCONN\n[USB Type-C 2.4]\nA or will not be ready for PD Communication until tV Stable after has been\nCabaplep Plileudg (seVe PD ). Explicit Contract Discover IdentityCommand\nDiscoverIdentityTimer Section 6.6.15, \"DiscoverIdentityTimer\"\nnDDurisincog verIdentity oCro unt discovery, Swehcteino nth 6e.7re.5 i, s\" Danis cover Identity Co,u nter\" s are sent at a\nrate defined by the (see ) up to a maximum of\nCable Plug timVPeDs (Ssheael l Discover IdentityCommandAC).K Discover Identity\nCommand SOP\u2019\nA PD-Capable or return a in response to a\nDisco vreerq uIdeesnt tsietnytC toom man.dShall Capabilities Port Partner\nShall Discover IdentityCommandACK Discover Identity\nTCohme mand SOP be used to determine the identity and/or of the .\nThe following products return a in response to a\n\uf06c request sentU tFoP : Modal Operation\n\uf06c A PD-Capable that supports DFP .\n\uf06c A PD-Capable [pUroSBdu4c]t that has multiple s.\nSVIDA PD-CaDpaisbcloev er Iden ptirtoydCuocmt.mand Shall Section Table6.31, \"SVID\nValues\"\nThe in the request be set to the PD SID (see\nNum).ber of Data Objects Message Header Discover IdentityCommand Shall\nDiscover IdentityCommand Shall Not VDO\nThe field in the in the request be set\nto 1 Dsiinscceo vtheer IdentityCommand ACK request Respon cdoenrtSahina allny s. ID Header VDO Cert Stat VDO\nProduct VDO Product Type VDO Product Type Figure 6.16, \"Discover Identity\nCTohme mand response\" sent back by the Prod uct Ty cpoen VtaDiOn an , a ,\na and the s defined by the as shown in\n\uf06c Passive Cabl.e T VhDisO specifSiecacttiioonn 6d.e4f.i4n.3e.s1 t.6h,e \" Pfoalslosiwvein Cga ble VDO\" s:\n\uf06c Active Cable VDO (see Section 6.4.4.3.1.7, \"Active Cable VDOs\")\n\uf06c VCONN Powered UsS B(s Deee vice VPD VDO Section 6.4.4.3.1.9,) \"VCONN Powered USB Device VDO\"\n\uf06c UFP VDO Section 6.4.4. 3(.1.4, )\" UFP V(DseOe\" )\n\uf06c DFP VDO (see Section 6.4.4.3.1.5, \"DFP VDO\")\nVDO (see ) Shall Discover IdentityCommand\nProduct Type VDO Product Type VDO Shall\nNo Discso ovtehre Ird tehnatnit tyhCoosme dmeafinnded in this specification VD bOe sent as part of thIen itiatorShall Ign ored\nresponse. Where there is no defined for a specific , no s be sent as part of\nthe response. Any additional s received by the be .\nPage 168 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.16 Discover Identity Command response\nHeader VDM Header ID Header VDO Cert Stat VDO Product VDO 0..32Product Type VDO(s)\nNo. of Data Objects= 4-71\n1. Only Data objects defined in this specification can be sent as part of the Discover IdentityCommand.\n2. The following sections define the number and content of the VDOs for each Product Type.\nNumber of Data Objects Message Header Discover IdentityCommandNAK BUSY\nShall Shall Not VDO\nThe field in the in the and\nresponses be set to 1 sinPcero tdhuecyt Type UFP contain Panroyd uct Ts.ype DFP\nShall Product Type VDO UFP DFP UFP VDO\nIf the product is a DRD both a D (FP VD) aOnd a Figur e( 6.17), a\"Drei sdceocvlearr Iedde innt itthye C IoDm Hmeaandde rr.e Tsphoenssee\nfporro ad uDcRtsD \" return s for both and beginning with the , then by a 32-bit Pad\nObject (defined as all '0's), followed by the as shown in\n. Figure 6.17 Discover Identity Command response for a DRD\nHeader Product Tyyypppe VDO(((((s)))\nVDM Header ID Header VDO Cert Stat VDO Product VDO\nNo. of Data Objects= 7 UFP Pad DFP\n6.4.4.3.1.1 ID Header VDO\nID Header VDO ID Header\nVDOShall Section Table6.33, \"ID Header VDO\"\nThe contains information corresponding to the Power Delivery Product. The fields in the\nbe as defined in Table6.33 ID Head.er VDO\nBit(s) Description Reference\nUSB Communications Capable as USB Host Section 6.4.4.3.1.1.1\n\uf06c Shall USB Device\nB31 \uf06c Shall be set to one if the product is capable of enumerating s.\nUSB Comm b u e n s ic e a t t t i o o n ze s r C o a o p t a h b er le w a is s e a . USB Device Section 6.4.4.3.1.1.2\n\uf06c Shall\nUSB Device\nbe set to one if the product is capable of being enumerated as a\nB30 \uf06c Shall\n.\nSOP Produ b ct e T s y e p t t e o ( z U e F r P o ) otherwise Section 6.4.4.3.1.1.3\n\uf06c UFP\n\uf06c PDUSB Hub\n000b \u2013 Not a\n\uf06c\n001b \u2013\n\uf06c\n010b \u2013 PDUSB Peripheral\n\uf06c Reserved Shall Not\n011b \u2013 PSD\nSOP\u2019 Product Type (Cable Plug/VPD)\n100b\u2026111b \u2013 , be used.\n\uf06c Cable Plug VPD\nB29\u202627\n\uf06c Reserved Shall Not\n000b \u2013 Not a /\n\uf06c Passive Cable\n001b\u2026010b \u2013 , be used.\n\uf06c Active Cable\n011b \u2013\n\uf06c Reserved Shall Not\n100b \u2013\n\uf06c VCONN Powered USB Device VPD\n101b \u2013 , be used.\n\uf06c Reserved Shall Not\n110b \u2013 ( )\n111b \u2013 , be used.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 169\nTable6.33 ID Header VDO (Continued)\nBit(s) Description Reference\nModal Operation Supported Section 6.4.4.3.1.1.4\n\uf06c Shall UFP Cable Plug\nModal Operation Alternate Mode\nbe set to one if the product ( / ) is capable of\nB26 \uf06c Shall\nsupporting ( s).\nSOP - Product Type (DFP)\nbe set to zero otherwise.\n\uf06c DFP\n\uf06c PDUSB Hub\n000b \u2013 Not a\n\uf06c PDUSB Host Section 6.4.4.3.1.1.6\n001b \u2013\nB25\u202623 \uf06c 010b \u2013\n\uf06c Reserved Shall Not\n011b \u2013 Power Brick\nSOP\u2019 Reserved Shall Not\n100b\u2026111b \u2013 , be used.\nConnector Type\n: , be used.\n\uf06c Reserved\n\uf06c Reserved Shall Not Section 6.4.4.3.1.1.7\n00b \u2013 , for compatibility with legacy systems.\nB22\u202621 \uf06c 01b \u2013 USB Type- , C be used.\n\uf06c USB Type-C\n10b \u2013 Receptacle\nReserved Shall Not\n11b \u2013 Plug\nB20\u202616 USB Vend, or ID be used. Section 6.4.4.3.1.1.8\n[USB 2.0] [USB 3.2] [USB4]\nB15\u20260\n/ /\n6.4.4.3.1.1.1 USB Communications Capable as a USB Host\nUSB Communications Capable as USB Host Port USB Host\nThe field is used to indicate whether or not the has a\n6Ca.4pa.4bi.l3it.y1..1.2 USB Communications Capable as a USB Device\nUSB Communications Capable as a USB Device Port USB Device\nThe field is used to indicate whether or not the has a\n6Ca.4pa.4bi.l3it.y1..1.3 Product Type (UFP)\nSOP Product Type (UFP) UFPData Role VDO\nVDO Product Type SOP Product Type (UFP)\nSThhae ll field indicates the type of Product when in UFPData R, wolheether a will be\nreturned and if so the type of to be returned. The indicaStehda liln the Product T yfipeeld\nbe UthFeP closest categorization of the maDiant fau RnoctleionTaalbitley 6o.f3 t4h, e\" PPrroodduucctt T inyp es ( UFP)\" or \"UndPerfoindeudc\"t wTyhpeen\nVthDeOre is no suSihtaabllle category for the product. For DRD Products this field always indicate the\nwhen in role regardless of the present . defines the\ns which be returned. Table6.34 Product Types (UFP)\nProduct Type Description Product Type Reference\nVDO\nShall UFP\nPUDnUdSeBfi nHeudb Shall be used when this is not a .PDUSB Hub NUFoPn eVDO Section 6.4.4.3.1.4\nShall be used when the Product is a PDUSB . UFP VDO Section 6.4.4.3.1.4\nDevice PDUSB Hub\nbe used when the Product is a\nPDUSB Peripheral\nShall other than a .\nbe used when the Product is a PSD, e.g.,\nPSD None\npower bank.\nPage 170 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.4.3.1.1.4 Product Type (Cable Plug)\nSOP\u2019 Product Type (Cable Plug/VPD) Cable Plug VPD\nVDO VDO Table6.35, \"Product Types (Cable Plug/\nTVPhDe )\" Product Type VDO fieldS ihnadlilcates the type of Product when the Product is a or ,\nwhether a will be returned and if so the type of to be returned.\ndefines the Tabsl we6hi.3ch5 Prod buec tr eTtyuprneesd (.Cable Plug/VPD)\nProduct Type Description Product Type Reference\nVDO\nShall Product Type\nbe used where no other value\nUndefined None\nActive Cable\niSsh aaplplropriate.\nActive Cable VDO Section 6.4.4.3.1.7\nbe used when the Product is a cable that\nPassive Cable Sinhcaolrlporates signal conditioning circuits. Passive Cable VDO Section 6.4.4.3.1.6\nbe used when the Product is a cable that\nVCONN Powered USB dShoeasll not incorporate signal conditioning circuits. VPD Section 6.4.4.3.1.9\nDevice VCONN Powered USB Device\nbe used when the Product is a PDUSB\nVDO\n.\n6.4.4.3.1.1.5 Modal Operation Supported\nModal Operation Supported Cable Plug\nUFP Modal Operation Supported\nThe DFP Alternate Mode C bonitt irso ullseerd to indicate whether or not the Product (either a or a device\nthat can operate in the role) is capable of supporting Modes. The bit does not\ndescribe a 's Modal OperationSh faunllctionality. Discover SVIDsCommand SVID\nA product that supports respond to the with a list of s for all\n6of. 4th.e4 M.3o.1de.1s .i6t is capable of su p Pproortdinugc wt hTeythpeer o(rD nFoPt t)hose Modes can currently be entered.\nSOP - Product Type (DFP) DFPData Role VDO\nVDO Product Type SOP - Product Type (DFP)\nTShhae ll field indicates the type of Product when in D FPData Ro, wlehether a will be\nreturned and if so the type of to be returned. The indicatSehda inll the Product T yfipeeld\nbe DthFeP closest categorization of the maDiant fau RnoctleionTaalbitlye 6o.f3 t6h, e\" PPrroodduucctt Tiny pes ( DFP)\" or \"UndPerfoindeudc\"t wTyhpeen\nVthDeOre is no suSihtaabllle category for the product. For DRD Products this field always indicate the\nwhen in role regardless of the present . defines the\nSOsP w\u2019 Choicmhm unic abteio rnetuCranbeled .Plug VPD Reserved Shall\nIn ( s andT ables6) .t3h6is Pbirto fdieuldct i sT ypes (DFP a)nd be set to zero.\nProduct Type Description Product Type Reference\nVDO\nShall Product Type\nbe used where no other value\nUndefined None\nPDUSB Hub iSsh aaplplropriate. PDUSB Hub DFP VDO Section 6.4.4.3.1.7\nShall be used when the Product is a PDUSB Host.\nPDUSB Host DFP VDO Section 6.4.4.3.1.6\nbe used when the Product is a\nAlternate Mode\nor a PDUSB host that supports one or more\nCharger Shall s as an AMC. Charger DFP VDO Section 6.4.4.3.1.9\nbe used when the Product is a .\n6.4.4.3.1.1.7 Connector Type Field\nConnector Type Shall USB Type-C USB\nType-C\nThe field (B22\u202621) contain a value identifying it as either a receptacle or a\nplug.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 171\n6.4.4.3.1.1.8 Vendor ID\nShall USB Vendor ID Vendor ID USB\nDevice Hub USB Communication USB Vendor ID Shall\nManufacturers set the USB Device field to the va[lUueS Bof 2 t.h0e] [USB 3as.2s]igned to them by USB-IF. For\ns or s which support s the field be identical to the Vendor ID\n6fie.4ld. 4de.3fi.n1e.d2 in the product ' sC ert Stat V DDeOscriptor (see and ).\nCert Stat VDOShall\nCert Stat VDOShall Table6.37, \"Cert Stat VDO\"\nThe contain the XID assigned by USB-IF to the product before certification in binary format.\nThe fields in the be as dTeafibnleed 6in.3 7 Cert Stat VDO .\nBit(s) Description Reference\nB31...0 32-bit unsigned integer, XID Assigned by USB-IF\n6.4.4.3.1.3 Product VDO\nProduct VDO Product VDOShall\nTable6.38, \"Product VDO\"\nThe contains identity information relating to the product. The fields in the be as\ndefined in . Table6.38 Product VDO\nBit(s) Description Reference\n[USB 2.0] [USB 3.2]\n[USB 2.0] [USB 3.2]\nB31...16 16-bit unsigned integer, USB Product ID /\nB15...0 16-bit unsigned integer, bcdDevice /\nShould Should\nManufacturers set the USB Product ID field to a unique value identifying the product and set the\nb6c.d4D.4ev.3ic.e1 f.i4eld to a version UnuFmPb VerD rOelevant to the release version of the product.\nUFP VDO Shall UFP\nUSB Hub Port UFP VDO Shall\nThe definPerodd iunc tth Tisy speectUioFnP be retuIrDn eHde bayd ePro VrDtsO capable of operating as a includPiDngU StrBa dHiutibonal\nUTaSbBl epe6r.3ip9h, \"eUraFlPs ,V DO\" 's upstreUaFmP VDO and DSRhDa lclapable host Ports. TheP roduct Ty dpeefined in this section\nbe sent when the ( ) field in the is given as a PDUSB Peripheral or .\n[USB4]UFPShall defines thSet ructured VthDaMt Disco bvee rs eIndte bnatisteydC oonm tmhea nd .\nA support the Ta ble6.39 UFP VDO .\nBit(s) Description Reference\nVersion VDO Version\nUFP VDO Version \uf06c\nNumber of the (not this specification ):\nReserved Shall Not\nB31\u202629 Version 1.3 = 011b\nReserved VSahlaulels 100b\u2026111b are , be used.\nBit Description\nB28 be set to zero.\n[USB 2.0]Device\nDevice Capability 0 [USB 2.0] Device Capable\nB27\u202624 1 [USB 3.2] Device Capable (Billboard only)\n2 [USB4]De vice Capable\nConnector Type (Legacy) Dep3recated Shall Capable\nB23\u202622 Reserved Shall , be set to 00b.\nB21\u202611 be set to zero.\nPage 172 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.39 UFP VDO (Continued)\nBit(s) Description Reference\nVCONN Required VCONN\nPower VCONN AMA\nWhen the field is set to \u201cYes\u201d the\nField indicates the power needed by the for\n\uf06c\nfull functionality:\n\uf06c\n000b = 1W\n\uf06c\n001b = 1.5W\nVCONN Power \uf06c\n010b = 2W\n\uf06c\nB10\u20268 011b = 3W\n\uf06c\n100b = 4W\n\uf06c\n101b = 5W\nReserved Shall Not\n110b = 6W\nVCONN Required VCONN Power\n111b = , be used.\nReserved Shall\nWhen the field is set to \u201cNo\u201d the\nAMA VCONN\nfield is and be set to zero.\nIndicates whether the requires in order to\n\uf06c\nfunction.\nVCONN Required\n\uf06c\n0 = No\nAlternate Modes\nB7 1 = Yes\nVCONN Required Reserved Shall\nWhen the field indicates no modes are\nsupported, the field is and be\nAMA VBUS\nset to zero.\n\uf06c\nIndicates whether the requires in order to function.\nVBUS Required \uf06c 0 = Yes\nAlternate Modes\n1 = No\nB6 VBUS Required Reserved Shall\nWhen the field indicates no modes are\nsupported, the field is and be\nBit Description\nset to zero.\n[TBT3]Alternate Mode\n0 Supports Alterna te Mode\nAlternate Modes\n[USB Type-C 2.4]\nSupports s that reconfigure the\nB5\u20263 1 signals on [ t T he B T3] connector \u2013\nexcept forA lternate. Mode\n[USB Type-C 2.4]\nSupports s that do not reconfigure\n2\n\uf06c [USB 2.0]\nthe signals on the connector.\n\uf06c [USB 3.2]\n000b = only, no SuperSpeed support\n\uf06c [USB 3.2] [USB4]\nUSB Highest Speed 001b = Gen1\n\uf06c [USB4]\n010b = / Gen2\nB2\u20260 \uf06c [USB4]\n011b = Gen3\n\uf06c Reserved Shall\n100b = Gen4\n101b\u2026111b = and be set to zero.\n6.4.4.3.1.4.1 VDO Version Field\nUFP VDO Version VDOVersion VDMVersion\nUFP VDO\nThe field contains a for this number. This field indicates the expected\nc6o.n4t.e4n.t3 f.o1r. t4h.e2 s. Device Capability Field\nDevice Capability UFP Capabilities PDUSB Device PDUSB\nHub\nThe bit-field describes the 's when operating as either a or\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 173\nShall USB Device Shall\nUSB Device\nThe bits in the bit-field be non-zero when the corresponding speed is supported and be set\n[toU SzBer 2o. 0w]hen the corresponding speed is not supported. Shall Not\n6.4.4.3.1 \".D4e.v3ice capable\" and C\"Doenvnicee cctaoprab Tley Bpiellb Foiaerdld only\" (bits 0 and 1) be simultaneously set.\nConnector Type (Legacy) UFP VDO Shall\nCable Plug Shall Ignored Connector Type\nTh ID Header VDO Se cfiteioldn w6.a4s.4 p.3r.e1v.1io.7u, s\"lCyo unsneedc tfoorr Tthyep e Field\" 's Connector Type. be set to 00b by\nthe and be by the receiver. The receiver can find this information in the\nf6ie.4ld. 4in. 3th.1e .4.4 ( VCONN Power Field ).\nVCONN Required VCONN VCONN Power Shall\nAMA VCONN Required VCONN Power\nWhReense trhvee d Shall field indicates that is required the field indicate how much\npower an needs in order to fully operate. When the field is set to \"No\" the field\n6is. 4.4.3.1.4 a.n5d be set to VzeCrOo.NN Required Field\nVCONN Required Shall VCONN AMA VCONN Required\nShall Alternate Modes Alternate Mode Alternate Mode\nThe field Rese irnvdeidcate wShheathller is needed for the to operate. The field\nonly be used if the field indicates that an is supported. If no s\n6ar.e4 s.4up.3p.o1rt.4ed.6, this field is VBUS a Rnde quir ebde sFeti etold zero.\nVBUS Required Shall VBUS AMA VBUS\nShall Alternate Modes Alternate Mode Alternate Mode\nThe field Res einrdveicdate whShetahlelr is needed for the to operate. The required field\nonly be used if the field indicates that an is supported. If no s\na6r.e4 s.4up.3p.o1rt.4ed.7, this field is Alte rannda te M obde esest Ftoi ezeldro.\nAlternate Modes Shall Alternate Mode\nT6h.4e .4.3.1.4.8 field U bSeB u Hseidg tho eidsetn Stipfye aeldl t hFei etylpdes of s, if any, a device supports.\nUSB Highest Speed Shall Port DFPShall\nDFP Valid\nThe field indicate DthFeP 's highest speed capability. The consider all values\nindicated in this field that are higher than the highest value that the recognizes as being and functionally\ncompatible with the highest speed that the supports.\nPage 174 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.4.3.1.5 DFP VDO\nDFP VDOShall DFP Host Hub\nDFP VDOShall Product Type DFP ID Header VDO\nThe PD UbeS Bre Htuorsnted bPyD UPoSrBt sH cuabpaTbalbel oef6 o.4p0e,r \"aDtiFnPg aVsD aO \" ; includinDg FthPo VseD iOmplemSehnatleld by s, s\nand Power Bricks. The be returned when the ( ) field in the is given\nas Power Brick, or . Table6.40 DFP VD Odefines the that be sent.\nBit(s) Field Description\nVersion VDO Version\nDFP VDO Version \uf06c\nNumber of the (not this specification ):\nReserved Shall Not\nB31\u202629 Version 1.2 = 010b\nReserved VSahlaulels 011b\u2026111b are and be used\nHost Capability Bit Description\nB28\u202627 be set to zero.\nB26\u202624 [USB 2.0]Host\n0 [USB 3.2]Host\nCapable\n1 [USB4]Host\nCapable\nConnector Type Sha2ll\nCapable\n(Legacy)\nB23\u202622 Reserved Shall be set to 00b.\nPort Number Port Port Port\nB21\u20265 be set to zero.\nB4\u20260 Unique number to identify a specific on a multi- device.\n6.4.4.3.1.5.1 VDO Version Field\nDFP VDO Version Shall VDOVersion VDMVersion\nDFP VDO\nThe field contain a for this number. This field indicates the\n6ex.p4e.4ct.e3d. 1co.5nt.2ent for the Ho.st Capability Field\nHost Capability Shall DFP PDUSB Host DFP\nCapabilities PDUSB Host\nThe bit-field describe whether the can operate as a and the 's\nwhen oPpDeUrSaBti nHgu bas aS hall H. ost Capability\nP6o.4w.e4r. 3Br.1ic.k5s. a3nd s Conn seetc tthoer Type Field bits to zero.\nConnector Type (Legacy) UFP VDO Shall\nCable Plug Shall Ignored Connector Type\nThe ID Header VDO Sec tfiioenld 6 w.4a.4s .p3.r1e.v1i.7o,u \"sClyo nunseecdt oforr T tyhpee Field\" 's Connector Type. be set to 00b by\nthe and be by the receiver. The receiver can find this information in the\nf6ie.4ld. 4in.3 th.1e .5.4 ( Port Number Field ).\nPort Number Shall Static [USB Type-C 2.4]DFP\nDRP\nThe field be a unique number that unambiguously identifies each ,\niNnoctlued:ing s, on the device. Port\nThis number is independent of the USB number.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 175\n6.4.4.3.1.6 Passive Cable VDO\nPassive Cable VDO Shall Product Type Passive Cable\nTable6.41, \"Passive Cable VDO\" Cable VDO Shall\nThe defined in this section be sent when the is given as .\nPassive Cable defines the which beC asbelnet .Plug SOP\u2019 Communication\nPassive CableShall Not\nA haPsa sas UivSeB C Pabluleg Sohna elalch end at lVe B a U st S one of whSichha ilsl a suppSoOrPt\u2019i nCgo mmunication Passive. A\nCable Shall inSctorrupcoturareted dVaDtMa bDuiss csoigvnearl IcdoenndtiittiyonCionmg mciarcnudits anSdh haelnlce has no coPnacsseipvte oCfa Sbulep eVrD SOpeed\nDDiirseccotvioern aIdlietyn. tAit yCommandA CK include a Tabl ew6ir.4e1 a, n\"Pda ssive Coanblyle r VesDpOo\"nd to .\ns support the and return the in a\nas showTnab inle 6.41 Passive Cable VDO .\nBit(s) Field Description\nHW Version VID\nFirmware Version VID\nB31\u202628 0000b\u20261111b assigned by the owner\nVersion VDO Version\nB27\u202624 0000b\u20261111b assigned by the owner\nVDO Version \uf06c\nNumber of the (not this specification ):\nReserved Shall Not\nB23\u202621 Version 1.0 = 000b\nReserved VSahlaulels 001b\u2026111b are and be used.\nB20 \uf06c be set R to e s z e e r r v o e . d Shall Not\nUSB Type-C plug to USB \uf06c Reserved Shall Not\nType-C/Captive 00b = and be used\n(Passive Cable) \uf06c 01b = USB Type- C and be used\nB19\u202618\n\uf06c\n10b =\nEPR Capable (Passive \uf06c 11b = Captive EPR Capable\nCable) \uf06c EPR Capable\n0b \u2013 Cable is not\nB17 \uf06c 1b = Cabl R e e i s s e rved Shall Not\n\uf06c\n0000b \u2013 and be used\n\uf06c\n0001b \u2013 <10ns (~1m)\n\uf06c\n0010b \u2013 10ns to 20ns (~2m)\nCable Latency (Passive \uf06c\n0011b \u2013 20ns to 30ns (~3m)\nCable)\n\uf06c\n0100b \u2013 30ns to 40ns (~4m)\nB16\u202613\n\uf06c\n0101b \u2013 40ns to 50ns (~5m)\n\uf06c\n0110b \u2013 50ns to 60ns (~6m)\n\uf06c\n0111b \u2013 60ns to 70ns (~7m)\nNote: Reserved Shall Not\n1000b \u2013 > 70ns (>~7m)\n\uf06c 1001 V b C \u2026 ON .1 N 111b C a a b n l d e Plug be used Discover Identity\nCommand Shall\nCable Termination Type\n00b = not required. s that only support\n(Passive Cable) \uf06c VCONN\ns set these bits to 00b.\nB12\u202611 \uf06c Reserved Shall Not\n01b = required\nVBUS\n10b\u202611b = and be used\n2\n\uf06c\nMaximum VBUS Voltage Ma\n\uf06c\nximum Cable\nDe p\nV\nr\no\ne\nl\nc\nta\na\ng\nt\ne\ned\n:\n(Passive Cable) 00b \u2013 20V\n\uf06c 1 Deprecated\nB10\u20269 01b \u2013 30V ( )\n1\n\uf06c\n10b \u2013 40V ( )\nReserved Shall11b \u2013 50V\nShall\nB8\u20267 be set to zero.\n1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b.\n2) s with a captive cable report 50V.\nPage 176 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.41 Passive Cable VDO (Continued)\nBit(s) Field Description\n\uf06c Reserved Shall Not\nVBUS Current Handling\n\uf06c\nCapability (Passive 00b = and be used\nCable) \uf06c 01b = 3A\nB6\u20265 \uf06c Reserved Shall Not\n10b = 5A\nReserved Shall11b = and be used\nB4\u20263 \uf06c be set t [ o U z S e B r o 2 . .0]\n\uf06c [USB 3.2]\n000b = only, no SuperSpeed support\nUSB Highest Speed \uf06c [USB 3.2] [USB4]\n001b = Gen1\n(Passive Cable) \uf06c [USB4]\n010b = / Gen2\nB2\u20260 \uf06c [USB4]\n011b = Gen3\n\uf06c Reserved Shall Not\n100b = Gen4\nShall\n101b\u2026111b = and be used\n1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b.\n2) s with a captive cable report 50V.\n6.4.4.3.1.6.1 HW Version Field\nHW Version VID\nT6h.4e .4.3.1.6.2 (B31\u202628) co n FtaWins V ae HrWsi ovenr sFioien ladssigned by the owner.\nFirmware Version VID\nT6h.4e .4.3.1.6.3 field (B 2V7D\u2026O24 V) ecornstiaoinns Fai FeWld version assigned by the owner.\nVDO Version VDOVersion VDMVersion\nVDO\nThe field (B23\u202620) contains a for this number. This field indicates the\n6ex.p4e.4ct.e3d. 1co.6nt.4ent for this . USB Type-C plug to USB Type-C/Captive Field\nUSB Type-C plug to USB Type-C/Captive (Passive Cable) Shall\nUSB Type-C USB Type-C USB\nTTyhpee -C field (B19\u202618) contain a value indicating\nwhether the opposite end from the plug is another plug (i.e., a detachable Standard\n6.4.4. 3Ca.1b.l6e .A5ssembly) or is a CEaPpRtiv Me Coadbele CAasspeambbllye.\nEPR Capable (Passive Cable) Static Shall\nThe bit is a bit which only be set when the cable is specifically designed\n6fo.r4 s.a4f.e3 o.p1e.6ra.t6ion when carryi n Cg aubp lteo L48a tveolntsc ayt F5i aemldps.\nCable Latency (Passive Cable) Shall\nThe field (B16\u202613) contain a value corresponding to the signal latency\nt6h.r4o.u4g.h3 t.1he.6 c.a7ble which can b e Cuasebdl eas T aenr amppirnoaxitmioatnio Tn yfopre it Fs ileenlgdth.\nCable Termination Type (Passive Cable) Shall Passive\nCable VCONN Discover IdentityCommand\nThe Passive Cable VCONN field (B12\u202611) contain a value indicating whetChaerb lteh Pe lug\nneeds only initially in order to support the , after which it can be removed,\n6or. 4th.4e .3.1.6.8 needs M taox biem counmtin VuoBuUsSl yV aoplptaliegde i Fn ioerldder to power some feature of the .\nMaximum VBUS Voltage (Passive Cable) Shall Shall\nNegotiated Fixed Supply Explicit Contract Shall\nThe vSrcNew vSrc Vfiaelldid (B10\u20269) contain the maMxaimxiummu vmo lVta BU g S e Vthoaltta ge (P baes sive\nCable) using a Fixed Supp olyver the cable as Npaergto otfia atne d Ex wplhiceitr eC othnetr macatximum voltage that\nbe applied to the cable is max + max. For example, when the Maximum VBUS Voltage (Passive\nfield is 20V, a of 20V can be as part of an where the absolute\nmaximum voltage that can be applied to the cable is 21.55V. Similarly, when the\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 177\nCable) Fixed Supply Negotiated Explicit Contract\nMaximum VBUS Voltage (Passive Cable)\nfield is 50V, a of 4S8hVa claln be as part of an where the absolute\nmaximum voltage that can be applied to the cable is 50.9V. field values of\n061.4b .a4n.d3 .110.b6 (.9formerly 30V an d V 4B0UVS) Curr been ttr eHataend difl tihnegy wCaerpea 0b0ibl i(t2y0 VF)i.eld\nVBUS Current Handling Capability (Passive Cable) Shall\nThe field (B6\u20265) indicate whether the cable is capable\n6of. 4ca.4rr.y3in.1g .36A.1 o0r 5A. USB Highest Speed Field\nUSB Highest Speed (Passive Cable) Shall DFP\nShall DFP\nThe Valid field (B2\u20260) indicate the DhiFgPhest rate the cable supports. The\nconsider all values indicated in this field that are higher than the highest value that the recognizes as\nbeing and functionally compatible with the highest speed that the supports.\nPage 178 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.4.3.1.7 Active Cable VDOs\nActive Cable Cable Plug SOP\u2019 Communication\nActive CableShall May\nAn has a USB Plug on each end Aatc tlievaes Ct aobnlee oMf awyhich is a VBUS supporting .\nAn incorporate data bus signal conditioning circuits and have a concept of Super Speed\nDireAccttiiovne aClaitbyl eon its Super Speed wires. An include a wire.\nAn \uf06c Shall : SOP\u2019 Communication\n\uf06c May respond toS OP\u2019\u2019 Communication.\n\uf06c Shal lrespond to Structured VDMDis.cover IdentityCommand\n\uf06c sDuipspcoorvte trh Ied entityCommand ACK .\n\uf06dIn tShhe all Product Type ID H:eader VDO Active Cable\n\uf06d Shall set the Active Cab lien VthDeO Tab tloe 6.42, \"Active. Cable VDO1\" Table6.43, \"Active\nCable VDO2\"\nreturn the s defined in and\n.. Table6.42 Active Cable VDO1\nBit(s) Field Description\nHW Version VID\nFirmware Version VID\nB31\u202628 0000b\u20261111b assigned by the owner\nVersion VDO Version\nB27\u202624 0000b\u20261111b assigned by the owner\nVDO Version \uf06c\nNumber of the (not this specification ):\nReserved Shall Not\nB23\u202621 Version 1.0 = 000b\nReserved VSahlaulels 001b\u2026111b are and be used.\nB20 \uf06c be set R to e s z e e r r v o e . d Shall Not\nUSB Type-C plug to USB \uf06c Reserved Shall Not\n00b = and be used\nType-C/Captive \uf06c USB Type-C\n01b = and be used\nB19\u202618\n\uf06c\n10b =\nEPR Capable (Active \uf06c 11b = Captive EPR Capable\nCable) \uf06c EPR Capable\n0b \u2013 Cable is not\nB17 \uf06c 1b = Cabl R e e i s s e rved Shall Not\n\uf06c\n0000b \u2013 and be used\n\uf06c\n0001b \u2013 <10ns (~1m)\n\uf06c\n0010b \u2013 10ns to 20ns (~2m)\n\uf06c\n0011b \u2013 20ns to 30ns (~3m)\n\uf06c\n0100b \u2013 30ns to 40ns (~4m)\nCable Latency \uf06c\n0101b \u2013 40ns to 50ns (~5m)\n\uf06c\nB16\u202613 0110b \u2013 50ns to 60ns (~6m)\n\uf06c\n0111b \u2013 60ns to 70ns (~7m)\n\uf06c\n1000b \u20131000ns (~100m)\n\uf06c\n1001b \u20132000ns (~200m)\n\uf06c Reserved Shall Not\n1010b \u2013 3000ns (~300m)\nNote: Active Cable\n1001b \u2026.1111b and be used\n\uf06c Includes la R te e n s c e y r v o e f d electr S o h n a ic l s l N in o t .\nCable Termination Type\n(Active Cable) \uf06c 00b\u202601b = and be u V s C e O d NN\n\uf06c VCONN\nB12\u202611 10b = One end Active, one end passive, required\nShall\n11b = Both ends Active, required\n1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b.\n2) s with a captive cable report 50V.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 179\nTable6.42 Active Cable VDO1 (Continued)\nBit(s) Field Description\nVBUS\n2\n\uf06c\nMaximum Cable voltage :\nMaximum VBUS Voltage\n(Active Cable) \uf06c 00b \u2013 20V Deprecated\n\uf06c 1 Deprecated\nB10\u20269 01b \u2013 30V ( )\n1\n\uf06c\n10b \u2013 40V ( )\nReserved Shall11b \u2013 50V\nB8\u20267 SBU Supported \uf06c be set to zero.\n\uf06c\n0 = SBU connections supported\nB8\n1 = SBU connections are not supSphoarltled Ignored\nSBU Type When SBU Supported = 1 this bit be\n\uf06c\nWhen SBU Supported = 0:\nB7\n\uf06c\n0 = SBU is passive\nVBUS Through Cable Shall Ignored\n1 = SBU is active\nVBUS Through Cable\nWhen is \u201cNo\u201d, this field be .\nVBUS Current Handling \uf06c Reserved Shall Not\nCapability (Active When is \u201cYes\u201d:\nCable) \uf06c 00b = and be used\nB6\u20265\n\uf06c\n01b = 3A\n\uf06c Reserved Shall Not\n10b = 5A\nVBUS Through Cable \uf06c 11b = and be used\n\uf06c\n0 = No\nB4 SOP\u2019\u2019 Controller Present \uf06c 1 = Yes SOP\u2019\u2019\n\uf06c SOP\u2019\u2019\n0 = No controller present\nB3 \uf06c 1 = [U c S o B n t 2 r . o 0 l ] ler present\n\uf06c [USB 3.2]\n000b = only, no SuperSpeed support\nUSB Highest Speed \uf06c [USB 3.2] [USB4]\n001b = Gen1\n(Active Cable) \uf06c [USB4]\n010b = / Gen2\nB2\u20260 \uf06c [USB4]\n011b = Gen3\n\uf06c Reserved Shall Not\n100b = Gen4\nShall\n101b\u2026111b = and be used\n1) EVPalRu Seisn nko longer allowed. WheSnh parlelsent the field be interpreted as if it was 00b.\n2) s with a captive cable report 50V.\nTable6.43 Active Cable VDO2\nBit(s) Field Description\nMaximum Operating\nTemperature\nThe maximum internal operating temperature in \u00b0C. It might or might not reflect the\nB31\u202624\nShutdown Temperature plug\u2019s skin temperature.\nThe temperature, in \u00b0C, at which the cable will go into thermal shutdown so as not to\nB23\u202616 Reserved eSxhcaeleld the allowable plug skin temperature.\nB15 \uf06c be set to zero.\n\uf06c\n000b: >10mW\n\uf06c\n001b: 5-10mW\n\uf06c\nU3/CLd Power 010b: 1-5mW\n\uf06c\n011b: 0.5-1mW\nB14\u202612\n\uf06c\n100b: 0.2-0.5mW\n\uf06c\n101b: 50-200\u00b5W\n\uf06c Reserved Shall Not\n110b: <50\u00b5W\n111b: and be used\nPage 180 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.43 Active Cable VDO2 (Continued)\nBit(s) Field Description\nU3 to U0 transition \uf06c\nmode\n\uf06c\n0b: U3 to U0 direct\nB11\nPhysical connection \uf06c 1b: U3 to U0 through U3S\n\uf06c\n0b = Copper\nB10\nActive element \uf06c 1b = Optical\n\uf06c\n0b = Active Re-driver\nB9 USB4 Supported \uf06c 1b = [ A U c S ti B v 4 e ] R e-timer\n\uf06c [USB4]\n0b = supported\nB8 [USB 2.0]\nUSB 2.0 Hub Hops 1b = not supported\nConsumed\nSNhuamllber of \u2018hub hops\u2019 cable consumes.\nB7\u20266\nUSB 2.0 Supported \uf06c bese [ t U to S B z e 2 r . o 0 ] if USB 2.0 not supported.\n\uf06c [USB 2.0]\n0b = supported\nB5 USB 3.2 Supported \uf06c 1b = [USB 3.2] not supported\n\uf06c [USB 3.2]\n0b = SuperSpeed supported\nB4\nUSB Lanes Supported \uf06c 1b = SuperSpeed not supported\n\uf06c\n0b = One lane\nB3\nOptically Isolated \uf06c 1b = Two lanes\nActive Cable\n\uf06c\n0b = No\nB2\n\uf06c 1b = Yes\nUSB4 Asymmetric Mode\n\uf06c\nSupported 0b = No\nB1 Shall1b = Yes\n\uf06c\nbe set to zero if asymmetry is not supported.\nUSB Gen \uf06c\n0b = Gen 1\nNote:\nB0 1b = Gen 2 or higher\nSee VDO1 USB Highest Speed for details of Gen supported.\n6.4.4.3.1.7.1 HW Version Field\nHW Version VID\nT6h.4e .4.3.1.7.2 field (B31\u20262 8 F) Wcon Vtaeinrss iao HnW F vieerlsdion assigned by the owner.\nFirmware Version VID\nT6h.4e .4.3.1.7.3 field (B 2V7D\u2026O24 V) ecornstiaoinns Fai FeWld version assigned by the owner.\nVDO Version VDOVersion VDMVersion\nActive Cable VDO\nThe field (B23\u202620) contains a for this number. This field indicates the\n6ex.p4e.4ct.e3d. 1co.7nt.4ent for the Connectos.r Type Field\nUSB Type-C plug to USB Type-C/Captive Shall\nUSB Type-C USB Type-C USB Type-C\nThe field (B19\u202618) contain a value indicating whether the opposite\nend from the plug is another plug (i.e., a detachable Standard Cable Assembly)\no6r. 4is. 4a .C3a.p1t.i7ve.5 Cable Assembly . EPR Mode Capable\nEPR Capable (Active Cable) Static Shall\nThe is a bit which only be set when the cable is specifically designed for\ns6a.f4e. o4p.3er.a1t.i7on.6 when carrying u pC atob 4l8e vLoalttse ant c5y a mFipesl.d\nCable Latency Shall\nThe field (B16\u202613) contain a value corresponding to the signal latency through the cable\nwhich can be used as an approximation for its length.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 181\n6.4.4.3.1.7.7 Cable Termination Type Field\nCable Termination Type (Active Cable) Shall\nActive Cable Cable Plug VCONN\nThe field (B12\u202611) contain a value corresponding to whether the\n6.4.4.3.1.7 h.a8s one or two Maxims ruemqu iVriBngU Sp oVwoelrt afrgoem Field.\nMaximum VBUS Voltage (Active Cable) Shall Shall\nNegotiated Explicit Contract Shall vSrcNew\nThe vSrcValid field (B10\u20269) contain the maximum voltage that beA PDO\nas part of an where the maximum voltage that be applied to the cable is\nMmaaxx i+m um VBUS V moaltxa. gWeh (eAnc tthivies fCiealbdl eis) set to 20V, the Fcaixbelde Swuipllp slayfely carry a ProNgreagmotmiaatebdle Power SuppElyx plicit\noCfo n2t0rVa cwthere the absolute maximum voltage that can be applied to the cable is 21.55V. SMimaixlaimrlyu,m w Vhe B n U S t hVeo ltage\n(Active Cable) field is 50V, a oSfh 4a8llV can be as part of an\nwhere the absolute maximum voltage that can be applied to the cable is 50.9V.\n6.4.4.3.1.7.9 field values of 0 1SbB aUnd S 1u0pbp (foorrmteedrl yF i3e0lVd and 40V) be treated if they were 00b (20V).\nSBU Supported Shall\nT6h.4e .4.3.1.7.10 field (B8) SBU i nTdyicpaete F wiehledther the cable supports the SBUs in the cable.\nSBU Type Shall\nT6h.4e .4.3.1.7.1 fi1eld (B7) i nVdBicUaSt eC wuhrertehnert tHhea SnBdUlsi narge Cpaaspsiavbe iolri tayc tFiviee (led.g., digital).\nVBUS Current Handling Capability (Active Cable) Shall\nVBUS Current Handling Capability (Active Cable) Shall Valid VBUS\nTCuhrer ent Handling Capability (Active Cable) field (B6\u20265) inVd B i U c S ate whether the cable is capable of\ncarrying 3A or 5A. The field only be when the\n6.4.4.3.1.7.12 VBUS Throu figehld Cinadbiclaet eFsi aenl dend-to-end wire.\nVBUS Through Cable Shall VBUS\nT6h.4e .4.3.1.7.13 field ( BS4O)P '' Co inndtricoaltele wrh Petrheesre thnet cFaibelel dcontains an end-to-end wire.\nSOP\u2019\u2019 Controller Present Shall Cable Plug SOP\u2019\u2019\nCommunication NormativeSOP\u2019 Communication\nThe field (B3) indicate whether one of the s is capable of\n6.4.4.3.1.7.1 4in addition to t hUeS B Highes t Speed Field .\nUSB Highest Speed (Active Cable) Shall DFP\nShall DFP\nThe Valid field (B2\u20260) indicate the hiDgFhPest rate the cable supports. The\nconsider all values indicated in this field that are higher than the highest value that the recognizes as\n6be.4in.g4 .3.1. 7an.1d5 functionally co mMpaaxtiibmleu wmith O thpee hriaghtienstg s pTeeemd tpheatr tahteu re F siueplpdorts.\nMaximum Operating Temperature Shall\nfield (B31\u202624) report the maximum allowable operating temperature\ni6n.s4id.4e .t3h.e1 p.7lu.g1 i6n \u00b0C. Shutdown Temperature Field\nShutdown Temperature Shall\nActive\nCableStatusMessage field (B23\u202616) indicate the temperature inside the plug, in \u00b0C, at which the plug\nwill shut down its active signaling components. When this temperature is reached, it will be reported in the\n6.4.4 .3.1.7 .17 through t Uhe3 T/hCeLrmda Pl Sohwutedro wFine blidt.\nU3/CLd Power Shall [USB 3.2] [USB4]\nThe field (B14\u202612) indicate the power the cable consumes while in U3 or\nC6L.4d..4.3.1.7.18 U3 to U0 Transition Mode Field\nU3 to U0 transition mode Shall\nThe field (B11) indicate which U3 to U0 mode the cable supports. This does not\ninclude the power in U3S if supported.\nPage 182 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.4.3.1.7.19 Physical Connection Field\nPhysical connection Shall\nThe field (B10) indicate the cable's construction, whether the connection between the\n6ac.t4iv.4e .e3le.1m.e7n.t2s0 is copper or op tAiccatli.ve element Field\nActive element Shall\nThe field (B9) indicate the cable's active element, whether the active element is a re-timer or\n6a .r4e-.d4r.i3v.e1r..7.21 USB4 Supported Field\nUSB4 Supported Shall [USB4]\nT6h.4e .4.3.1.7.22 field (B8 ) U SB 2 in.0di cHauteb w Hheothpesr Coro nnostu thme ecadb lfei esuldpports operation.\nUSB 2.0 Hub Hops Consumed Shall\nThe field (B7\u20266) indicate the number of USB 2.0 'hub hops' that are lost due\n6to. 4th.4e .t3ra.n1s.m7.i2ss3ion time of the cUaSbBle . 2.0 Supported Field\nUSB 2.0 Supported Shall [USB 2.0]\nT6h.4e .4.3.1.7.24 field ( B U5)S B 3.2 in Sduicpatpe owrhteetdhe Fr ioerl ndot the cable supports only signaling.\nUSB 3.2 Supported Shall [USB 3.2]\nThe field (B4) , indicate whether or not the cable supports SuperSpeed\n6si.g4n.a4li.n3g..1 .7.25 USB Lanes Supported Field\nUSB Lanes Supported Shall [USB 3.2]\nThe field (B3) indicate whether the cable supports one or two lanes of\n6Su.4pe.4rS.3pe.1ed.7 s.i2gn6aling. Optically Isolated Active Cable Field\nOptically Isolated Active Cable Shall Active Cable\n[USB Type-C 2.4] Active Cable Shall\nThe field (B2) [US Bin 2d.i0ca]te whetheVr B t U h S is cable is an optically isolated\nor not (as defined in ). Optically Isolated s have a re-timer or linear re-driver\n6(L.R4D.4) .a3s. t1h.e7 a.2ct7ive element an d U dSoB n4ot A suspypmormt etric Mo odr eca Srruyp por.ted Field\nUSB4 Asymmetric Mode Supported Shall Active Cable\n[USB4] [USB Type-C 2.4]\nThe field (B1) indicate that the supports asymmetric mode\na6s. 4de.4fi.n3e.d1 i.n7 .28 and USB Gen .Field\nUSB Gen Shall Shall [USB 3.2]\nMay [USB 3.2] [USB4]\nThe field (B0) indicate the signaling Gen the cable supports. Gen 1 only beU uSBse Hd ibgyh est Speed\nc(Aabctleivse a Cs ainbdleic)ated by the USBSh 3a.2ll Supported field. Gen 2 or higher be used by either or\ncables as indicated by their respective supported fields. When Gen 2 or higher is indicated the\n6.4.4.3.1.8 field in VDO 1 A lter ninadtieca Mte othdee a cAtudaal pGeten rs uVpDpoOrted.\nAlternate Mode Adapter AMA VDO Deprecated PDUSB Device Alternate\nMode Shall Product Type UFP Shall Modal Operation Supported\nThe ( ) has been . s which support one or more\ns set an appropriate ( ), and set the bit to '1'.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 183\n6.4.4.3.1.9 VCONN Powered USB Device VDO\nVCONN Powered USB Device VPD VDO Shall Product Type\nVCONN Powered USB Device Table6.44, \"VPD VDO\" VPD Shall\nThe ( ) defined in this section be sent when the is given as\n. Tabl ede6fi.4n4es VthPeD VD OVDO which be sent.\nBit(s) Field Description\nHW Version VID\nFirmware Version VID\nB31\u202628 0000b\u20261111b assigned by the owner\nVersion Version\nB27\u202624 0000b\u20261111b assigned by the owner\nVDO Version \uf06c\nNumber of the VDO (not this specification ):\n\uf06c Reserved Shall Not\nB23\u202621 Version 1.0 = 000b\nReserved ShallValues 001b\u2026111b are and be used.\nB20...17 be se V t P t D o V ze B r U o S .\n\uf06c\nMaximum Voltage:\nMaximum VBUS Voltage \uf06c\n00b \u2013 20V\nDeprecated\n\uf06c 1 Deprecated\nB16\u202615 01b \u2013 30V ( )\n\uf06c 1 Deprecated\n10b \u2013 40V ( )\nCharge Through1 Current Support\n11b \u2013 50V ( )\n\uf06c\nbit=1b:\nCharge Through\n\uf06c\nCurrent Support 0b - 3A capable.\nB14\nCharg1eb T -h 5rAo ucgapha Cbulerrent Support\n\uf06c Reserved Shall\nbit = 0b:\nReserved Shall and be set to zero.\nB13\nCharg e\nb e\nT\ns\nh\ne\nr\nt\no\nt\nu\no\ng\nz\nh\ne r\nC\no\nu\n.\nrrent Support VBUS VPD\nVBUS Impedance Reserved Shall Not\nbit = 1b: impedance through the in 2\nB12\u20267 Cmh\u2126a ringcer Temhreonutsg.h V Caluurerse lnets sS uthpapno 1rt0 m\u2126 are Reserved and Shall be used.\nCharge Through Current Support VPD\nbit = 0b: and be set to zero.\nGround Impedance Reserved Shall Not\nbit = 1b: Ground impedance through the in\nCharge Through Current Support Shall\nB6\u20261 1 m\u2126 increments. Values less than 10 m\u2126 are and be used.\nCharge Through \uf06c VPD Charge b T it h = ro 0 u b g : h be set to zero.\nSupport \uf06c VPD Charge Through\n1b \u2013 the supports\nB0 Shall\n0b \u2013 the does not support\n1) Values no longer allowed. When present the field be interpreted as if it was 00b.\n6.4.4.3.1.9.1 HW Version Field\nHW Version VID\nT6h.4e .4.3.1.9.2 field (B31\u20262 8 F) Wcon Vtaeinrss iao HnW F vieerlsdion assigned by the owner.\nFirmware Version VID\nT6h.4e .4.3.1.9.3 field (B 2V7D\u2026O24 V) ecornstiaoinns Fai FeWld version assigned by the owner.\nVDO Version Version VDMVersion\nThe field (B23\u202620) contains a VDO for this number. This field indicates the\n6ex.p4e.4ct.e3d. 1co.9nt.4ent for this VDO. Maximum VBUS Voltage Field\nMaximum VBUS Voltage Shall SinkShallNegotiate\nVPDCharge Through Port Explicit Contract\nThe field (B16\u202615) contain the maximum voltage that a\ntNhortoeu:gh the as part of an v.SrcNew vSrcValid\nMaximum VBUS Voltage Fixed Supply Negotiated\nThe maximum voltage that will be applied to the cable is max + max. For example,\nwhen the field is 20V, a of 20V can be as part of an\nPage 184 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nExplicit Contract\nMaximum VBUS Voltage Shall\nwhere the absolute maximum voltage that can be applied to the cable is 21.55V.\nfield values of 01b and 10b (formerly 30V and 40V) be treated if they were\n6.4.4.3.10.09b. 5(20V). VBUS Impedance Field\nVBUS Impedance Shall VPD Source\nSink SinkShall VBUSIR Drop\nThe field S(oBu1r2c\u2026e7) contain Sthinek impedance the adIdRs Dinr osperiesV b\nB\ne\nU\nt\nS\nweeMna tyhe and the\n. The take this value into account when requesting current so as to not to exceed the\nl6im.4it.4 o.f3 0..15V.9 b.6etween the G arnodu intsdel fI. mIf tphee dan ccean F tioelelrdate a larger on it do so.\nGround Impedance Shall VPD Source\nSink SinkShall IR\nDThroep field (B6S\u2026ou1r)c e contain the impedance the adds in series between the and\nthe . The take this value into account when requesting current so as to not to exceed the Ground\n6.4.4 li.m3i.t1 o.9f 0.7.25V between th eC harge a nTdh itrsoeulf.gh Field\nFirmware Version Shall VPD Charge Through\nThe field (B0) be set to 1b when the supports and 0b otherwise.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 185\n6.4.4.3.2 Discover SVIDs\nDiscover SVIDsCommand Initiator SVID Responder\nDiscover SVIDsCommand Discover ModesCommand Discovery Process\nThe is used by an toS dVeIDtermine the s for which a has ModeSsV.I TDhe\nis used in conjunction with the in the to\ndeteSrmVIiDne whichD iMscoodveesr a S dVeIvDisceC osumpmpaonrtds.S Thhaell list of s is always termTinaabtleed6 .w31it,h \" SoVnIeD o Vra tlwueos 0\"x0000 s.\nInitiator Responder Command\nThe in the be set to the PD SID (see \" ) by both the\nNum abnedr tohfe D ata Objec tfsor this Mess.a ge Header Discover SVIDsCommand Shall\nDiscover SVIDsCommand Shall Not\nThe field in the in the request be set to\n1 sinDceis tchoev er SVIDsComma ndACK request Res pcoonndtaeirnS ahnayl lVDOs. SVID SVID\nTable6.45, \"Discover SVIDs Responder VDO\"\nTSVhIeD Discover S VIDsCom mand sent back by the S VID contain one or more s. The s are\nreturned 2 per VDO (see SVID Discover SVIDs)C. oIfm tmhearned are an odd number of supported\ns, the SVID is returned ending with a Resp voanldueer oSfh 0axl0l000 in the lasStV pIDart of the last VDO.\nIDf itshceorvee arr Me oand eesvCenom nummanbder of supported SVIsD, the Alterna itse r Metoudrened ending with an\nadditional VDO containing two s with values of 0x0000. A only return s for which a\nResponder request for tShVaItD Sha wllill return NatA lKeast one .\nA Number t ohfa Dt daotaes O nbojte csutspport any Mess sage H reeatduerrn a D.iscover SVIDsCommandNAK BUSY\nShall Shall Not\nThe field in the in the and\nresponRseesps onder be set to 1 since they SVID contaDinis acnoyv eVrD SOVsI.DsCommandShall\nDiscover SVIDs SVID\nIf the supports 12 oSrV mIDore s then the SVID ACKM bees seaxgeecuted multiple times\nuntil a VDO is returSnVeIdD enSdhianlgl either withS Va ID valRuees opfo 0nxd0er00Sh0 ainll the last part of theS VlaIDst VDO\nor withD ai sVcDovOe cro Indteanintiitnyg Ctowmom ands with values of 0x0000. EachI Dniitsicaotvoerr , other than the one\ncontaining the terminating 0x0000 , convey 12 s. The restart the list of s each\ntNimotee :a Cable Pl ug requesMt iess rseacgeeived froGmo othdeC RCMessa.ge Initiator\nCable Plug Discover SVIDsCommandACK\nSSVinIcDe a does not retry s if the from the becomes corrupted\nthe will consider the unsent and will send the same list of\nFigure 6.18, \"Exsa amgpailen .Discover SVIDs response with 3 SVIDs\" Discover SVIDs\nCommand SVID Figure 6.19, \"Example Discover SVIDs response with 4\nSVIDs\" shows aSnV IeDxample response to the\nreqFuiegsutr we i6t.h2 0tw, \"oE xVaDmOpsl ec oDnistcaoinvienrg S VthIDrese r esponss. e with 12 SVIDs followed by an empty response\"\nshows an example response with two VDOs ScoVnIDtaining four s followed by an empty VDO to terminate\nthe response. SVID shows an\nexample response with six VDOs containing twelve s followed by an additional request that returns an empty\nVDO indicating there are no moreT ables 6to.4 r5e t Durisnc.over SVIDs Responder VDO\nBit(s) Field Description\nSVID\nResponder SVID\n16-bit unsigned integer, assigned by the USB-IF or 0x0000 if this is the\nB31\u202616 n\nSVID last VDO and the supports an even number of s.\nResponder SVID\n16-bit unsigned integer, assigned by the USB-IF or 0x0000 if this is the\nB15\u20260 n+1\nlast VDO and the supports an odd or even number of s.\nFigure 6.18 Example Discover SVIDs response with 3 SVIDs\nVDO 1 VDO 2\nHeader\nVDM Header\nNo. of Data Objects= 3 SVID 0 SVID 1 SVID 2 0x0000\n(B31..16) (B15..0) (B31..16) (B15..0)\nPage 186 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.19 Example Discover SVIDs response with 4 SVIDs\nVDO 1 VDO 2 VDO 3\nHeader\nVDM Header\nNo. of Data Objects= 4 SVID 0 SVID 1 SVID 2 SVID 3 0x0000 0x0000\n(B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0)\nFigure 6.20 Example Discover SVIDs response with 12 SVIDs followed by an empty response\nVDO 1 VDO 2 VDO 3 VDO 4 VDO 5 VDO 6\nHeader\nVDM Header\nNo. of Data Objects= 7 SVID 0 SVID 1 SVID 2 SVID 3 SVID 4 SVID 5 SVID 6 SVID 7 SVID 8 SVID 9 SVID 10 SVID 11\n(B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0) (B31..16) (B15..0)\nVDO 1\nHeader\nVDM Header\nNo. of Data Objects= 2 0x0000 0x0000\n(B31..16) (B15..0)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 187\n6.4.4.3.3 Discover Modes\nDiscover ModesCommand Initiator Responder\nSVID\nThe is used by an to determine the Modes a supports for a given\nS. VID Discover ModesCommandShall SVID\nInitiator Responder Command\nThe in the be set to the for which Modes are being requested by both\nthe Number a onfd D tahtea Objects for this Message .H eader Discover ModesCommand Shall\nDiscover ModesCommand Shall Not\nThe field in the in the request be set to\n1 sinDceis tchoev er ModesComma ndACK request Res pcoonndtaeirnS ahnayl lVDOs. Discover\nModesCommandACKShall Message Header Number of Data Objects\nThe A sletnertn baatcek M boyd tehe contain one VoIrD more Modes. The\ncontain a with the field set to a value of 2 to\n7 (the actual value is the number of objects plus one). If the ID is a , the structure and content\nof the VDO is left to the Vendor. If the ID is a SID, the structure and content of the VDO is defined by the relevant\nstaRnedspaordn\u2019dse brody. Shall NAK\nA Number t ohfa Dt daotaes O nbojte csutspport any MoMdeesss age He raedtuerrn a D.i scover ModesCommandNAK BUSY\nShall Shall Not\nThe field in the in the and\nrFeigspuroen 6se.2s1 , \"Exa bmep slee tD tios c1o vsienrc Me othdeeys response f ocro an tgaiivne nan SyV VIDD wOsit.h 3 Modes\" Discover\nModesCommand Responder SVID\nshows an example of a\nFi greusrpeo 6n.s2e1 f rEoxmam a ple Discov ewrh Micohd seusp preosrptso tnhsree ef oMro ad geisv feonr Sa VgIivDe wn ith 3. Modes\nHeader\nVDM Header Mode 1 Mode 2 Mode 3\nNo. of Data Objects= 4\n6.4.4.3.4 Enter Mode Command\nEnter ModeCommand Initiator DFP Responder UFP Cable Plug\nAlternate Mode DFPShall Enter Mode\nThe iDsi sucsoevde rbyy Parno cess ( ) to command a ( or ) to enter a\nspecified of operation. Only a initiate the Process which it starts after it has\nsuccessfully completed the V.DM HeaderShall Alternate Mode Discover\nModesCommand Figure 6.21, \"Example Discover Modes response for a given SVID with 3\nMThoed evsa\"lue in the Object Position field in the Alternate M ode indicate to which iVnD tMhe H eader\nthe VDOA rlteefernrsa t(es eMeo de\n). The value 1 always indicates the first as it is the first object following the . The\nvalueN u2m rebfeerrs o tfo D tahtea n Oebxjte cts M aensds asgoe f oHretahd.er Command Shall\nEnter ModeCommand Shall Not Enter Mode\nTCohme mand field in the in the Altern arteeq Mueosdte be set to either 1 or 2 since\nthe request contain more than 1 VDO. When a VDO is included in an\nNumb reerq oufe Dsta tthae O cbojnetcetnsts of the 32-Cboitm VmDaOn ids defined byS hthaell . Enter ModeCommand\nACK NAK Shall Not\nThe field in the response be set to 1 since an\nresponse ( , Alt)e rnate Mod econtain any VDOsE.nter ModeCommand\nAlternate Mode InitiatorShall\nBefore enUtSeBr iSnagf ea State , by sendinAgl ttehren ate Mode request that requires the reconfiguring of\naRneysp poinndse ornS henatlrly to that , the ensure that those pins being reconfigured aUrSeB p Slaacfeed\niSntatote the . Before entering an that requires the reconfiguring of any pins, the\nensure that those pins being reconfigured are placed into either USB operation or the\n. May\nActive Mode Modal\nAO pdeervaitcieo nSha slulpport multiple Modes withA lotneren oart em Moroed aective at any point in time. Any interactions between them\nare the responsibility of the Standard or Vendor. Where there are multiple s at the same time\nstart on entry to the first .\nPage 188 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nEnter ModeCommand ResponderShall ACK NAK\nResponder BUSY\nOEnnt reerc MeiovidnegC aonm mand Shall requests the respond wEnitthe re iMthoedre aCno mma onrd a\nresponse. The is not allowed to return a response. The value in the Object Position field of the\nRespon der response Enter c MonotdaeinC tohmem saamnde value as the receAivCeKd Responde rShall request.\nAlternate Mode ACK InitiatorShall Alternate Mode ACK\nIf the responds to thMe essage Rreesqpuoensdt ewrith an In,i ttihaet or A ectnitveer M thoed e\nbefore sending the . The enter the on reception of the .\nSuccFeisgsufruel t8r.1an1s1m, \"iDssFiPo nto o Uf FthPe E nter Mod ceo\"nfirms to the that the will enter an .\nSee Responder Enter Mo dfoerC momorme adnedtails. NAK Alternate Mode\nModal Operation InitiatorShall Modal Operation\nIf thRee sponderSh raelslponds to the reqUuSeBs tS wafieth S taa te , the is not entered. If\nnot presently in the return to USB operation. If not presently in\nthe Initiator remain in either USB operattiVonD MorW thaeit ModeEntry .Shall Not Alternate Mode\nIf the fails to receive a response within it enter the but\nrFeigtuurrne 6to.2 U2S, \"BS uocpceersastfiuoln E.nter Mode sequence\"\nAlternate Mode Responder Alternate Mode\nInitiator Alternate Mode Figure s6h.2o3w, \"sU thnesu scecqeussefnucl eE notf eerv Menotdse d suerqiunegn tchee d turea ntosi NtioAnK \"between USB\noperation Raensdp oenndteerring an NAK . It illustrates Awltheernn athtee Mode 's chaRnegsepso anndde rwhen\ntInhiet iator 's changes. illustrates that\nwhen the returns a the transition to an do not take place and the and\nremain in their default UFSiBg urorele 6s..22 Successful Enter Mode sequence\nDFP (Initiator) UFP (Responder)\nUSB\nUSB or USB Safe State\nEnter\nMode\nGoodCRC\nUSB Safe State\nACK\nNew\nMode\nNew GoodCRC\nMode\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 189\nFigure 6.23 Unsuccessful Enter Mode sequence due to NAK\nDFP (Initiator) UFP (Responder)\nUSB\nUSB or USB Safe State\nEnter\nMode\nGoodCRC\nUSB Safe State\nNAK\nGoodCRC\nUSB\nAlternate Mode Shall Active Mode Exit ModeCommand\nSection 6.4.4.3.5, \"Exit Mode Command\"\nOnce the is entered, the device remain in that until the is\nsuccessful (see Shall Port Partner). Cable Plug Active Mode\nThe\uf06c followingH eavredn Rtse set also cause the s and (s) to exit all s:\n\uf06c AEr ProDr Recovery .\n\uf06c Port Partne.r Cable Plug Detached\n\uf06c ThCea ble Reset s or Cab(lse) Palrueg Active M. ode\n\uf06c A Data Reset (only exits the 's Asc)ti.ve Mode Cable Plug\nInitiAa torShall (removing power briefly resettsV aDllM thEex itMode s in the Hard). ResetSignaling\nError Recovery\nThe return to USB Operation within of a disconnect, of being\ndeteRcteesdp oonr derShall . USB Safe State tVDMExitMode\nHard ResetSignaling Error Recovery\nThe return to either USB operation or within of a disconnect, of\nDR_Swap MessageS bheailnl gN doettected or Modal Op.eration Port Partner Section 6.3.9,\n\"DR_Swap Message\"\nA be sent during between the s (see\n6.4.4.3.5 ). Exit Mode Command\nExit ModeCommand Initiator DFP Responder UFP Cable Plug Active\nMode DFPShall Exit Mode\nThe is used by an ( ) to command a ( or ) to exit its\nand return to normal USB operaSthioanll. Only the A litneirtniaattee tMheo de Di Pscroovceesrs M. odesCommand\nFigure 6.21, \"Example Discover Modes response for a given SVID with 3 Modes\" Shall\nThe value in the ObjecEt nPtoesrit Mioond feieCldo mman idndicate to whichA ctive Mode in the the\nVDO refers (see ) and have been\nused previously in an request for an . The value 1 always indicates the first\nPage 190 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nAlternate Mode VDM Header Alternate Mode\nShall Active Mode Shall\nas it is the first object following the . The value 2 refers to the next and\nso foNrtuhm. Ab evra loufe D oaf t1a1 O1bb jienc tthse Object PositionC foiemldm and indicate thaCto amll mand s AC KbeN eAxiKtedS.hall\nExit ModeCommandShall Not\nThe field in both the request and response ( , ) be set\nto 1 sRienscpeo annd erShall Active Mode contain any VDOs. Message InitiatorShall Active\nMode ACK ResponderShall Not BUSY Shall\nTNhAeK exit its before sendiAngct tihvee Mreosdpeonse Invalid. The eInxiitt iiattso r\nwhen it receAivCeKs the tV. TDhMeW aitMode Exit return aN AK aBcUkSnYowledgmenSth aanldl oAnclyti rveet Murond ae\nacknowledgment to a request not containing an (i.e., object position). An which\nfailsF tiog urerece 8i.v1e1 a2n, \" DFP wtoi tUhFinP Exit Mode\" or receives a or response exit its .\nFSeigeu re 6.24, \"Exit Mode sequence\" for more details. Active\nMode Responder Alternate Mode Initiator\nAlternate Mode shows the sequence of events during the transition between exiting an\nand USB operation. It illustrates when the 's changes and when the 's\nchanges. Figure 6.24 Exit Mode sequence\nDFP (Initiator) UFP (Responder)\nMode\nMode\nExit Mode\nGoodCRC\nUSB Safe State\nACK\nUSB or USB Safe\nState\nGoodCRC\nUSB\n6.4.4.3.6 Attention\nAttentionCommandMay Initiator Responder\nThe be usedS hbay ltlhe to notiAfyl ttehren ate Mode that iDt irsecqouvierre sM soedrveisceC.ommand\nFigure 6.21, \"Example Discover Modes response for a given SVID with 3 Modes\" Shall\nThe value in the ObjecEt nPtoesrit Mioond feieCldo mman idndicate to whichA ctive Mode in the the\nAVlDteOr nreafteer Ms (osdeee VDM Header ) aAnldte rnate hMaovdee been\nused previously in an request for an Shall Not . The value 1 aAlwttaeynst iionndiCcoatmesm tahned first\nas it is the first object following the . The value 2 refers to the next and\nso forth. A value of 000b or 111b in the Object Position field be used by the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 191\nNumber of Data Objects Message HeaderShall AttentionCommandShall\nNot AttentionCommand\nThe Alternate Mode field in the be set to 1 or 2 since the\ncontain more than 1 VDO. When a VDO is included in an the contents of the 32-bit VDO is\ndFiegfuinreed 6 b.2y4 t, h\"Ee xit Mode sequen.ce\" AttentionCommand\nFigure 6 .s2h5o Awtst ethneti soenq uCeonmcem oafn edv ernetqsu wehste/nr eansp onse seq uence is received.\nResponder Initiator\nCommand\n(Attention)\nGoodCRC\nCommand Complete\n6.4.4.4 Command Processes\nMessage Command Command\nGoodCRCMessage GoodCRCMessage Command\nThe flow of s during a ProRceesspso ins dae qruery followed by a response. Every SVID reFqiguuerset 6se.2n6t,\nh\"Caosm tom baen rde rsepqounedset/dr teos pwointshe a s equence\" . The only indicates the GoodCRC reMqeusesastg weas\nreceived correctly; it does not mean that the understood or even supports a particular .\nshows the request/response sequence including the s.\nPage 192 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.26 Command request/response sequence\nInitiator Responder\nCommand\n(request)\nGoodCRC\nCommand\n(response)\nGoodCRC\nCommand Complete\nInitiator Command\nResponder Responder Command\nIn order for the to know that the request was actually consumed, it needs an acknowledgment\nfrom the . There are three responses that indicate the received and processed the\nreq\uf06cuest:ACK\n\uf06c NAK\n\uf06c BUSY\nResponderShall\nThe\uf06c Enter M ode complete: tVDMEnterMode\n\uf06c Exit Mode requests withintV DMExitMode .\n\uf06c requests witthViDnM ReceiverRespo.nse\nInitiaOtothrer requests within . Shall\nPE_SRC_Ready PE_SNK_Ready\nAn not receiving a response within the following times timeout and return to either the\n\uf06c Enter M oord e statteV D(aMs WapapirtoMpordiaetEen):try\n\uf06c Exit Mode requests withintV DMWaitModeExit .\n\uf06c requests witthViDnM SenderResponse .\nRespOotnhdeer rrSeqhuaellsts within .\nThe\uf06c ACK respond wiStVhI:D\n\uf06c NAK if it recognizes the and can process it at this time.\n\uf06d : SVID Command\nif it recognizes the but cannot process the request\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 193\n\uf06d SVID\n\uf06d or if it does not recognize thCeo mma nd\n\uf06d or if it does not support the Invalid\n\uf06c BUSoYr if a VDO contains a SfVieIlDd which isC omman.d Command\nACK NAK if it BreUcSoYgnizes the Shal land the SbVuItD cannot pCroomcemsas nthde request at this time.\n6Th.4e .4.4, .1 or r eDspisoncsoev ery cPornotacine tshse same as the request.\nInitiator DFP Discovery Process Discovery Process\nDiscover SVIDsCommand Initiator SVID Responder\nThe (usually the ) alwIanyitsi abteogrins the Discover Modes. CTohme mand has tSwVoID phases. In the\nfirst phasIen,i tthiaet or Responde r request is sent by the to get the list of s the\nsupports. In the second phase, the sends a request for each supported by\n6bo.4th. 4th.e4 .2 and Enter. Vendor Mode / Exit Vendor Mode Processes\nDiscovery Process Initiator Responder\nInitiator DFP Alternate Mode Enter ModeCommand\nTAlhtee rrneastuel tM oof dthee is that both the and identify the Modes they mutually\nsupport. The ( ), upon finding a suitable , uses the to enable the\nResponder.UFP Cable Plug Initiator Active Mode Active Mode\nThe ( or ) anEdx it ModeC coomnmtinauned usingA cthtiev e ModeShall until the is exited.\nSection 6.4.4.3.5, \"Exit Mode Command\"\nIn a managed termination, using the , the be exited in a controlled manner\nas described in .\nIn a\uf06cn unmanaged terminatHioanrd, t Rriegsgeetred bHya:rd ResetSignaling Port Partner\n\uf06c A Power DDeetlaivcehry (i.e. sent by either ) or\n\uf06c By cEarbrloer Recove (rdyevice unplugged) or\nActivBey M odeShall Shall Not USB Safe State\nthe still be exited but there I bniet iaa ttorarnsitioRne stphornoduegrh the .\n[USB Type-C 2.4] Alternate Mode\nIn both the managed and unmanaged terminations, the and return to USB operation as defined\nin Message following an exit fromF iagnu re 6.27, \"Enter/E.xit Mode Process\"\nThe overall flow is illustrated in .\nPage 194 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.27 Enter/Exit Mode Process\nInitiator (DFP) Responder (UFP or Cable Plug)\nEstablish PD Contract\nDiscover SVIDs\nUSB List of SVIDs\nFor every DFP supported SVID\nDiscover Modes (SVID)\nUSB or USB Safe\nState\nModes for SVID\nStay in USB mode N Modes Supported?\nUSB or USB Safe Y\nState\nEnter Mode\nUSB Safe State\nACK\n(Responder\nswitched to\nMode)\nAlternate Mode\nInitiator and Responder operate using Mode\nN\nAlternate Mode\nExit Mode or PD Hard Reset or cable\nunplugged or power removed?\nUSB\nUSB\nY\nReturn to USB mode\n6.4.4.5 VDM Message Timing and Normal PD Messages\nVDM Message Shall\nAMS Shall Unstructured VDM Structured VDM\nThe timing and interspersing of s between regular PD s be done without perturbing the PD\ns. This requirement apply to both s and s.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 195\nStructured VDM InitiatorShall Not Message\nShall Initiator Responder AMS Negotiation Power Role Swap Data Role Swap\nThe use of Unstructurse db yV DanM Shall N ot interfere with the nMoersmsaagl ePD timing requirements\nnor either the or interrupt a PD (e.g., , ,\ne6tc.4.). .T5he use of Battery_Stsa tus Me instesrafegree with normal PD timing.\nBattery_StatusMessageShall Get_Battery_StatusMessage Battery_Status\nMessage Number\noTfh Be atteries/Batter y Slots be sSeonut rince r_eCsappoanbseil ittoi eas _ExtendedMessage . The Shall\ncontains oBnaet Bteartytery Status Data ObBjeacttt e(BryS DStOa)t fuosr Roenfe of the Batteries it suppGoertt_sB aast rteerpyo_rStteadt buys Message\nfield in the . The returned BSDO\ncorreBsaptotenrdy t_oS ttahteu sMessa greequested in the Sha flileld contained in Fthigeu re 6.28, \"Battery_Sta tus .\nMessage\" Table6.46, \"Battery Status Data Object (BSDO)\" Number of Data Objects\nTBhaett ery_StatusMes sageSha lrleturns a BSDO whose format be as shown in\nand . The field in the\nbe set tFo i1g.ure 6.28 Battery_Status Message\nHeader\nBSDO\nNo. of Data Objects = 1\nTable6.46 Battery Status Data Object (BSDO)\nBit(s) Field Description\nBattery Present Battery\nCapacity Note: Battery\n\u2019s State of Charge (SoC) in 0.1 WH increments\nB31\u202616\nBit 0xFFFF = \u2019s SOC unknownDescription\nInvalid Battery Reference\nInvalidBattery\n0\nBattery Present\nreference\nBattery\n1\nBattery Charging Status\nis present when set\nBattery Present Shall Battery\nBattery Info\n\uf06c Battery\nWhen is \u20181\u2019 contain the charging status:\nB15\u20268\n\uf06c Battery\n00b: is Charging.\n\uf06c Battery\n01b: is Discharging.\n3\u20262 \uf06c Reserved,Shall Not\n10b: is Idle.\n1B1abt:t ery Presen t be used.\n\uf06c Reserved,Shall Not\nWhen is \u20180\u2019:\nReserved,Shall Not\n11b\u202600b: be used.\nReserved Sh7a\u2026ll4 be used.\nB7\u20260 be set to zero\n6.4.5.1 Battery Present Capacity\nBattery Present Capacity Shall Battery\nBattery\nThe field return either the 's State of Charge (SoC) in tenths of WH or\nindicate that the 's present State of Charge (SOC) is unknown.\nPage 196 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.5.2 Battery Info\nBattery Info Shall Battery\nBattery Info Shall Battery\nThe field be used to report additional information about the 's present status. The\n6.4.5.2.1 field's bits Inva rleifldec Bt tahtet perreyse nRt ecofendrietinoncse under which the is operating in the systems.\nInvalid Battery Reference Shall Get_Battery_StatusMessage\nBattery Battery Slot Section 6.5.1.13, \"Number of Batteries/Battery Slots Field\"\nThe bit be set when the contains a reference to a\n6.4.5. 2or.2 ( s Beea ttery Present ) that does not exist.\nBattery Present Shall Battery Shall\nBattery Present Shall\nBTahtet ery Attached bDite tache dbe set whenever the is present. It always be set for Batteries that are\nnot Hot Swappable Batteries. For Hot Swappable Batteries, the bit indicate whether the\n6.4.5. 2is. 3 or Batte.ry Charging Status\nBattery Charging Status Battery\nShall Battery Present Battery\nTPhrees ent Battery b Cithsa inrgdiincagt eS twahtuesther thShe all is being charged, discharged or is idle (neither\ncharging nor discharging). These bits be set when the bit is set. Otherwise, when the\nbit is zero the bits also be zero.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 197\n6.4.6 Alert Message\nAlertMessage Port Partner\nOCP OVP OTP\nTBhatet ery is provided to allow s to inform each other when there is a status change event.\nSome of the events are critical such as , and , while others are informational such as change in a\nAle'rst sMtaetsussa fgreoSmh achllarging to neither chargiSnogu nrocer disScihnakrging.\nThe Alert Message Shall only be sent when the or detects a status changeS. hall Figure\n6.29, \"Alert Message\" Table6.47, \"Alert Data Object (ADO)\"\nThe contain exactly one Alert Data Object (ADO) and the format be as shown in\nand Figure 6.29 Alert M. essage\nHeader\nADO\nNo. of Data Objects = 1\nTable6.47 Alert Data Object (ADO)\nBit(s) Field Description\nBit Description\nReserved Shall\nBattery Status Change Event\n0 and be set to zero.\nBattery Attach Detach\n1 Status Change Event ( / /charging/discharging/\nOCP Event\nidle)\nOCP Source SinkReserved Shall\n2 event when set ( only, for and be set to\nOTP Event\nzero).\nType of Alert\nOTP\n3\nB31\u202624 Operating Condition Change\nevent when set\n4\nSource Input Change Event\nOperating Condition Change when set\nSource\n5\nOVP Event\nInput Change Event when set\nOVP\n6\nExtended Alert Event\nevent when set\n7 Battery Status Change Event Fixed Batteries\nFixed Batteries Extended Alert Event when set\nBattery Battery\nWhen bit set indicates which have had\nB23\u202620 Battery Status Change Event\nHot Swappable a status change. B20 corresponds to 0 and B23 corresponds to 3.\nBattery\nBatteries\nWhen Battery bit set indicates which Hot Swappable\nB19\u202616 Batteries have had a status change. B16 corresponds to 4 and B19\ncorresponds to 7.\nPage 198 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.47 Alert Data Object (ADO) (Continued)\nBit(s) Field Description\nReserved Shall\nExtended Alert Event Type of Alert\nB15\u20264 be set to zero\nExtended Alert Event Type\nWhen the bit in the field equals \u20181\u2019, then the\n\uf06c Reserved\nfield indicates the event which has occurred:\n\uf06c DFP\n0 = .\nExtended Alert Event \uf06c UFP\n1 = Power state change ( only)\nType \uf06c UFP\n2 = Power button press ( only)\nB3\u20260 \uf06c UFP\n3 = Power button release ( only)\n\uf06c Reserved\n4 = Controller initiated wake e.g., Wake on LAN ( only)\nExtended Alert Event Type of Alert\n5-15 =\nExtended Alert Event Type Reserved Shall\nWhen the bit in the field equals \u20180\u2019, then the\nfield is and be set to zero.\n6.4.6.1 Type of Alert\nType of Alert Shall Source Sink AlertMessageShall\nMay AlertMessage\nTAhleer tMessage field be uTsyepde t oo fr Aepleorrtt Sh aolrl status changes. Only one be\ngenerated for each Event or Change; however multiple Type of Alert bits be set in one . Once the\nGet _Battery _hSatas tbueseMn esessnatg tehSeh ould field be cleBaartetder.y AlertMessage\nA be sent in response to a status change in an to get the\ndeGtaeitl_sS otaf tthues cMheasnsageg.eShould Battery AlertMessage\nA be sent in response to a non- status change in an from to get\n6th.e4 d.6et.a1il.s1 of the change .Battery Status Change\nBattery Status Change Event Shall Battery\nShall Battery Attached Detached\nThe bit be set when any 's power state changes between charging,\n6di.s4ch.6ar.g1in.2g, neither. Fo r OHovte Srw-aCpuparbrlee nBatt Pterrioest,e itc tion a Elsvo ebne stet when a is or .\nOCP Event Shall Source\nReserved Sink\nThe bit be set when a detects its output current exceeds its limits triggering its protection\nc6ir.4cu.i6tr.y1. .T3his bit is Ove rfo-rT ae mp.erature Protection Event\nOTP Event Shall Source Sink\nThe bit be set when a or shuts down due to over-temperature triggering its protection\nc6ir.4cu.i6tr.y1..4 Operating Condition Change\nOperating Condition Change Shall Source Sink\nThe bit be set when a or detects its Operating Condition enters or\nexitsO epitehreart itnhge 'Cwoanrdniitniogn' o Crh 'oavnegre tempSheraaltlure' temperatureS sotuartcees.\nConstant Voltage CV Current Limit CL\nThe bit be set when the operating in the Programmable Power Supply\nm6.o4d.e6 d.e1t.e5cts it has chan gSeodu itrsc oep eIrnatpinugt c oCnhdaitinong ebe Etwveeenn t ( ) and ( ).\nSource Input Change Event Shall Source Sink\nSource Sink\nThe Source Sink bit be sBeat twtehreyn the / 's input chanSgoeusr. cFeorS ienxkample, when the AC\ninput is removed, anBda tthteer y / continues tBoa btete pryowered from one or more of its batteries or when AC\nreturns and the / transitions from to AC operation or when the / changes operation\nfrom one (or more) to another (or more) .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 199\n6.4.6.1.6 Over-Voltage Protection Event\nOVP Event Shall Sink\nThe bit be set when the detects its output voltage exceeds its limits triggering its protection\ncircuOitVrPy. E vent May Source\nThe bit be set when the detects its output voltage exceeds its limits triggering its protection\n6cir.4cu.i6tr.y1. .7 Extended Alert Event\nExtended Alert Event Shall\nT6h.4e .6.2 Fixe bdit Bat tbee rseiet wshen the event is defined as an Extended Alert Type.\nFixed Batteries Fixed Batteries Battery\nBattery\nThe field indicates which have had a status change. B20 corresponds to 0\nand B23 cAolrerretsMpoenssdasg teo 3. Fixed Batteries Shall\nO6n.4ce. 6th.e3 H ohats Sbewena spenpt athbel e Batteries field be cleared.\nHot Swappable Batteries\nBattery Battery\nThe field indicates which Hot Swappable Batteries have had a status change. B16\ncorresponAdlesr ttoM essage 0 and B19 correspHonodt sS wtoa ppable 3B.atteries Shall\nO6n.4ce. 6th.e4 E xhtaes bnedene sden At tlheer t Event Types field be cleared.\nExtended Alert Event Type AlertMessage\nExtended Alert Event Type Reserved Shall\nThe field provides extensions to the available types for the . If the\n6.4.6.4.1 Po bwite isr n Sott asette, t Chehna thneg Eextended Alert Event Type is and be set to zero.\nMay DFP\nShall StatusMessage MessageShould\nThe Power state change event value be set when the transitions into a new power state. The new power\nstate be communicated via the Power state change byte in the . This be sent\nb6y. 4th.6e h.4os.2t in response t oP aonwy seyrs tBemu tptoowner P straetes cshange.\nMay UFP\nThe Power button press event value be set when the power button on the is pressed. The press and\nrelease events are separated into two different events so that devices that respond differently to a long button\npress will see a long button press. On the host-side, the power button press event typically initiates the same\nb6e.h4a.v6io.4r .a3s a power bu t tPono pwreesrs oBf uthtet ohonst R's epolewaers ebutton.\nShall UFP\nIf a Power button press event was senSth, othueldn the Power button release event value be sent by the\nfollowing the Power button press event. If a physical power button press initiated the Power button press event,\nt6h.e4n. 6th.e4 P.4ower button r eCleoanset ervoelnlte r Init biae tseendt wWhaenk tehe physical button is released.\nUFP\nThe Controller initiated wake is used to communicate a wake event from the to the DPF such as Wake on LAN\nfrom a NIC or another controller. This event doesn't need the press/release form of the Power button press,\nbecause it only needs to communicate the presence of the event, and not the timing.\nPage 200 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.7 Get_Country_Info Message\nGet_Country_InfoMessageShall Port Port Partner\n[ISO 3166] Port Partner Country_Info\nTMhees sage be sent by a to geGt ecot_uCnoturyn tsrpye_cInififco iMnfeosrsmagaetiSohna flrlom its Figu re\n6u.s3i0n,g \" tGheet _cCoouunnttrryy'_sI nAflop hMae-s2s aCgoeu\"ntry CToadbele d6e.f4in8e, \"dC boyu ntry Code D.a Ttah eO bject (CCDO) \"responds with a\nthat contains the country specific information. The be as shown in\nand .\nFor example, if the request is for China information, then the Country Code Data Object (CCDO) would be CCDO\n[31:0] = 434E0000h for \"CN\" countryF icgoudree. 6.30 Get_Country_Info Message\nHeader\nCCDO\nNo. of Data Objects= 1\nTable6.48 Country Code Data Object (CCDO)\nBit(s) Description\n[ISO 3166]\n[ISO 3166]\nB31\u202624 First character of the Alpha-2 Country Code defined by\nB23\u202616 SReecsoenrdv cehdarSahcatlelr of the Alpha-2 Country Code defined by\nB15\u20260 , be set to zero.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 201\n6.4.8 Enter_USB Message\nEnter_USBMessageShall DFP UFPPort Partner Cable Plug Active Cable\nExplicit Contract Mode MessageShall\nThe A cceptMe ssage be Wseantit bMy ethssea ge to iRtse ject Message aSnedc ttioo nth 6e. 9, \"Accept, (Rse)j eocf ta ann d Wait\" ,\nwhen in an , to enter a specified USB of operation. The recipient of the respond\nby sending an [USB4 ] , a E nter_USB orM ae ssageS hall (see [USB4]PDUSB Hub DFP [US)B. 4]\nPDUSB Host DFP tEnterUSB\nWhen entering operation, the be sent by a 's (s) or\n\uf06c 's (s) within :\n\uf06c followinDga taa P RDe sCeotnnection.[USB4]\n\uf06c after a Data Role S twoa epnter operation is completed.\nEntearft_eUrS aB MessageMay is completPeDd.USB Hub DFP PDUSB Host DFP tEnterUSB\nData Reset [USB 3.2] [USB 2.0]\nThe be sent by a 's (s) or 's (s) within following\na PDE Cnotnenr_eUctSiBonM oers saaftgeerS ah all to entPeDr USB Hub oDrF P operation.\n[DPTC2.1] [TBT3]Alternate Mode Host Present Shall\nThe Conn beec tuesded byE an ter_USBMe'sss ageS(sh)a tlol speculatively trainH thoes tU PSrBe sliennkts or enter\nEnter_USB oMre ssage s prior to the presence of a host. In this case, the USB Host bit be\nSclheaalrled. When the Host is theH ub be resent with the bit set. The\n's Enter USB Data Object (EUDO), received from the Root Hub when the is connected,\n[U bSeB p Tryoppea-gCa t2e.d4 ]down thrHouubgh the tree.\n\u00ae\nSee Enter_USBMessa gUeSSBh4al l Connection FRiegquurier e6m.31en, \"tEs.nter_USB Message\" Table6.49, \"Enter_USB Data\nObject (EUDO)\"\nThe be as shown in and\n.\nPage 202 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.31 Enter_USB Message\nHeader\nEUDO\nNo. of Data Objects= 1\nTable6.49 Enter_USB Data Object (EUDO)\nBit(s) Field Description\nReserved Shall\nB31 \uf06c be set to zero.\n\uf06c\nUSB Mode 000b:\n\uf06c\n1 001b:\nB30\u202628 \uf06c Reserved,Shall Not\n010b:\nReserved Shall111b\u2026011b: be used.\nB27 USB4 DRD \uf06c be set to zero. [USB4]Device\n\uf06c [USB4]Device\n2 0b: Not capable of operating as a\nB26 USB3 DRD \uf06c 1b: Capable of operating as a [US B 3.2]Device\n\uf06c [USB 3.2]Device\n2 0b: Not capable of operating as a\nB25\nReserved Shall1b: Capable of operating as a\nB24 \uf06c be set [ t U o S z B e r 2 o .0 . ]\n\uf06c [USB 3.2]\n000b: only, no SuperSpeed support\n\uf06c [USB 3.2] [USB4]\nCable Speed 001b: Gen1\n\uf06c [USB4]\n2,3 010b: Gen2 and Gen2\nB23\u202621 \uf06c [USB4]\n011b: Gen3\n\uf06c Reserved,Shall Not\n100b: Gen4\n\uf06c 101b\u2026111b: be used.\n\uf06c\nCable Type 00b: Passive\n\uf06c\n2,3 01b: Active Re-timer\nB20\u202619\n\uf06c\n10b: Active Re-driver\n\uf06c 11b: O V p B ti U c S ally Isolated\n\uf06c Reserved\nCable Current 00b = is not supported\n\uf06c\n2 01b =\nB18\u202617\n\uf06c\n10b = 3A\nPCIe Support [USB41]1b = 5A\n2\nB16 DP Support [USB4] PCIe tunneling supported by the host\n2\nB15 TBT Support [TBT3] DP tunneling supported by the host\nB14 2 Host is supported by the host\u2019s USB4 \u00ae Connection Manager\nPCIe Support DP Support TBT Support\nHost Present A is present at the top of the USB tree.\nHost Capabilities Shall Hub\n2 When this bit is set , and\nB13\nrepresent the \u2019s that be propagated down the\nReserved tSrheea.ll\n[USB 3.2] [USB4] [USB 2.0]\nB12\u20260 be set to zero.\n1) ESnhtarlyl intoIg nored and includCea belnet Prylu ignto SOP\u2019 .SOP\u2019\u2019\n2) D FbPe Shall when receCivaebdle b Pyl uag (e.g., or ). [USB Type-C 2.4]\n3) The interpret the \u2019s reported capability as defined in in the USB4\nDiscovery and Entry Section.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 203\n6.4.8.1 USB Mode Field\nUSB Mode Shall DFP Mode Port Partner\nT6h.4e .8.2 field USB be4 u\u00aese dD bRy tDhe Fie ltdo direct the USB the is to enter.\nUSB4 DRD Shall HostDFP [USB4]Device [USB4]HostDFP\nUSB4 DRD Shall [USB 2.0]Device\nThe field be set when the is capable of operating as a . A\nt6h.a4t s.8et.s3 the U SfiBeld3 DR Dals oF biee lcdapable of operating as a .\nUSB3 DRD Shall HostDFP [USB 3.2]Device [USB 3.2]Host\nDFP USB3 DRD Shall [USB 2.0]Device\nThe field be set when the is capable of operating as a . A\n6.4 t.h8a.t4 sets the Cable fi eSldp eed a Flsioe bled capable of operating as a .\nCable Speed Shall Cable Plug\nDFP [USB Type-C 2.4]\nThe field be used to indicate the cable's maximum speed. The value is read from the\na6n.d4 i.n8te.5rpreted by t h Ce abl aes dTeyfinpeed bFyi eld in the USB4 Discovery and Entry Section.\nCable Type Shall\nTCahbel e Plug field be usedD tFoP indicate wheth[eUrS tBh eT cyapbel-eC i s2 .p4a]ssive or active. Further if the cable is active,\nit indicates the type of active circuits in the cable and if the cable is optically isolated. The value is read from the\n6.4.8.6 and inter p rCeatebd lbey tCheu rre ans td eFfiineedld by in the USB4 Discovery and Entry Section.\nCable Current Shall\nCable Plug VBUS Current Handling Capability (Passive Cable) VBUS Current Handling Capability\nT(Ahcet ive Cable) field be used to indicate the cable's current carrying capability. The value is reported by\nthe in the /\n6.4.8.7 field. PCIe Support Field\nPCIe Support Shall HostDFP [USB4]\nThe PCIe Support field May be set when the is caHpuabbleD oFfP tunneling PCIe over . [USB4]\nT6h.4e .8.8 fie lDd P S ubep speto spretc uFliaetivldely when the 's is capable of tunneling PCIe over .\nDP Support Shall HostDFP [USB4]\nThe DP Support field May be set when the is caHpuabbleD oFfP tunneling DP over . [USB4]\nT6h.4e .8.9 field TBT b eS suetp sppeocurlta tFivieelyl wdhen the 's is capable of tunneling DP over .\nTBT Support Shall HostDFP [USB4]\nTM\nDThFeP [USB4]Hu bfield be set when the is capable of tunneling Thunderbolt over and that\nthe Connection Manager (CM) supports discovery and configuration of Thunderbolt 3 devices connected to the\nToBf T Supp ort s. May Hub DFP\n[USB4]\nThe field be set speculatively when the 's is capable of tunneling Thunderbolt over\n6.4.8..10 Host Present Field\nHost Present Shall Host\nThe field be set to indicate that a is present upstream.\nPage 204 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.4.9 EPR_Request Message\nEPR_RequestMessageShall Sink EPR Mode\nNegotiation EPR_RequestMessageShall\nAEPnR _Source_Cap abilities Messa bgee sent bEyP Ra _Req,u oepsetrMateisnsga gine Shall , to reSqinukesRte pqouwesetr D, taytpai Ocabljleyc dtuRriDnOg the\nrSehqaullest phase of aP poowwere rD ata Object . The be sentP ionw reers pDoantase O tboj etchte most recent\n. The return a ( ) that\nNote: identify the Power Data b Oebinjegc rteMqauyested followed by a( cAo)PpDy Oof the (A)PDO being requested.\nEPR_RTehqeu reesqtuMeestsesadg eShall F bieg uerieth 6e.r3 2a,n \" EEPPRR_ Request o Mr eSsPsRag e\" .\nThe be as Fshigouwrne i6n. 32 EPR_Request Message .\nHeader RDO Copy of PDO\nNo. of Data Objects = 2\nSourceShall PDO EPR_RequestMessage PDO\nEPR_Source_CapabilitiesMessage RDO\nThe verify the in the exactly matches the in the latest\nSourceShall EPR p_Roeinqtueeds ttoM beys stahgee Object Position field in the . RequestMessage\nAcceptMessage RejectMessage Section 6.9, \"Accept, Reject and Wait\" Explicit Contract\nTNhege otiation respond to an in theS sPaRm Meo mdeanner as it responSdosu troc ae _Capabil itiesMes swaigthe\nan E, PoRr _aS ource_ Capabili (tsieese RequestMessage ). The EPR_RequestM essage\nprocess for EPR is the same as the process for except that the\nis reEpPlRa cSeodu brcye the SPR Mode and the EPR_Re questMe siss argeeplSahcaedll by the Hard Reset .\nAn RDO operating in that receives a PDO initiatAeP aD O .\nSection 6.4.2, \"Request Message\"\nThe takes a different form depending on the kind of power requested. The and formats are detailed\nin .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 205\n6.4.10 EPR_Mode Message\nEPR_ModeMessage EPR Mode\nEPR_ModeMessage\nThe Mess iasg uesed to enter, acknEoPwR lMedogdee, and exit the . The Action field is used to describe\nthe action that is to be taken by the recipient of the . The Data field provides additional\ninforEmPaRt_iMono fdoer Mthees sageSha lrlecipient in the Figure 6.3 D3,a \"tEaP ORb Mjeoctd e(E DROM MDeOs)s.age\" Table6.50, \"EPR Mode Data\nObject (EPRMDO)\"\nThe be as shown in and\n. Figure 6.33 EPR Mode DO Message\nHeader\nEPRMDO\nNo. of Data Objects = 1\nTable6.50 EPR Mode Data Object (EPRMDO)\nBit(s) Field Description\nValue Action Sent By\nReserved Shall Not\nEnter Sink\n0x00 and be used.\nEnter Acknowledged Source\nAction 0x01 only\nEnter Succeeded Source\n0x02 only\nB31\u202624\nEnter Failed Source\n0x03 only\nExit Sink Source\n0x04 only\nReserved Shall Not\n0x05 or\nAction Field Data Field Value\n0x06\u20260xFF and be used.\nEnter Shall EPR Sink PDP\nEnter Acknowledged Shall\nbe set to the Operational\nEnter Succeeded Shall\nbe set to zero\nShall\nbe set to zero\n\uf06c\nbe one of the following values:\nData \uf06c EPR Capable\n0x00 - Unknown cause\nB23...16 Enter Failed \uf06c 0x01 - S C o a u b r le ce not VCONN Source\n\uf06c EPR Capable RDO\n0x02 \u2013 failed to become .\n\uf06c Source EPR Mode\n0x03 \u2013 bit not set in .\n\uf06c EPR Capable PDO 1\n0x04 \u2013 unable to enter .\nReserved Shall Not\n0x05 - bit not set in .\nExit Shall\nAll other values are and be used\nReserved Shall\nbe set to zero\nMay EPR Mode Enter Failed\nB15...0 be set to zero\n1) The Sink retry entering after receiving this response.\n6.4.10.1 Process to enter EPR Mode\nEPR SourceShall EPR Mode EPR Sink EPR Cable\nSource Capabilities Power Rules Table10.12, \"EPR Source Capabilities based on the Port\nAMna ximum PDP and u seinntge ar n EPR Capa ubpleo Cna rbelqeu\"est bTya abnl e10.13, \"E cPoRn nSoeuctrecde wCaitpha banili ties when P wohrte Pnr aebselen tt oP DofPfe irs\nltehses than Port Maximum a sP DdePf iannedd u isni nthge a n EPR-capab (leS ecea ble\"\nand\nPort Partner EPR Mode ).\nFor\uf06c SinksS thoa slulccessfully enter EPR, tMhoed feollowing conditions must be met:\nThe request entry into the .\nPage 206 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c SourceShall EPR Capable\n\uf06c ThSein kShal l Not verCiofyn nthecet ceadble is Source . Charge ThroughVPD CT-VPD\n\uf06c A So urce S binek Shall to the throEuxgphli cai t Contract ( ).\n\uf06c The EPR Ca apnadb le Shal lalready be in aFnix SedP RS upply PDO .\n\uf06c The EPR Capable bit Shall be set in the RDO 5V . RequestMessage Source\nThe EPR Cbaitp able haveE PbRee Sno usertc einS thhael l in the last receivSeedc btiyo nth 6e. 6.21.4, .\n\"tEPRSourceCableDiscovery\"\nTo verify the cable is , the have already done the following (see\n\uf06c ): First Explicit Contract\n\uf06c Discover the cable pritoErP tRoS eonutrecreinCga bitlse Discovery First Explicit Contract\n\uf06dAlternatively,V wCOitNhNin S ource of entry into the\n\uf06d If it is the VCONN Source, discoVvCeOrN tNh Sew caabple.\nIf not the EPR Cap,a dbole a then di5scover6 the cable. Figure 6.34, \"Illustration\nof process to enter EPR Mode\"\nand can verify the cable is by completing steps and in the entry process in\nEPR Mode . Non-interruptible MessageAMS AMS\nFigure 6.34, \"Illustration of process to enter EPR Mode\"\nThe entry process is a multi- . An illustration of this is shown in\nNote: Figure 6.34, \"Illustration of process to enter E. PR Mode\" Normative Informative\nis not but is only.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 207\nFigure 6.34 Illustration of process to enter EPR Mode\nSPR Mode\nSink Source Cable\nAbort EPR Entry\n#1 EPR_Mode #2.a N\nSend Entry Failed\nStart Enter Sink EPR Capable?\n\u2013 Sink not EPR\nCapable\nY\nEPR Entry process Abort EPR Entry\nSPR contract in place #2.b N\nSource EPR Send Entry Failed\nCapable? \u2013 Source not EPR\nCapable\nY\nAbort EPR Entry\n#2.c N\nSource EPR Send Entry Failed\nCapable Now? \u2013 Source unable\nto enter EPR\nY\nY Receiv # e 3 d EPR Send # E 2 P .d R Ack Is VCONN # 5 Source? N #5 VCONN Swap\nAck?\nN\nN Y\n#4 Abort EPR Entry\nError Known Cable? #5 N\nSend Send Entry Failed\nSoft Reset\nIs VCONN Source?\n\u2013 Source not\nY VCONN Source\nY\nN\nN\n#4\nEPR Capable?\nY\nReceiv # e 8 d Enter Ent E e P r R S _ u M cc O e D ed E ed Send # 7 Enter Y #6.a-d N Abort EPR Entry\nEPR Cable? Send Entry Failed\nsuccessful? Succeeded\n\u2013 Not EPR Cable\nY\nEPR Mode\nShall\nThe entry prSoicnekssS hall follow tEhPesRe_ Mstoepdse iMn eosrsdaegre: Enter\nPDP EPR Source EPR_ModeMessage\n1) TEnhete r S hall send the Soft Reset with the Action field set to 1 ( ) and the Data field set\nto its Operational . If the receives an with the Action field not set to\nSo iut rceSh ainliltiate a .\n2) The do the following:\nPage 208 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nEPR Capable RDO SourceShall\na) Verify the bit was set in the most recent . If not set, the do the\nfollowing:EPR_ModeMessage Enter Failed\ni) Send an with the Action field set to 4 ( ) and the Data field set to\n3 (\"EPR MEoPdRe CMaopdaeble bit not set in the RDO\"). Explicit Contract\nii) Abort theE PR Capab leentry process and remain in the exisFtiixnegd SSPuRp plyPDO . Source\nShall\nb) Verify the bit was set in the most recent 5V . If not set, the\ndo thEeP Rfo_lMloowdienMg:essage Enter Failed\nFixed Supply PDO\ni) Send an with the Action field set to 4 ( ) and the Data field set to\n5 (\"EPR MEoPdRe CMaopdaeble bit not set in the 5V \"). Explicit Contract\nii) Abort theS ource entry process andE rPeRm Mainod ien the existinSgo SuPrRce Shall .\nc) Verify theE PR_Mo ids estMille assbalge eto support . If not, theE nter Fa iled do the following:\ni) Send an with the Action field set to 4 ( ) and Data field set to 4\n(\"Unable aEtP tRh iMs toidmee\"). Explicit Contract SinkMay\nEPR Mode\nii) Abort the entry process and remain in the existing SPR . The\nat someE tPimR_eM inod theeM feustsuargee send another request to enter Enter Ack.nowledged\nd) SSeinnkd an M essage with the ActioEnP Rfi_eMldo sdeet Mtoe 2ss (age ).\nSinkShall Soft Reset\n3) If the receives any , other than an with the Action Field set to 2, the\nEinPiRti Saoteu rac e . Discover IdentityCommand Cable\nCapabilities EPR Source\n4) When the has used the to determine and remembers the\nor the EPR Capab lies coSnhnoeucltded with a captive cable: May\na) If the cable is EPR Capa ibt le Sha gllo directly to Step 7, but continue to Step 5.\nb) If the cabElPe Ris_ Mnootd eMessage it do the following: Enter Failed\nc) Send an with the Action field set to 4 ( ) and the Data field set to\n1 (\"Cable nEoPtR E MPRod ceapable\"). Explicit Contract\nd) ASboourrtc ethe VCO eNnNt rSyo uprrcoecessS ahnadll remain VinC OthNeN _eSxwisatpinMg SesPsRa ge .\n5) If the So ius rncoet the , itV CONN Ssoeunrdc ea Shall\na) If the EPR fa_Milso tdoe bMeceossmage ethe , it : Enter Failed\nVCONN Source\ni) Send an with the Action field set to 4 ( ) and the Data field set to\n2 (not EPR Mode). Explicit Contract\nii)SoAurbcoerSt hthaell Di esncotrvye rp rIodceenstsi taynCdo rmemmaainnd in the existing SPR .\n6) The use the to read the cable's e-Marker and verify the\nfollowCianbgl:e VDO Maximum VBUS Voltage (Passive Cable) Maximum VBUS Voltage (Active Cable)\na) - /\nfCiaebldle i sV 1D1Ob (V5B0UVS) Current Handling Capability (Passive Cable) VBUS Current Handling\nCapability (Active Cable)\nb) - /\nCable VDO EPR Capable ( fPiealsds iisv e1 0Cba b(5leA))EPR Capable (Active Cable) EPR Capable\nc) - Discove/r IdentityCommand EfiPeRld C iasp 1abb l(e Source)\nShall\nd) If the cable fails to respond to the or is not , the\ndo thEeP Rfo_lMloowdiengM:essage Enter Failed\ni) Send an with the Action field set to 4 ( ) and the Data field to1\n(\"Cable not EPR capable\").\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 209\nEPR Mode Explicit Contract\nii)SouArbcoerSth thaell E PenRt_rMy opdreocMeessss aangde remain in the existing SPR Enter Succeede.d Shall\nEPR Mode\n7) The send the with the Action field set to 3 ( ) and\nenter Sink . EPR_ModeMessage Enter Succeeded Shall\nEPR Mode Shall Soft Reset\n8) If the receives an with the Action field set to 3 ( ) it enter\nEPR Mode , otherwise it initiate a . tEnterEPR GoodCRCMessage\nEPR_ModeMessage Enter SourceShall\nIEfP thRe_S ource_Ca penatbriyli ptireoscMesess ssuacgceessfully tcFoimrsptlSeotuesr cweiCthaipn of the last bit of the sent\nin response to the with the Action field set to 1 ( ), the send an\nEPR Mode within . tEnterEPR\nGoodCRCMessage EPR_ModeMessage Enter SinkShall\nIf the Soft Re esenttry process has not been aborted or does not complete within of the last bit of the\nsent in response to the with the Action field set to 1 ( ), the\ni6n.it4ia.t1e 0a .2 . Operation in EPR Mode\nEPR Mode SourceShall EPR_Source_CapabilitiesMessage Advertise\nCapabilities SinkShall EPR_RequestMessage NegotiateExplicit Contract\nEWPhRil_eR oepqeureasttinMge isns ageMay , the only send (A)PDO s to its power\nand the only respond with s to s. The\nSource So urce b_Cea fopra ebiitlhiteier sanM SePssRa goer EPR . SinkGet_Source_CapMessage\nSinkShall Hard Reset Sink RequestMessage SourceShall Hard Reset\nIf the sends a , that is not in response to a , the\nSource inSihtiaaltle a C.C If the sends a , the initiate a SinkSha.ll\nEPR_KeepAliveMessage Message tSinkEPRKeepAlive\nThe monitor the communications path to etnSsouurrec tehEaPt RthKeereep iAs lpievreiodic Storaufrfcice. SThhael l Hseanrdd\nRanes et when it has not sent any s for more than to ensure there\nis timely periodic traffic. If there is no traffic for more than , the initiate a\n6.4..10.3 Exiting EPR Mode\n6.4.10.3.1 Commanded Exit\nEPR Mode Source SinkMay EPR Mode EPR_ModeMessage\nExit\nWhile in , either the or exit by sending an with the Action\nfield set toS 5h a(ll ). Explicit Contract (A)PDO EPR Mode\nThe\uf06c ports Sou rbcee in an EPR_Sourc we_iCtha pana bSiPliRt iesMess apgreior to the EPR (A)PD Oexit process bSyP eRit (hAe)rP:DO\nThe sending an with no s (e.g., only\n\uf06c s) orSink Explicit Contract RDO SPR (A)PDO\nThe negEoPtRia Mtinodge a newN on-interruptible with bMite 3s1sa igne thAeM S seSth toa lzlero (e.g., only s)).\nThe process Ptoo retx Pita rtner Sha ilsl a Explicit Con mtrualctti- ( Aa)nPdD O follow these steps in order:\n1) The Sources Sink bSeh ian laln EPR_Mode wMitehs saang SePR . Exit\nEPR Mode\n2) Either the or send an with the Action field set to 5 ( ) to exit\nthe SourceSh all Source_CapabilitiesMessage tFirstSourceCap GoodCRCMessage\nEPR_ModeMessage Exit\n3) The send a within of the\nin resSpionnkse to the S ource_Ca wpiatbhi tlhiteie AscMtieosns afigeeld set to t5T (ypeC)S.inkWaitCap\nGoodCRCMessage EPR_ModeMessage Exit Sink\n4) ISfh tahlel does Hnaort dr eRceesievte a within of the last bit of\nthe in response to the with the Action field set to 5 ( ),\n6.4.10.3.2 initiate a Implici.t Exit\nEPR ModeShall Power Role Swap Fast Role Swap\nVBUS vSafe5V Implicit Contract New Source\nbSoe uerxcitee_dC aaps athbeil sitiidees-eMffeescsta ogef the EPR_Source_ Canadp abilitiesMessag perocesses. This is because\nat the end of these processes will be at and the Ports will be in an . The\nwill then send a (not an ) to begin the process of\nPage 210 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nExplicit Contract Explicit Contract Source Sink\nEPR Mode\nnegotiating an SPR . Once an SPR is entered, the and can then enter\n6.4.10.3 if. 3needed. Exits due to errors\nEPR Mode Shall Hard Reset Port\nOther critical errors can occur while in ; these errors result in being initiated by the\nthat\uf06c detectsE tPhRe_ eMrroodre. SMoemssea ogfe these errors include: Exit EPR Mode Port\nExplicit Contract (A)PDO\nAn with the Action field set to 5 ( ) to exit is received by a in an\n\uf06c Sink withE aPnR E_SPoRu rce_Cap.abilitiesMessage (A)PDO\nThe receives an with an EPR in any of the first seven\n\uf06c objec(At p)PoDsiOtions. EPR_RequestMessage (A)PDO\nEPR_Source_CapabilitiesMessage RDO\nThe in the does not match the in the latest\n\uf06c Source Req uestMes spaogineted to by the Object Position field in the .\n\uf06c The Sink receivesS ao urce_Cap abilities. Message Get_Source_CapMessage\nThe receives a not in response to a .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 211\n6.4.11 Source_Info Message\nSource_InfoMessageShall Get_Source_InfoMessage Source_InfoMessage\nThe be sent in response to a . The\ncontSaoinusr ocen_eI nSfoouMrcees sInafgoermation Data Object (SIDO). Shall Figure 6.35, \"Source_Info Message\"\nTable6.51, \"Source_Info Data Object (SIDO)\" Number of Data Objects Source_InfoMessageShall\nThe returns a SIDO whose format be as shown in and\n. The field in the\nbe sePto trot 1M.aximum PDP Port Present PDP Port Reported PDP Port Type Capabilities\nSource Port\nThe , , and the are used to identify\nof a . Figure 6.35 Source_Info Message\nHeader\nSIDO\nNo. of Data Objects = 1\nTable6.51 Source_Info Data Object (SIDO)\nBit(s) Field Description\n\uf06c Managed Capability Port\nPort Type\n\uf06c Guaranteed Capability Port\n0 =\nB31 Reserved Shall\n1 =\nPort Maximum PDP Port\nB30\u202624 be set to zero\nPort Present PDP Port\nB23...16 Power the is designed to supply\nPort Reported PDP Port\nB15\u20268 Power the is presently capable of supplying\nB7\u20260 Power the is actually advertising\n6.4.11.1 Port Type Field\nPort Type Static Shall Port\nis a field that be used to indicate whether the amount of power the can provide is fixed\nor caPno rcthange dynamically.Shared Capacity Group Port Type Shall Managed Capability Port\nFor Ports that are part Sohfa ar ed Capacity Group ,P tohret Type fMiealdy be set to Managed Capability Por.t\nGuaranteed Capability Port\nFor s not part of a , the field be set to either or\n6.4.11.2 Port. Maximum PDP Field\nPort Maximum PDP Static Shall PDP Rating Port\nGuaranteed Capability Port Port Type Shall\nis a fieldM tahnaatg ed Ca rpeapboilritt yth Peo irntteger portion of the Port Type of the . A\nShall (as indicated by the field being set to '1') always be capable of\nsupplying this amount of power. A (as indicated by the field being set to '0')\nP obret a Mblaex tiom oufmfer P tDhiPs Sahmaolulnt of power at some time. SPR SourcePDP Rating EPR SourcePDP\nRating Source_Capabilities_ExtendedMessage\nThe be the same as the larger of the and the\n6.4.1 i1n .t3he Port Present PD P Fiel.d\nPort Present PDP Shall Port\nCable Capabilities\nThe field indicate the integer part of the amount of power the is presently capable of\nsupplying including limitations due to or abnormal operating conditions (e.g., elevated\ntemGupaerraantutereed, lCoawp ainbpiluitty v PooltratgSeh, aeltlc.). Port Present PDP Port Maximum PDP\nA always set its to be the same as its or\nthe highest possible value when limited.\nPage 212 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nManaged Capability Port Shared Capacity GroupShall Port Present PDP\n[USB Type-C 2.4]\nA that is part of a set its to Shared Port\nPoMwaenra Agveadi lCaabplea baisl idtye fPinoretd in Assu orre dto C aa ploawcietyr Gvaroluuep wShhaenll limitedP.ort Present PDP Port\nMaximum PDP\nA that is part of an set its to the\n6.4.11.4 or th eP hoigrhte sRt veapluoe protsesdib leP wDhPen F liimeitledd.\nPort Reported PDP Shall Port Source_Capabilities\nMessage EPR_Source_CapabilitiesMessage Port Reported PDP May Static\nThe Port field track the amount of power the is offeringE iPnR it Ms ode\nor . The field be dynamic or depending\noNno tteh:e 's oPthoerrt cRheaproarctteedri sPtDicPs such as Managed/Guaranteed Capability, SPR/ , its power policy etc.\nFixed SupplyPDO Source_CapabilitiesMessage\nETPhRe _Source_Capabilitie fsieMlde sissa cgoemputed as the integer part of, the largest of the products of the voltage\ntimes current of the s returned in the or\ns.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 213\n6.4.12 Revision Message\nRevisionMessageShall Get_RevisionMessage Port Partner Message\nRevision Port RevisionMessage\nTRheve isionMes sage be sent in response to the sent by the . This\nis used to identify the highest the is capable of operating at. The contains one\nRevis ionMess Dagatea Object (RMDO). Shall Figure 6.36, \"Revision Message Data\nObject\" Table6.52, \"Revision Message Data Object (RMDO)\" Number of Data Objects Revision\nMTheess ageShal l returns an RMDO whose format be as shown in\nand . The field in the\nbe set to 1. Figure 6.36 Revision Message Data Object\nHeader\nRMDO\nNo. of Data Objects= 1\nTable6.52 Revision Message Data Object (RMDO)\nBit(s) Description\nRevision\nRevision\nB31\u202628 .major\nVersion\nB27\u202624 .minor\nVersion\nB23...20 .major\nReserved Shall\nB19...16 .minor\nB15...0 , be set to zero.\nE.g.\uf06c, for RReevviissiioonn 3.2, Version 1.1 the fields would be the following:\n\uf06c Revision.major = 0011b\n\uf06c Version .minor = 0010b\n\uf06c Version.major = 0001b\n.minor = 0001b\nPage 214 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.5", "title": "Extended Message", "page": 215, "level": 2, "parent_id": "6", "full_path": "6.5 Extended Message", "tags": [], "text": "6.5 Extended Message\nExtended MessageShall Extended Message Header Extended Message\nHeader\nMAne ssage Re vision contain an Shall Ignored (indicated by the field in the\nbeing set) and be followed by zero or more data bytes. Additional bytes that might be added to existing\ns in futureE xtended Mofe tshsaisg sepecification Mbeessage Hea.der Message Type\nTable6.53, \"Extended Message Types\" May Message\nTShoeu frocremSaint kof thCea ble Plug is defined Sbhya tlhl eN ot 's Messa fgieeld and is summarized in\nMessage. The SenSt hbayl lcolumn indicates eSnOtiPt iPeas cwkehtich seMneds tshaeg egiven May\n( , SOP o* rP acket ); entities not listed issue the corresponding . The \"Valid Start of\nPacket\" column indicates the s which only be issued in s and the s which be\nissued in s. Table6.53 Extended Message Types\nValid\nBits\nType Sent by Description Start of\n4\u20260\nPacket\nReserved\nReserved Shall Not\nAll values not explicitly defined are\n0 0000 Source_Capabilities_Extended Source Dual-Role Power Section 6.5.1 SOP\nand be used.\nStatus Source Sink Cable Plug Section 6.5.2 SOP*\n0 0001 or See only\nGet_Battery_Cap Source Sink Section 6.5.3 SOP\n0 0010 , or See\nGet_Battery_Status Source Sink Section 6.5.4\n0 0011 or See only\nBattery_Capabilities Source Sink Section 6.5.5 SOP\n0 0100 or See\nGet_Manufacturer_Info Source Sink Section 6.5.6 SOP*\n0 0101 or See only\nManufacturer_Info Source Sink Cable Plug Section 6.5.7 SOP*\n0 0110 or See\nSecurity_Request Source Sink Section 6.5.8.1 SOP*\n0 0111 , or See\nSecurity_Response Source Sink Cable Plug Section 6.5.8.2 SOP*\n0 1000 or See\nFirmware_Update_Request Source Sink Section 6.5.9.1 SOP*\n0 1001 , or See\nFirmware_Update_Response Source Sink Cable Plug Section 6.5.9.2 SOP*\n0 1010 or See\nPPS_Status Source Section 6.5.10 SOP\n0 1011 , or See\nCountry_Info Source Sink Section 6.5.12 SOP\n0 1100 See only\nCountry_Codes Source Sink Section 6.5.11 SOP\n0 1101 or See only\nSink_Capabilities_Extended Sink Dual-Role Power Section 6.5.13 SOP\n0 1110 or See only\nExtended_Control Source Sink Section 6.5.14 SOP\n0 1111 or See only\nEPR_Source_Capabilities Source Dual-Role Power Section 6.5.15.2 SOP\n1 0000 or See only\nEPR_Sink_Capabilities Sink Dual-Role Power Section 6.5.15.3 SOP\n1 0001 or See only\n1 0010 Reserved or See only\nReserved Shall Not\n1 0011... All values not explicitly defined are\nVendor_Defined_Extended Source Sink Cable Plug Section 6.5.16 SOP*\n1 1101 and be used.\n1 1110 Reserved , or See\nReserved Shall Not\nAll values not explicitly defined are\n1 1111\nand be used.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 215\n6.5.1 Source_Capabilities_Extended Message\nSource_Capabilities_ExtendedMessageShould Get_Source_Cap_ExtendedMessage\nSource_Capabilities_ExtendedMessage Source DRP Sink Capabilities\nSTohuer ce be sent in response to a .\nThe enables a or a to inform the about its as a\nSo.urce_Capabilities_ExtendedMessageShall\nShall Figure 6.37, \"Source_Capabilities_Extended Message\" Table6.54,\nT\"Shoeu rce Capabilities Extended Data B lock (SC EDB)\" return a 25-byte Source Capabilities Extended Data Block\n(SCEDB) whose format be as shown in and\nFigure 6.37 Source_.Capabilities_Extended Message\nExtended Header SCEDB\nData Size= 25 (25-byte Data Block)\nTable6.54 Source Capabilities Extended Data Block (SCEDB)\nOffset Field Description\nVID Vendor ID\nPID\n0 (assigned by the USB-IF)\nXID\n2 Product ID (assigned by the manufacturer)\nFW Version\n4 Value provided by the USB-IF assigned to the product\nHW Version\n8 Firmware version number\nBit Description\n9 Hardware version number\n\uf06c\n\uf06c\n00b: 150mA/\u00b5s Load Step (default)\nVoltage Regulation \uf06c Reserved Shall Not\n1\u20260 01b: 500mA/\u00b5s Load Step\n10 \uf06c 11b\u202610b I : o C and be used.\n\uf06c IoC\n0b: 25% (default)\n2 Reserved Shall Not\n1b: 90%\n3\u20267 and be used\nHoldup Time Output will stay with regulated limits for this number of milliseconds after removal of\n\uf06c\nthe AC from the input.\n11 Note: Should Section 7.1.12.2, \"Holdup Time Field\"\n0x00 = feature not supported\nSPR Mode\nA value of at least 3ms be used (see ).\nBit Description\nCompliance in :\nLPS\nCompliance\n0 compliant when set\n12\n1 PS1 compliant when set\nReserved Shall Not\n2 PS2 compliant when set\nBit Description\n3\u20267 and be used\nTouch Current\n0 Low touch current EPS when set\n13 1 Ground pin supported when set\nReserved Shall Not\n2 Ground pin intended for protective earth when set\n3...7 and be used\nPage 216 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.54 Source Capabilities Extended Data Block (SCEDB) (Continued)\nOffset Field Description\nBit Description\nPeak Current1 Percent overload in 10% increments Values higher than 25 (11001b) are\n0...4\nclipped to 250%.\n14\n5...10 Overload period in 20ms\nVBUS\n11...14 Duty cycle in 5% increments\nBit Description\n15 voltage droop\nPeak Current2 Percent overload in 10% increments Values higher than 25 (11001b) are\n0...4\nclipped to 250%.\n16\n5...10 Overload period in 20ms\nVBUS\n11...14 Duty cycle in 5% increments\nBit Description\n15 voltage droop\nPeak Current3 Percent overload in 10% increments Values higher than 25 (11001b) are\n0...4\nclipped to 250%.\n18\n5...10 Overload period in 20ms\nVBUS\n11...14 Duty cycle in 5% increments\n15 voltage droop\n\uf06c [IEC 60950-1]\nTemperature conforms to:\nTouch Temp \uf06c [IEC 62368-1]\n0 = (default)\n\uf06c [IEC 62368-1]\n20 1 = TS1\nNote: Reserved Shall Not\n2 = TS2\nBit Description\nAll other values and be used.\n\uf06c\n\uf06c\n0b: No external supply\n0\n1b: External supply present\n\uf06c\nSource Inputs If bit 0 is set:\n\uf06c\n0b: External supply is constrained.\n21 1 Reserved Shall\n1b: External supply is unconstrained.\nIf b\uf06cit 0 is not set Batte a ry nd be set to zero\n\uf06c Battery\n0b: No internal\n2 Reserved Shall\n1b: Internal present\nNumber of Batteries/ 3...7 and be set to B z a e tt r e o ry Slot\nBattery Slots Fixed Batteries\nUpper Nibble = Number of Hot Swappable s (0\u20264)\n22 SPR Source PDP Lower S o N u i r b c b e le P D = P N R u a m ti b n e g r o E f PR Source PDP ( R 0\u2026 at 4 in ) g SPR Mode\nRating Reserved Shall\n0\u20266: ( \u2019s when operating in .\n23 EPR Source PDP\n7: EPR So uarncde PDP R baet isnegt to zero\nRating\n24 0\u20267:\n6.5.1.1 Vendor ID (VID) Field\nVID Shall Vendor ID VID Source\nVID VID Shall Device Shall\nThe VID field contain the 16-bit ( ) assigned to [tUheS B 2.0] 's ve[nUdSoBr 3b.y2 t]he USB-IF. If the vendor\ndoes not have a , the field be set to 0xFFFF. s that have a USB data interface report the\nsame as the idVendor in the Standard Device Descriptor (see and ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 217\n6.5.1.2 Product ID (PID) Field\nPID Shall Source Device\nShall [USB 2.0]\nT[UhSeB 3.2 f]ield contain the 16-bit Product ID (PID) assigned by the 's vendor. s that have a USB\ndata interface report the same PID as the idProduct in the Standard Device Descriptor (see and\n6.5.1.3). XID Field\nXID Shall\nShall [USB 2.0] [USB 3.2]\nThe field contain the 32-bit XID provided by the USB-IF to the vendor who in turns assigns it to a product.\n6If .t5he. 1ve.n4dor does no tF hiarvme awn XaIDre, t hVene rits ion r Fetiuernld zero in this field (see and ).\nFW Version Shall\nT6h.5e .1.5 fiel d Hard cowntaairne a nV 8e-brist ifiormnw Fariee vldersion number assigned to the device by the vendor.\nHW Version Shall\nT6h.5e .1.6 fiel d V olta cogneta Rine ang u8-lbaitt hiaorndw Fariee vledrsion number assigned to the device by the vendor.\nVoltage Regulation\nThe Section 7.1.12.1, \"Volt faigeled R ceognutlaaitnios nb iFtise cldo\"vering Load Step Slew Rate and Magnitude.\nS6e.e5 .1.6.1 Load Step Slew Rfoar tfuer ther details.\nSourceShall Voltage Regulation\nT6h.5e .1.6.2 report iLtso loaadd sStteep pre Mspoangsne citaupadbeility in bits 0\u20261 of the bit field.\nSourceShall IoC Voltage Regulation\nT6h.5e .1.7 rep o Hrt oitsl dlouadp s tTepi mmaegn Fituiedel drate as a percentage of in bit 2 of the field.\nHoldup Time Shall Source Section 7.1.12.2, \"Holdup Time Field\"\nT6h.5e .1.8 fie lCd omp cloinataninc teh eF ield's holdup time (see ).\nCompliance Static Shall Source Section 7.1.12.3,\n\"Compliance Field\"\nThe is and contain the standards the is compliant with in SPR (see\n6.5.1.9 ). Touch Current Field\nTouch Current Source\nThSeo urceShall fieTldo ruecpho Crtusr wrehnetther the meets certain leakage current levels and if it has a grSoouunrdc epin.\nA set the bit (bit 0) when their leakage current is lesSsh tahlaln 65\u00b5A rms when 's\nmaxim[IEuCm 6 c0a9p5ab0i-l1it]y is less than or equal to 30W, or when their leakage current is less than 100 \u00b5A rms when its\npower capability is between 30W and 100W. The total combined leakage current be measured in accordance\nwiStohu rce when teSshteadll at 250VAC rms at 50 Hz.\nA Source with a ground pin set the Ground pin bit (bit 1). Shall\n6A .5.1.1 w0hose Grou nPde paink is C inuternrdeedn tto Fbei ecolndnected to a protective earth set both bit1 and bit 2.\nPeak Current1 Peak Current2 Peak Current3 Shall\nSource Section 7.1.12.4, \"Peak Current\"\nThe / / fields contain the combinations of Peak Current that the\nsupports (see Source ). Negotiated\nPeak Current provides a means for report its ability to provide current in excess of the amount\nfor short periods. The Peak Current descriptor defines up to three combinations of% overload, duration and duty\nPage 218 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPeak Current1 Peak Current2 Peak Current3 Source SourceMay\nSourceShall\ncycle defined as , and that the supports. A offer\nno Peak Current capaPbielaitky .C Au rrent1 Peak p Couprurleantet 2unusePde Paeka Cku Crurrernetn3t bit fields with zero.\nThe\uf06c Bit Fields within , and contain the following subfields:\n\uf06dPerScehnatlalge Overload Negotiated\nIoC Source\nbe the maximum peak current reported in 10% increments as a percentage of the\n\uf06c operating current ( ) offered by the . Values higher than 25 (11001b) are clipped to 250%.\n\uf06dOveSrhloaaldl Period\nbe the minimum rolling average time window in 20ms increments, where a value of 20ms is\n\uf06c recommended.\n\uf06dDutSyh Caylclle\nShould\nbe the maximum percentage of overload period reported in 5% increments. The values\n\uf06c VBUS be 5%, 10% and 50% for PeakCurrent1, PeakCurrent2, and PeakCurrent3, respectively.\n\uf06d Sh Darlolop VBUS\nvSrcPeak SourceShould\nV b B e U S set to one to indivcSartceN tehwere is an additional 5% voltage droop on when the overload\nconditions occur as defined by . However, it is recommended that the pro-\n6.5.1.11vide iTn othue crahn gTee omf p Fiel wdhen overload conditions occur and set this bit to zero.\nTouch Temp Shall Source\nSource [IEC\nT60he9 50-1] [IEC 6fi2e3ld6 8-1] repoSrot uthrcee IEMCa sytandard used to determine the surface temperature of the 's\nenclosure. Safety limits for[ tIhEeC 62368's-1 to]uch temperature are set in applicable product safety standards (e.g.,\nor ). The report when its touch temperature performance conforms to the TS1\n6or. 5TS.21 l.i1m2its describ e Sdo inu rce Input.s Field\nSource Inputs Shall Source\nThe\uf06c field S ioduerncteify the possible inputs that provide power to the :\n\uf06c When bit 0 is set, the ca S n o u b r e c e sourced by an external power supply.\nWhen bits 0 and 1 are set, the can be sourced by an external power supply which is assumed to\n\uf06c be effectively \"infinite S \" o u i. r e c ., e it won't run down over time. Battery\nNote: When biSt o2u irsc eset the can be sourBcaetdt ebryy an internal . AC\nSupply\nSome s are only powered by a (e.g., an automobile) rather than the more common\nNote: M. ay\n6.5.1.1B3it 2 b Ne suetm inbdeepren odefn Btlya otft beitrsi 0e asn/dB 1a. ttery Slots Field\nNumber of Batteries/Battery Slots Shall Fixed Batteries\nBattery Slot Source Shall Battery Slot\nThe Fixed Batteries field report the number of and Hot Swappable\ns the supports. This field independently report the number of s and the\nnuSmoubrecre oSfh all . Fixed Batteries Battery Slot\nAFi xed Bat teries hSahvael lno more than 4 and no more than 4 s. Fixed BatteryShall\nNot Attach Detach\nbe numbered consecutively from 0 to 3. The number assigned to a given\nBatt cehrya nSlgoet beSthwaellen and . Battery SlotShall Not\nAttach Detach\ns be numbered consecutively from 4 to 7. The number assigned to a given\nchange between and .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 219\n6.5.1.14 SPR Source PDP Rating Field\nSPR Source SPR Source PDP Rating Shall PDP Rating Port\nFor an EPR Source the SPR SourcePDP Rating fieldS hall report the integer portion of the of the .\nPort\nFor an , the field report the integer portion of the maximum amount of\npoweSrP Rth Saot uthrec e PD Pis R daetsiinggned to deliver in SPR MSohdael.l Static\nT6h.e5 .1.15 EPR S fioelud rthcaet iPs rDepPor Rteda ting b Fe ield.\nEPR Source EPR Source PDP Rating Shall PDP Rating Port\nFor an SPR Source the Shall field report the integer portion of the of the .\nFor aEnP R Source P DthPi sR faietlidn g be set to zero. Shall Static\nThe field that is reported be .\nPage 220 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.2 Status Message\nStatusMessageShall Get_StatusMessage StatusMessage\nGet_StatusMessage SOP StatusMessage Port Port\nPTahret ner SOP b\u2019e seSnOtP i\u2019n\u2019 respSotantsues toM ae ssage . The content of thAec tive Ca ble Cab ldee Ppleungds\non the target of the . When sent to the returns the status of the 's\n6.5.2.. 1When sent t o S OP o Sr tatu tsh eM essa ge returns the status of one of the 's s.\nStatusMessage Get_StatusMessage SOP Port Port Partner\nSource Sink Get_StatusMessage Port\nAAl ertMe ssage , sent in response to to OC, ePnOabVlPes a OTP to inform its about\nthe present status oBf tahtete ry or . Typically, a will be sent by the after receipt of an\n. Some of the reported events are critical such as , and , while others are informational\nsuchS atsa tcuhsanMgees sina gae 's status from charging to neither charging nor dSishcahlalrging. Figure 6.38, \"SOP\nStatus Message\" Table6.55, \"SOP Status Data Block (SDB)\"\nThe returns a 7-byte Status Data Block (SDB) whose format be as shown in\nand Figure 6.38 SOP Statu.s Message\nExtended Header SDB\nData Size= 7 (7-byte block)\nTable6.55 SOP Status Data Block (SDB)\nOffset (Byte) Field Description\nSource Sink\n\uf06c\nInternal Temp or \u2019s internal temperature in \u00b0C\n\uf06c\n0 = feature not supported\n0 \uf06c\n1 = temperature is less than 2\u00b0C.\nBit Description\n2-255 = temperature in \u00b0C.\nReserved Shall\n0 and be set to zero\nValid\n1 External Power when set\n\uf06c\nPresent Input External Power AC/DC ( when Bit 1 set)\n\uf06c\n0: DC\n1 2 Reserved\n1: AC\nBattery\nwhen Bit 1 is zero\nBattery\n3 Internal Power from when set\nReserved Shall\n4 Internal Power from non- power source when set\nPresent Input Shall\n5...7 and be set to zero\nBattery\nWhen field bit 3 set contain the bit corresponding\nPresent Battery \uf06c\nto the or Batteries providing power:\nInput \uf06c Fixed Battery\nUpper nibble = Hot Swappable Battery (b7\u20264)\n2 Present Input Reserved\nLower nibble = (b3\u20260)\nShall\nWhen field bit 3 is not set this field is and\nbe set to zero.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 221\nTable6.55 SOP Status Data Block (SDB) (Continued)\nOffset (Byte) Field Description\nBit Flag Description\nReserved Shall\nOCP Event OCP\n0 and be set to zero\nOTP Event OTP\nEvent Flags 1 event when set\nOVP Event OVP\n2 event when set\n3\nPPS Mode CL CV\n3 CL/CV Mode event when set\nIn only: mode when set,\n4 Reserved Shall\nmode when cleared\nBit Description\n5...7 and be set to zero\nReserved Shall\nTemperature 0 \uf06c and be set to zero\nStatus \uf06c 00 \u2013 Not Supported.\n4 \uf06c 01 \u2013 Normal\n1...2 \uf06c\n10 \u2013 Warning\nReserved Shall\n11 \u2013 Over temperature\nBit Description\n3...7 and be set to zero\nReserved Shall\nSource\n0 and be set to zero\nSource\n1 power limited due to cable supported current\nPower Status power limited due to insufficient power available\n2 Source\nwhile sourcing other ports\n5\nSource\n3 power limited due to insufficient external power\npower limited due to Event Flags in place (Event\n4 Source\nFlags must also be set)\nReserved Shall\n5 power limited due to temperature\n6...7 and be set to zero\nPage 222 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.55 SOP Status Data Block (SDB) (Continued)\nOffset (Byte) Field Description\nBit Description\nNew Power State\nValue Description\n0 Status not supported\n1 S0\n2 Modern Standby\n0...2 3 S3\n4 S4\nPower State S5 (Off with battery, wake events\n5\nChange supported)\n6 G3 (Off with no battery, wake events not\n6 Reserved Shall\nsupported)\nNew Power State indicator\n7 and be set to zero\nValue Description\n0 Off LED\n3...5 1 On LED\n2 Blinking LED\nReserved Shall\n3 Breathing LED\nReserved Shall\n4...7 and be set to zero\n6...7 and be set to zero\n6.5.2.1.1 Internal Temp Field\nInternal Temp Source Sink\nT6h.5e .2.1.2 field Prerpeosrtes nthte I innsptauntta Fneieoulds temperature of a portion of the or .\nPresent Input Source Sink\nThe field indicates which supplies are presently powering the or .\nThe\uf06c following bits are defined:\n\uf06c Bit 1: indicates that an external power source is present.\n\uf06c Bit 2: indicates whether the external unconstrained B a p t o te w r e y r source is AC or DC.\n\uf06c Bit 3: indicates that power is being provided from . Battery\n6.5.2.1.3 Present Battery Input Field\nBit4: indicates an alternative internal source of power that is not a .\nPresent Battery Input Battery Source\nSink Present Battery Input Valid Present Input\nThe Battery field indicates which or Batteries are presently supplying power to the\nor . The field is only when the field indicates that there is Internal\nPower from . Battery\nBattery Battery Section 6.5.3,\nT\"Gheet _uBpapteter rnyi_bCbalpe Mofe tshsea gfiee\"ld indSieccattieosn w 6h.5i.c4h, \"HGoett _SBwaattpeprayb_Sleta tus Mes/sBaagtet\"eries are supplying power with bit 4 in\nupper nibble corresponding to 4 and bit 7 in the upper nibble corresponding to 7 (see\nand Fixed Battery ).\nBattery Battery Section 6.5.3,\nT\"Gheet _loBwatetre rnyib_Cbalep oMf ethssea fgieel\"d indiSceactteiso wn 6h.i5c.h4 , \"Get_Battery/_BStaatttuers iMese assraeg seu\"pplying power with bit 0 in lower nibble\ncorresponding to 0 and bit 3 in the lower nibble corresponding to 3 (see\nand ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 223\n6.5.2.1.4 Event Flags Field\nEvent Flags OTP OVP OCP Shall\nShall Get_StatusMessage\nThe field returns event flags. The , and event flags be set when there is an event and\nonly ObTe Pc lEevareendt when read wiTthe mthpe erature Sta tus .Shall\nWheCnL t/hCeV Mode flag is sVeta tlhide field also be set to over temSphearlaltureI.gnored\nSource CL/CV Mode Shall\nThe Curr felnagt Lisi monitly CwLhen opSehraatlilng as a Programmable Power SCuopnpsltya annt dV oltag ebe CV\notherwise. When the is operating as a Programmable Power Supply the flag be set when\n6op.5er.a2ti.n1g. 5in Te mmopdee (rat) uanrde Stat bues c lFeaireeldd when operating in mode ( ).\nTemperature Status\nTemperature Status OTP Event Shall\nThe field returns the current temperature status of the device either: normal, warning or\nover temperature. When the field is set to over temperature the flag also be\ns6e.t5. .2.1.6 Power Status Field\nPower Status Source Advertise\nSource\nThe field indicates the current status of a . A non-zero return of the field indicates d\n\uf06c power is being reduced for either: Source\n\uf06c The c S a o b u l r e c e does not support the full current.\n\uf06c The is supplying po S w o e u r r c to e other ports and is unable to provide its full power.\n\uf06c The external power to the is insuffi S c o ie u n rc t e to support full A p d o v w er e t r i . se\nSinkShAanl Elvent has occurred that is causing the to reduce its d power.\nA set this field to zero.\nPage 224 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.2.1.7 Power state change\nPower State Change New Power State New Power State indicator\nThe field contains two status bytes; the and status\nb6y.5te.s2..1.7.1 New power state\nNew Power State\nShall\nThe status byte indicates Sah poouwlder state change to one of the specified power states. Any device\nthat supports the ACPI standard system power states use the ACPI states. For devices that do not support the\nACP\uf06cI power states, the following mapping be used:\n\uf06c High power (on) state -> S0\n\uf06c Sleep state -> S3\n6.5.2.1.7.2 New power state indicator\nLow power (off) state -> S5 or G3\nNew Power State indicator\nThe status byte defines the hNoeswt's P doewsierre dS tiandteic iantdoirc faotro trhe specified power state. This\nindicator allows several possibilities for predefined behaviors that the host can specify to indicate its system\npower state to the user via the downstream device. TheS hould is a \"best effort\" indicator. If\nthe device cannot provide the requesteSdh ionudlidcator, then it provides the best indicator that it can. If a Breathing\nindicator cannot be provided, then a Blinking indicator be provided. If a Blinking indicator cannot be\npNreowv iPdoewd,e trh eSnta at ec oinndstiacnatt oorn indicator be provided.\n\uf06c s in decreasing precedence:\n\uf06c Breathing\n\uf06c Blinking\n\uf06c Constant on\nNo indicator\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 225\n6.5.2.2 SOP'/SOP'' Status Message\nStatusMessage Get_StatusMessage SOP\u2019 SOP\u2019\u2019 Source Sink\nCable Plug Get_StatusMessage USB Host USB\nDA evice , sent in respCoanbslee Ptolu ag toS tatus oMr essag,e enables a or to get the\npresent status of the CSahballel's (s). FTiygpuircea l6ly.3, 9a, \"SOP'/SOP' ' Status M weislsl abgee u\"sed bTya tbhlee 6.56, \"\u201cSO aPn\u2019d/S/OorP \u2019\u2019\nStatus Dtoa tmaa Bnlaogcke t(hSPe DCBa)b\u201dl\"e's (s) temperature. The returns a 2-byte Status Data Block\n(SDB) whose format be as shown in and\nCable Plug Shall N.ot\nPassive s indicatFei gTuhreer m6.a3l9 S hSuOtPd'o/wSOnP. '' Status Message\nExtended Header SPDB\nData Size= 2 (2-byte block)\nTable6.56 \u201cSOP\u2019/SOP\u2019\u2019 Status Data Block (SPDB)\u201d\nOffset (Byte) Field Value Description\nCable Plug\nInternal \uf06c\n\u2019s internal temperature in \u00b0C.\nTemp\n\uf06c\n0 = feature not supported\n0 Unsigned Int \uf06c\n1 = temperature is less than 2\u00b0C.\nBit Description\n2\u2026255 = temperature in \u00b0C.\nFlags\nReserved Shall\n1 Bit Field 0 Thermal Shutdown\n1...7 and be set to zero\n6.5.2.2.1 Internal Temp Field\nInternal Temp Shall\nCable PlugShall tACTempUpdate\nThe field reports the instantaneous temperature of the plug in \u00b0C. The internal temperature\nb6e. 5m.o2n.o2t.o2nic. The The rma rle Sphorut titds oinwternn aFl iteemldperature every .\nFlags Shall\nActive Cable Shall Shall\nThe flag also be set wheHna trhde R pelsuegt's internAaclt itveem Cpaebrlaeture exceeds the Internal Maximum Temperature\nrSehpaollr tNeodt in the Ca bVlDe OR.e Osentce this bit has been set, it remain set and the plug remain in\nThermal Shutdown until there is a or the 's power is removed. The Thermal Shutdown flag\nbe cleared by a .\nPage 226 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.3 Get_Battery_Cap Message\nGet_Battery_Cap BatteryCapabilities Message Battery\nPort Partner PortShall Battery_CapabilitiesMessage Section 6.5.5,\nT\"Bhaet tery_Capabilities M (Gesesta ge\" ) is used to request the capability of a pBreastteenrty in its\n. The respond by returning a (see\nGet_Battery_CapMessage) containing a Battery Capabilities Data Block (BCDB) for the targeted Shall .\nFigure 6.40, \"Get_Battery_Cap Message\" Table6.57, \"Get Battery Cap Data Block (GBCDB)\"\nThe Batt ery contains a 1-byte Get Battery Cap Data Block (GBCDB), whose format be as\nshown in and . This block\ndefinDeas tfao rS iwzehich tGheet _rBeqautteesrty i_sC baepinMge mssaadgee.Shall\nThe field in the Figure 6.40 Ge t_Bat tbeer yse_Ct atop 1M.essage\nExtended Header\nGBCDB\nData Size= 1\nTable6.57 Get Battery Cap Data Block (GBCDB)\nOffset Field Description\nBattery\n\uf06c Fixed Batteries\nBattery Cap Ref Number of the indexed from zero:\n\uf06c\nValues 0\u20263 represent the .\n0 \uf06c Reserved Shall Not\nValues 4\u20267 represent the Hot Swappable Batteries.\nValues 8\u2026255 are and be used.\n6.5.4 Get_Battery_Status Message\nGet_Battery_Status Battery Message Battery Port\nPartner PortShall Battery_StatusMessage Section 6.4.5, \"Battery_Status\nTMhees sage\" (Get Status) is used to request theB sattatteursy of a present in its\n. The respond by returning a (see\nGet_B) actotnetrayi_nSitnagt ua sBMatetsesrayg Setatus Data Object (BSDO) for the targeted . Shall\nFigure 6.41, \"Get_Battery_Status Message\" Table6.58, \"Get Battery Status Data Block (GBSDB)\"\nThe contaBinast tae r1y-byte GDeatt Ba aStitzeery Status DatGae Bt_lBocakt t(eGrByS_SDtBa)t uwshMoesses faogremSahta ll be\nas shown in and . This\nblock contains details of the requested . The field in the be set\nto 1. Figure 6.41 Get_Battery_Status Message\nExtended Header\nGBSDB\nData Size= 1\nTable6.58 Get Battery Status Data Block (GBSDB)\nOffset Field Description\nBattery\n\uf06c Fixed Batteries\nBattery Status Ref Number of the indexed from zero:\n\uf06c\nValues 0\u20263 represent the .\n0 \uf06c Reserved Shall Not\nValues 4\u20267 represent the Hot Swappable Batteries.\nValues 8\u2026255 are and be used.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 227\n6.5.5 Battery_Capabilities Message\nBattery_CapabilitiesMessage Get_Battery_CapMessage Battery_Capabilities\nMessage\nTNhuem ber of Batteries/Bat tery Slot sis sent in resSpoounrscee t_oC aap abilities_Extend edMessa.g Tehe Sha ll\ncontains oBnaet tBeartytery Capability DaBtaa Bttleorcyk C(BapC DRBe)f for one of the BatterieGs eitts_ Bsaupttpeorryt_sC aasp rMepeossrategde by\nfield in the . The returned BCDB\ncorreBsaptotenrdy t_oC athpea bilities Mreeqsusaesgteed in the field containSehda inll the Figure 6.42, .\n\"Battery_Capabilities Message\" Table6.59, \"Battery Capability Data Block (BCDB)\u201d\"\nThe returns a 9-byte BCDB whose format be as shown in\nandF igure 6.42 Battery_Capabilities Message .\nExtended Header\nBCDB\nData Size= 9\nTable6.59 Battery Capability Data Block (BCDB)\u201d\nOffset\nField Description\n(Byte)\nVID Vendor ID\nPID\n0 (assigned by the USB-IF)\nBattery\n2 Product ID (assigned by the manufacturer)\nNote:\nBattery Design Capacity \u2019s design capacity in 0.1 WH\n\uf06c Battery\n4\n\uf06c\n0x0000 = not present\nBattery\n0xFFFF = design capacity unknown\nNote:\nBattery Last Full Charge Capacity \u2019s last full charge capacity in 0.1 WH\n\uf06c Battery\n6\n\uf06c\n0x0000 = not present\nBit Field Description\n0xFFFF = last full charge capacity unknown\nInvalidBattery\nBattery Type Invalid Battery Reference\nreference when\n8 0 Reserved\nset.\n1...7 ---\n6.5.5.1 Vendor ID (VID)\nVID Shall VID Battery\nVID\nThe field contain the manufacturer associated with the , as assigned by the USB-IF, or 0xFFFF\nin the Bcaasttee trhya Ct anpo Rsuecfh exists.Get_Battery_CapMessage Invalid VID Shall\nI6f .t5he. 5.2 P fireoldd inu tchet ID (PID) is , the field be 0xFFFF.\nPID VID\nThe following rules apply to the field. When the :\nPage 228 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Battery PID Shall Battery\nBattery\nBelongs to the vendor the field contain the 's 16-bit product identifier\n\uf06c designated by t D h e e v ice vendor P . ID Shall Battery\nDevice\nBelongs to the vendor the field contain the 's 16-bit product identifier\n\uf06c designated by P th ID e Sh v a e l n l dor.\n6.5.5.I3s 0xFFFF th e B at ftieelrd y De bsei gsent t oC 0axp00a0c0i.ty Field\nBattery Design Capacity Shall Battery Battery\nBattery Design Capacity Shall Battery\nThe fBiealdtt ery D eresitgunrn C tahpea city 's dSehsaiglln capacity in tenths of WH. If the is Hot\nSwappable and is not present, the field be set to zero. If the is unable to\nr6e.p5o.r5t i.t4s Design Cap aBciatyt, ttheer y Last Full Charge fi eClda pac ibtey s eFt itoe 0ldxFFFF.\nBattery Last Full Charge Capacity Shall Battery\nBattery Battery Last Full Charge Capacity Shall\nThe Battery field contaiBn athttee ry Last' Fs ulalsl tC fhuallr cghea Crgaep caacpitaycity in Sthenatlhls of WH. If\nthe is Hot Swappable and is not present, the field be set to zero.\nIf the is unable to report its Design Capacity, the field be set to\n60x.F5F.F5F..5 Battery Type Field\nBattery Type Battery Capabilities\nT6h.5e .5.5.1 field i sI unsveda ltiod r eBpoarttt aedrdyit iRoneafl einrfeornmcaetion about the 's .\nInvalid Battery Reference Shall Get_Battery_CapMessage\nBattery\nThe bit be set when the contains a reference to a\nthat does not exist.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 229\n6.5.6 Get_Manufacturer_Info Message\nGet_Manufacturer_Info Message Port\nPort Partner Cable Plug Battery Port PortShall\nThe Manufacturer_In (fGoeMt MesasnaguefacSteucrteior nIn 6f.o5).7 , \"Manuf iasc stuenretr b_Iyn afo Mes stoa gree\"quest manufacturer specific\ninformation relating to its , or ofC aa ble Plug behOipntdi oan al N. oTrhme ative respond by\nreturning a ( ) containing a Manufacturer\nInfo GDeatt_aM Baloncukf a(MctIuDrBer)._ ISnufpopMorets sfoarg ethis feature by the is .\nDevice Battery Battery\nThe contains a 2-byte Get Manufacturer Info Data Block (GMIDB). This block\ndefines whether it is the or manufacturer information being requested and for which the\nrequGesett _iMs baeniunfga mctaudree.r_InfoMessage Shall Figure 6.43,\n\"Get_Manufacturer_Info Message\" Table6.60, \"Get Manufacturer Info Data Block (GMIDB)\"\nThe returns a GMIDB whose format be as shown in\nFaingdu re 6.43 Get_Manufacturer_Info Message .\nExtended Header\nGMIDB\nData Size= 2\nTable6.60 Get Manufacturer Info Data Block (GMIDB)\nOffset Field Description\n\uf06c Port Cable Plug\nManufacturer Info Target \uf06c Battery\n0: /\n\uf06c Reserved Shall Not\n0 1:\nManufacturer Info Target Battery Manufacturer Info\n255\u20262: and be used.\nRef Shall Battery\nIBfa tthtee ry field is (01b) the\nManufacturer Info Ref field contain the number reference which is the number of the\n\uf06c Fixed Batteries\nindexed from zero:\n1 \uf06c\nValues 0\u20263 represent the .\nReserved Shall\nValues 4\u20267 represent the Hot Swappable Batteries.\nOtherwise, this field is and be set to zero.\nPage 230 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.7 Manufacturer_Info Message\nManufacturer_InfoMessageShall Get_Manufacturer_InfoMessage\nManufacturer_InfoMessage VID Battery\nThe Battery be sent in response to a Max Extended. TMhseg LegacyLen\ncontains the USB and the Vendor's PID to identify the device or and the\ndevicMea onru facture'sr _mInafnouMfaecstsuargeer byte array in a variable length Data Block of up to Shall .\nFigure 6.44, \"Manufacturer_Info Message\" Table6.61, \"Manufacturer Info Data Block (MIDB)\"\nThe returns a Manufacturer Info Data Block (MIDB) whose format be as shown\nin Figure 6 a.4n4d Manufacturer_Info Message .\nExtended Header\nMIDB\nData Size= 5..26\nTable6.61 Manufacturer Info Data Block (MIDB)\nOffset Field Description\nVID Vendor ID\nPID\n0 (assigned by the USB-IF)\n2 Product ID (assigned by the manufacturer)\nManufacturer Info Target Manufacturer Info\nVendor defined null terminated string of 0\u202621 characters.\nManufacturer String Ref Get_Manufacturer_InfoMessage\nIf the Shall field or\n4 field in the is\nunrecognized the field return a null terminated ASCII\ntext string \u201cNot Supported\u201d.\n6.5.7.1 Vendor ID (VID)\nManufacturer Info Target Get_Manufacturer_InfoMessage Port Cable\nPlug VID Shall\nIf the in field in the is associated with this /\n\uf06c, the field contVaIiDn: Port Cable Plug\n\uf06c The manufacturer's associated with the / VID , as defined by the USB-IF, or\nM0xaFnFuFfFa cintu trheer c Iansfeo t Thaart gtheet vendor doeGse nt_oMt ahnavuefa ac ture.r_InfoMessage Device\nDeviceShall VID\n[IfU tShBe i2n.0 ] [USB 3.2] field in the is associated with a that has\na USB data interface, the report the same as the idVendor in the Standard Device Descriptor (see\nM aanndu facturer I)n.fo Target Get_Manufacturer_InfoMessage Battery\nVID Shall\nIf the in field in the is associated with a , the\n\uf06c field contain: VID Battery\n\uf06c The manufacturer associated with the s V p I e D cified, as defined by the USB-IF, or\n0MxaFnFuFFfa icnt uthree rc aInsefo t hTaatr tgheet vendor doesG neot_tM haavneu faa ctu.rer_InfoMessage\nIf th\uf06ce in Invalid VID Sha flileld in the :\n\uf06c Is Battery , this field Manu b fa e c 0 t x u F r F e F r F In . fo Ref Invalid VID Shall\n6.5.7.I2s (0 1 Pb)r aondd tuhce t ID (PID) field is , the field be 0xFFFF.\nVID PID Shall\nIf the is 0xFFFF, the field contain 0x0000.\nOtherwise:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 231\n\uf06c Manufacturer Info Target Get_Manufacturer_InfoMessage\nPort Cable Plug Shall\nIf the in field in the is associated with this\n/ , the PID field contain the device's 16-bit product identifier designated by the\n\uf06c device ve M n a d n o u r. facturer Info Target Get_Manufacturer_InfoMessage\nBattery\nIf the in field in the is associated with a\n\uf06d : VID Battery PID Shall Battery\nBattery\nAnd the belongs to the vendor, the field contain the 's 16-bit product\n\uf06d identifierV IdDesignated by theD evice vendor. PID Shall Battery\nDevice\nAnd the belongs to the vendor, the field contain the 's 16-bit product\n6.5.7.3 identifier dMesaignnautefda bcyt uthre er Str vienndgor.\nManufacturer String Shall Battery\nThe field contain the device\u2019s or 's manufacturer string as defined by the\nvendoMr. anufacturer Info Target Manufacturer Info Ref Get_Manufacturer_InfoMessage\nShall\nIf the field or field in the is\nunrecognized the field return a null terminated ASCII text string \"Not Supported\".\nPage 232 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.8 Security Messages\nPort Partner Port Cable Plug\n[USBTypeCAuthentication 1.0] Extended Message\nThe authentication process between s or a and is fully described in\n. This specification describes two s used by the authentication\nprocess when applied to PD. [USBTypeCAuthentication 1.0]\nIn the authentication process described in there are three basic exchanges that\nserv\uf06ce to: Port Cable Plug\n\uf06c Get the Port or Cable Plug 's certificates.\n\uf06c Get the or P ort Partner 's dig C e a s b t l . e Plug\nChallenge the or . Port Partner Cable\nPlug Port Cable Plug Port Port Partner\nCCaerbtlief iPclautges are used to conAvtteayc hinefdormation, attested to by a signer, which attests to theA ttachment 'Pso orrt\n's authenticity. The 's or 's certificates are needed when a encounters a Port or\nit has not been to before. To minimize calculations after the initial , a can also\nuPsoer ta digest consisting of hashes of the certificates Praotrht ePra trhtanner the certCifaicbalete Psl uthgemselves. Once the has the\ncertificates and has calculated the hashes, it stores the hashes and uses the digest in future exchanges. After the\ngets the certificates or [dUigSeBsTt,y ipt ecChAaluletnhgeenst iictsa tion 1.0] or the to detect replay attacks.\n6 Fo.5r f.u8r.t1her details r e Sfeer ctou rity_Request .\nSecurity_RequestMessage Port Port Partner Cable Plug\nThe Security_Request Message is used by a to pass a security data structure to its Sha ollr a .\nFigure 6.45, \"Security_Request Message\"\nT[UhSeB TypeCAuthentica tion 1.0] contains a Security Request Data Block (SRQDB) whose format be as shown\nin . The contents of the SRQDB and its use are defined in\n. Figure 6.45 Security_Request Message\nExtended Header\nSRQDB\nData Size= 4..260\n6.5.8.2 Security_Response\nSecurity_ResponseMessage Port Cable Plug Port\nSecurity_RequestMessage\nThe is used by a or to pass a security data structure to the that\nsent Stehceu rity_ResponseMe ssage . Shall\nFigure 6.46, \"Security_Response Message\"\nT[UhSeB TypeCAuthenticat ion 1.0] contains a Security Response Data Block (SRPDB) whose format be as\nshown in . The contents of the SRPDB and its use are defined in\n. Figure 6.46 Security_Response Message\nExtended Header\nSRPDB\nData Size= 4..260\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 233\n6.5.9 Firmware Update Messages\nPort Partner Port Cable Plug\n[USBPDFirmwareUpdate 1.0] Extended Message\nThe firmware update process between s or a and is fully described in\n. This specification describes two s used by the firmware update\n6pr.o5ce.9ss. 1when applie d F toir PmD.ware_Update_Request\nFirmware_Update_RequestMessage Port Port\nPartner Cable Plug\nThe is used by a to pass a firmware update data structure to its\nFirm owr aa re_Update._RequestMessage\nShall Figure 6.47, \"Firmware_Update_Request Message\"\nThe [USBPDFirmwareUpd ate 1.0] contains a Firmware Update Request Data Block (FRQDB) whose format\nbe as shown in . The contents of the FRQDB and its use are\ndefined in Figure 6.4.7 Firmware_Update_Request Message\nExtended Header\nFRQDB\nData Size= 4..260\n6.5.9.2 Firmware_Update_Response\nFirmware_Update_ResponseMessage Port Cable Plug\nPort Firmware_Update_RequestMessage\nThe is used by a or to pass a firmware update data structure\nto thFei rmw tahraet_ Usepndta tthee_ ResponseMessage .\nShall Figure 6.48, \"Firmware_Update_Response Message\"\nThe [USBPDFirmwa reUpdat eco 1n.0ta]ins a Firmware Update Response Data Block (FRPDB) whose\nformat be as shown in . The contents of the FRPDB and its\nuse are defined in Figure 6.48 Firmw.are_Update_Response Message\nExtended Header\nFRPDB\nData Size= 4..260\nPage 234 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.10 PPS_Status Message\nPPS_StatusMessageShall Get_PPS_StatusMessage PPS_StatusMessage\nSink Source Get_PPS_StatusMessage\nThe PPS_Sta tusMess ageSh bael lsent in response to a AlertM essage . The enables\na to query the to get additional information about its operational state. The\nand PthPeS _StatusMes sageSha ll only be supported when the is also supporteSdh.all\nFigure 6.49, \"PPS_Status Message\" Table6.62, \"PPS Status Data Block (PPSSDB)\"\nThe return a 4-byte PPS Status Data Block (PPSSDB) whose format be as shown in\nand Figure 6.49 PPS_Status Message .\nExtended Header PPSSDB\nData Size= 4 (4-byte Data Block)\nTable6.62 PPS Status Data Block (PPSSDB)\nOffset (Byte) Field Description\nSource\nOutput Voltage\nSource\n\u2019s output voltage in 20mV units.\n0 2 Source\nOutput Current When set to 0xFFFF, the does not support this field.\nSource\n\u2019s output current in 50mA units.\n2 B1it Description\nWhen set to 0xFF, the does not support this field.\nReserved Shall\nPTF\n0 and be set to zero\n\uf06c\n\uf06c\nPTF: 00 \u2013 Not Supported\nReal Time Flags 1...2 \uf06c PTF: 01 \u2013 Normal\n\uf06c\nPTF: 10 \u2013 Warning\n3\nOMF\nPTF: 11 \u2013 Over temperature\nCurrent\nLimit Constant Voltage\nOMF (Operating Mode Flag) is set when operating in\n3\nmode and cleared when operating in\nReserved Shall\nmode.\n4...7 and be set to zero\n6.5.10.1 Output Voltage Field\nOutput Voltage Shall Source\nSource Source\nThe field return the 's output voltage at the time of the request. The output voltage is\nmeasured either at the 's receptacle or, if the has a captive cable, where the voltage is applied to the\ncable. Shall SPR PPS Mode\nThe mSeoausrucreement accuracy bOeu +tp/u-3t% V orlotuangdeed to the neareSsht a2l0lmV in .\nI6f .t5he. 10.2 does no t O suupptporut tth eC urrent Fiel fdield, the field be set to 0xFFFF.\nOutput Current Shall Source\nSource\nThe field return the 's output current at the time of the request measured at the\n's receptacle. Shall\nThe mSeoausrucreement accuracy bOeu +tp/-u1t5 C0umrrAe. nt Shall\nIf the does not support the field, the field be set to 0xFF.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 235\n6.5.10.3 Real Time Flags Field\nSource\nRea\uf06cl Time flaPgTsF provide a real-time indicationS ohfa thlle 's operating state: Source\nThe (Present Temperature Flag) provide a real-time indication of the 's internal\n\uf06dthermal status. If the PTF is noSot usurcpeported, it will be set to zero:\n\uf06d Normal indicates that the Sourc eis operating within its normal thermal envelope.\n\uf06d Warning indicates that the is oSvoeurr-cheeating but is not in imminent danger of shutting down.\nOTP Event AlertMessage\nOver Temperature indicates that the is over heated and will shut down soon or has already\n\uf06c sOhuMtdFown and has sent the Shall flag in an . SPR PPSSource\nSource Current Limit Constant\nVTohlet age (Operating MoSdhea Flllag) provide a real-timSeP iRn PdPicSa tMioond eof the 's operating\nmode. When set, the is operating in mode; when cleared it is operating\nmode. This bit be set to zero when not in .\nPage 236 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.11 Country_Codes Message\nCountry_CodesMessageShall Get_Country_CodesMessage Country_Codes\nMessage Port Port Partner [ISO 3166]\nThe Port Partn er be sent in response to a . The\nenables a to query its to get a list of alpha-2 country codes as defined in for\nwhicCho tuhnet ry_CodesMe shsaasg ecoSuhnatlrly specific information. Shall\nFigure 6.50, \"Country_Codes Message\" Table6.63, \"Country Codes Data Block (CCDB)\"\nThe contain a 4\u202626-byte Country Code Data Block (CCDB) whose format be as\nshown in Figure 6. 5a0n dC ountry_Codes Message .\nExtended Header CCDB\nData Size= 4-26 (4-26 byte Data Block)\nTable6.63 Country Codes Data Block (CCDB)\nOffset Field Description\nLength Message\n0 Reserved NSuhmalbler of country codes in the\nOffset Field Description\n1 be set to zero.\n[ISO 3166]\nst First character of the Alpha-2 Country Code defined by\n2 1 Country Code\n[ISO 3166]\nCountry\nSecond character of the Alpha-2 Country Code defined by\nCode 3\n2... [ISO 3166]\nnd First character of the Alpha-2 Country Code defined by\nLength * 2n 4 2 Country Code\n[ISO 3166]\nSecond character of the Alpha-2 Country Code defined by\n5\n\u2026\nth\nLength * 2n n Country Code\n6.5.11.1 Country Code Field\nCountry Code Shall Length [ISO 3166]\nThe field contain Country Codes in the Alpha-2 Country Code defined by .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 237\n6.5.12 Country_Info Message\nCountry_InfoMessageShall Get_Country_InfoMessage Country_InfoMessage\nPort Port Partner\nThe be sent in response to a . The\nenabCleosu an try_I ntofo gMete asdsadgiteioSnhaall clountry specific information from its . Shall\nFigure 6.51, \"Country_Info Message\" Table6.64, \"Country Info Data Block (CIDB)\"\nThe contain a 4\u202626-byte Country Info Data Block (CIDB) whose format be as\nshown in Figure a 6n.d5 1 Country_Info Message .\nExtended Header CIDB\nData Size= 4-26 (4-26 byte Data Block)\nTable6.64 Country Info Data Block (CIDB)\nOffset Field Size\nGet_Country_InfoMessage\nCountry Code First character of the Alpha-2 Country Code received in the corresponding\n0\n.\nGet_Country_InfoMessage\nSecond character of the Alpha-2 Country Code received in the corresponding\n1 Reserved Shall\nCountry Specific Data\n2\u20263 be set to zero.\n4 1\u202622 bytes of content defined by the country\u2019s authority.\n6.5.12.1 Country Code Field\nCountry Code Shall Get_Country_Info\nMessage\nThe field contain the Alpha-2 Country Code received in the corresponding\n6.5.12..2 Country Specific Data Field\nCountry Specific Data Shall\nThe field contain content defined by and formatted in a manner determined by an\nofficial agency of the country inGdeicta_Cteodu innt rthy_eI nCfoounMtersys aCgoede field. Shall\nIf the Country Code field in the is unrecognized then Country Specific Data field\nreturn the null terminated ASCII text string \"Unsupported Code\".\nPage 238 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.13 Sink_Capabilities_Extended Message\nSink_Capabilities_ExtendedMessageShall Get_Sink_Cap_ExtendedMessage\nSink_Capabilities_ExtendedMessage Sink DRP Source Capabilities Sink\nThe be sent in response to a . The\nSink_Capabilities_Exten dedMess eangaebSlhesa lal or a to inform the about its as a .\nShall Figure 6.52, \"Sink_Capabilities_Extended Message\" Table6.65, \"Sink\nTCahpea bilities Extended Data Block (SKEDB)\" return a 24-byte Sink Capabilities Extended Data Block (SKEDB)\nwhose format be as shown in and\nFigure 6.52. Sink_Capabilities_Extended Message\nExtended Header SKEDB\nData Size= 24 (24byte Data Block)\nTable6.65 Sink Capabilities Extended Data Block (SKEDB)\nSize\nOffset (Byte) Field Type Description\n(Bytes)\nVID Vendor ID\nPID\n0 2 Numeric (assigned by the USB-IF)\nXID\n2 2 Numeric Product ID (assigned by the manufacturer)\nFW Version\n4 4 Numeric Value provided by the USB-IF assigned to the product\nHW Version\n8 1 Numeric Firmware version number\n9 1 Numeric Hardware version number\nSKEDB Version \uf06c\nSKEDB Version (not the specification Version):\nReserved Shall Not\n10 1 Numeric Version 1.0 = 1\nBit Description\nValues 0 and 2-255 are and be used.\n\uf06c\nLoad Step \uf06c\n00b: 150mA/\u03bcs Load Step (default)\nReserved Shall Not\n11 1 Bit Field 0...1 01b: 500mA/\u03bcs Load Step\nReserved Shall\n11b\u202610b: and be used.\nBit Description\n2...7 and be set to zero\nPercent overload in 10% increments.\nSink Load\n0...4 Values higher than 25 (11001b) are clipped to\nCharacteristics\n250%. 00000b is the default.\n12 2 Bit Field\n5...10 Overload period in 20ms when bits 0...4 non-zero.\nDuty cycle in 5% increments when bits 0...4 are\n1...14 VBUS\nnon-zero.\nBit Description\n15 Can tolerate voltage droop\nLPSSource\nCompliance Source\n0 Requires when set\nSource\n14 1 Bit Field 1 Requires PS1 when set\nReserved Shall\n2 Requires PS2 when set\n3...7 and be set to zero\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 239\nTable6.65 Sink Capabilities Extended Data Block (SKEDB) (Continued)\nSize\nOffset (Byte) Field Type Description\n(Bytes)\n\uf06c\nTemperature conforms to:\n\uf06c [IEC 60950-1]\nTouch Temp 0 = Not applicable\n\uf06c [IEC 62368-1]\n1 = (default)\n15 1 Value \uf06c [IEC 62368-1]\n2 = TS1\nNote: Reserved\n3 = TS2\nBattery Slot\nBattery Info All other values\nFixed Batteries\nUpper Nibble = Number of Hot Swappable s (0\u20264)\n16 1 Byte Bit Description\nLower Nibble = Number of (0\u20264)\nPPS\nVBUS\n0 charging supported\nAC Supply\nSink Modes 1 powered\nBattery\n2 powered\n17 1 Bit Field\nBattery\n3 powered\nAVS\n4 essentially unlimited\nReserved Shall\n5 Support\nBit Description\n6...7 and be set to zero\nPDP Source Sink\nSPR Sink Minimum\nPDP\nThe of the that Bthaet tery requires to\n18 1 Byte 0...6 operate at its lowest functionality without\nReserved Shall\nconsuming power from its if it has one.\nBit Description\n7 and be set to zero\nSPR Sink PDP Source Sink\nOperational PDP\nThe of the that the requires to\n19 1 Byte 0...6 Reserved Shall\noperate at its normal functionality.\nBit Description\n7 and be set to zero\nSPR Sink Maximum\nPDP Sink\nPDP\nReserved Shall\n20 1 Byte 0...6 The maximum the will ever request.\nPDP Source EPR Sink\nEPR Sink Minimum 7 and be set to zero\nPDP\nTBhatet ery of the that the requires to operate at\n21 1 Byte its lowest functionality without consuming power from its\nEPR Sink PDP Source EPR Sink\nif it has one.\nOperational PDP\nThe of the that the requires to operate at\n22 EPR Sink Maximum 1 Byte\nits normal funcPtiDonPality. EPR Sink\nPDP\n23 1 Byte The maximum that the will ever request.\n6.5.13.1 Vendor ID (VID) Field\nVID Shall Vendor ID VID Sink\nVID VID Shall Device Shall\nThe VID field contain the 16-bit ( ) assigned to[ tUhSeB 2.0']s vend[UoSr Bb y3 .t2h]e USB-IF. If the vendor\ndoes not have a , the field be set to 0xFFFF. s that have a USB data interface report the\n6sa.m5e. 13. a2s the idVe nPdroro idn tuhce tS tIaDnd a(rPd IDDev)i cFe iDeelsdcriptor (see and ).\nPID Shall Sink Device\nShall [USB 2.0] [USB\nT3.h2e] field contain the 16-bit Product ID (PID) assigned by the 's vendor. s that have a USB data\ninterface report the same PID as the idProduct in the Standard Device Descriptor (see and\n).\nPage 240 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.13.3 XID Field\nXID Shall\nShall [USB 2.0] [USB 3.2]\nThe field contain the 32-bit XID provided by the USB-IF to the vendor who in turns assigns it to a product.\n6If .t5he. 1ve3n.d4or does no tF hiarvme awn XaIDre, t hVene rits ion r Fetiuernld zero in this field (see and ).\nFW Version Shall\nT6h.5e .13.5 fiel d Hard cowntaairne a nV 8e-brist ifiormnw Fariee vldersion number assigned to the device by the vendor.\nHW Version Shall\nT6h.5e .13.6 fiel d S KED coBnt aVine arns 8io-bnit hFairedwldare version number assigned to the device by the vendor.\nSKEDB Version\nT6h.5e .13.7 f iLelod acodn tSaitnes pth eF vieerlsdion level of the SKEDB. Currently only Version 1 is defined.\nLoad Step Sink\nSection 7.1.12.1, \"Voltage Regulation Field\"\nThe field contains bits indicating the Load Step Slew Rate and Magnitude that this prefers. See\n6.5.13.8 Sink Load Cha rfoar cfutrethreirs dteitcasils F. ield\nSinkShall Sink Load Characteristics\nShall Not Capabilities Source_Capabilities_ExtendedMessage\nThe report its preferred load characteristics in the field. Regardless of this\n6va.l5ue.1, in3 o.p9eration it s Clooadm plian cexec eFeide thlde reported in the .\nCompliance Shall Source Sink Section\n7.1.12.3, \"Compliance Field\"\nThe field contain the types of s the has been tested and certified with (see\n6.5.13.10 Touc).h Temp\nTouch Temp Shall Sink\nSink [IEC\nT60he9 50-1] [IEC 6fi2el3d6 8-1] reporSti nthkeM IEaCy standard used to determine the surface temperature of the 's\nenclosure. Safety limits for[ ItEhCe 6236's8 t-o1u]ch temperature are set in applicable product safety standards (e.g.,\nor ). The report when its touch temperature performance conforms to the TS1\n6or. 5TS.21 l3im.1its1 describ e Bd aint tery Info .\nBattery Info Shall Fixed Batteries Hot Swappable Battery Sink\nShall Battery Slot Fixed Batteries\nThe field B raepttoerrty t hInef onumbeSrh oafl l and Number of Bat tselorites st/hBea tter y Slots\nsupports. TShoisu frieceld_ Capab iinlidteiepse_nEdxetenntldye rdepMoersts tahgee number of s and the number of . The\ninformation reported in the field match that reported in the\nfieSlidn okfS thhael l Fixed Bat teries . Battery Slot\nAFi xed B atter ihesavSeh anlol more than 4 and no more than 4 s. Fixed BatteryShall\nNot Attach Detach\nbe numbered consecutively from 0 to 3. The number assigned to a given\nBatt cehrya nSlgoet beSthwaellen and . Battery SlotShall Not\nAttach Detach\ns be numbered consecutively from 4 to 7. The number assigned to a given\nchange between and .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 241\n6.5.13.12 Sink Modes\nSink Modes Shall Capabilities Sink\nSink PPSSource\nThe bit field identify the charging and the power sources that can be used by the .\nWhen bit 0 is set, the Sin khas the ability to use a for fast charging.\nThe\uf06c source of power a caSni nukse: VBUS\n\uf06c When bit 1 is set, the Sink has the ability to be sourced by AC . Supply\n\uf06c When bit 2 is set, the Sink has the ability to be sourced by an B attery .\n\uf06c When bit 3 is set, the Sink has the ability to be sourced by a B attery .\nWhen bit 4 is set, the has the ability to be sourced by a with essentially infinite energy (e.g.,\naM caayr battery). Sink\nSink Battery\nBits 1-4 AC S buep pselyt independeSnintlky of one another. The comVbi B n U a S tionV i C n O d N i N cates what sources of power the can\nutilize. For example, some s are only powered by a (e.g., an automobile battery) rather than the more\ncommon anSdin skome s are only powereAd VfrSom or .\n6W.h5en.1 b3it .51 i3s set, the SPR h aSs itnhek a bMiliityn tiom suuppmor tP DP.\nSPR Sink Minimum PDP Shall SourcePDP Sink\nBattery\nTBhatet ery field contain the minimum pPoDwPeSrh ould needed by the , rounded up\nto the next integerS, PtoR o Spienrka tMe ianti imtsu lomw PeDstP level oSf hfuanllctionality without requiring pSoPwRe Sri fnrko mOp itesr ational i Pf pDrPesent.\ncharging maSyo buer acen opportunistic feature, however this be designed for basic functionAaltittayc, hneodt\nSfoinr kcharginSgi. nTkhe EPR Capable field be lePssD tPhan or equal to the Shall . The\nvalue is used by the to determine whether or not it has sufficient power to minimally support the\n. If the is and is unable to operate at s less than 100W, it set this field to the\nminimSuinmk power to sustain PD communication. Source Shall\nIf theS PR S iins ks eMlfi-npiomwuemre dP,D sPuch that it doesn't needS hpaorweedr C faropmac iat y Charg, etrhen it set thSish foieulldd to zero.\nSink\nThe is used to indicate to s the power that be delivered\nto the to guarantSePe Rat S lienaks tM biansiimc fuumnc PtiDoPnality for the end user.\nPos\uf06csible examples of Charg ecrould be:\nThe minimum power a wireless would require in order to detect, and deliver the minimum\n\uf06c required amount of power to the attached device. Battery Sink\n\uf06c The power require B d a t t o t e h r a y ve basic functionality by a less ,\n6.5.13O.n1 a4 device w SitPh aR Sink, iOt cpane proawteiro tnhea ml iPniDmuPm functionality of the device\nSPR Sink Operational PDP Shall SourcePDP\nSink PDP Rating Source\nTheS ink field Se ccotinotna i1n0 t.3h.e2 , \"Norm ative t hSiantk t hReu lmesa\"nufactuSrPeRr Sreincokm Ompeernadtsio fnora tl hPeD P\nnormSahl afullnctionality of the , roundedS uinpk to the next integer. This corresponds to the Sink Bat otef ry s that\nthe Sink is designBeadtt teor yoperate SwPitRh S (iSneke O perational PDP Shall ). The PDP Rating Charge r\nfield be suffSicinieknt to operate all the Ch'sa frugnecrtioPnDaPl mRaotdinegs normaSlliyn kANDE PcRh aCragpea tbhlee 's if present.\nFoPr DP s with a (s),S thhael l SPR Sink Minimum fi PelDdP correspond to the of the\nshipped with the or the recommended 's . If the is and is unable to operate\nat s less than 100W, it set the field to the minimum power to sustain PD\ncommSuinnkication. Source Shall\nIf theS PR S iinsk s eOlfp-eproawtieorneda,l sPuDcPh that it doesn't need pSohwaerre dfr Comap aa city Cha, rtgheern it set this field to zero.\nSink\nThe is used to indicate to s that at this power level the user is\nnot expected to receive any performance warning related to the power being supplied to the .\nPage 242 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.13.15 SPR Sink Maximum PDP\nSPR Sink Maximum PDP Shall PDP Sink\nBattery SPR Sink Maximum PDP\nThe Shall Not fiSePldR Sink Ocopnetraainti othnea hl iPgDhePst theM ay will ever request under any operating\ncSoonurdciteion, rounded up to the next integer, including charging its if pArtetascehnetd. TShinek Sink EPR Capable\nfield be less than PthDeP Shall field, but be the same. The value is used by the\nto determine the maximum amount of power it has to budget for the . If the is\nand is unable to operate at s less than 100W, it set this field to the minimum power to sustain PD\ncommSuinnkication. Source Shall\nI6f .t5he. 13. 1is6 self-pow eErPedR, s uScihn thka tM it idnoeismn'tu nmeed P pDowPe r from a , then it set this field to zero.\nEPR Sink Minimum PDP Shall SourcePDP EPR Sink\nBattery Battery\nThe field contain the PDP Sho nueldeded by an , rounded up to the next\ninteger, to opeErPatRe Saitn ikts M loiwniemstu lmev PelD oPf functSiohnaalllity without requiring power EfrPoRm S iitnsk Opera,t iiof npraels PeDntP.\ncharging may be an opportunisStoiuc rfceeature, however this be designed for basic functionality, not for\ncAhttaarcghinegd. STinhke Sink EPR Cap afibelled be Sleinsks than or equal to the field\nSvoaulurec.e The value iSsh uasleld by the to determine whether or not it has sufficient power to minimally support the\n. If the is not , or if the is self-powered, such that it doesn't need power from a\nEP,R th Siisn fkie Mldi nimu mbe P sDePt to zero. Shared Capacity Charger Should\nSink\nThe is used to indicate to s the power that be delivered\nto the to guarantEeeP Rat S lienaks tM biansiimc fuumnc PtiDonPality for the end user.\nPos\uf06csible examples of could be: Battery Sink\n\uf06c The power require B d a t t o t e h r a y ve basic functionality by a less ,\nNote: OnE Pa Rd eSvinicke Mwiinthim a um PDP, it can power the minimSuPmR Sfuinnkct Mioinnailmityu mof PthDeP device.\n6.5.13.17 EPR Sink cOanp beer tahet isoamnea als PitsD P .\nEPR Sink Operational PDP Shall SourcePDP\nSink PDP Rating EPR Source\nThe Sink field conSetacitnio tnh 1e 0.3.2, \"N orm athtiavte t hSien mk Ranuluefsa\"cturer ErePcRo mSimnke nOdpse froart itohne al\nnPoDrPmSahl afullnctionality of the , roundedS uinpk to the next integer. This corresponds to the Sink Bat otef ry s\nthatS tihnek is dBesaitgtneeryd to opSehraatlel with (See PDP Rating Charger ). The EPR Sink\nbe suCfhfiacriegnetr toP oDpPe rRaattei nagll the Sin'sk functioEnPaRl mCaopdaebsl enormally ASNinDk charge the 's if present.\nFor s with a Sour(cse), it cSohrraelslpond to the of the shipped with the or the\nrecommended 's . If the is not , or if the is self-powered, such that it doesn't\nneedE pPoRw Seinr kfr Oompe ar ational, tPhDisP field be set to zeSrhoa. red Capacity Charger\nSink\nThe is used to indicate to s that at this power level the user is\n6no.t5 e.x1p3ec.t1ed8 to rece i vEe PanRy pSeirnfokrm Manacex wimarnuinmg r ePlaDtePd to the power being supplied to the .\nEPR Sink Maximum PDP Shall PDP EPR Sink\nBattery EPR Sink Maximum PDP\nThe Shall Not fiEePldR Sink Obep ehrigahteiosnt al PD thPe May will ever request under any operatinSgo urce\ncondition, rounded up to the next integer, including charging its Att aifc pheredsSeinntk. The Sink EPR Capable\nfield Sink be less than the , but bSeo uthrcee same. The Svhalaulel is used by the\nto determine the maximum amount of power it has to budget for the . If the is not ,\nor if the is self-powered, such that it doesn't need power from a , this field be set to zero.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 243\n6.5.14 Extended_Control Message\nExtended_ControlMessage Control Message Extended_ControlMessage\nExtended_ControlMessageShall Figure 6.53, \"Extended_Control Message\"\nTTahbel e6.66, \"Extended C ontrol Da etax tBelnodcsk t(hEeC DB)\" space. The includes one\nbyte of data. The be as shown in and\nFigure 6.53 E.xtended_Control Message\nExtended Header ECDB\nData Size= 2 (2-byte block)\nTable6.66 Extended Control Data Block (ECDB)\nOffset Field Value Description\nExtended Control Message\n0 Type Unsigned Int Shall Type\n1 Data Byte be set to zero when not used.\nExtended_ControlMessage Table6.67,\n\"Extended Control Message Types\" May Message\nTShoeu rce Sink Cable P lug types are speciSfhieadl li nN othte Type field of the ECDB aMneds asarge elisted in\nMess. aTghee Sent byS choallulmn indicates entitSieOsP w Phaicckhe t send the given\n( , or ); entities not listed issue the corresponding . The \"Valid Start of\nPacket\" column indicates the Tables 6w.6hi7c h E xtend oendly C boen itsrsoule Md eins sage Typess.\nValid Start\nType Data Message Type Sent by Description\nof Packet\nReserved\nReserved Shall Not\nAll values not explicitly defined are\n0 EPR_Get_Source_Cap Sink DRP Section 6.5.14.1 SOP\nand be used.\nEPR_Get_Sink_Cap Source DRP Section 6.5.14.2 SOP\n1 Not used or See only\nEPR_KeepAlive Sink Section 6.5.14.3 SOP\n2 Not used or See only\nEPR_KeepAlive_Ack Source Section 6.5.14.4 SOP\n3 Not used See only\n4 Not Used Reserved See only\nReserved Shall Not\nAll values not explicitly defined are\n5...255\nand be used.\n6.5.14.1 EPR_Get_Source_Cap Message\nEPR_Get_Source_Cap Source Capabilities MessageShall Port\nSink EPR Mode Source Capabilities Dual-Role Power Port\nTPahret ner Port (EPR Get EPR SourceShall) only be sEePnRt b_Syo au rce_C caappaabblieli toife ospMeersastaingge\nas a Sect iaonnd 6 t.5h.a1t5 s.2u,p \"pEoPrRt_sS ource_Cap taob rileitqieuse Mst etshsea ge\" Port and EPR M ocdaepabiliStyo uorfc ietsS hall\n. A Not_ tShuapt pcoanrt oepdeMraetses aags ean respond by returning an\n(see ). A that does not support as a\nretuErPnR t hCea pableSink Port . SPR ModeShall EPR_Source_CapabilitiesMessage\nShall Not EPR_RequestMessage\nAn that is operating in treat the as\ni6n.fo5r.m1a4ti.o2nal only a n Ed PR_Get r_eSspinonkd_ wCitahp an M essage .\nEPR_Get_Sink_Cap Sink Capabilities MessageShall Port\nSource EPR Mode Sink Capabilities Dual-Role Power Port\nPTahret ner Port E P(ERP CRa Gpaebt le )S inkShal l only be sent by a EP cRa_pSaibnlke_ Coaf oppaebrialittiinegs as a\nMessag aend thSaet cstuiopnp o6r.5ts.1 5.3, \"EPR_ Stoin rke_qCuapesatb tihlieti es Message\" P oarntd capaEbPilRit yM oofd iets Sink\nShall . A thNaot ti_sS upportedMe ospsaegraeting as a respond by returning an\n(see ). A that does not support as a\nreturn the .\nPage 244 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.14.3 EPR_KeepAlive Message\nEPR_KeepAliveMessageMay Sink EPR Mode\nSource EPR Mode EPR_KeepAlive_AckMessage Sink\nSTehcet ion 6.4.9, \"EPR_R equest M essag bee\" sent by a operating in to meet the requirement for periodic\ntraffic. The operating on responds by returning an to the . See\n6.5.14.4 EPR_KeepA folri avded_itAiocnkal iMnfoersmsaatiogne.\nEPR_KeepAlive_AckMessageShall Source EPR Mode EPR_KeepAlive\nMessage Section 6.4.9, \"EPR_Request Message\"\nThe be sent by a operating in in response to an\n6.5.15. See EPR Capabilities Me fsosr aadgdeitional information.\nEPR CapabilitiesMessage Extended CapabilitiesMessage Power Data Object PDO\nSection 6.4.1, \"Capabilities Message\" EPR_Source_CapabilitiesMessage\nTEPheR _Sink_Capabiliti esMessa gise anS ource mCaadpea obfi lities s ( ) defined in\nEPR_Source_CapabilitiesMessage S. Iint kis used to form s and\nEPR_Sink_Capabilities Messages. s expose their EPR power by sendingP aonw er Data Object\nTable6.7, \"Power Data Ob ject\" . s expose their EPR power requirements by returning an\nwhen requested. Both are composed of a number of 32-bit s (see\nEPR CapabilitiesMessageSh)a.ll Fixed SupplyPDO Port\nPDO\nAn have a 5V containing the sending 's information in the first\n6ob.j5ec.t1 p5os.1ition follow EedP bRy uCpa top 1a0b aidldiittiioensal Mess.sage Construction\nEPR CapabilitiesMessage EPR_Source_Capabilities EPR_Sink_Capabilities Extended Message\nSPR (A)PDO SPR CapabilitiesMessage\nTShoeu rce_Capabilitie s Sinsk (_Capabilities and EPR (A)PDO ) are s with\nFthigeu frires 6t .s5e4v, e\"nM paopspiitniogn SsP fRil lCeadp wabitilhit tihese tsoa EmPeR Capabilitiess\" returned by the s\n( and ) followed by the s starting in the eighth position. See\nFigure 6.54 Mapping SPR Capa.bilities to EPR Capabilities\nHeader SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO\n2 bytes 1 2 3 4 5 6 7\nCapabilities 001b 010b 011b 100b 101b 110b 111b\nPDOs 20V1 PDOs > 20V2\nEPR Capabilities 001b 010b 011b 100b 101b 110b 111b 1000b 1001b 1010b 1011b\nExtended Header SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO EPR PDO EPR PDO EPR PDO EPR PDO\n4 bytes 1 2 3 4 5 6 7 8 9 10 11\n1) See Section 10 \u201cPower Rules\u201d for rules, on which SPR (A)PDOs are allowed to be used for a given PDP.\n2) See Section 10 \u201cPower Rules\u201d for rules, on which EPR (A)PDOs are allowed be used for a given PDP.\nPower Data Object EPR CapabilitiesMessage Shall\nSPR (As) PinD tOhe SPR Capsa bilitie bseM seesnsta gine the foNlluomwbinegr oorfd Dear:ta Objects\nMessage Header EPR CapabilitiesMessage Number of Data Objects\n1) TMheess age Headers as repSoPrRt eCda ipna tbhileit iesMessage . The field in the\nof the is the same as the field in the\nSPR Capab iolift itehseM essage . PDO Data Object Shall\n2) If theE PR (A)PDO cSoencttiaoinn s6 f.4e.w1,e \"rC tahpaanb 7il ities sM, tehssea ugneu\"sSehda ll Dast a Obje bcet zero filled.\nShall\n3) The s as defined in start at position 8\nandF ixed S buep psleynPt DinO the following order: Shall\na) s that offer 28V, 36V or 48V, if present, be sent in voltage order; lowest to\nhigheEsPtR. AVSAPDOShall\nb) One be sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 245\n6.5.15.2 EPR_Source_Capabilities Message\nEPR_Source_Capabilities EPR CapabilitiesMessage Power Data Object EPR\nSource EPR Source Capabilities Sink EPR Source\nSThhae ll EPR_Source_Ca ipsa abni litiesMessage containing a list of s that the\nis capable of supplying. It is sent by an in order to convey its to a . An\n\uf06c send the EPR Mode :\n\uf06c When ent E e P r R in M g ode Capabilities\n\uf06c While in E s P w R_ h G e e n t _ it S s o urce_CapM c e h ss a a n g g e e\n\uf06c In respo S n o s ft e R t e o s a e n t EPR Mode\nEPR SAifntker a EwPhRil eM iond eShall EPR_Source_CapabilitiesMessage Shall\nEPR_RequestMessage Source Capabilities ShallRe-\nnAeng otiate operating in So urce evaluate everyA dvertise Source Capabilit ies it receives and\nrespond with a . If its power consumption exceeds the , it\nso as not tSoP Rex Mceoedde the EPR Sin'sk most recentlyE PR_Sourcde _CapabilitiesMess.age\nEPR_Get_Source_CapMessage Shall Not EPR_RequestMessage\nWhile operating in , an receiving an in response to an\n(A)PDO EPR _Sources_ Capabiliti reessMpoenssda gweitShh aanll . EPR_RequestMessage\nEPR Mode\nThe s in an only be requested using the and\nonly wShoeunr cine . EPR Mode SPR(A)PDO Shall\nEPR_Source_CapabilitiesMessage EPR (A)PDO SPR (A)PDO\nWheFnig ure 6.5 w5,a \"nEtPsR t_oS eoxuirtc e_Capabili, tiife ns omt easlsraegaed yw iinth p noow EePr Rc oPnDtOrasc\"t with an , it send an\nwith no s (i.e. seven s including any zero padded ones).\nSee Figure 6.55 EPR_Source_Capabilities messag.e with no EPR PDOs\nHeader SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO\n2 bytes 1 2 3 4 5 6 7\nCapabilities 001b 010b 011b 100b 101b 110b 111b\nPDOs 20V1\nEPR Capabilities 001b 010b 011b 100b 101b 110b 111b\nExtended Header SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO SPR PDO\n4 bytes 1 2 3 4 5 6 7\n1) See Section 10 \u201cPower Rules\u201d for rules, on which SPR (A)PDOs are allowed to be used for a given PDP.\n6.5.15.3 EPR_Sink_Capabilities Message\nEPR_Sink_Capabilities EPR CapabilitiesMessage Power Data Object EPR\nSink EPR Sink EPR Source\nTEPhRe SinkShall isE aPnR _Sink_Capabiliti esMessa tgheat contains a list ofE PR_Get_Sink_CapsM tehsasta tghee\nrequires to operate. It is sent by an in order to convey its power requirements to an . The\nonly send the in response to an .\nPage 246 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.5.16 Vendor_Defined_Extended Message\nVendor_Defined_ExtendedMessage VDEM\nExtended Message\nThe ( ) is provided to allow vendors to exchange information outside of\nthVate dnedfoinr_eDde bfyin tehdis_ EsxpteecnifdiceadtiMones usasignegS thhael l formaVte.ndor Data Object VDM Header May\nA consist of at least one , the , and\ncontain up to a maximum of 256 Vadendidtoiorn_Dale dfiantead b_yEtxetse.ndedMessage Vendor_Defined_ExtendedMessage\nShall Valid Standard or Vendor ID SVID VDM Header\nTo ensure vendor uniqueness of s, all s\nVDE cMontain a USB Messa g(e M)a yallocated by USB-IF in the .\nAVe ndor_ Ddoeefisn neodt_ Edxetfeinned aendyM setrsusacgtuereS ahnadll Not s be created in anNye mgoatnianteiorn that theM vaeyndor chooses.\nLocal Policy Message\nVendor_Defined_Extended Messages be used for direcSt opuorwceer . They however be used\nStoo ualrtceer_ Capabilitie,s aMffeescstaingge what is offered or consumed via the normal PD s. For example, a\ncould be used to enable the to offer additional power via a\nVendor_Defined_Ext endedM.essage Shall Not\ns be used where equivalent functionality is contained in the PD\nSpecMifiecsastaiogen e.g., autShheanltlication or firmwFarigeu urpe d6a.5te6., \"Vendor_Defined_Extended Message\"\nThe format be asF sihgouwren 6in.5 6 Vendor_Defined_Extended Message .\nExtended Header VDEDB\nVDM Header\nData Size= 4...260 (0...256-byte Data Block)\nVDM HeaderShall Vendor Defined Extended Message VDM Header\nCommand Message\nThe be the first 4-bytes in a . The provides\nVDM H sepaadceer to allowV DveEnMdSohrsa tllo customizeU nstructusr feodr VthDeMir H oewand eprurposes. Section 6.4.4.1,\n\"Unstructured VDM\"\nThe in the follow the format as defined in\nVDEM Shall . Explicit Contract\nVDEsM AMS oSnhlayl lb Ne ostent and received after anA MS has been established.\nA VDE M interrupt any other PD . VDM Header\nSVID Port Partner Cable Plug Shall\nThe VD EdMoes not define the contents of bits BS1e4ct\u2026io0n i 6n. 4th.4e.3 .4, \"Enter Mo. dTeh eCiorm dmefainnidti\"on and use are the sole\nresponsibility of the vendor indicated by the . The s and s exit any states entered\nusing a according to the rules deVfiDnEedM inM essage .\nThe\uf06c folloVwDiEnMg ruSlheas lal pNpolty to the use of s:\n\uf06d VDsE M Shall be initiated or responEdxepdl itcoit u Cnodnetrr aacnty other circumstances than the following:\n\uf06d s only be useEdx pwlihceitn C aonn tractVDEM Sha lils N ino tplace. Shall Ignored\n\uf06d PCaribolre tPol uegstaSbhliaslhl iNngo tan VDEM s be sent and be if received.\ns initiate s.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 247\n\uf06c VDEM Shall Modal Operation Active Mode\nUFP Enter ModeCommand VDEM Active Mode\ns VD oEnMly bSeh aulsled during SVID in the context of an i.e., only after the\nhas Ack'ed the can s be sent or received. The and the\n\uf06c V as D s E o M ciat M ed a y s us S e O t P h * e P s a a c m ke e t .\n\uf06c s DFP be U us F e P d with V s D . EM VID Shall\nNot_SupportedMessage\nWhen a or does not support s or does not recognize the it return a\nNote: VDEM C.hunking Unstructured\nVDM\nUsage of s with is not recommended since this is less efficient than using\ns.\nPage 248 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.6", "title": "Timers", "page": 249, "level": 2, "parent_id": "6", "full_path": "6.6 Timers", "tags": [], "text": "6.6 Timers\nAll the following timers are defined in terms of bits on the bus regardless of where they are implemented in terms\nof the logical architecture. This is to ensure a fixed reference for the starting and stopping of timers. It is left to the\ni6m.p6le.m1enter to e n CsuRreC thRaet tchies itivmeinTg iism obeserrved in a real system.\nCRCReceiveTimerShall Protocol Layer Message\nMessage GoodCRCMessage GoodCRC\nTMhees sage be used by the seMnedsesar'gse tRecei vteo ensure that a C hRaCsR neocet ibveeeTni mloesrt.\nFailure to receive an acknowledgment of a (a ) whether caused by a bad\non the receiving end or by a garbled within is detected when the\nexpires. Protocol Layer CRCReceiveTimer Shall nRetryCount\nTNhoete s:endeCr'asb le Plug responMsees swahgeen a Extended M eexspsairgees be to rCethruyn ked times.\nSection 6.7.2, \"Retry Counter\"\ns do not retry s and large s that are not are not retried (see\n). MessageShall tRetry CRCReceiveTimer\nSending of the Preamble corresponding to the retried start within of the\nexpirCiRnCg.ReceiveTimerShall MessageEOP PHY\nLayer CRCReceiveTimerShall EOP GoodCRCMessage\nThe PHY b Lea sytearrted when the last bit of the has been transmitted by the\n. The be stopped when the last bit of the corresponding to the\nhas bPereonto rceocle Livaeyder by the Messa. geShall GoodCRCMessage tTransmit\nCRCReceiveTimer tTransmit Shall\nThe Messa rgeecEeiOvPing a respondP HwYit Lha ay er within in ordGeoro tdoC RC\neMnessusraeg ethat the sender's PHY L daoyeers not expire. The time be measured from when the\nlast bit of the has been received by the until the first bit of the Preamble of the\n6.6.2 has been tSraennsmditeterdR bye tshpe onseTi.mer\nSenderResponseTimerShall Policy Engine Message\nGet_Source_CapMessage tSenderResponse\nThe be used by the senSdeenrd'se rResponseTim toe ernsure that a requesting a\nresponse (e.g., ) is responded to within a bounded time of . Failure to\nreceEivxete tnhdee edx Mpeecstseadg eresponse is deCtehcutnekd whenS tehned erResponseTimer expires.\nChunking Section 8.3.3.1.1, \"SenderResponseTimer State Diagram\"\nSFeonr derResponseTimesr received as s, the will also be started and stopped by the\nRx State Machine. See for more details of the\nPolicy Engine operation. SenderResponseTimer Shall Message\nSection 8.3, \"Policy Engine\"\nThe 's response when the expires be dependent on the sent\n(see SenderResponseTimerSha)l.l GoodCRCMessageEOP\nMessage PHY Layer\nThe be started from the time the last bit of the , corresponding\nto thSee nderRes rpeoqnuseesTtiinmge ar rSehsaplolnse, has been received by the EOP . GoodCRCMessage\nMessage PHY Layer\nThe be stopped when the last bit of the of the , corresponding\nto the expected reMspesosnasgee , has been tranSshmaliltted by the tRec.eiverResponse\nSenderResponseTimer\nThe receiver of a requiring a response respond within in order to ensure that\nthe steRnedceeri'vse rResponse Shall does not expire. GoodCRCMessageEOP\nMessage PHY Layer\nThe Message time be measured from theP tHimY eL athyee rlast bit of the ,\ncorresponding to the expected request , has been transmitted by the until the first bit of the\n6re.s6po.n3se CPraeapmabble ihlaist bye eTn itmranesmristted by the .\nSource Sink Attachment\nCapabilities Attachment\ns and s use Capability Timers to determine of a PD Capable device. By periodically sending\nor requesting , it is possible to determine PD device when a response is received.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 249\n6.6.3.1 SourceCapabilityTimer\nFirst Explicit Contract SourceShall SourceCapabilityTimer\nSource_CapabilitiesMessage tTypeCSendSourceCap\nPrior to the a use the to periodically send out a\n\uf06c Port A ttached every while:\n\uf06c The Sour cise . Sink Port\nThe isS nooutr cine Caanp aacbtiivliet ycoTnimneecrtion with a PDSo urceSha.ll Source_CapabilitiesMessage\nShall SourceCapabilityTimer SourceCapabilityTimerShall\nWhenever there is a EOP timeGoouotd tChReC Messa ge send a PHY L ayer . It\nthen re-initialize and restart the Source . The RequestMessage be stopped\nwhen the last bit of the corresponding to the has been received by the since a PD\nNcoontnee:ction hasS obuerecne established. At this poiSnot,u trhcee _Capab wiliatiitess foMre ass age nCapsC oour nat rMesepsosangsee timeout.\nGoodCRCMessage Section 6.7.4, \"Capabilities Counter\"\nThe can also stop sending after s have been\nSectionse 8n.3t .w3.i2t,h \"oPuotl iac y Engine S ource Po rrte Sstpaotne sDei (asgerea m\" Source)_.Capabilities\nMessage\nSee for more details of when\n6.6.3.2s are transm itSteind.kWaitCapTimer\nSinkShall SinkWaitCapTimer\nThe Defa suultp Cpoonrtt rtahcet Implicit Contra.ct Sink Source_Capabilities\nMessage VBUS tTypeCSinkWaitCap SinkMay Hard ResetSignaling\nWhile in a or aSno urce_Capabilitie swMheenss aa ge obserSvoeus racne absenSceec toiof n 6.7.4, \"Capabilities\nCounter\"s, after is present, for aU dSuBr Tatyipoen- Cof the issue in\norder to restart the sending of s by the (see\nS)i nokr continue tEoP oRp Meroadtee at current. EPR_Source_CapabilitiesMessage GoodCRC\nMessage EPR_ModeMessage Enter Succeeded\ntWThypeneC aS inkW, eanitteCrainpg SinkSh,a ollbservesH aanr da bRseesnecteS oigf naling EPR Mode s, aSfetecrti othne 6 .4.10,\n\"EPR_Mo adcek Mnoeswsalegdeg\"ing the with the Action field set to 3 ( ), for a duration of\nthe issue in order to exit (see\nSink E).PR Mode Source_CapabilitiesMessage GoodCRCMessage\nEPR_ModeMessage Exit tTypeCSinkWaitCap\nWheSnin ak Sha,l lexitingH ard Rese,t oSbisgenravleinsg an absence of S ource_Csa, paaftbeirl itthiee sMessage\nSaockunrcoewledgSinegct tihone 6.7.4, \"Capa bilities C owuinthte trh\"e Action field set to 5 ( ), for a duration of\nthe issue in order to restart the sending of s by the\nSec (tisoene 8.3.3.3, \"Policy Engine Sink Port State) .Diagram\" SinkWaitCapTimer\nS6e.e6 .3.3 tFirstSourceCap for more details of when the is run.\nPort Partner Attached Hard Reset Power Role Swap Fast Role Swap Source\nShall Source_CapabilitiesMessage tFirstSourceCap VBUS vSafe5V\nAfter s are or after a or after a or after a a\nSsoefntd R ietsse ftirstS ourceShall Sourc ew Citahpianb ilitiesMessage of tFi rrsetaScohuinrgc eCap .\nGoodCRCMessageEOP AcceptMessage\nAfter , a send its first within after last bit of the\nSi ncokrrespondinSgo tuor ce Capa bilitiesM.essage Sink SinkWaitCapTimer\nThSiosu erncseures that tEhPeR Mod reecSehiavells a EPR_Sou rce_Capa bbeifloitriee sthMe essag'se tFirstSource Ceaxppires.\nGoodCRCMessage EPR_ModeMessage Enter Succeeded\nA entering send its first within of the\nSource EP aRc kMnoodwelSehdagilnlg the Sou rce_Capa wbiitlhit itehse MAcetsisoang efield set ttoF i3r s(tSourceCap ).\nGoodCRCMessage EPR_ModeMessage Exit\nA exiting send its first within of the\nacknowledging the with the Action field set to 5 ( ).\nPage 250 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.6.4 Wait Timers and Times\n6.6.4.1 SinkRequestTimer\nSinkRequestTimer SinkRequestMessage WaitMessage\nSource SinkRequestMessage tSinkRequest\nSTehcet ion 6.3.12, \"Wait Mes issa ugsee\"d to ensure that the time before the next , after a\nhas been received from the in response to a , is a minimum of min (see\nSinkRequestTimerShall). EOP WaitMessage Shall\nMessage Hard Reset\nThe be started when the of a has been received and be stopped\nif anySi ontkhSehr all is receitvSeind koRr edquureinsgt a . EOP WaitMessage Sink\nRequestMessage RequestMessage SinkRequestTimer Sink\nTMhaey Req wuaeistt aMt elessaasgt e Shall , after receiving the of a SinkR equestT ismenetr in response to a\n, before sending a new . Whenever there is a timeout the\n6.6 .s4en.2d a tPRS.w It apW taheitn re-initialize and restart the .\nPR_SwapMessage WaitMessage PR_Swap\nMessage tPRSwapWait Section 6.3.12, \"Wait Message\" PortShall\nTtPhReS twimaep bWeafoitre the next E OP W, aafitteMr ae ssage has been recPeRiv_Sedw ianp rMesepsosangsee to a\nPR_ Sisw aa mpiMniemssuamge of min (see ). The wait at least\nafter receiving the of a sent in response to a , before sending a\n6ne.w6 .4.3 tD. RSwapWait\nDR_SwapMessage WaitMessage DR_Swap\nMessage tDRSwapWait Section 6.3.12, \"Wait Message\" PortShall\nTtDhRe Stwimaep bWeafoirte the next E OP W, aaftietrM ae ssage has been receDiRve_Sdw ina preMspeossnasgee to a\nDR is_S aw maipnMimeussma goef min (see ). The wait at least\nafter receiving the of a sent in response to a , before sending\n6a n.6ew.4 .4 tVC. ONNSwapWait\nVCONN_SwapMessage WaitMessage\nVCONN_SwapMessage tVCONNSwapWait Section 6.3.12, \"Wait Message\" PortShall\nThe time befotVre C O t N h N eS nwexatp Wait , aftEeOr Pa W aitMess haagse been received in respVon CO se N N to_S aw ap\nMessage is a minimVu CO m N o N f_ SwapMessage min (see ). The\nwait at least after receiving the of a sent in response to a\n6.6.4.5, before send itnVg Ca OneNwN SwapDel ayDFP.\nDFP VCONN Source VCONN Swap UFP\nVCONN_SwapMessage DFPShall tVCONNSwapDelayDFP EOP\nThe timGeo oddeClaRyC foMre ssag aefter losing PS_RDY Mroelses daguee to an incoming request Vfr C o O m NN Swa apnAdM bSefore\nsending the next . The wait at least after sending the\n6of. t6he.4 .6 tV CinO rNesNpSonwsea tpo Delay UFP received at the end of the previous .\nUFP VCONN Source VCONN Swap DFP\nVCONN_SwapMessage UFPShall tVCONNSwapDelayUFP EOP\nThe timGeo oddeClaRyC foMre ssag aefter losing PS_RDY Mroelses daguee to an incoming request Vfr C o O m NN Swa apnAdM bSefore\nsending the next . The wait at least after sending the\n6of. t6he.4 .7 tE nint reerspUonSsBe Wto ait received at the end of the previous .\nEnter_USBMessage WaitMessage Enter_USB\nMessage tEnterUSBWait Section 6.3.12, \"Wait Message\" DFPShall\nTtEhnet teirmUeS BbeWfoariet the next E OP W, aaftietrM ae ssage has been receiEvnedte irn_ UreSsBpMonessesa tgoe a\nis a miEnnimteurm_U oSfB Message min (see ). The wait at least\nafter receiving the of a sent in response to an , before\n6se.n6di.n5g a new Powe r Sup.ply Timers\nSection 7.3, \"Transitions\"\nSee for diagrams showing the usage of the timers in this section.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 251\n6.6.5.1 PSTransitionTimer\nPSTransitionTimer Policy Engine PS_RDYMessage\nSource Capabilities tPSTransition PS_RDYMessage\nThe is used by the Hard Reset to timeout onU aS B Defaul t Operati.o Int is staPrtSeTdr wanhseint iao nreTqiumeesrt\nfor new has bSeoeunr caeccepted and will timeout after if a Se chtaiosn n 7o.t1 ,\nb\"Seoeunr rceec Reeivqeudir. eTmhiesn ctos\"ndition leads to a and a return to . The\nrelates to the time taken for the to transition from one voltage, or current level, to another (see\nPSTransitionTime).rShall GoodCRCMessageEOP\nAcceptMessage PHY Layer PSTransitionTimerShall\nThe GoodCRCMessa geEO bPe started when the last PbSit_ RofD tYheM essage , correspondinPgH Yto L aany er\n, has been transmitted by the . The be stopped when the last\n6bi.t6 of. 5th.e2 PSSo urc, ceoOrrfefsTpoinmdinegr to the , has been transmitted by the .\n6.6.5.2.1 Use during Power Role Swap\nPSSourceOffTimer Policy Engine Dual-Role Power Device Sink\nPS_RDYMessage Power Role SwapAMS USB Type-CError Recovery\nThe is used by the in that is currently acting as a to\ntimePoRu_St wona pa Message during a Dual-R ole P. oTwheisr cDoenvdicietion leads to Sou rce Sink .\nAcceptMessage GoodCRCMessageEOP\nAIfc ac eptMessa ge request has bSeiennk sePnHt bYy L tahyee r PSSourceOff cTuimrreenrtSlyh aacllting as a the can\nrespond with an . When the last bit of the , corresponding to this transmitted\nPR_ SwapMe,s issa rgeeceived by the 's D, utahle-nR othlee P ower Device be startSeidn.k Source\nAcceptMessage GoodCRCMessageEOP\nAIfc ac eptMessa ge request has beenS sineknt bPyH tYh eL ayer PSSource cOufrfrTeinmtleyr aSchtianlgl as a the can\nrespond with an . When the last bit of the , corresponding to this received\nPS SourceOf, fiTs itmraenrsSmhiattleld by the 's , then the GoodCRCMessageE OP be started.\nPS_RDYMessage PHY Layer\nThe be stopped when the last bit of the , corresponding to the\nreceiPvSeSdo urceOff Timer , is transmitted by the . Dual-Role Power Device\nSection 7.3.2.1, \"Sink Requested Power Role Swap\" Section 7.3.2.2, \"Source Requested Power Role\nTSwhea p\" Shall relates to theP tSim_ReD tYakMeens sfoarg ethe remote to stoDp usaulp-Rpolylein Pgo pwoewr er\n(Dseevei caelso tPSSourceOff and\n). The timer time out if a has not been received from the remote\n6.6.5 .w2i.t2hin Us ein ddicuartiinng gth Fisa hsats Rococulrer eSdw. ap\nPSSourceOffTimer Policy Engine Dual-Role Power Device Initial Sink\nvSafe5V PS_RDYMessage Fast Role SwapAMS USB\nTTyhpee -CError Recovery is used by the in that is the (currently\nproviding ) to timeout on a during a . This condition leads to\nFR_SwapMe.ssage Initial Sink Initial SourceShall\nAcceptMessage GoodCRCMessageEOP AcceptMessage\nWhen tIhneit ial Sink PHY Laye rrequest hasP bSeSeonu rsceenOt fbfyT itmhee rShall , the respond with an\n. When the last bit of the , corresponding to this is received\nby thPeS SourceOffT'si merShall, then the be started.\nThe GoodCR CMe sbsea gsetoEpOpPed when PS_RDYMessage PHY\nLayer\nthe last bit of the , corresponding to the received , is transmitted by the\nP.SSourceOffTimer Initial Source VBUS\nvSafe5V Section 7.2.10, \"Fast Role Swap\" Section 7.3.4, \"Transitions Caused by Fast Role\nTSwhea p\" Shall relates to theP tSim_ReD tYakMeens sfoarg ethe to stop supplyinIgn iptioawl Seor uarncde for to\ntrPevSeSrotu troc eOff (see also and\n). The timer time out if a has not been received from the within\n6.6.5.3 indica t iPngS tShios uharsc oeccOurnreTdi.mer\n6.6.5.3.1 Use during Power Role Swap\nPSSourceOnTimer Policy Engine Dual-Role Power Device\nPS_RDYMessage Power Role Swap\nThe USB Type-CErr oisr uRseecdo vbeyr tyhe in that has just stopped sourcing power\nand is waiting to start sinking power to timeout on a during a . This condition\nleads to .\nPage 252 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPSSourceOnTimerShall\nThe\uf06c Goo bdeC RstCarMteedss wagheenE:OP PS_RDYMessage\nPHY Layer\nThe last bit of the , corresponding to the transmitted , is re-\n\uf06c ceivePdS Sboyu thrcee OnTimerS.hall\n\uf06c The GoodC RCM ebses astgoepEpOedP when: PS_RDYMessage\nPHY Layer\nThe last bit of the , corresponding to the received , is transmit-\nPSStoeudr bceyO thneT imer . Dual-Role Power Device\nSection 7.3.2.1, \"Sink Requested Power Role Swap\" Section 7.3.2.2, \"Source Requested Power Role Swap\"\nThe PS _rReDlaYteMs etoss tahgee time taken for the remote tPSSo tuor scteaOrtn sourcing power\n(see also and )\n6an.d6 .w5il.l3 ti.m2e out if a Use durin ign dFicaastitn Rg tohlise h Saws naopt been received within .\nPSSourceOnTimer Policy Engine Dual-Role Power Device\nPS_RDYMessage Fast Role Swap\nThUe SB Type-CError Rec iosv uesreyd by the in that has just stopped sourcing power\nand is waiting to start sinking power to timeout on a during a . This condition leads\nto PSSource OnTimerShall.\nThe\uf06c Goo bdeC RstCarMteedss wagheenE:OP PS_RDYMessage\nPHY Layer\nThe last bit of the , corresponding to the transmitted , is re-\nPSScoeuirvceedO bnyT tihmee rShall .\nThe\uf06c Goo bdeC RstCopMpeesdsa wgeheEnO:P PS_RDYMessage\nPHY Layer\nThe last bit of the , corresponding to the received , is transmit-\nPSStoeudr bceyO thneT imer . Dual-Role Power Device\nSection 7.2.10, \"Fast Role Swap\" Section 7.3.4, \"Transitions Caused by Fast Role Swap\"\nThe PS_RDYMessage relates to the time taken for the remote tPSSourceOn to start sourcing power\n(see also and ) and will time\n6ou.t6 if. a6 NoR iendsipcaotinng stheisT hiams neotr been received within .\nNoResponseTimer Policy Engine Source Port Partner\nHard Reset NoResponseTimer Policy EngineShall nHardResetCount\nThe Hard Reset is used by the iPno ar t Partne tro determine that its is not responding\nafter a . When the times out, the issue up to\nadditional s before determining that the is non-responsive to USB Power Delivery\nmessaSgoiunrgc.e GoodCRCMessage Source_CapabilitiesMessage tNoResponse\nIf the fails to receive a in response to a within\nof: \uf06c Hard ResetSignaling PHY Layer Hard ResetSignaling\nSink\nThe last bit of a being sent by the if the was initi-\n\uf06c ated by the .Hard ResetSignaling PHY Layer Hard ResetSignaling\nSource\nThe last bit of a being received by the if the was\ninSiotiuartceed Sbhya tlhle . Hard Reset nHardResetCount Section 6.8.3, \"Hard Reset\"\nThen the issue additiPoonliacly Engine s uSpou troc eMay times (see ).\nSource_CapabilitiesMessage\nFSoour rac neo_Cna-rpeasbpiolnitsiievseM deesvsiacgee, the in a either decide to continue sending\ns or to go to non-USB Power Delivery operation and cease sending\n6.6.7 BI ST Tism. ers\n6.6.7.1 tBISTCarrierMode\ntBISTCarrierMode UUT BIST Carrier Mode\nTester\nis used to define the maximum time that a has to enter when requested\nby a .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 253\nUUTShall BIST Carrier Mode tBISTCarrierMode GoodCRCMessageEOP\nBISTMessage PHY Layer\nABI ST Ca rrier Menotdeer within of the last bit Sohf athlle U UT,\ncBoISrrTe Mspoodneding to the received the used to initiate the test, being transmitted by the . In\nwhen transmitting a continuous carrier signal transmission start as soon as the enters\n6.6.7.2. BISTContModeTimer\nBISTContModeTimer UUT Continuous BIST Mode BIST Carrier Mode\nUUT Continuous BIST ModeShall\nPTEh_eS RC_Transition_to_def iasu ulstePdE b_yS Na K_Tr taon esnitsiuorne_ ttoh_adt eaf ault PE_CBL_Ready (i.e., tBISTContMo)d ies exited\nin a timely fashion. A that has been put into a return to normal operation (either\n, , or ) within of\ns6ta.6rt.in7g. 3to transmit a tcBonItSinTuoSuhs acarreriderT siegnsatlM. ode\ntBISTSharedTestMode UUT BIST Shared Capacity Test Mode\nTester\nis used to define the maximum time that a has to enter\nwhUeUnT rSehqaulelsted byB aIS T Shar. ed Capacity Test Mode Source_CapabilitiesMessage\nShared Capacity Group tBISTSharedTestMode GoodCRCMessageEOP\nA enter BISTMessage and send a new frPoHmY a Llla Pyeorrts\nwithin the within of the last bit of the ,\n6co.r6re.s8ponding to tPheo rweceeivre dR thoel e Sw ap T uismede tor isnitiate the test, being transmitted by the .\n6.6.8.1 SwapSourceStartTimer\nSwapSourceStartTimerShall New Source Power Role Swap Fast Role Swap\nSource_CapabilitiesMessage New Sink Source_Capabilities\nMTheess age New SourceSha ll Not be used bSyo tuhrec e_Capabilit, iaefsteMre as sage toSrw apSourceStar, tto ensure\nthat it does noEtO sePnd GoodCRCMessage before the PS_RDY iMs reesasadgye to receive theN ew Source\n. The SsiennkdS thhael l Source_ eCaarpliaerb itlhiatine sMessagetSwapSin akfRteera tdhye\nlast bit of the of EOP senGto ino drCesRpCoMnsees staog tehe sent PbSy_ tRhDe YMessage indicating\ntNheawt iStso uprocweer supply is ready. The be ready to receive a\nafter having sent the last bit of the of sent in response to the sent by the\n6.6.9 indic a tSinogf tth aRt ietss peowt eTr siumppelyr iss ready.\n6.6.9.1 tSoftReset\nGoodCRCMessage Message tReceive nRetryCount\nPort Pair Connected Shall Source Sink\nASo ffati_lRurees etot Mseees saa ge in respoSnhsae ltlo any within tSoftRes e(tafter CRCReceive rTeitmrieesr), when\na is , is indicative of a communications failure. This cause the or to send a\n, transmission of which be completed within of the\n6ex.p6ir.i9ng.2. tProtErrSoftReset\nProtocol Error Source Sink Soft_ResetMessage\nSoft_ResetMessageShall tProtErrSoftReset EOP GoodCRC\nIf thMe essage occurs tPhraot tcoacuosl eEsr trhoer or to send a , the transmission of the\nbe completed within of the of the sent in response to\n6th.e6 .10 that c a Dusaedt tah eR eset Tim.ers\n6.6.10.1 VCONNDischargeTimer\nVCONNDischargeTimer Policy Engine DFP UFP VCONN\nUFP VCONN\nT[UhSeB Type-C 2.4] iPs Su_sReDd YbyM tehsesa ge S ienc tthioen 7.1.1 t5o, e\"nVs C u O r N e N tPhoew er C aycctliev\"ely discharges in\na timely manner to ensure the cable will restore Ra. Once the has discharged below vRaReconnect (see\nDFP ) it sends a PS_RDY Message (see also UFP tVCONNSourceDischarg)e.\nGoodCRC AcceptMessage Data_ResetMessage VCONNDischargeTimer\nIf the does not rePcoeilivcey aE ngineSh all fromE trhreo rRec wovitehriyn of the last bit of the\nacknowledging the in response to the , the\nwill time out and the enter the State.\nPage 254 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.6.10.2 tDataReset\nDFPShall Data_Reset Section 6.3.14, \"Data_Reset Message\"\ntDataReset GoodCRCMessageEOP AcceptMessage\nThe PH Y Lay ceormplete the process (as defined in ) within\nof the last bit of the , corresponding to the , being transmitted\nb6y. 6th.e1 0.3 . DataResetFailTimer\nDataResetFailTimerShall DFP Policy Engine Data Reset\ntDataResetFail GoodCRC AcceptMessage\nDThaeta _ResetMessage DFP beD uastaedR ebsye tthFea ilTim'se r tDo FePnsSuhrael lthe Erro prrRoecceosvs ecroympletes\nwithin of the last bit of the acknowledging the in response to the\n6.6.10.4 . IDf tahte aRe'ss etFailUFPTime erxpires, the enter the State.\nDataResetFailUFPTimerShall UFP Policy Engine Data Reset\ntDataResetFailUFP GoodCRC AcceptMessage\nDThaeta _ResetMessage UF P Da btea Ruesesedt bFya itlhUeF PTim's er toU eFnPsSuhrea tllhe Err porroRceecsos vceormypletes\nwithin of the last bit of the acknowledging the in response to the\n6.6.11 H.a Ifr tdhe Re'ss et Timers expires, the enter the State.\n6.6.11.1 HardResetCompleteTimer\nHardResetCompleteTimer Protocol Layer PHY Layer\nHard ResetSignaling PHY Layer Signaling Idle\nThe PHY Layer is used by the Hard Rese tinSi gthnea lcinagse where it has asked tthHea rdResetCo tmo psleentde\nProtoc ol Layer and the is unable to senPdr othtoec ol Layer Swhiathllin a reasonaPboleli ctyim Een gdiunee to a non-Hard\nRcheasnenteSlig. Infa tlhineg does not indicate that the has been sent within\nof the requesting transmission, then the inform the that the\n6.6.1 1.2 has b e ePnS sHenat irnd oRrdeers teot eTnsiumree thre power supply is reset in a timely fashion.\nPSHardResetTimer Policy Engine Source Sink\nHard ResetSignaling VBUS\nThe is used by the in a to ensure that the has had sufficient time to\nprocess Hard Reset bSeofourrece turning off its pVoCwOeNrN supply to R . CC\nVBUS vSafe0V\nWhen a occurs the , stops driving , removes p from the pin and starts to transition the\n\uf06c volttPagSeH taor dReset either: Hard ResetSignaling Sink\n\uf06c tPSHardReset after the last bit of the Hard Reset Signaling has been received froSmou trhcee or\nSection 7.1.5, \"Resp oanftseer t toh He alarsdt Rbeits eotfs \"the has been sent by the .\nS6e.e6 .11.3 tDRSwapHardR. eset\nDR_SwapMessage Modal Operation Hard ResetShall\nDR_SwapMessage Hard ResetSignalingShall tDRSwapHardReset EOP\nIf a GoodCR C is received duringD R_SwapMessage then a be initiated by the recipient of\nthe unexpected ; be generated within of the\n6of. t6he.1 1.4 sent itnP rersopotnEsre rtoH thaer dReset .\nProtocol Error Hard Reset Hard ResetSignalingShall\ntProtErrHardReset EOP GoodCRC Message\nIPfr ao tocol Error occurs that directly leads to a , the transmission of the be\ncompleted within of the of the sent in response to the that caused the\n6.6.12 . Structured VDM Timers\n6.6.12.1 VDMResponseTimer\nVDMResponseTimerShall Initiator Policy Engine Structured VDMCommand\nDiscover IdentityCommand\nTtVhDe MSenderResponse VD MbeR uesspedo nbsye tThiem erShall's toS etnruscutruer tehda Vt Da MCommand\nrequest needing a response (e.g. request) is responded to within a bounded time of\n. The be applied to all s except the\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 255\nEnter Mode Exit ModeCommand VDMModeEntryTimer\nVDMModeExitTimer\nVDMRespon asneTdi mer s which have their own timers ( and\nrespectively). Failure to receive the expected response is detected when the\nPolicy Engine expires. VDMResponseTimer Shall Message\nSection 8.3, \"Policy Engine\"\nThe 's response when the expires be dependent on the sent (see\nVDMResponseTimerS)h. all GoodCRCMessageEOP\nVDMCommand PHY Layer VDMResponseTimerShall\nThe be sEtOarPted fromG othoed CtiRmCeM theess laagset bit of the V, DcoMrrCeosmpomnadnidng\nto the requesting a respPoHnYs eL, ahyaesr been received by the . The\nbe stopped when the last bit of the of the , corresponding to the expected\nresponse, has beeMn etsrsaangsemitted by the Sh.all tVDMReceiverResponse\nVDMResponseTimer\nThe receiver of a requiring a response respond within in order to ensure\nthat ttVhDe MseRnedceeri'sv erResponse Sha ldloes not expire. MessageEOP\nPHY Layer Message PHY\nTLahyee r time be measured from the time the last bit of the has been\ntransmitted by the until the first bit of the response Preamble has been transmitted by the\n6.6.1. 2.2 VDMModeEntryTimer\nVDMModeEntryTimerShall Initiator Policy Engine Structured\nVDMEnter ModeCommand ACK NAK ACK Alternate Mode\nThe be used bytV thDeM WaitMo'sd eEntry to ensure that the response to a\nVDMMod reeEqnutersytT (imer or with indicating that the requested has been\nentered) arrives within a bounded time of . Failure to receive the expected response is\ndetePctoeldic yw Ehnegni nthee VD MexMpoirdeesE. ntryTimer Device Policy Manager\nSection 8.3.3.23.1, \"DFP Structured VDM Mode Entry State Diagram\"\nThe 's response when the expires is to inform the (see\nVDMModeEntryTimerShall ). EOP GoodCRCMessage\nVDMCommand PHY Layer VDMModeEntryTimer\nTShhae ll be startEeOd Pfrom theG toiomdeC tRhCe Mlaessts baigte of the of the Str,u ctured\ncVoDrMreCspoomnmdainngd to the ACK NAK reBquUeSsYt, has been received by the PHY La. Tyehre\nbe stopped when the last bit of the of the , corresponding to the expected\nreMspesosnasgee ( , or ), hSahsa blleen transmitted btVyD thMeE nterMode.\nVDMModeEntryTimer\nThe receiver of a requiring a response respond within in order to ensure that the\nsendteVrD'sM EnterMode Shall does not expire. EOP GoodCRCMessage\nVDMCommand PHY Layer\nTMhees sage time be measured frPoHmY tLhaey teirme the last bit of the of the ,\ncorresponding to Request, has been transmitted by the until the first bit of the response\n6.6.12 P.3reamble h a sV bDeeMn tMranosdmeitEtexd ibtyT thiem er .\nVDMModeExitTimerShall Initiator Policy Engine ACK\nStructured VDMExit ModeCommand Alternate Mode\nThe tVDMW aitM obdee uEsxeidt by the 's to ensure that the response to a\nVDMModeExitT imer , indicating that the requested has been exited, arrives within\na bounded time of . Failure to receive the expected response is detected when the\nPolicy Engine expires. VDMModeExitTimer Device Policy Manager\nSection 8.3.3.23.2, \"DFP Structured VDM Mode Exit State Diagram\"\nThe 's response when the expires is to inform the (see\nVDMModeExitTimerShall ). GoodCRCMessageEOP\nVDMCommand PHY Layer VDMModeExitTimerShall\nThe be sGtaorotdeCdR frCoMme tshsaeg teimEeO tPhe last bit of the Str uctu,r ceodr VreDsMponding\ntCoo mthme and A CrKequesting a response, has beenP rHecYe Livaeyde rby the . The\nbe stopped when the last bit of the , corresponding to the expected\nresponMsee ssag,e has been transmitted bSyh athlle . tVDMExitMode\nVDMModeExitTimer\nThe receiver of a requiring a response respond within in order to ensure that the\nsendteVrD'sM ExitMode Shall does not expire. MessageEOP\nPHY Layer Message PHY Layer\nThe time be measured from the time the last bit of the has been received by the\nuntil the first bit of the response Preamble has been transmitted by the .\nPage 256 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.6.12.4 tVDMBusy\nInitiatorShall tVDMBusy BUSYCommand\nStructured VDM\nThe wait at least , after receiving a response, before repeating the\n6.6.13 r e VquCeOst NagNa inT.imers\n6.6.13.1 VCONNOnTimer\nVCONNOnTimer VCONN Swap\nThe VCONNOnTimer iSsh uasleld during a .\nThe\uf06c Goo dbCeR sCtaMrteesds awgheeEnO:P AcceptMessage\nPHY Layer\nThe last bit of , corresponding to the , is transmitted or received\nVCObNyN OthneT imerShal.l\nThe\uf06c Gboeo sdtoCpRpCeMd ewsshaegne:EOP PS_RDYMessage\nPHY Layer\nThe last bit of the , corresponding to the , is transmitted by the\n. PS_RDYMessage PortShall VCONN\n6Pr.i6or. 1to3 se.2nding the tVCON NSou,r tchee Off have turned On.\ntVCONNSourceOff VCONN Swap VCONN SourceShall VCONN\ntVCONNSourceOff GoodCRCMessageEOP PS_RDYMessage\nThe PH tYi mLaey aeprplies during a . The initial cease sourcing within\nof the last bit of the , corresponding to the , being\n6tra.6ns.m1it4ted by th et CableM. essage\nRevision 3.x Shall Not tCableMessage SOP\u2019 Packet\nSOP\u2019\u2019 Packet [USBPD 2.0] Cable Plug Collision\nAPovortids acnocmepliant with of the specification wait before sending an\nor even when communicating using with a . This specification defines\nCable Plug mSehcahlalnisms thatt oCbavbilaetMe ethsesa ngeeed for this time. SOP\u2019 Packet SOP\u2019\u2019 Packet\n[USBPD 2.0] [USBPD 2.0]Cable Plug Shall Not tCableMessage\ns oSnOlyP \u2019w Paaictk et SOP\u2019\u2019 Pack ebtefore sending an or when operating at\n. When operating at Revisions higher than s wait\nb6e.f6or.e1 s5ending an Discove orrI dentityT. imer\nDiscoverIdentityTimer Explicit Contract Cable Plug\nSOP\u2019 Cable Discovery Explicit Contract Discover Identity\nCTohme mand Shall is used pritoDri stoco ovre druIdrienngt iatny nD wishceonv deirsIcdoevnetriitnygC owuhnetthDeirs cao ver\nIisd ePnDt iCtaypMabeslesa ugseing . WhGeono pdeCrRfoCrMmeisnsga ge Sha dlluring an GoodCRCMe tshsaeg e\nnDis croevqeureIsdte ntity Cboeu snetnDt eisvceorvye r IdentityComma.n Ndo more than Port PortShall Not\nsS wOPit\u2019hSoOuPt a\u2019\u2019 Message response be sent. If no response is received\nafter requests have been sent by a , the\n6se.n6d .a1ny6 further Co/llisi on Avso. idance Timers\n6.6.16.1 SinkTxTimer\nSinkTxTimer Protocol Layer Source Sink\nAMS\nThe is used by the in a to allow the to complete its transmission before\ninitiaStoinurgc aenS hall. tSinkTx R SinkTxOK SinkTxNG\nAMS Message\nThe wait a minimum of after changing p from to before initiating an\nSin bkyS sheanldling a . AMS R SinkTxOK\nA only initiate an when it has determined that p is set to .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 257\n6.6.16.2 tSrcHoldsBus\nPE_SRC_Ready PE_SRC_Ready\ntSrcHoldsBus Protocol Error Soft Reset\nIf a transitiAoMnS into the Message sAtMatSeM wailyl result in an immediate transition oRut of the state\nwithin e.g. it is due to a that has not resulted in a , then the notifications of\n6th.e6 en.1d 7of an d F fiarsst t Role i nS awn ap Tim Noet rbse sent to avoid changing the p value unnecessarily.\n6.6.17.1 tFRSwap5V\ntFRSwap5V Shall\nThe\uf06c time be measured from:\n\uf06dThe later of: GoodCRCMessageEOP AcceptMessage\n\uf06d TVBhUeS last bit of the vSafe5V , corresponding to the or\n\uf06c being within . PS_RDYMessage PHY Layer\nUFnatislt tRhoel efi rSswt abpit of thInei rtieaslp Soonusrec eShall P PSr_eRaDmYbMlee hssaasg beeen trantsFmRiStwteadp b5yV the .\nDur\uf06cing a Initial Sourc,e the Acc eptM esstsaargt ethe within after both:\n\uf06c TVBhUeS hvaSs asfeen5tV the , and\n6.6.17.2 is at or b teFloRwS wapC.omplete\nInitial SinkShall PS_RDYMessage tFRSwapComplete\nPS_RDYMessage Initial Source tFRSwapComplete Shall\nDuring a fast-role swap, thGeo odCRCMes sage ErOesPpond with a the P S_RDYM ewsistahgine after\nit haPsH rYe cLeaiyveerd the from the PS_RDYMe.s sTahgee time be measuPrHeYd Lfraoymer\nthe time the last bit of the , corresponding to the , has been transmitted by\n6th.e6 .17.3 until t h teF fiRrsSt bwit aofp thIne rietsponse Preamble has been transmitted by the .\nEOP FR_SwapMessageShall New Source tFRSwapInit\nFast Role Swap Request Section 5.8.6.3, \"Fast Role Swap Detection\"\nThat last bit of the of the be transmitted by the no later than\n6aft.e6r .t1he8 Chunkin hga sT biemen edertsected (see ).\n6.6.18.1 ChunkingNotSupportedTimer\nChunkingNotSupportedTimer Source Sink Chunking\nMessageChunk\nThe is used by a or which does not support multi-chunk but\nhas rCehcueinvkeidn ag NotSupp ortedT.imerShall\nThe\uf06c GoodCRC Messa gbeeE sOtaPrted when: MessageChunk Message\nPHY Layer Policy EngineShall Not Not_SupportedMessage\nTheC lahsutn bkiti nogf Nthoet Supporte dTimer , corresponding to a of a multi-chunk ,\nis transmitted by the . The send its before\n6.6.18th.2e ChunkSenderR eexpqiruees.stTimer\nChunkSenderRequestTimer ChunkedMessage\nThe ChunkSenderRequestTimer iSsh uasleld during a Chun tkrainngsmission. Chunk\ntChunkSenderRequest\nThe Ch unkSe bned uesreRde qbuy etshteT siemnedrer's state machine to ensure that a\nResponse is responded to within a bounded time of . Failure to receive the expected\nrespCohnsuen iksS deentdeectreRde qwuheesnt Tthime erShall expires.\nThe\uf06c GoodCR CMes sbaeg estEaOrtPed when: Chunk Message\nPHY Layer\nThe last bit of the , corresponding to the Response , is received by\nthe .\nPage 258 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nChunkSenderRequestTimerShall\nThe\uf06c EOP Go obde CsRtoCpMpeedss wagheen: Chunk Message\nPHY Layer\nThe last bit of the of the , corresponding to the Request , is trans-\n\uf06c miMtteesds abgye the C. hunk Protocol Layer\nA C houthnekr than a RequestC ihsu rnekceived fromSh tahlel RCxh.unk\ntChunkReceiverRequest ChunkSenderRequestTimer\nThe receiver of a Response requiring a Request respond with a Request within\ntChunkReceiverRequ iens otrder tSoh eanllsure that the sender's EOP doeGs onoodt CexRpCirMee. ssage\nChunk Message PHY Layer\nThe Message time be measured fromP HthYe Ltiamyeer the last bit of the of the ,\ncorresponding to the Response , has been transmitted by the until the first bit of the\n6re.s6po.1ns8e .3 Pr eCamhbulen hkasS beenend terarnRsmeisttpedo bny stheeT imer .\nChunkSenderResponseTimer ChunkedMessage\nThe ChunkSenderResponseTimer iSsh uasleld during a Chun tkrainngsmission. Chunk\ntChunkSenderResponse\nThe Chu nkSen bdee ruRseedsp boyn tsheeT simenedrer's state machine to ensure that a\nRequest is responded to within a bounded time of . Failure to receive the expected\nrespCohnsuen iksS deentdeectreRde swphoenns ethTei merShall expires.\nThe\uf06c GoodCRC Mess abgee sEtaOrPted when: Chunk Message\nPHY Layer\nThe last bit of the , corresponding to the Request , is received by\nChutnhkeS enderRes.ponseTimerShall\nThe\uf06c GoodCRC Messa bgee EstOoPpped when: Chunk Message\nPHY Layer\nThe last bit of the , corresponding to the Response , is transmitted\n\uf06c byM theses age . Chunk Protocol Layer\nA C houthnekr than a is receCivheudn kfrom the Shall . Chunk\ntChunkReceiverResponse ChunkSenderResponseTimer\nThe receiver of a Request requiring a Response respond with a Response within\ntChunkReceiverRespo inns oerder tSoh eanlslure that the sender's EOP doesG nooot deCxRpiCre.\nMessage Chunk Message PHY Layer\nThe Message time be measured from PthHeY t Limayee trhe last bit of the of the\n, corresponding to the Request , has been transmitted by the until the first bit of\n6th.e6 re.1sp9onse Pr oPrgearmabmle hmasa bbeelne t rPanosmwiteterd bSyu thpep ly Tim. ers\n6.6.19.1 SinkPPSPeriodicTimer\nSinkPPSPeriodicTimerShall Sink Policy Engine\nSink Source tPPSRequest SPR PPS Mode\nThe RequestMessage be usedSP bRy PthPeS APD'Os to ensure that communication between the\nand occurs within a bounded time of when in . In the absence of any other\ntSrianfkfiPcP, aS Periodic TimerSh raelqluesting an is sent periodically as a keepP HalYiv Lea myeerchanism.\nGoodCRCMessageEOP Message Sink PE_SNK_Ready\nbe re-initialized and restarted on transmission, by the , of the last bit of the\n, corresponding to any received , that causes the to enter the\nstateS.inkShall SinkPPSPeriodicTimer PHY Layer GoodCRC\nMessageEOP Message Signaling PHY Layer\nSTohuer ce stopS itnhke Sink on transPmE_isSsNioKn_R, beya dthye , of the last bit of the\n, corresponding to any , or the last bit of any is received, by the , from the\n6.6.1 a9n.d2 by the S tohaut rccauesPesP thSeC om tom leTaviem thee r state.\nSourcePPSCommTimerShall Source Policy Engine\nSink Source tPPSTimeout SPR PPS Mode\nThe RequestMessa ge be used by tShPeR PPSA'PsD O to ensure that communication between\nthe and occurs within a bounded time of when in . In the absence of any\nother traffic, a requesting an is received periodically as a keep alive mechanism.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 259\nSourcePPSCommTimerShall Message\nSource PE_SRC_Ready GoodCRCMessageEOP\nPHY Layer be re-initialized and restarted when, after receiving any that causes the\nto enter the state, the last bit of the corresponding is transmitted by\nthe SourceSh.all SourcePPSCommTimer\nThe\uf06c stop the Message wShoeunr:ce PE_SRC_Ready\nGoodCRCMessageEOP PHY Layer\nAfter receiving any that causes the to leave the state, the last bit of the\n\uf06c of the correspondiSnigg naling iPsH sYen Lta byye rthe Sink, or Source\nSource PE_SRC_Ready\nThe last bit of any is received by the from the by the that causes the\nSour ctoe PlePaSvCeo tmhem Timer state.SourceShall Hard ResetSignaling\n6W.h6en.2 th0e tEnterUSB times out the issue .\nDFPShall Enter_USBMessage tEnterUSB\nThe\uf06c send the GoodCRC within Data_R oefs eeitt_hCeorm: pleteMessage\nData_ResetMessage\nThe last bit of the acknowledging the in response to the\n\uf06c or GoodCRC Source_CapabilitiesMes-\nsage PE_SRC_Send_Capabilities\nA PD Connection, specifically the last bit of the acknowledging the\n\uf06c after the initiGalo eondtCrRy Cinto the AcceptMessag setate or DR_SwapMessage\nThe lasDtF bPit of the acknowledging the in response to the [USB 4]\nAMS UFP Enter_USBMessage Enter_USB\nMFaeislusarge eby the[U SB4 t]o meet this timeout parameter can resuUltF iPn Sthheo uplodr tNso ntot transitionAinMgS into DF Poperation.\nAny initiated by thEen ter_ pUrSiBorM toes rseacgeeiving th \u00ae e will delay reception of the\nand operation, therefore a USB4 -capable initiate any until the has been\n6giv.6en. 2tim1e to sen d E thPe R Time rs .\n6.6.21.1 SinkEPREnterTimer Timer\nSinkEPREnterTimer EPR Mode tEnterEPR Sink\nShall GoodCRCMessage EPR_ModeMessage\nThe E nist uersed to eSnisnukrSeh tahlel entry process completes within .G Tohoed CRC\nMessa sgtearEtO tPhe timer when it sees the last bit EoPf tRh_eM odeMess age in response to the Ente r Succeed weidth\nthe Action field set to 1 ( PH).Y T Lhaey er stop the timer wShiennk tShhea llalst bit ofS tohfet _cRoersreetspMoensdsaingge\n, corresponding to the received with the Action field set to 3 ( ),\nh6a.s6 b.e2e1n .t2ransmitted Sbyin thke EPRKee. Ipf tAheli tvimee Tr eixmpireers the send a .\nSinkEPRKeepAliveTimerShall Sink Policy Engine\nSink Source tSinkEPRKeepAlive SinkShall\nThe PE_SNK_R eady be used by theE PR M'so de Shall to ensure that communicatPiEon_S bNeKtw_Reeeand tyhe\nand EPR Mo odcecurs within a bounded time of . The initialize and run this timer\nupon entry into the State when in and stop it upon exit from the\nwhen in .EPR Mode SinkShall SinkEPRKeepAliveTimer\nWh\uf06cile operating in Goo, dthCeR CMe ssage sEtOopP the Message timerS wouhrecneever:\nPHY Layer\nThe last bit of the , in response any from the , is transmitted by\n\uf06c the PHY Layer. GoodCRCMessageEOP Message\nSource\nThe receives the last bit of the in response to any sent to the\n. SinkShall EPR_KeepAliveMessage\n6If .t6he. 2tim1e.3r expires t h Se our ceE PseRndK aen epAlive Tim er .\nSourceEPRKeepAliveTimerShall Source Policy Engine\nSink Source tSourceEPRKeepAlive SourceShall\nThe be used by the 's to ensure that communication\nbetween the and occurs within a bounded time of . The initialize\nPage 260 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPE_SRC_Ready EPR Mode Shall\nPE_SRC_Ready EPR Mode\nand run this timer upon entry into the State when in and disable it upon exit from\nthe EStPaRte M wohdeen Source.Shall SourceEPRKeepAliveTimer\nWh\uf06cile operating in Goo, dthCeR CMessa geEO sPtop the Message Stiinmker whenever:\nPHY Layer\nThe last bit of the , in response any from the , is transmitted by the\n\uf06c PHY La.yer GoodCRCMessageEOP Message\nSource\nThe receives the last bit of the in response to any sent to the\n. SourceShall Hard ResetSignaling\n6If .t6he. 2tim1e.4r expires t h teE PRS ourc seenCda bleDisc overy.\nPort Partner Attached Hard Reset Power Role Swap Fast Role Swap EPR\nSourceShall Cable Plug tEPRSourceCableDiscovery First Explicit Contract\nAfter s are or after a or after a or after a an\nEP R Sou rdciescSohvaelrl the Disco vweirth Iidne ntityREQCommand C oafb elen tPelurigng the .\ntEPRSourceCableDiscovery GoodCRCMessage PS_RDYMessage\nTExhpel icit Contrac tNego stieantdio tnhe , to the , within\nof receiving the acknowledging the as part of the\nNote: E PR Source . VCONN Source tEPRSourceCableDiscovery\nVCONN Swap\nIf the is not the , , will also include the time needed\nfor the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 261\n6.6.22 Time Values and Timers\nTable6.68, \"Time Values\"\nShall Table6.69, \"Timers\"\nsummarizes the values for the timers listed in this section. For each Timer Value, a given\nimplementation pick a fixed value withTianb tlhee6 r.a6n8g eT simpeec iVfiaeldu. es lists the timers.\nParameter Value Value Value Units Reference\n(min) (Nom) (max)\ntACTempUpdate Section 6.5.2.2.1\ntBISTContMode 500 ms Section 6.6.7.2\ntBISTCarrierMode 30 45 60 ms Section 6.6.7.1\ntBISTSharedTestMode 300 ms Section 6.6.7.3\ntCableMessage 1 s Section 6.6.14\ntCapabilitiesMismatchResponse 750 \u00b5s Section 6.4.2.3\ntChunkingNotSupported 2 s Section 6.6.18.1\ntChunkReceiverRequest 40 45 50 ms Section 6.6.18.2\ntChunkReceiverResponse 15 ms Section 6.6.18.3\ntChunkSenderRequest 15 ms Section 6.6.18.2\ntChunkSenderResponse 24 27 30 ms Section 6.6.18.3\ntDataReset 24 27 30 ms Section 6.6.10.2\ntDataResetFail 200 225 250 ms Section 6.6.10.3\ntDataResetFailUFP 300 400 ms Section 6.6.10.4\ntDiscoverIdentity 450 550 ms Section 6.6.14\ntDRSwapHardReset 40 50 ms Section 6.6.11.3\ntDRSwapWait 15 ms Section 6.6.4.3\ntEnterUSB 100 ms Section 6.6.20\ntEnterUSBWait 500 ms Section 6.6.4.7\ntEnterEPR 100 ms Section 6.6.21.1\ntEPRSourceCableDiscovery 450 500 550 ms Section 6.6.21.4\ntFirstSourceCap 2 s Section 6.6.3.3\ntFRSwap5V 250 ms Section 6.6.17.1\ntFRSwapComplete 15 ms Section 6.6.17.2\ntFRSwapInit 15 ms Section 6.6.17.3\ntHardReset 15 ms Section 6.3.13\ntHardResetComplete 5 ms Section 6.6.9\ntSourceEPRKeepAlive 4 4.5 5 ms Section 6.6.21.3\ntSinkEPRKeepAlive 0.750 0.875 1.000 s Section 6.6.21.2\ntNoResponse 0.250 0.375 0.500 s Section 6.6.6\ntPPSRequest 4.5 5.0 5.5 s Section 6.6.19.1\ntPPSTimeout 10 s Section 6.6.19.2\ntProtErrHardReset 12.0 13.5 15.0 s Section 6.6.11.4\ntProtErrSoftReset 15 ms Section 6.6.9.2\ntPRSwapWait 15 ms Section 6.6.4.2\ntPSHardReset 100 ms Section 6.6.11.2\n25 30 35 ms\nPage 262 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.68 Time Values (Continued)\nParameter Value Value Value Units Reference\n(min) (Nom) (max)\ntPSSourceOff SPR Mode\nSection 6.6.5.2\nEPR Mode 750 835 920 ms\ntPSSourceOn SPR Mode 1120 1260 1400 Section 6.6.5.3\ntPSTransition SPR Mode 390 435 480 ms\nSection 6.6.5.1\nEPR Mode 450 500 550 ms\ntReceive 830 925 1020 Section 6.6.1\ntReceiverResponse 0.9 1.0 1.1 ms Section 6.6.2\ntRetry 15 ms Section 6.6.1\ntSenderResponse 195 \u00b5s Section 6.6.2\ntSinkDelay 27 30 33 ms Section 5.7\ntSinkRequest 5 ms Section 6.6.4.1\ntSinkTx 100 ms Section 6.6.16\ntSoftReset 16 18 20 ms Section 6.8.1\ntSrcHoldsBus 15 ms Section 8.3.3.2\ntSwapSinkReady 50 ms Section 6.6.8.1\ntSwapSourceStart 15 ms Section 6.6.8.1\ntTransmit 20 ms Section 6.6.1\ntTypeCSendSourceCap 195 \u00b5s Section 6.6.3.1\ntTypeCSinkWaitCap 100 150 200 ms Section 6.6.3.2\ntVCONNSourceDischarge 310 465 620 ms Section 6.6.10.1\ntVCONNSourceOff 160 200 240 ms Section 6.6.13\ntVcONNSourceOn 25 ms Section 6.3.11\ntVCONNSourceTimeout 50 ms Section 6.6.13\ntVCONNSwapWait 100 150 200 ms Section 6.6.4.4\ntVCONNSwapDelayDFP 100 ms Section 6.6.4.5\ntVCONNSwapDelayUFP 100 ms Section 6.6.4.6\ntVDMBusy 500 ms Section 6.6.12.4\ntVDMEnterMode 50 ms Section 6.6.12.2\ntVDMExitMode 25 ms Section 6.6.12.3\ntVDMReceiverResponse 25 ms Section 6.6.12.1\ntVDMSenderResponse 15 ms Section 6.6.12.1\ntVDMWaitModeEntry 24 27 30 ms Section 6.6.12.2\ntVDMWaitModeExit 40 45 50 ms Section 6.6.12.3\n40 45 50 ms\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 263\nTable6.69 Timers\nTimer Parameter Used By Reference\nBISTContModeTimer tBISTContMode Policy Engine Section 6.6.7.2\nChunkingNotSupportedTimer tChunkingNotSupported Policy Engine Section 6.6.18.1\nChunkSenderRequestTimer tChunkSenderRequest Protocol Layer Section 6.6.18.2\nChunkSenderResponseTimer tChunkSenderResponse Protocol Layer Section 6.6.18.3\nCRCReceiveTimer tReceive Protocol Layer Section 6.6.1\nDataResetFailTimer tDataResetFail Policy Engine Section 6.6.10.3\nDataResetFailUFPTimer tDataResetFailUFP Policy Engine Section 6.6.10.4\nDiscoverIdentityTimer tDiscoverIdentity Policy Engine Section 6.6.15\nHardResetCompleteTimer tHardResetComplete Protocol Layer Section 6.6.9\nNoResponseTimer tNoResponse Policy Engine Section 6.6.6\nPSHardResetTimer tPSHardReset Policy Engine Section 6.6.11.2\nPSSourceOffTimer tPSSourceOff Policy Engine Section 6.6.5.2\nPSSourceOnTimer tPSSourceOn Policy Engine Section 6.6.5.3\nPSTransitionTimer tPSTransition Policy Engine Section 6.6.5.1\nSenderResponseTimer tSenderResponse Policy Engine Section 6.6.2\nSinkEPREnterTimer tEnterEPR Policy Engine Section 6.6.21.1\nSinkEPRKeepAliveTimer tSinkEPRKeepAlive Policy Engine Section 6.6.21.2\nSinkPPSPeriodicTimer tPPSRequest Policy Engine Section 6.6.19.1\nSinkRequestTimer tSinkRequest Policy Engine Section 6.6.4\nSinkWaitCapTimer tTypeCSinkWaitCap Policy Engine Section 6.6.3.2\nSourceCapabilityTimer tTypeCSendSourceCap Policy Engine Section 6.6.3.1\nSourceEPRKeepAliveTimer tSourceEPRKeepAlive Policy Engine Section 6.6.21.3\nSourcePPSCommTimer tPPSTimeout Policy Engine Section 6.6.19.2\nSinkTxTimer tSinkTx Protocol Layer Section 6.6.16\nSwapSourceStartTimer tSwapSourceStart Policy Engine Section 6.6.8.1\nVCONNDischargeTimer tVCONNSourceDischarge Policy Engine Section 6.6.10.1\nVCONNOnTimer tVCONNSourceTimeout Policy Engine Section 6.6.13.1\nVDMModeEntryTimer tVDMWaitModeEntry Policy Engine Section 6.6.12.2\nVDMModeExitTimer tVDMWaitModeExit Policy Engine Section 6.6.12.3\nVDMResponseTimer tVDMSenderResponse Policy Engine Section 6.6.12.1\nPage 264 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.7", "title": "Counters", "page": 265, "level": 2, "parent_id": "6", "full_path": "6.7 Counters", "tags": [], "text": "6.7 Counters\n6.7.1 MessageID Counter\nMessageIDCounter nMessageIDCount\nMessage MessageID Message Header Message\nThe is a rolling counter, ranging from 0 to , used to detect duplicate\nPorst. SThhaisl lvalue is used for the Mess faiegledI Din the of ePaocrht Ptraarntnsmeritted .\nHub Shall MessageID Port Port\nEach maintSaOinP *a P caocpkye tof Sthhea lllast value receiveMde fsrsoamg eitIsD . DevSicOePs* that support\nmultiple ports, such as s, maintain copies of the last on a per basis. A which\ncommunicates usSihnagl l Mess sageID maintGaiono cdoCpRieCsM oef stshaeg least for each typMe eosfs age it uses.\nShall MessageID Message\nThe transmitter use the in a to verify that a particular was received\n6co.r7re.c1tl.y1. The receiv e Tr ran sumse tihtet er Usage to detect duplicate s.\nShall MessageID\nThe\uf06c Transmitter use the Hard Reset Saisg nfoallliongws: Soft_ResetMessage Shall\nMessageIDCounter\nUpon receiving either , or a , the transmitter set its\n\uf06c GoodCRCMessag teo zero anMde rses-aigneitIiDalize its retry mMecehsasnaigsmeI.DCounter\nCRCReceiveTimer Shall Packet nRetryCount\nIMf eas sageID with a matching the is not received before the\nexpires, it retry the same up to times using the same\n\uf06c GoodCR.CMessage MessageID MessageIDCounter\nCRCReceiveTimer Shall\nIMf eas sageIDCo unter is received with a matching the current before\nthe expires, the transmitter re-initialize its retry mechanism and increment its\n\uf06c Message . Policy Engine Shall Message\nMessageIDCounter\nIf the is aborted by the , the transmitter delete the from its transmit\n6.7.1.b2uffer, re-ini t iRaleizce eitisv reetrry U mseachganeism and increment its .\nShall MessageID\nThe\uf06c Receiver use the Packet as follows: Shall\nMessageID\nWhen the first good is received after a reset, the receiver store a copy of the received\n\uf06c valuMe.essage MessageID Message\nShall GoodCRCMessage MessageID Message\nFor subsequent s, if Message value in a received is the same as the stored value, the\nreceiver return a with that value and drop the (this is a\nNote: retry ofS ahna lal lNreoatdy received Soft_Re)s. etMessage MessageID\n\uf06c MTheisss ageID apply to the Messa ge which always has a value of zSehraol.l\nGoodCRCMessage MessageID MessageID\nIf Messa vgaelue in the received is different than the stored value, the receiver return\na with the new value, store a copy of the new value and pro-\n6.7.2cess the Retr.y Counter\nRetryCounter Port Message\nCRCReceiveTimer nRetryCount Shall Soft Reset\nThe is used by a whenever there is a transmission failure (timeout of\n). If the retry fails, thMeens stahgee link be reset using the Section 6m.1e2ch.2a.2n,i sm.\n\"Protocol Layer Message Transmission\"\nThe following rules apply to retries when there is a transmission failure (see also\n\uf06c Cable Plug Shall Not Mes)s:age\n\uf06c Extended Mse ssage Dreattray Size Masx.ExtendedMsgLegacyLen Chunked Chunked\nShall Not\ns of > that are not ( flag set\nto zero) be retried.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 265\n\uf06c Extended Message Data Size MaxExtendedMsgLegacyLen Chunked Shall\ns of \u2264 ( flag set to zero or one)\n\uf06c Ebext reentdreiedd M. essage Data Size MaxExtendedMsgLegacyLen Chunked Chunked\nShall\ns of > that are ( flag set to\nMoenssea)g iendividual Chunks be rReettrrieydC.ounter\nMessage GoodCRCMessage\nWhen s are not retried, then the is not used. Higher layer protocols are expected to\na6c.c7om.3modate Har ddel ivReerys faeiltu rCe ooru faniltuerer to receive a .\nHardResetCounter Hard Reset\nSection 6.6.6, \"NoResponseTimer\" Hard Reset nHardResetCount Shall\nThe is used to retry the whenever there is no response from the remote device (see\n). Once the has been retried times then it be\n6as.s7um.4ed that the rCemaoptea dbeviilciet iise nson C-roesuponnstiever.\nCapsCounter Source_CapabilitiesMessage Source\nHard Reset CapsCounter Optional May Source\nThe is used to count the number ofS ource_CapabilitiesM essages which have been sent by a\nat power up or after a . Implementation of the is but be used by any\nwhich wishCeasp tsoC opurensteerrve power by not sending Source Sink Atst aafctheerd a period of tnimCaep. sCount\nSource_CapabilitiesMessage SourceShall Sink\nSWohuernce t_hCea pabilitiesMe sissa igmeplemented and the detects that a is then after\ns have been sent the decide that the is non-responsive, stop sending\nSinkShall S inkWaitsC aanpdT idmisearble PD. Source_CapabilitiesMessage\nSource Source_CapabilitiesMessage Sink\nAAt tach ed use the Source_C taop tarbigiglietrie tshMe reesssaengdeinShg aolfl Hard ResetSig naling s by a USB Power\nDSienlkivWerayi tcCaappabTliem er which has previously stoppSeodu rsceending SourceShal l s. Any Cap swChouicnht iesr\nand does not deteScotu ar ce_CapabilitiesMess age , issue when the\ntimes out in order to reset the . Resetting the also reset the\n6an.d7 r.e5start the se nDdiinsg coof ver Identity C ountse. r\nDiscover IdentityMessage Cable Plug PortShall Message\nDiscoverIdentityCounter nDiscoverIdentityCountDiscover IdentityMessage Shall\nWhePno rstending Good CRCMesss taog ea aV CONN Swa pmSahinatllain a countD oifs coverIdesn steitnytC ounter\n( ). No more than s be sent by\n6th.e7 .6 without r eVceDivMingB a usyCou nter response. A reset the .\nResponderBUSY Vendor_DefinedMessage UFP Cable PlugShall\nMessage VDMBusyCounter nBusyCountResponderBUSY\nWShhaelnl sending VDMBu syCou rnetseproSnhseasll to a Structured BUSY a or\nm[UaSiBn tTayinp ae -cCo 2u.n4t] of s sent (Alternate Mode ). NSoh mouorlde than nBusyCoun t responses\nbe sent. The be reset on sending a non- response. Products wishing to meet\nrequirements for entry use an of 1.\nPage 266 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.7.7 Counter Values and Counters\nTable6.70, \"Counter Parameters\" Table6.71, \"Counters\"\nlists the counters used in this section and shows the\ncorresponding parameters. Table6.70 Counter Parameters\nParameter Value Reference\nnBusyCount 5 Section 6.7.6\nnCapsCount 50 Section 6.7.4\nnDiscoverIdentityCount 20 Section 6.7.5\nnHardResetCount 2 Section 6.7.3\nnMessageIDCount 7 Section 6.7.1\nnRetryCount 2 Section 6.7.2\nTable6.71 Counters\nCounter Max Reference\nCapsCounter nCapsCount Section 6.7.4\nDiscoverIdentityCounter nDiscoverIdentityCount Section 6.7.5\nHardResetCounter nHardResetCount Section 6.7.3\nMessageIDCounter nMessageIDCount Section 6.7.1\nRetryCounter nRetryCount Section 6.7.2\nVDMBusyCounter nBusyCount Section 6.7.6\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 267"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.8", "title": "Reset", "page": 268, "level": 2, "parent_id": "6", "full_path": "6.8 Reset", "tags": [], "text": "6.8 Reset\nResets are a necessary response to protocol or other error conditions. USB Power Delivery defines four different\ntype\uf06cs of Sroefste Rt:eset\n\uf06c Data Rese,t which resets protUocSoBl .Communication\n\uf06c Hard Reset which resets the s.\n\uf06c Cable Reset which resets both the power supplies and protocol\n6.8.1 S wohfitc hR reessetes tth ae cnabdle P. rotocol Error\nSoft_ResetMessage Soft Reset\nShall Not Protocol Error\nA Ato mic Mes sias gues eSdeq tuoe cnacueseA aM S So oftf RpreosetotcMoal cyommunication when thPiso hrta sP abrrtonkeern down in some\nwayP. rIto tocol Erro rhave any impact on power supply operation but is used to correct a occurring\nduring an ( ). The be triggered by either in response to\ntPhreo tocol Error . Message AMS Message AMS\nProtocol Layer Policy Engine GoodCRCMessage Message\ns are any unexpectePdr otocol Er rdourring an .P Iof ltichye Efinrgstin eShall N ino tan hSaosf tb Reeesne tpasseSdh taol lthe\nP Eb_yS tNhKe _Ready PE_ bSuRtC h_Rase andoty yet been sent (i.e., a M aecsksangoewledging the\nhMaess snaogte been rUecneeixvpeedc)t ewdh Menes tshaeg e ocPcuEr_sS,N thKe_R eady PE_S RC_Ready issue a Policy E bnugti neSh all\nreturn tSoo ftth Ree set Protoc oorl Error state anAdM tShen pSrohcaellss the incoSmofitn Rge set . If the incoming\nPolic yis E anng ine recSeeivcetido nin 8 t.3h.e3 .4, \"SOP Soft Res oetr and Protocol Er rsotar tSet,a tthee D iagrams\"\nissue a . If the oPcrcoutrosc doul rEirnrgo arnS hall this H laeradd Rtoe sae t Sec tiino onr 6d.6er.1 t1o. 4r,e -synchronize\n\"thtPer otErrHardRes setta\"te maScehcitnioens 8(s.3e.e3 .2, \"Policy Engine Source Port State Diagram\" AMS ) except\nwhSeenc ttihoen v8o.3lt.2a.g1e.3 i,s \" tArtaonmsiitci oMne wsshaegne Sae quences\" lead to a (see\nand ). Details of 's can be found\nin Unrecognized Message Unsupported Messa.ge PE_SNK_Ready PE_SRC_Ready Shall\nNot Soft_ResetMessage Not_SupportedMessageShall\nAn or received in the or states,\nSo cfta_uRsees ae tMessageS hall to be generated but inRstead a SinkTxOK Sink TxNG be generated.\nA be sent regardless of the p value either or if it is the correct\nrNeostpeo:nse in that state. Soft_ResetMessage AMS R\nSinkTxOK SinkTxNG Protocol Error\nThis means that a can be sent during an regardless of the p value either\nor when responding to a .\nPage 268 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.72, \"Response to an incoming Message (except VDM)\" Table6.73, \"Response to an incoming VDM\"\nShall Message VDM\nand\nsummarize the responseTs athbalet 6.72 bRee mspaodnes teo taon a innc ionmcoinmgi ng Mess aingcel u(deixncge pt VDs.M)\nRecipient\u2019s Recipient\u2019s Incoming Message\nPower Role state\nRecognized Unrecognized\nSupported Unsupported\nExpected Unexpected\nSource Not_SupportedMessage\nSoft_Reset Not_Supported VDM 3\nPE_SRC_Ready Message\nMessage Message Section 6.4.4.1\n(except for )\nProcess 2 3 Section 6.4.4.1\nSee for UVDM.\nAMS\nSee for SVDM\nMessage Soft_ResetMessage\nDuring\n2\n(power not Process\nAMS1\ntransitioning )\nMessage Hard ResetSignaling\nDuring\n(power Process\nSink transitioning 1 ) Not_SupportedMessage\nSoft_Reset Not_Supported VDM 3\nPE_SNK_Ready Message\nMessage Message Section 6.4.4.1\n(except for )\nProcess 2 3 Section 6.4.4.1\nSee for UVDM.\nAMS\nSee for SVDM\nMessage Soft_ResetMessage\nDuring (not\n2\npower Process\nAMS\ntransitioned)\nMessage Hard ResetSignaling\nDuring\n(power Process\nPolicy Engine PE_SRC_Transition_Supply PE_SNK_Transition_Sink\ntransitioned)\nPE_FRS_SNK_SRC_Start_AMS\n1) \u201cPower transitioning\u201d means the is in State or State\nor Soft_ResetMessageShall State. SOP* Message\n2) The Not_Suppo rtedMes sageS bhea sllent using the S oOf Pth*e incoming Mes.sage\n3) The be sent using the of the incoming .\nTable6.73 Response to an incoming VDM\nRecipient's Unstructured VDM Structured VDM\nRole\nSupported Unsupported Unrecognized Supported Unsupported Unrecognized\nDFP UFP Not_Supported Not_Supported Not_Supported NAKCommand\nMessage Message Section 6.13.5 Message\nor Defined by See\nCable Plug vendor Message Message Message NAKCommand\nIgnored Ignored Section 6.13.5 Ignored\nDefined by See\nvendor\nGoodCRCMessage Message tReceive nRetryCount\nPort Pair Connected Soft Reset Section 6.6.9.1,\nA failure to see a in response to any within (after retries), when\n\"tSoftReset\"\na is , is indicative of a communications failure resulting in a (see\nSoft ResetShall\n).\nA \uf06c PHY Layer impact the USB Power DeliveryP HlaYy eLrasy ienr the following wPaaycsk:et\n\uf06c Protocol La: yReerset not rMeqesusiraegde IsDinCcoeu tnhtee r RetryCo urensteetrs on each transmission/reception.\n: Reset , and state machines.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 269\n\uf06c Policy Engine Explicit ContractNegotiation\n\uf06c : RSehsaeltl sNtaotte dependent behavior by performing an .\nNote: Power suppSlPyR: Mode Schouanrcgee. Source_CapabilitiesMessage EPR Mode Source\nEPR_Source_CapabilitiesMessage\nWhen in the sends a and when in the\nSoft Resestends an AMS T able8.8, .\"AMS: Soft Reset\" Message Shall\nSoft_Reset AcceptMessage\nA is performed using an (see ). numbers be set to zero\nSoft_ResetMessageShall MessageIDCounter RetryCounter MessageShall\nprior to sending the / since the issue might be with the counters. The sender of a\nMessageIDCounter RetryCounter AcceptMessage Soft\nreset its and , the receiver of the reset\nReset Hard Reset SOP Packet Cable Reset DFP\nits and before sending the response. Any failure in the\nSOP* Packet GoodCRCMessage Soft Reset Section\nprocess will trigger a when s are being used or , sent by the only, for\n6.8.3, \"Hard Reset\" Section 6.8.4, \"Cable Reset\"\nany other s; for example a is not received during the process (see\n6.8.2 Data Reset\nand ).\nData_ResetMessage Port Alternate Mode\nPort Partner Cable Plug\nA is used by a to reset its USB data connection and to exit all s both with its\n\uf06c D aantda iRne tsheet Ma(sy). Port Partner Data_ResetMessage\nData RTehseet process be initiated by either sending a .\nA \uf06c Shal li mNoptacts USB PowPeorr tDPeoliwveerry R ionl etheS fooullrocweinSgin wkays:PortData Role DFP UFP\n\uf06c Shall Not change the Explicit sC (ontract/ ) or s ( / ).\n\uf06c Shall changAec ttihvee eMxoisdteing .\n\uf06c Shall cause all s to be exiteVdC.ONN\n\uf06c D rFePsSeth tahlel cable by PowVCeOrN cNy cSloinugr ce .\n\uf06c The Da ta Res ebtecome the P.ortShall ErrorRecovery [USB\nType-C 2.4]\nIf the process fails, then the enter the State as defined in\nSection 6.3.14, \"D. ata_Reset Message\" Data Reset\n6.8.3 Hard Reset\nSee for details of operation.\nHard Reset Section 5.6.4, \"Hard Reset\"\nShall Section 7.3.3.1, \"Source Initiated Hard Reset\"\nSections 7a.r3e.3 s.2ig, n\"Sailnedk Ibnyi taiant oedrd Hearerdd Rseets eats\" defined in . Both the sender and recipient\nProto ccoalu Lsaey tehreiSr hpaolwler supplies to retuSronf tto R tehseetir default states (sAeteta ched\nand Hard Res efotr details of voltangHe atrradnRseitsieotnCso)u. Innt addition, their reSsepcteicotniv 6e.6 .6,\n\"NoResponseTism er\" be Sreecsteito ans 6 f.o7r.3 t,h \"eH ard Reset. CTohuins taelrlo\"ws the devices to be in a state where they can\nre-establish USB PD communication. is retried up to times (see also\nNote: andV BUS vSafe0V Hard). Reset Sink\nEven though drops to during a a will not see this as a disconnect since this\nHard Resise teSxhpeacllt eNdo btehavior. R R\nA Data c Rauoslee Sawnya pchangHea trod eRiethseetr Sthhea llp/ d resistPoor rbte Dinagt aa sRsoerleted. DFP\nPort R UFP Port R\nIf there has been a the cause the to be changed back to for a\nwVitChO tNhNe p resistor assert[eUdS aBn Tdy pe-C f o2r. 4a] wHiatrhd t Rhees edt Srehsaislltor assertePdo. rt R\nVCONN Port R VCONN\nWhen is supported (see ) the cause the with the p resistor asserted\nto supply Har da nRde stehte with the d resistor asserted to turn off . CC\nVCONN Cable Plug SOP\u2019 SOP\u2019\u2019\nIn effect the wVi\nC\nl\nO\nl\nN\nre\nN\nvert th[Ue SPBo rTtysp teo- tCh 2ei.4r ]default state based on their line resistors. Removing and\nreapplying from the s also ensures that they re-establish their configuration as either or\nbased on the location of (see ).\nPage 270 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nHard Reset PortShall USB Type-CErrorRecovery\n[USB Type-C 2.4]\nIf the is insufficient to clear the error condition, then the use as\ndeSfiinnkedS hina ll .Hard ResetSignaling R Section 5.7, \"Collision\nAvoidance\"\nA be able to send regardless of the value of p (see\n6.8.3.1 ). Cable Plugs and Hard Reset\nCable Plug Shall Not Hard ResetSignaling Shall Hard ResetSignaling Port\nPartner Shall Section 8.3.3.25.2.2, \"Cable Plug Hard Reset State Diagram\"\nCable Plugs Shall generate but monitor for between the\nPort Parst annerd reset when this is detected (see ). The\ns perform the equivalent of a power cycle returning to their initial power up state. This allows the\n6.8.3.2 s to be i n Ma sotadtea wlh Oerpe ethreay tcaion rne -aesntadbl iHsha UrSdB PRDe csometmunication.\nHard ResetShall EPR Mode Active Mode Port Partner Cable Plug\nSection 6.4.4.3.4, \"Enter Mode Command\"\nA cause and all s to be exited by both s and any s (see\n6.8.4 Cable Reset ).\nCable Reset Section 5.6.5, \"Cable Reset\"\nCable ResetSignalingShall Protocol Layer Cable Plug Shall\ns are signaled by an ordered set as defined in Port Partn. eBroth the sender and recipient\nof reset their respective s. The s perform the equivalent\nof a power cycle returning to their initial power up state. This allows the s to be in a state where they\ncan rDeF-ePstablish USB PD comVmCOuNnNication. Cable Reset VCONN DFPShall VCONN\nCable ResetSignaling VCONN Swap UFP VCONN\nTheD FPS mhuasllt be supplyiVn C g O NN Sw apprior to a . If VCO N h N as been turned off theC able Rese ttuSrignn oanli ng\nprior to generating . If there has been a and the is currently supplying ,\nthe D FPSh aplelrform a Cable Res estuScihg nthaalitn igt is sDuFpPplSyhinagll prior to Cgeanbelera Rtiensge tSignaling .\nExplicit Contract\nOnly a generate . A only generate within an\nCable ResetSha.ll Active Mode Cable Plug Section 6.4.4.3.4, \"Enter Mode\nCommand\"\nA cause all s in the s to be exited (see\n).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 271"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.9", "title": "Accept, Reject and Wait", "page": 272, "level": 2, "parent_id": "6", "full_path": "6.9 Accept, Reject and Wait", "tags": [], "text": "6.9 Accept, Reject and Wait\nRequest EPR_Request PR_Swap DR_Swap VCONN_Swap Enter_USBMessageShall\nThe recipient of a , , , , , or respond\nby s\uf06cending Aonccee opft tMhee sfsoallgoewing responses:Valid Section 6.3.3,\n\"Accept Message\"\nAn in response to a request which can be serviced immediately (see\n\uf06c WaitMessage ). Valid\nSection 6.3.12, \"Wait Message\"\nA in response to a request which cannot be serviced immediately but could be ser-\n\uf06c vicReedje actt aM laetsesar gtieme (see Invalid ).\nCapabilities Section 6.3.4, \"Reject Message\"\nA in response to an request or a request which is outside of the device's design\n(see ).\nPage 272 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.10", "title": "Collision Avoidance", "page": 273, "level": 2, "parent_id": "6", "full_path": "6.10 Collision Avoidance", "tags": [], "text": "6.10 Collision Avoidance\nMessage Messaging Sink Source R SinkTxOK\nSink AMS Source AMS R SinkTxNG\nTo avoid Sink collisionsR due to asynScinhkroTnxoOuKs May sent frAoMmS the , theS ink sets p toR to\niSnindikcTaxteN tGo thSeh all N tohtat it is OK toA iMniStiate aSnh all . When theM essage wishes to initiate anA MS , it sSeotsu rc p e to .\nWhen the detects that p is set to it initiate an . When the detects that p is set to\nNote: it initiate an S aOnPd* AMS only send Port s tPhoartt are pParotr tof anC able tPhlue g has initiated.\nThis restrictiPoEn_ SaRppCl_iRees atod y 's i.e., for both to and to PE_ ScoRmC_mReuandicyations.\ntSrcHoldsBus Protocol Error Soft Reset\nIf a transitiAoMnS into the Message sAtMatSeM wailyl result in an immediate transition oRut of the state\nwithin e.g. it is due to a that has not resulted in a , then the notifications of\nNthoet een:d of Sin aknd first Ha irnd a Rne set Signa lNinogt be sent to avoid changing the p value unnecessarily.\nA can still send at any time.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 273"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.11", "title": "Message Discarding", "page": 274, "level": 2, "parent_id": "6", "full_path": "6.11 Message Discarding", "tags": [], "text": "6.11 Message Discarding\nMessage SOP Protocol LayerShallDiscard SOP*Message\nMessage SOP\u2019 SOP\u2019\u2019Shall Not SOP*Message Discarded\nOn receiving a received on , the any pending s. A received\non / Mess age caSuOsPe\u2019 aSnOyP p\u2019\u2019ending s to be A. MS Cable Plug\nSOP*Message Discarded\nAItM isS assumed thatP ort Partnse ursing / constitute a simpleC raebqlue ePsltu/gresponse , with theM essage\nproSvOidPing the response so tMheersesa igs eno reason forS aO pPe*nding Disca rded to be . There can only be one\nbetween the s, and these also take priority over communications so a received\nTona ble6 .w74il,l \" aMlwesasyasg cea Duissec aar ding\" pending on Me stsoa bgee Shall. Shall Not Discarded\nfor detTaialsb olef t6h.7e 4 Messasg teh Dati scard/i ng be .\nMessage pending transmission Message received Message to be Discarded\nSOP SOP Message\nSOP SOP\u2019 SOP\u2019\u2019 Outgoing Message\nSOP\u2019 S/OP Incoming Message\nSOP\u2019 SOP\u2019 Outgoing Message\nSOP\u2019 SOP\u2019\u2019 Incoming Message\nSOP\u2019\u2019 SOP Incoming Message\nSOP\u2019\u2019 SOP\u2019 Outgoing Message\nSOP\u2019\u2019 SOP\u2019\u2019 Incoming Message\nIncoming\nPage 274 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.12", "title": "State behavior", "page": 275, "level": 2, "parent_id": "6", "full_path": "6.12 State behavior", "tags": [], "text": "6.12 State behavior\n6.12.1 Introduction to state diagrams used in Chapter 6\nSection 6.12, \"State behavior\" Normative Shall\nProtocol Layer\nThe state diagrams defined in are and define the operation of the\nPNoowtee:r Delivery .\nFigure 6.57T,h \"eOsuet slitnaet eo fd Siatagtreasm\"s are not intended to replace a well written and robust design.\nshows an outline of the states defined in the following sections. At the top there is\nthe name of the state. This is followed by \"Actions on entry\" a list of actions carried out on entering the state and\nin some states \"Actions on exit\" a list of acFtiiognusr ec a6r.r5ie7d O ouuttl ionne e oxfi tSintagt tehse state.\n<Name of State>\nActions on entry:\n\u201cList of actions to carry out on entering the\nstate\u201d\nActions on exit:\n\u201cList of actions to carry out on exiting the\nstate\u201d\nTransitions from one state to another are indicated by arrows with the conditions listed on the arrow. Where there\nare multiple conditions, these are connected using either a logical OR \"|\" or a logical AND \"&.\" The inverse of a\ncondition is shown with a \"NOT\" in front of the condition.\nIn some cases, there are transitions which can occur from any state to a particular state. These are indicated by an\narrow which is unconnected to a state at one end, but with the other end (the point)F cigounrnee 6c.t5e7d, t\"oO uthtlein fein oafl Ssttaattees.\"\nIn some state diagrams it is necessary to enter or exit from states in other diagrams.\nindicates how such references are made. The reference is indicated with a hatched box. The box contains the name\nof the referenced state. Figure 6.58 References to states\n<Name of reference state>\n(<DFP | UFP>)\nTimers are included in many of the states. Timers are initialized (set to their starting condition) and run (timer is\ncounting) in the state it is referenced. As soon as the state is exited then the timer is no longer active. Timeouts of\nthe timers are listed as conditions on state transitions.\nConditions listed on state transitions will come from one of three sources:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 275\n\uf06c Message PHY Layer\n\uf06c s received from the Protocol La.yer\n\uf06c EMveesnsatsg etriggered within the e.g., timPeorli ctiym Eenoguintse Protocol Layer Message\nMessage\nand related indications passed up to the from the ( sent;\n6.12.2 r eScetiavetde e tOc.)peration\nProtocol Layer SOP* Packet\nThe followSOinPg\u2019 Cseocmtimonu ndiectaatiilosn State Operation Swhhaelnl sending andP rreocteoicvoiln Lga yer s.\nProtocol Layer Hard Reset\nFor eacChh unking beingS sheanltl and receivedC hthuenrkee d Cbheu snekpeadrate Chunked Transmission and\nReception and State Machine instances, with their own counter and timer instances.\nWhen is supported there be separate Tx, Tx, and Message Router State\nMSoaftc hRiensee tinSshtaalnlces. SOP* Packet\nSoft_ResetMessage Hard Reset Cable Reset Shall\nProtoco l Lay eornly apply to the State Machine instanceDsF iPt isU tFaPrgetedC aatb blea Pseludg on the type of used to\nsend the . The State Machine (including ) apply simultaneously to\n6all. 12.2.1 Sta tPe Mroacthoinceo inl sLtaanyceesr a cCtihveu inn tkhei ng, and (if present).\n6.12.2.1.1 Architecture of Device Including Chunking Layer\nChunking Protocol Layer Policy Engine Figure 6.59,\n\"Chunking architecture Showing Message and Control Flow\"\nThe component resides in the between the and Protocol Tx/Rx.\nChunking Layer illustrates the relationship between components.\nThe\uf06c Chunked comprises three related state machines:\n\uf06c Chunked Rx.\n\uf06c Chunked Tx.\nNote: Message Router. Policy Engine UnchunkedMessage\nMessage\nThe consequence of this architecture is that the deals entirely in s. It\nwill noCt arebclee iPvleu (gand might not respond to) a M eusnstaigl eall the related chunks haveC bheuennk collated.\nExtended Message May Chunking Layer Shall\nICfh au PnDk idnegvNicoet Sour pportedTim hears no requirement to handle any requiring more than Cohnuen king of aSneyc tion\n6.6.18.1, \"Chunking, Nit otSup opmoritte tdhTei mer\" Section. I 8n. 3th.3is.6 c, a\"Nseo itt S uppo ritmedp lMemesesnatg eth Set ate Diagrams\"\nto ensure compatible operation with partners which support (see\nand ).\nPage 276 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.59 Chunking architecture Showing Message and Control Flow\nPolicy Engine\nProtocol Layer AMS Notification\nChunked Rx Chunked Tx\nChunked Message Router\nChunking\nProtocol Layer Rx Hard Reset Protocol Layer Tx\nRp Control or\nPHY Layer\nDetection\n6.12.2.1.1.1 Optional Abort Mechanism\nChunkedMessage Message\nOptional\nLong s bring with them the potential problem that they could prevent urgent s from being\ntransmitted in a timely manner. An AboMrta myechanism is provided to remPoeldicyy tEhnisg ipnreoblem.\nThe Abort Flag referred to in the diagrams below be set and examined by the . The specific means\n6ar.e1 l2ef.t2 t.o1 t.1he.2 implementer . Aborting Sending a Long-Chunked Message\nChunkedMessage May Optional MessageShall\nChunked\nA long- being sent be aborted by setting the Abort Flag. The be\n6co.n1s2id.2er.1ed.1 a.b3orted when t h Ae bAboorrtti Fnlgag R ise acgeaiivni cnlega rae dL obyn tgh-eC hunke dT xM steastes amgaechine.\nOptional Message ChunkedMessage\nPolicy Engine Message\nIf the Discarded Abort mMeecshsaangiesm has been implPeomliceyn tEendg, ianney sent while a receive is in\nprogress wChilul rnekseudltM ines asnag eerror report being received by the , to inCdhicuantkee tdhat the request has\nbeen M. Iefs tshaeg e was urgent the might set the Abort Flag, which will result in the\nincoming being aborted. The Abort Flag being cleared by the Rx state machine indicates\nt6h.a1t 2th.e2 u.1rg.e2nt cCahn unonwk beed s eRntx. State Diagram\nFigure 6.60, \"Chunked Rx State Diagram\" Chunked\nChunked Message\nMess ashgeows the stateC bheuhnakviniogr for the Rx State Machine. This\nrecognizes whether received s are involved and deals with requesting chunks when they are. It\nalso performs validity checks on all s related to .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 277\nFigure 6.60 Chunked Rx State Diagram\nSoft Reset occured |\nExit from Hard Reset\nStart\nAny Message Received and\nRCH_Wait_For_Message_From_Protocol_Layer RCH_Report_Error or n R ot C in H _ s W tat a e i t R _F C o H r_ _ M W e a s it s in a g g _ e C _F hu ro n m k _\nReported Actions on entry: Protocol_Layer\nMessage Passed A C C l l c e e t a a io r r n E A s x b o t o e n r n t e d F n e l t a d r g y R : x Buffer C C h h u u n n k k e in d g ! 1 = R I t f h e a e p M P o o r e t l s i E s c a y rr g E o e n r w g t i o a n s P e r o . e l c ic e y iv E e n d g , i p n a e s . s it to\nReceived Non-Extended Message |\n(Received Extended Message & Other Message Received\n(Chunking1 = 0 & Chunked = 0) ) from Protocol Layer |\nChunkSenderResponseTimer timeout\nRCH_Pass_Up_Message Abort Flag Set Unexpected fr T o r m an P sm ro i t s o s c i o o l n L E a r y r e o r r |\nA Pa ct s i s o M ns e o ss n a e g n e t t r o y P : olicy Engine Ex ( te C n h d R u e n e d k c i e M n i g v e 1 e s d = sa 1 g e & & Chunk Number f M ro e m s s P a r g o e to R co e l c L e a iv y e e d r\nChunked = 1)\nMessage is Complete\n(Num bytes received\n>= specified Data Size)2\nRCH_Processing_ RCH_Requesting_Chunk RCH_Waiting_Chunk\nExtended_Message Actions on entry: Message Actions on entry:\nActions on entry: Send notification SRT_Stop to Transmitted Start ChunkSenderResponseTimer3\nIf first chunk: set SenderResponseTimer State received from\nC N h u u m n k by _N te u s m re b c e e r i _ v E e x d p e = c 0 ted = 0 and Message Machine. Protocol Layer S S e e n n d d e n r o R t e if s i p ca o t n io se n T S i R m T e _ r S S ta ta rt t e t o\nnot Send Chunk Request to Protocol Machine.3\nIf expected Chunk Number: Append Complete Layer with Chunk Number =\ndata to Extended_Message_Buffer; Chunk_Number_Expected.\nIncrement Chunk_Number_Expected\nand adjust Num bytes received.\nChunk Response Received\nfrom Protocol Layer\n1) Chunking is an internal state that is set to 1 if the \u2018Unchunked Extended Messages Supported\u2019 bit in either Source Capabilities or Request is 0. It defaults to 1 and is set after the\nfirst exchange of Source Capabilities and Request. It is also set to 1 for SOP\u2019 or SOP\u2019\u2019 communication.\n2) Additional bytes received over specified Data Size will be because of padding in the last chunk.\n3) This state is responsible for starting two timers of similar length. The implementor Should mitigate against more than one of these timers resulting in recovery action.\n6.12.2.1.2.1 RCH_Wait_For_Message_From_Protocol_Layer State\nChunked Shall RCH_Wait_For_Message_From_Protocol_Layer\nThe\uf06c Rx State Machine enter the state:\n\uf06c At startup. Soft Reset\n\uf06c As a result of a Hard Reset occurring.\nOn exit fRrCoHm_ Wa ait_For_Me. ssage_From_Protocol_Layer Chunked\nOptional\nOn entry to the state the Rx state machine clears the\nExtendReCdH R_xW Bauitff_eFro ra_nMd ecslesaargse t_hFer om_Proto cAoblo_Lrat yFelarg. Chunked Chunked\nMessage\nIn the state the Rx state machine waits until the\nMessCahguen Rkoeduter passes up a recSehivaelld . RCH_Pass_Up_Message\nThe\uf06c REx xStteantdee Md aMcehsisnaeg e transition to the Chunked state when:\n\uf06c A noEnxt-ended Message is passed up from tChheu nked Message Router. Policy Engine\nChunking Message Chunked\nAn is passed up from the Message Router, and the has\nChudnekteedrmined that we areS nhoatl ldoing , anRdC Hth_eP rocessin gh_aEsx ittesn ded_Mes sbaitg seet to 0b.\nThe\uf06c Ex Rtexn Sdteadte M Mesascahgiene transition to thCeh unked Policy sEtnagtien ewhen:\nChunking Message Chunked\nAn is passed up from the Message Router, and the has\n6.12.2.d1e.t2er.2mined that we RarCeH do_Pinags s_Up_M, eansds athgee State has its bit set to 1b.\nRCH_Pass_Up_Message Chunked Shall Message\nPolicy Engine\nOn entry to the state the Rx state machine pass the received to the\nChunked. Shall RCH_Wait_For_Message_From_Protocol_Layer\nThe\uf06c M Rexs sSatgaete Machine transition to the state when:\nThe has been passed.\nPage 278 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.12.2.1.2.3 RCH_Processing_Extended_Message State\nRCH_Processing_Extended_Message Chunked Shall\nOn e\uf06cntry to the state the Rx state machine :\n\uf06dIf this is the first chunk:\n\uf06d Set Chunk_Number_Expected = 0.\n\uf06c Set Num bytes received = 0.Chunk Number\n\uf06dIf chunk contains the expected :\n\uf06d Append its data to the Extended_Message_Buffer.\n\uf06d Increment Chunk_Number_Expected.\nChunkeAddjust Num bytes reScheaivlled. RCH_Pass_Up_Message\nThe\uf06c M Rexs sSatgaete Machine transition to the Data S iszteate when:\nNote: The is complete (i.e., Num bytes received >= specified . Extended Mes-\nsage\nThe inequality allows for padding bytes in the last chunk, which are not actually part of the\nChunked ). Shall RCH_Requesting_Chunk\nThe\uf06c M Rexs sSatgaete Machine transition to the state when:\nChuTnhkeed is not yet cSohmalpllete. RCH_Report_Error\nThe\uf06c Rx State MCahcuhinnke Numb terransition to the state when:\nChuAnkne udnexpected Shall is received. RCH_Wait_For_Message_From_Protocol_Layer\nThe\uf06c O Rpxt iSotnaatel Machine transition to the state when:\n6.12.2.T1h.e2 .4 Abor t RFlCaHg i_sR seetq. uesting_Chunk State\nRCH_Requesting_Chunk Chunked Shall\nOn e\uf06cntry to the Se nstdaetreR tehsep onseTim Rexr state machine S:ection 8.3.3.1.1,\n\"SenderResponseTimer State Diagram\"\nSend notification SRT_Stop to state machine (see\n\uf06c Chunk Protocol Layer). Chunk Number\nChuSneknedd Request to Shall with RCH_Waiting _=C Chhuunnkk_Number_Expected.\nThe\uf06c Messa Rgxe State Machine transition to tPhreo tocol Layer state when:\nChunked Transmitted isS rheaclelived from the RCH_Repor.t_Error\nThe\uf06c Rx State Machine transition toP trhoeto col Layer state when:\n\uf06c TrManessmsaigsesion Error is received Pfrroomto ctohle L ayer , or\n6.12.2.A1 .2.5 is receiv e Rd CfrHom_W thaei ting_Chunk. State\nRCH_Waiting_Chunk Chunked Shall\nOn e\uf06cntry to the ChunkSenderRespo sntsaetTe itmhee r Rx state machine :\n\uf06c Start the SenderRe.sponseTimer Section 8.3.3.1.1,\n\"SenderResponseTimer State Diagram\"\nSend notification SRT_Start to state machine (see S\nChunked Shall ). RCH_Processing_Extended_Message\nThe\uf06c Chu Rnxk State Machine tPrraontsoictiooln L atoy etrhe state when:\nA is received from the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 279\nChunked Shall RCH_Report_Error\nThe\uf06c Me sRsaxg Setate Machine Chun tkransition to the Protocol Laye rstate when:\n\uf06c A Chunk, Soethnedre rthRaens pao nseTi,m ise rreceived from the , or\n6.12.2.T1h.e2 .6 RCH_Report e_xEprirreosr. State\nChunked Shall RCH_Report_Error\nThe\uf06c Rx StaMtee sMsaagcehine enter the Chunked state:\nRCH_Waiting_Chunk RCH_Wait_For_Message_From_Protocol_Layer\nWhen any is received and the Rx State Machine is not in one of the states\nRCH_Report_E orrr or Chunked Shall .\nOn e\uf06cntry to the Poli csyta Eten gthinee Rx state machine :\n\uf06c Report the error to the Me.ssage MessageShall Policy\nEngine\nIf the state was entered because a was received, this be passed to the\nChunked . Shall RCH_Wait_For_Message_From_Protocol_Layer\nThe\uf06c Rx State Machine transition to the state when:\n\uf06c The eMrersosra hgaes been reported. Policy Engine\nAny received was passed to the .\nPage 280 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.12.2.1.3 Chunked Tx State Diagram\nFigure 6.61, \"Chunked Tx State Diagram\" Chunked\nChunked Message\nshows the state behavior for the Messa Tgxe State MachiCnheu. nTkhiinsg\nrecognizes whether transmitted s are involved and deals with sending chunks and waiting for\nchunk requests when they are. It alsFoi pgeurrfeo r6m.6s1 v Calhiduintyk echde Tckxs S otant ael lD riealgatreadm s related to .\nSoft Reset occured |\nExit from Hard Reset\nStart\nTCH_ Wait_ For_Message_Request_From_Policy_Engine\nActions on entry:\nClear Abort Flag\nInformed Non-Exten N de o d t C M h e u s n s k a in g g e Request | (Rx Chunking Abort Flag Set Extended C h M u e n s k s in a g g e & Request M to e s C s h a u g n e k p e a d s R se x d\nState != (Rx Chunking\nA Pa c T t s i s o C M n H s e _ o s P s n a a e g s n e s t _ t r D o y P : o r w ot n o _ c M ol e L s a s y a er ge P A M R r b o C e o t s H o r s t c _ a o W S g l_ e u a L _ p it a F p _ y r o F o e r o m r te ) r _ _ d & Reported Ac T ti C o C H ns h _ o P u n r n e e n k p t e r a y d : r _ e M _T e o ss _S a e g n e d _ A P b M R o ro C e rt t s H o N s S c _ a o o t W g a t l _ e t S a e L _ i u t a F ! _ = p y r F p o e o o m r) r r _ t _ & ed A C T l c e t a C io r H n E s x _ o t M e n n e e d n s e t s d r a y M : g e e ss _ a R ge e B c u e f i f v er e s d\n'Chunk Number To Send' = 0 Pass Message to Chunked Rx\nMessage\nPassed\nTran T s C m H i _ s W io a n i _ t C _F o o m r p _ lete P T r x o t E o r c r o o l r L fr a o y m er TCH_Report_Error Chunk Number Set\nActions on entry: A R c e t p i o o r n t s E o r n r o e r n t t o ry P : olicy Engine Any Message Received and\nnot in state\nTCH_Wait_Chunk_Request\nTCH_Construct_\nChunked_Message\nMessage Transmitted Actions on entry: Other\nreceived from Construct Message Chunk and pass Message\nProtocol Layer (Chunk Request Rcvd & to Protocol Layer Received\nChunk Number !=\nChunk Number to Send) |\n(ChunkSenderRequestTimer\nTCH_Message_Sent timeout & Chunk Number > 0)\nTransmission Chunk\nA In c f t o io rm ns P o o n l i e c n y t E ry n : gine of Message Error Passed\nSent\nChunk Request Rcvd &\nTCH_Sending_ Chunk Number =\nChunked_Message Chunk Number to Send\nMessage Transmitted Actions on entry:\nreceived from Protocol Layer &\nLast Chunk\nChunkSenderRequestTimer\ntimeout & Chunk Number = 0\nMessage Transmitted\nfrom Protocol Layer &\nNot Last Chunk\nTCH_Wait_Chunk_Request\nActions on entry:\nIncrement Chunk Number to Send\nStart ChunkSenderRequestTimer\n6.12.2.1.3.1 TCH_Wait_For_Message_Request_From_Policy_Engine State\nChunked Shall TCH_Wait_For_Message_Request_From_Policy_Engine\nThe\uf06c Tx State Machine enter the state:\n\uf06c At startup. Soft Reset\n\uf06c As a result of a Hard Reset occurring.\nOn exit TfrCoHm_ Wa ait_For_Me. ssage_Request_From_Policy_Engine Chunked\nOptional\nOn entry to the state the Tx state machine clears\nthe TCH_W Aabito_rFto Frl_aMge.ssage_Request_From_Policy_Engine Chunked\nPolicy Engine Message\nIn the state the Tx State Machine waits until the\nChunked sends it a S hRaelqluest. TCH_Pass_Down_Message\nThe\uf06c TEx xStteantdee Md aMchesinsaeg e transition to the Policy Engine state when:\n\uf06c A nMoens-sage Request is recePivoelidc yfr Eonmg itnhee , or Chunking\nA Request is received from the and the link is not .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 281\nChunked Shall TCH_Prepare_To_Send_Chunked_Message\nThe\uf06c Ex Ttexn Sdteadte M Mesascahginee transition to the Policy Engine Chunking state when:\nChuAnkne d RSehquaellsDt iiss craercdeived Mfreosmsa tghee , and the link is .\nTCH_Wait_For_Message_Request_From_Policy_Engine\nThe Tx State Machine the Request and remain in the\n\uf06c Chunked RCH_Wa sitt_aFtoe rw_Mheenss: age_From_Protocol_Layer\nOptional\nThe Rx state is any other than , and the\nChunked Abort Flag haSs hnaoltl bDeiescna irmdplemMenetsesadg.e TCH_Report_Error\nThe\uf06c C Thxu nSktaetde Machine thRe CH_Wait _RFeoqru_Mesets asnadg ee_nFtreorm th_eP rotocol_Layer state when:\nOptional\nThe Rx state is any other than and the\n6.12.2.1.3.2 Abort Fla g T hCasH b_ePeans ims_pDleomwennt_eMd.essage State\nTCH_Pass_Down_Message Chunked Shall Message\nProtocol Layer\nOn entry to the state the Tx State Machine pass the to the\nChunked . Shall TCH_Wait_For_Transmision_Complete\nThe\uf06c M Texs sSatgatee Machine transitioPnro ttoo cthoel Layer state when:\n6.12.2.T1h.e3 .3 has be eTnC pHas_sWeda tiot _thFeo r_Transmis.ion_Complete State\nChunked Shall TCH_Message_Sent\nThe\uf06c Messa Tgxe State Machine transition to the Protocol Layer state when:\nChunked Transmitted hSahs ablelen received from TthCeH _Report_Error.\nThe\uf06c Tx State Machine transition to the Protocol Layer state when:\n6.12.2.T1ra.3n.s4mission Erro r ThaCsH b_eMene rsesceaigveed_ Sfreonmt tShtea te .\nTCH_Message_Sent Chunked Shall\nOn e\uf06cntry to the Policy Engine state tMhees sage Tx State Machine :\nChunInkfeodrm the Sh athllat the haTs CbHee_Wn saeint_tF.or_Message_Request_From_Policy_Engine\nThe Tx State Machine transition to the state\nwhe\uf06cn: Policy Engine\n6.12.2.T1h.e3 .5 h aTs CbHee_nP inrefoprmareed._To_Send_Chunked_Message State\nTCH_Prepare_To_Send_Chunked_Message Chunked Shall\nOn e\uf06cntry to the state the Tx State Machine :\nChuSnekte 'dChunk Number To SShenadll' to zero. TCH_Construct_Chunked_Message\nThe\uf06c Tx State Machine transition to the state when:\n6.12.2.\u2018C1h.3un.6k Number To STeCndH' _hCaso bnesetnr suect tt_oC zheruon. ked_Message State\nTCH_Construct_Chunked_Message Chunked Shall\nOn e\uf06cntry to the MessageChunk stParteo ttohceo l Layer Tx State Machine :\nChuCnoknedstruct a Shal alnd pass it to the TCH_Sending_.Chunked_Message\nThe\uf06c M Texs sSatgateeC Mhuanchkine transition to thPer otocol Layer state when:\nChunTkheed haSs hbaeleln passed to the TCH_Wait_Fo.r_Message_Request_From_Policy_Engine\nThe Tx State Machine transition to the state\nwhen:\nPage 282 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Optional\n6.12.2.T1h.e3 .7 Abor t TFlCaHg i_sS seent.ding_Chunked_Message State\nChunked Shall TCH_Wait_Chunk_Request\nThe\uf06c Messa Tgxe State Machine transitionP troo tthoeco l Layer state when:\nChunked Transmitted isS rheaclelived from TCH_Me asnsda gthei_sS ewnats not the last chunk.\nThe\uf06c Messa Tgxe State Machine transitionP troo tthoeco l Layer state when:\nChunked Transmitted isS rheaclelived from TCH_Re panodrt t_hEirsr woras the last chunk.\nThe\uf06c Tx State Machine transition to the Protocol Layer state when:\n6.12.2.T1ra.3n.s8mission Erro r ThaCsH b_eWena rietc_eCivheud nfrkom_R tehqe uest State .\nTCH_Wait_Chunk_Request Chunked Shall\nOn e\uf06cntry to the state the Tx State Machine :\n\uf06c IncremCheunnt kCSheunndke NrRumeqbueers ttoT iSmenedr.\nChuSntkaerdt Shall . TCH_Report_Error\nThe\uf06c Chu Tnxk State Machine transition to theC hunk Number state when:\n\uf06c ACh unkSe RnedqeureRsetq huaess btTeeimn erreceived and the Chunk Numbe droes not equal Chunk Number to Send or\nChunked Shall has expired and TCH_Message_S eisn gtreater than zero.\nThe\uf06c Chun kTSxe Sntdateer RMeaqcuheinsetT imer transition to the Chunk Number state when:\nNote: has expired and Port Partner equCaalsb zlee rPolu. g Chunking Layer\nPolicy Engine Message Port Partner Cable Plug\nTGhoiso idsC tRhCe Mmeescshaagneism which allows the remote Chunk or to omit the Port Partner .\nThe Not_Suppo rwteildl rMeceesisvaeg ae Ca Sbelne tP sliuggnal if tIghen oreremote ChunkedMes soarg e is present\n( received) but does not send a Request. After this the remote will\nChunkseednd a Sh all , or the TCH_M weislls age_Re ctheeiv ed .\nThe\uf06c Tx StaMtees Msaagcehine Chun tkransition to the state when:\n6.12.2.A1n.y3 o.9ther t ThaCnH _Mes Rseaqguee_stR ies creecievievedd .State\nChunked Shall TCH_Message_Received\nThe\uf06c Tx StaMtee sMsaagcehine enter the Chunked state:\nTCH_Wait_Chunk_Request\nWhen any is received, and the Tx State Machine is not in the\nTCH_Message_Rece sivtaetde. Chunked Shall\nOn e\uf06cntry to the Extended Message state the Tx State Machine :\n\uf06c Clear the Message BCuhffuenrsk.ed\nChunPkaessd the received Sha ltlo Rx EngTiCnHe._Wait_For_Message_Request_From_Policy_Engine\nThe Tx State Machine transition to the state\nwhe\uf06cn: Message Chunked\n6.12.2.T1h.e3 r.1ec0eived TC hHas_ bReeepn oparsts_eEdr troo trh eS tate Rx Engine.\nTCH_Report_Error Chunked Shall\nOn e\uf06cntry to the Poli sctya Eten gthinee Tx State Machine :\nReport the error to the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 283\nChunked Shall TCH_Wait_For_Message_Request_From_Policy_Engine\nThe Tx State Machine transition to the state\nwhe\uf06cn:\n6.12.2T.h1e. 4error has b e eCnh ruepnokrteedd. Message Router State Diagram\nFigure 6.62, \"Chunked Message Router State Diagram\" Chunked\nMessage Chunked Chunked\nPolicy Engine shows the state behavior for the Message Router.\nThis determines to which state machine an incoming is routed to ( Rx, Tx or direct to\n). Figure 6.62 Chunked Message Router State Diagram\nStart\nSoft Reset occured | RTR_Wait_for_Message_From_Protocol_Layer\nExit from Hard Reset\nActions on entry:\nSent\nSent\nMessage Received from\nMessage Received from\nProtocol Layer &\nProtocol Layer &\nNot Doing Tx Chunks1 Doing Tx Chunks1\nRTR_Rx_Chunks RTR_Tx_Chunks\nActions on entry: Actions on entry:\nSend message to Rx Chunk Machine Send message to Tx Chunk Machine\n1) Doing Tx Chunks means that Chunked Tx State Machine is not in the TCH_Wait_For_Message_Request_From_Policy_Engine state.\n2) Messages are taken to include notification about transmission success or otherwise of Messages.\n6.12.2.1.4.1 RTR_Wait_for_Message_From_Protocol_Layer State\nRTR_Wait_for_Message_From_Protocol_Layer Chunked Protocol\nLayer Message\nIn the state the Message Router waits until the\nC hsuennkdesd it a received Sha.ll RTR_Rx_Chunks\nThe\uf06c Me sMsaegsesage Router tranPsriotitoonc otol L tahyee r stateC hwuhneknin: g Chunk\nChuAnk ed is received Sfrhoamll the R,T aRn_dT txh_eC hcoumnkbsined is not doing Tx s.\nThe\uf06c Me sMsaegsesage Router tranPsriotitoonc otol L tahyee r stateC hwuhneknin:g Chunk\n6.12.2.A1 .4.2 is receiv e Rd TfrRom_R thxe_ Chunks Stat,e and the combined is doing Tx s.\nRTR_Rx_Chunks Chunked Shall\nOn e\uf06cntry to the Message Csthautnek tehde Message Router :\n\uf06c Send the R toT Rth_We ait_for_M Rexs Ssatagtee_ MFraocmhi_nPer.otocol_Layer\nTransition to the state.\nPage 284 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.12.2.1.4.3 RTR_Tx_Chunks State\nRTR_Tx_Chunks Chunked Shall\nOn e\uf06cntry to the Message Csthautnek tehde Message Router :\n\uf06c Send the R toT Rth_We ait_for_M Texs Ssatagtee_ MFraocmhi_nPer.otocol_Layer\nTransition to the state.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 285\n6.12.2.2 Protocol Layer Message Transmission\n6.12.2.2.1 Common Protocol Layer Message Transmission State Diagram\nFigure 6.63, \"Common Protocol Layer Message Transmission State Diagram\"\nSource Sink Protocol Layer Message\nshows the state behavior, common\nbetween the Fig aunrde t6h.6e 3 Co,m fomr othne P rotocol Layer w Mheesns targaen sTmraitntisnmg ias sion Sta.t e Diagram\nStart Soft Reset Message from PHY Layer | Protocol Layer\nExit from Hard Reset message reception\nin PRL_Rx_Store_MessageID state |\nFast Role Swap signal transmitted |\nPRL_Tx_Discard_Message Fast Role Swap signal detected\nPRL_Tx_PHY_Layer_Reset Actions on entry:\nA R c e t s i e o t n P s H o Y n L e a n y t e ry r : D c i o s m ca p r l d e i t n e g I t in f r a a c n r n e s y m m m e is e n s s t i s o M a n g e e D s s i i s s a c g c a e u r I r d D r 4 e C a n o n t u l d y n a te w r aiting\nPRL_Tx_Layer_Reset_for_Transmit\nPHY Layer reset\ncomplete Actions on entry:\nReset MessageIDCounter.\nProtocol Layer message reception transitions to\nPRL_Rx_Wait_for_PHY_Message state.\nSoft Reset Message request received Layer Reset Complete\nPRL_Tx_Wait_for_Message_Request from Policy Engine PRL_Tx_Construct_Message\nActions on entry:\nActions on entry: Message request received Construct message\nReset RetryCounter from Policy Engine (except Soft Reset) Pass message to PHY Layer\nP o o f l T ic r y a n E s n m gi i n s e si o in n f o E rm rro e r d (Re s t m ry a C l n o l o E u t n x C t t e e a r n b d (cid:148) l e e n d R P M l e u t e g ry s & C sa o g u e n 3 t) & Me P ss H a Y g e L a s y e e n r t to\nm Po e i l n s ic s fo y a r g E m e n e g s d i e n n e t A I I T P n n r c R c f a t o r i n L o r e s m n _ m m T s e P i x o n s o _ n s t l T i i M e o c r n n y e a t s E E n r s y n r s a r : g m g o i e n r i I e s D s o C i f o o u n n _ t E er rror Ex > t ( e n R C n R e a d e t b e r l t y a l d r e C y r g M C P o e l o u e u u n s g s n t e a | t) r g | e3 P A I R f R c e D t t L i r F o y _ P n T C s o o x r o u _ n U n C t F h e e P n e r t i c r n k y c : _ r R em et e r n y t C a o nd u n ch t e e c r k Mess C ag R e C T d R i i s m e c c e a e o r iv d u e e t T d | i m bu e s r Idle2 P A In R c i t t L i i o a _ n T li s z x e o _ n W a n e a d n i t r t r u _ y f n : o C r R _P CR H e Y ce _r iv e e s T p im on er s 1 e\nGoodCRC response\nMessageID mismatch received from PHY Layer\nPRL_Tx_Message_Sent PRL_Tx_Match_MessageID\nActions on entry: MessageID match Actions on entry:\nIncrement MessageIDCounter Match MessageIDCounter and\nInform Policy Engine message sent response MessageID\n1) The CRCReceiveTimer is only started after the PHY has sent the message. If the message is not sent due to a busy channel, then the CRCReceiveTimer will not be started (see Section 6.6.1 \u201cCRCReceiveTimer\u201d).\n2) This indication is sent by the PHY Layer when a message has been Discarded due to CC being busy, and after CC becomes idle again (see Section 5.7 \u201cCollision Avoidance\u201d). The CRCReceiveTimer is not running\nin this case since no message has been sent.\n3) A \u201csmall\u201d Extended Message is either an Extended Message with Data Size (cid:950)(cid:3)MaxExtendedMsgLegacyLen bytes or an Extended Message with Data Size > MaxExtendedMsgLegacyLen bytes that has been\nChunked. A \u201clarge\u201d Extended Message is an Extended Message with Data Size > MaxExtendedMsgLegacyLen bytes that has not been Chunked.\n4) See Section 6.11 \u201cMessage Discarding\u201d for details of when Messages are Discarded .\n6.12.2.2.1.1 PRL_Tx_PHY_Layer_Reset State\nProtocol LayerShall PRL_Tx_PHY_Layer_Reset\nThe\uf06c enter the state:\n\uf06c At startup. Soft Reset PHY Layer\n\uf06c As a result of a Hard Reset request being received by the .\nOn exit PfrRoLm_T ax _PHY_Laye.r_Reset Protocol LayerShall PHY Layer\nMessage\nOn entry to the state the reset the (clear any outstanding\nProtso aconld L eanyaebrlSeh caolml munications). PRL_Tx_Wait_for_Message_Request\nThe\uf06c P HY La tyrearnsition to the state when:\n6.12.2.W2h.1en.2 the P rResLe_t Tisx c_oWmapliett_ef.or_Message_Request State\nPRL_Tx_Wait_for_Message_Request Protocol Layer Policy Engine\nMessage\nIn the state the waits until the directs it to send\na \uf06c . PRL_Tx_Wait_for_Message_Request Protocol LayerShall\nRetryCounter\nOn entry to the state the reset the\n.\nPage 286 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nProtocol LayerShall PRL_Tx_Construct_Message\nThe\uf06c Message transition to the Policy Engine stateS wofhte_Rn:esetMessage\nProtAo col Layer rSehqaulelst is received fromP RthLe_T x_Layer_Res ewt_hfiocrh_ Tisr naonts ma it .\nThe\uf06c Message transition to the Policy Engine Soft_R setsaetteM wehsesang:e\n6.12.2.A2 .1.3 request i sP rRecLe_ivTexd_ fLroamye trh_eR eset_for_T wrahnicshm is iat State .\nPRL_Tx_Layer_Reset_for_Transmit Protocol LayerShall MessageIDCounter\nProtocol LayerShall Protocol LayerMessage PRL_Rx_Wait_for_PHY_Message\nOn enStercyt itoon t 6h.e1 2.2.3.1, \"PRL_Rx_Wait_for_PHY_Messa sgtea tset athtee\" reset theM essageID .\nThe transition reception to the state\n(see Protocol LayerShall PRL_Tx_Construct_)M ine sosradgeer to reset the stored .\nThe\uf06c transition to the state when:\n6.12.2.T2h.e1 l.a4yer reset acti o PnRs iLn_ tThxis_ sCtaotne shtarvue cbte_eMn ceosmspalgeete dS.tate\nPRL_Tx_Construct_Message Protocol LayerShall Message\nPolicy Engine Message Message PHY Layer\nOn entry to the state the construct the requested by the\nProtocol L, oary erresSehnadl la previously constPrRuLct_eTdx _Wait_fo,r a_PnHd Yth_Rene sppaosns stehis to the .\nThe\uf06c Messag e transition to the PHY Layer state when:\n6.12.2.T2h.e1 .5 has be ePnR sLen_tT txo_ tWhea it_for_P.HY_Response State\nPRL_Tx_Wait_for_PHY_Response Message Protocol LayerShall\nCRCReceiveTimer Section 6.6.1, \"CRCReceiveTimer\"\nOn entry to the state, once the has been sent, the\ninitiaPlrizoeto acnodl Lrauyne trhSeh all (sPeRe L_Tx_Match_MessageID ).\nThe\uf06c GoodCRC Mess atrgaensition to the PHY Layer state when:\nProtAo col LayerS hall response is rePcReLiv_eTdx _fCrohmec kth_Re etryCounte.r\nThe\uf06c CRCRe ceiveT tirmanesrition to the state when:\n\uf06c The PHY Layer times out.Message Discarded\nIdle Section 5.7, \"Collision Avoidance\"\nOr the indicates that a has been due to the channel being busy but the\n6.12.2.c2ha.1n.n6el is now (PseReL _Tx_Match_MessageID Sta).te\nPRL_Tx_Match_MessageID Protocol LayerShall MessageIDCounter\nMessageID GoodCRCMessage\nOn entry to the state the compare the and the\nProtoco ol Lf athyee rreScheaivlled PRL._Tx_Message_Sent\nThe\uf06c Messa geIDC toruanntseitrion to theM essageID staGteo wodhCeRn:CMessage\nProtTohceo l LayerShall and the PRL_Tx_Ch oefc kth_Re ertercyeCivoeudn ter match.\nThe\uf06c Messa geIDC toruanntseitrion to theM essageID Goo sdtCaRteC wMheesnsa:ge\n6.12.2.T2h.e1 .7 PRL a_nTdx t_hMe essage_Se onf tth Set raetceeived do not match.\nPRL_Tx_Message_Sent Protocol LayerShall MessageIDCounter\nPolicy Engine Message\nOn entry to the state the increment the and inform\nthe Protocol Laye trhSaht athlle has beePnR sLe_nTtx._Wait_for_Message_Request\nThe\uf06c Policy E ngine transition to the Message state when:\nThe has been informed that the has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 287\n6.12.2.2.1.8 PRL_Tx_Check_RetryCounter State\nPRL_Tx_Check_RetryCounter Protocol Layer DFP UFPShall\nRetryCounter Message\nOn entry to the state the in a or increment the value of\ntNhoet e: Cable Plu agnd then check iMt iens soargdeer to determine whetherR iett irsy nCeocuensstearry to retry sending the .\nProtocol LayerSsh adlol not retry PsR aLn_dT xs_oC doon sntortu ucts_eM theses age . Message\nThe transition to the state in order to retry sending\nwhe\uf06cn: RetryCounter nRetryCount\n\uf06c Ca \u2264b le Plug and\n\uf06c This is notE ax tended Mes saangde Data Size MaxExtendedMsgLegacyLen\n\uf06c This is an Extended Message with C h\u2264u nked or\nProtTohciosl iLsa ayne rShall that hPaRs Lb_eTexn_ Transmi.ssion_Error\nThe\uf06c RetryCoun ter n trRaentsriytCioonu tnot the state when:\n\uf06c Cable P> lug or\n\uf06c This is a Extended ,M wehsiscahg edoes noDta rteat rSyiz.e MaxExtendedMsgLegacyLen Chunked\n6.12.2.T2h.i1s .i9s an PRL_T xw_iTthr ansmiss >io n_Error State that has not been .\nPRL_Tx_Transmission_Error Protocol LayerShall MessageIDCounter\nPolicy Engine\nOn entry to the state the increment the and\ninforPmro tthoec ol LayerShall of the transmissioPnR Ler_Troxr_.Wait_for_Message_Request\nThe\uf06c Policy E ngine transition to the state when:\n6.12.2.T2h.e1 .10 h aPs RbeLe_nT ixn_foDrmisecda orfd t_hMe terasnssamgies sSiotna teerror.\nProtocol LayerMessage Shall PRL_Tx_Discard_Message\n\uf06c Protoc ol LayerM treasnsasgmeission enter the Message state whenever:\n\uf06c Fast Role S wap Req ureescteption receives an incominSge ction 5.8 .o5r.6, \"Fast Role Swap Transmission\"\n\uf06c The Fast Role Swap Request is being transmiStteecdti (osne 5e .8.6.3, \"Fast Role Swap Detection\" )\nThe PRL_Tx_Discard_Me isss adegteected (see Message ). Protocol\nLayerShallDiscard Message Section 6.11, \"Message Discarding\"\nMOne sesnatgrye ItDo Cthoue nter state, if there is a queued awaiting transmission, the\nthe according to the rules in and increment the\nProtocol LayerS.hall PRL_Tx_PHY_Layer_Reset\nThe\uf06c transition to tMhee ssage state when:\nDiscarding is complete i.e., the queue is empty.\nPage 288 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.12.2.2.2 Source Protocol Layer Message Transmission State Diagram\nFigure 6.64, \"Source Protocol Layer Message Transmission State Diagram\" Protocol\nLayer Source Message\nshows the state behavior for the\nin a wFhigeunr ter a6n.6sm4 iStotiunrgc ae Protoco.l Layer Message Transmission State Diagram\nPRL_Tx_Src_Sink_Tx\nActions on entry:\nSet Rp = SinkTxOk\nRp set End of AMS notification received\nfrom Policy Engine\nPRL_Tx_Wait_for_Message_Request\nStart of AMS notification\nreceived from Policy Engine\nPRL_Tx_Src_Source_Tx\nActions on entry:\nSet Rp = SinkTxNG\nMessage request\nfrom Policy Engine\nPRL_Tx_Src_Pending\nActions on entry:\nStart SinkTxTimer\nSoft Reset Message pending & Message pending (except Soft Reset) &\nSinkTxTimer timeout SinkTxTimer timeout\nPRL_Tx_Layer_Reset_for_Transmit PRL_Tx_Construct_Message\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 289\n6.12.2.2.2.1 PRL_Tx_Src_Sink_Tx State\nPRL_Tx_Src_Sink_Tx Source R SinkTxOK Sink Atomic Message\nSequence AMS\nIn the state the sets p to allowing the to start an\nProto (col La).y er SourceShall PRL_Tx_Wait_for_Message_Request\nPRL_Tx_Src_Sink_Tx\nThe in a transition from the state to the\n\uf06c state when: Policy Engine AMS\nA notificPaRtiLo_nT xis_ Srrecc_eSivinekd_ fTrxom the Protocol L atyheart Sthhea lelnd of an PhHasY bLeaeyne rreacRhed.SinkTxOK\nOn ePnrtroyto tcoo tlh Lea yerShall state PthReL _Tx_Wait_for_M essa rgeeq_uReesqtu tehset to p to .\nThe\uf06c R transition to the state when:\n6.12.2.2p .h2a.s2 been set. PRL_Tx_Src_Source_Tx State\nPRL_Tx_Src_Source_Tx Source R SinkTxNG Source Atomic Message\nSequence AMS\nIn the state the sets p to allowing the to start an\nProto (col La).y er SourceShall PRL_Tx_Wait_for_Message_Request\nPRL_Tx_Src_Source_Tx\nThe in a transition from the state to the\n\uf06c state when: Policy Engine AMS\nA notificPaRtiLo_nT xis_ Srrecc_eSivoeudr cfreo_Tmx the Protoco lt hLaaty earnS hal lwill bRe staSritninkgT.xNG\nOn ePnrtroyto tcoo tlh Lea yerShall staPteR tLh_eT x_Src_Pending set p to .\nThe\uf06c Message transition to the Policy Engine state when:\n6.12.2.A2 .2.3 request i sP rRecLe_ivTexd_ fSrrocm_ Ptheen ding State.\nPRL_Tx_Src_Pending Protocol Layer Message\nIn the PRL_Tx_Src_ sPteanted itnhge SinkT hxaTsi ma erShall buffered ready for transmission.\nOn ePnrtroyto tcoo tlh Lea yerShall stateP tRhLe_ Tx_Construct _Mess baeg einitialized and run.\nThe\uf06c Mes staragnesition to the Policy Engine So sftta_Rtee wsehteMne:ssage\n\uf06c The pSiennkdTinxgT imer request from the is not a and\nProtTohceo l LayerShall times out. PRL_Tx_Layer_Reset_for_Transmit\nThe\uf06c Mes staragnesition to the Policy Engine Soft_ResetM esstasateg ewhen:\n\uf06c The pSiennkdTinxgT imer request from the is a and\nThe times out.\nPage 290 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.12.2.2.3 Sink Protocol Layer Message Transmission State Diagram\nFigure 6.65, \"Sink Protocol Layer Message Transmission State Diagram\" Protocol\nLayer Sink Message\nshows the state behavior for the\nin a whenF itgruanresm 6i.6tt5in Sgi na k Protoc.ol Layer Message Transmission State Diagram\nPRL_Tx_Wait_for_Message_Request\nFirst Message in AMS notification received\nfrom Policy Engine\nPRL_Tx_Snk_Start_of_AMS\nActions on entry:\nMessage Request from Policy Engine\nPRL_Tx_Snk_Pending\nActions on entry:\nMessage pending (except Soft Reset) &\nSoft Reset Message pending Rp = SinkTxOk\nPRL_Tx_Layer_Reset_for_Transmit PRL_Tx_Construct_Message\n6.12.2.2.3.1 PRL_Tx_Snk_Start_of_AMS State\nPRL_Tx_Snk_Start_of_AMS Protocol Layer Message Sink AMS\nIn thPer otocol Layer SinkShall state the PRL w_Taxi_tWs faoirt t_hfoer f_iMrsets sage_Re iqnu ae st initiated .\nPRL_Tx_Snk_Start_of_AMS\nThe in a transition from the state to the\n\uf06c state when: Policy Engine Message Sink\nAMS\nA notification is received from the that the next the will send is the start of\nProtaonc ol La.yerShall PRL_Tx_Snk_Pending\nThe\uf06c Message transition to the Policy Engine state when:\nA request is received from the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 291\n6.12.2.2.3.2 PRL_Tx_Snk_Pending State\nPRL_Tx_Snk_Pending Protocol Layer Message Sink AMS\nR SinkTxOK Message\nIn the state the has the first in a initiated ready to send and\nis waPirtiontgo cfoolr Lapy teor tSrhaanlslition to P bReLf_oTrex _sCeonndsitnrgu tchte_M essage.\nThe\uf06c Message transition to the Soft_ResetMessage state when:\n\uf06c AR iSsi PneknTdxiOnKg that is not a and\nProtopc iosl sLeaty teor Shall . PRL_Tx_Layer_Reset_for_Transmit\nThe\uf06c Soft_Rese tMes straagnesition to the state when:\nA is pending.\nPage 292 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n6.12.2.3 Protocol Layer Message Reception\nFigure 6.66, \"Protocol layer Message reception\" Protocol Layer\nMessage\nshows the state behavior for the when receiving a\n. Figure 6.66 Protocol layer Message reception\nPRL_Rx_Layer_Reset_for_Receive\nActions on entry:\nReset MessageIDCounter and clear stored MessageID value\nSoft Reset request from Policy Engine | Protocol Layer message transmission transitions to\nExit from Hard Reset PRL_Tx_PHY_Layer_Reset state.\nStart\nSoft Reset Message received Soft Reset complete\nfrom PHY\nMessage received\nfrom PHY (except Soft Reset)\nPRL_Rx_Wait_for_PHY_message PRL_Rx_Send_GoodCRC\nActions on entry: Message discarded bus Idle1 A Se c n ti d o n G s o o o n d C e R n C tr m y: essage to PHY\nMessage passed to Mes s M a e g s e s ID ag = e I s D tored (GoodCRC sent | Message discarded bus Idle1)\nPolicy Engine\nPRL_Rx_Store_MessageID\nPRL_Rx_Check_MessageID\nActions on entry: MessageID <> stored Actions on entry:\nProtocol Layer message transmission transitions\nto PRL_Tx_Discard_Message state2. MessageID | If there is a stored value compare\nStore new MessageID no stored value MessageID with stored value.\nPass message to Policy Engine3\n1) This indication is sent by the PHY when a message has been Discarded due to CC being busy, and after CC becomes idle again\n(see Section 5.7 \u201cCollision Avoidance\u201d). Two alternate allowable transitions are shown.\n2) In the case of a Ping message being received, in order to maintain robust communications in the presence of collisions, the outgoing message Should\nNot be Discarded.\n3) See Section 6.11 \u201cMessage Discarding\u201d for details of when Messages are discarded.\n6.12.2.3.1 PRL_Rx_Wait_for_PHY_Message state\nProtocol LayerShall PRL_Rx_Wait_for_PHY_Message\nThe\uf06c enter the state:\n\uf06c At startup. Soft Reset Policy Engine\n\uf06c As a result of a Hard Reset request from the .\nPROLn_ Rexxi_tW fraoimt_ fao r_PHY_Mes.s age Protocol Layer PHY Layer\nMessage\nIn the state the waits until the passes up a received\nProt.ocol LayerShall PRL_Rx_Send_GoodCRC\nThe\uf06c Message transition to theP HY Layer state when:\nProtAo col Layer iSsh paalslsed up from the PRL_Rx_L.ayer_Reset_for_Receive\nThe\uf06c Soft_Rese tMes straagnesition to the PHY Layer state when:\nA is received from the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 293\n6.12.2.3.2 PRL_Rx_Layer_Reset_for_Receive state\nPRL_Rx_Layer_Reset_for_Receive Protocol LayerShall MessageIDCounter\nMessageID Protocol LayerShall Protocol LayerMessage\nOPRn Le_nTtxr_yW toa tiht_ef or_Message_Request Se csttiaotne 6th.1e2 .2.2.1.2, \"PRL_T x_Wa irte_fsoert_ tMhees sage_Request State\" and\nclear the stored . The transition transmission to the\nProtocol LayerShall stateP (RseLe_ Rx_Send_GoodCRC ).\nThe\uf06c Soft Re set transition to the State when:\n6.12.2T.h3e. 3 a c tPioRnLs i_nR txhi_sS setanted h_aGveo boedenC cRoCm pslteatetde.\nPRL_Rx_Send_GoodCRC Protocol LayerShall GoodCRCMessage\nPHY Layer\nOn entry to the state the construct a and request\nthe Protocol L atoy etrraSnhsamllit it. PRL_Rx_Check_MessageID\nThe\uf06c GoodC RCMe tsrsaangseition to the PHY Layer state when:\nThPeH Y Layer has beMenes psaagsseed to the Discarded. CC CC Idle\nSection 5.7, \"Collision Avoidance\" Protocol LayerShall\nWhen the indicates that a has been due to being busy but is now (see\n\uf06c PRL_Rx)_,C thhee ck_MessageID either:\n\uf06c Transition to the PRL_Rx_Wait_for_PHY_Mes sstaagtee or\n6.12.2T.r3a.n4sition to th e P RL_Rx_Check_MessageI sDta tset.ate\nPRL_Rx_Check_MessageID Protocol LayerShall MessageID\nMessage\nOn entry to the state the compare the of the received\nProt owciotlh L iatsy esrtoSrheadl lvalue if a value hasP RprLe_vRixo_uWslayi bt_efeonr_ sPtHorYe_dM. essage\nThe\uf06c Messa geID transition to thMee ssage MessageI sDtate when: Message\nShall Discarded\nThe of the received equals the stored value since this is a retry\nProtwohcoicl hL ayerS hbea ll . PRL_Rx_Store_MessageID\nThe\uf06c Messa geID transition to thMe essage state Mwehsesna:geID\nMessage\nThe of the received does not equal the stored value since this is a new\n\uf06c or Message MessageID\n6.12.2T.h3i.s5 is the first r ePcReivLe_dR x_Stor aen_dM noe ssageID svtaalutee is currently stored.\nPRL_Rx_Store_MessageID Protocol LayerShall Protocol LayerMessage\nPRL_Tx_Discard_Message MessageID\nOMne sesnatgrye ItDo the Message state thMee ssage Polic ytr Eanngsiitnieon\ntransmission to the state, replace the stored value of with the value of\nProtoco iln L athyee rreScheaivlled and paPsRsL t_hRex _Wait_fo urp_P tHo Yth_Me essage .\nThe\uf06c Messag e transition to the Policy Engine state when:\n6.12.2T.h4e hHasa breden R peassseedt u op ptoe trhea tion .\nFigure 6.57, \"Outline of States\" Protocol Layer Hard Reset Cable\nReset Policy Engine Hard ResetSignaling Cable ResetSignaling PHY Layer\nSection 6.8.3, \"Hard Reset\" sSheocwtiso nth 6e. 8s.t4a,t \"eC baebhlea vRieosre fto\"r the when receiving a or\nrequest from the or or from the (see also\nand ).\nPage 294 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 6.67 Hard/Cable Reset\nHard Reset request received from Policy Engine2 |\nCable Reset request received from Policy Engine4 |\nHard Reset signalling received By PHY Layer |\nCable Reset signalling received By PHY Layer3\nPRL_HR_Reset_Layer\nActions on entry:\nReset MessageIDCounter.\nProtocol Layer message transmission transitions to\nPRL_Tx_Wait_For_Message_Request state.\nProtocol Layer message reception transitions to\nPRL_Rx_Wait_for_PHY_Message state.\nProtocol Layer reset complete & Protocol Layer reset complete &\n(Hard Reset was Initiated by Policy Engine |(Hard Reset was initiated by Port Partner |\nCable Reset was Initiated by Policy Engine) Cable Reset received by Cable Plug)\nPRL_HR_Request_Hard_Reset PRL_HR_Indicate_Hard_Reset\nActions on entry: Actions on entry:\nRequest PHY to perform a Hard Reset or Inform the Policy Engine of the Hard\nCable Reset Reset or Cable Reset\nPHY Hard Reset request sent |\nPHY Cable Reset request sent\nPRL_HR_Wait_For_PHY_Hard_Reset_Complete\nActions on entry:\nStart HardResetCompleteTimer\nWait for Hard Reset or Cable Reset complete\nindication from PHY\nPolicy Engine informed\nHard Reset complete from PHY |\nCable Reset complete from PHY |\nHardResetCompleteTimer timeout1\nPRL_HR_PHY_Hard_Reset_Requested\nActions on entry:\nInform Policy Engine Hard Reset or Cable Reset\nrequest has been sent\nPolicy Engine informed\nPRL_HR_Wait_For_PE_Hard_Reset_Complete\nActions on entry:\nWait for Hard Reset or Cable Reset complete indication from\nPolicy Engine.\nHard Reset complete from Policy Engine |\nCable Reset complete from Policy Engine\nPRL_HR_PE_Hard_Reset_Complete\nActions on entry:\nInform Physical Layer Hard Reset or Cable\nReset is complete\nPhysical Layer informed\nExit from Hard Reset\n1) If the HardResetCompleteTimer timeout occurs this means that the PHY is still waiting to send the Hard Reset due to a non-idle channel. This condition will be cleared once the PE Hard Reset is completed.\n2) Cable Plugs do not generate Hard Reset signaling but are required to monitor for Hard Reset signaling between the Port Partners and respond by resetting.\n3) Cable Reset signaling is only recognized by a Cable Plug.\n4) Cable Reset signaling cannot be generated by Cable Plugs.\n6.12.2.4.1 PRL_HR_Reset_Layer state\nPRL_HR_Reset_Layer Protocol Layer\nHard Reset Cable Reset Hard Reset\nTMhees sage State defiHneasr tdh Re emseotdSei gonf aolipnegration of both the transmission and\nreception state machines during a PHY La yoerr . During Hard R ensoe tUSB PoweCra bDleel iRveesreyt Protocol\ns are sent or receMiveesds;a ognely is presenCta abfltee Pr lwughich the communication channel is\nassumed to haveM baeyen disabled by the until completion of the . During no USB\nPower Delivery Protocol s are sent to or received by the but other USB Power Delivery\ncommPruontoiccaotli oLna yerSh caolnltinue. PRL_HR_Reset_Layer\nThe\uf06c Hard Res et enter the Policy sEtnagtein ferom any other state when:\n\uf06c AH ard ResetS iRgenqaluinegst is received from theP HY Layer or\nis received from the or\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 295\n\uf06c Cable Reset Policy Engine\n\uf06c ACa ble ResetS iRgenqaluinegst is received from theP HY Layer or\nPRL_H R_Reset i_sL raeyceerived from Pthroet ocol Layer.Shall MessageIDCounter Shall\nProtocol Layer Protocol\nOLany eenrtry to the Sh astlalte the PRL _Tx_W reasiet_tf tohre_ Message_Request . It aPlrsoot roecsoelt\nLthaey esrtates of the S thraanllsmission and recePpRtiLo_nR sxt_aWtea mita_fcohri_nPeHs Yto_M theesisra sgtaerting points. The\ntransmission state machine transition to the state. The\nP rroetcoecpotli oLnay setratSeh malalchine transiPtRioLn_ HtoR t_hRee quest_Hard_Reset state.\nThe\uf06c Protoc ol Lay etrransition to the state when:\n\uf06c The Hard Reset 's reset is complete and Policy Engine\n\uf06c The Cable Reset request has originated from the Policy Engine or\nProtTohceo l LayerShal lrequest has originPaRteLd_ HfrRo_mIn tdhiec ate_Hard_Res.et\nThe\uf06c Protoc ol Lay etrransition to the state when:\n\uf06c The Hard Reset 's reset is complete and PHY Layer\n\uf06c ThCea ble Reset request has been passed up from thPeH Y Layer C oarble Plug\n6.12.2A.4 .2 re q PueRstL h_aHs Rbe_eInn pdaiscseadt eup_ Hfroamrd th_eR eset sta (te only).\nPRL_HR_Indicate_Hard_Reset Protocol LayerShall Policy Engine\nHard ResetSignaling Cable ResetSignaling\nOn entry to the state the indicate to the that\neithePrr otocol Layer Shall or P RL_HR_W haasit b_feoern_ PrEec_Heiavredd_.Reset_Complete\nThe\uf06c transPiotiloicny tEon tghien e state when:\n6.12.2T.h4e. 3indication t o P thReL _HR_Requ heass tb_eHena srednt_.Reset state\nPRL_HR_Request_Hard_Reset Protocol LayerShall PHY Layer\nHard ResetSignaling Cable ResetSignaling\nOn entry to the state the request the to send either\nProtoco l LayerS hoarl l PR.L_HR_Wait_for_PHY_Hard_Reset_Complete\nThe\uf06c PHY La yerH atrradn Rsietsioent Stoig nthaeli ng state when:\n\uf06c The PHY Layer Cable Reset Signaling request has been sent or\n6.12.2T.h4e. 4 PRL_HR _Wait_ froeqru_ePstH hYas_ Hbeaenr dse_nRt.eset_Complete state\nPRL_HR_Wait_for_PHY_Hard_Reset_Complete Protocol LayerShall\nHardResetCompleteTimer PHY Layer Hard Reset Cable Reset\nIn the state the start the\nand wait for the to indicate that the or has been\ncompPlreotteodc.ol LayerShall PRL_HR_PHY_Hard_Reset_Requested\nThe\uf06c Hard Res et transition to the PHY Layer state when:\n\uf06c A Cable Reset complete indication is received from the PHY Layer or\n\uf06c A HardRes ectoCmopmleptlee tienTdiicmaetiron is received from the or\n6.12.2T.h4e. 5 PRL_HR_PH tYim_eHs aourtd._Reset_Requested state\nPRL_HR_PHY_Hard_Reset_Requested Protocol LayerShall Policy Engine\nPHY Layer Hard Reset Cable Reset\nOn entry to the state the inform the that\nthe Protocol L ahyaesr bSeheanl lrequested to perfoPrRmL _aH R_Wait_fo ro_rP E_Hard_Re.set_Complete\nThe transition to the state when:\nPage 296 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Policy Engine\n6.12.2T.h4e. 6Indication t o P thReL _HR_Wait h_faos rbe_ePnE s_eHnta. rd_Reset_Complete state\nPRL_HR_Wait_for_PE_Hard_Reset_Complete Protocol LayerShall Policy Engine\nHard Reset Cable Reset\nIn the state the wait for the to\nindicPartoet tohcaotl tLhaey erShall or P hRaLs_ bHeRe_nP cEo_Hmaprledt_eRde.set_Complete\nThe\uf06c Hard Res et transition to the Policy Engine state when:\n\uf06c A Cable Reset complete indication is received from the Policy Engine or\n6.12.2A.4 .7 co m PpRleLte_ HindRic_aPtiEon_H is arercde_ivRede sfreotm_ Cthoem plete .\nPRL_HR_PE_Hard_Reset_Complete Protocol LayerShall PHY Layer\nHard Reset Cable Reset\nOn entry to the state the inform the that the\nProtoc oolr L ayerShall is complete. Hard Reset\nThe\uf06c PHY La yer exit from the aHndar rde tRuersne tto normal operation when:\nHard ResetSignaling Idle Shall\nThe has been informed that the is complete so that it will re-enable the\ncommunications channel. If is still pending due to a non- channel this be\n\uf06c clearPeHdY a nLady neort sent or Cable Reset\nThe has been informed that the is complete.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 297\n6.12.3 List of Protocol Layer States\nTable6.75, \"Protocol Layer States\"\nlists Tthaeb sleta6te.7s5 u s Perdo btyo cthoel Lvaayrieoru Sst sattaetse machines.\nState Name Section\nProtocol Layer Message Transmission\nCommon Protocol Layer Message Transmission\nPRL_Tx_PHY_Layer_Reset Section 6.12.2.2.1.1\nPRL_Tx_Wait_for_Message_Request Section 6.12.2.2.1.2\nPRL_Tx_Layer_Reset_for_Transmit Section 6.12.2.2.1.3\nPRL_Tx_Construct_Message Section 6.12.2.2.1.4\nPRL_Tx_Wait_for_PHY_Response Section 6.12.2.2.1.5\nPRL_Tx_Match_MessageID Section 6.12.2.2.1.6\nPRL_Tx_Message_Sent Section 6.12.2.2.1.7\nPRL_Tx_Check_RetryCounter Section 6.12.2.2.1.8\nPRL_Tx_Transmission_Error Section 6.12.2.2.1.9\nPRL_Tx_Discard_Message Section 6.12.2.2.1.10\nSource Protocol Layer Message Transmission\nPRL_Tx_Src_Sink_Tx Section 6.12.2.2.2.1\nPRL_Tx_Src_Source_Tx Section 6.12.2.2.2.2\nPRL_Tx_Src_Pending Section 6.12.2.2.2.3\nSink Protocol Layer Message Transmission\nPRL_Tx_Snk_Start_of_AMS Section 6.12.2.2.3.1\nPRL_Tx_Snk_Pending Section 6.12.2.2.3.2\nProtocol Layer Message Reception\nPRL_Rx_Wait_for_PHY_Message Section 6.12.2.3.1\nPRL_Rx_Layer_Reset_for_Receive Section 6.12.2.3.2\nPRL_Rx_Send_GoodCRC Section 6.12.2.3.3\nPRL_Rx_Check_MessageID Section 6.12.2.3.4\nPRL_Rx_Store_MessageID Section 6.12.2.3.5\nHard Reset Operation\nPRL_HR_Reset_Layer Section 6.12.2.4.1\nPRL_HR_Indicate_Hard_Reset Section 6.12.2.4.2\nPRL_HR_Request_Hard_Reset Section 6.12.2.4.3\nPRL_HR_Wait_for_PHY_Hard_Reset_Complete Section 6.12.2.4.4\nPRL_HR_PHY_Hard_Reset_Requested Section 6.12.2.4.5\nPRL_HR_Wait_for_PE_Hard_Reset_Complete Section 6.12.2.4.6\nPRL_HR_PE_Hard_Reset_Complete Section 6.12.2.4.7\nPage 298 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable6.75 Protocol Layer States (Continued)\nState Name Section\nChunking\nChunked Rx\nRCH_Wait_For_Message_From_Protocol_Layer Section 6.12.2.2.1.1\nRCH_Pass_Up_Message Section 6.12.2.2.1.1\nRCH_Processing_Extended_Message Section 6.12.2.2.1.1\nRCH_Requesting_Chunk Section 6.12.2.2.1.1\nRCH_Waiting_Chunk Section 6.12.2.2.1.1\nRCH_Report_Error Section 6.12.2.2.1.1\nChunked Tx\nTCH_Wait_For_Message_Request_From_Policy_Engine Section 6.12.2.1.3.1\nTCH_Pass_Down_Message Section 6.12.2.1.3.2\nTCH_Wait_For_Transmision_Complete Section 6.12.2.1.3.3\nTCH_Message_Sent Section 6.12.2.1.3.4\nTCH_Prepare_To_Send_Chunked_Message Section 6.12.2.1.3.5\nTCH_Construct_Chunked_Message Section 6.12.2.1.3.6\nTCH_Sending_Chunked_Message Section 6.12.2.1.3.7\nTCH_Wait_Chunk_Request Section 6.12.2.1.3.8\nTCH_Message_Received Section 6.12.2.1.3.9\nTCH_Report_Error Section 6.12.2.1.3.10\nChunked Message Router\nRTR_Wait_for_Message_From_Protocol_Layer Section 6.12.2.1.4.1\nRTR_Rx_Chunks Section 6.12.2.1.4.2\nRTR_Tx_Chunks Section 6.12.2.1.4.3\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 299"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.13", "title": "Message Applicability", "page": 300, "level": 2, "parent_id": "6", "full_path": "6.13 Message Applicability", "tags": [], "text": "6.13 Message Applicability\nMessage Port\nThe folloMweisnsga gtaebles outline the s supportAeMd Sby a given , dMeepsesnadgienSgh oanl lits capability.\nTable6.76, \"Message Applicability Abbreviations\"\nWhen a is supported the feature and the implied by the also be supported. The\nabbreviations in are used in this section to denote the level of\nsupport required. Table6.76 Message Applicability Abbreviations\nAbbreviation Meaning Description\nN Normative Shall Port Cable Plug\nCN Conditional Normative Shall be supported by this Port/Cable Plug.\nsupported by a given / based on\nR Sfehaotuurldes. Port Cable Plug\nO R Op ec ti o o m na m l ended May be supported by thPiso rt Ca/ble Plug .\nNS Shal lbe supporteNdo bt_yS tuhpisp orte/dMessage .\nPort Cable Plug\nresult in a response by this\nNot Supported\nI Ignore Shal/l Ignored w hen recPeoivretdC.able Plug\nNK NAK P boer t Cable Plbuyg tShhisa ll / Respon dwehreNnA rKeceived.\nCommand\nThis / return to this\nNA Shall Not when received. Port Cable Plug\nDR Not allowed Sha blle transmitted by this / G. oodCRC\nPort Cable Plug\nThere be no response at all (i.e., not even a\nDon\u2019t Recognize\nMessage) from this / when received.\nConditional Normative\nFor the case of a note has been added to indicate the condition. \"CN/\" notation is used to\nindicate the level of support when the condition is not present. OptionalMessage\n\"R/\" and \"O/\" notation is used to indicate the response when the Recommended or is not\nsNuoptpeo:rted. Message Shall PE_CBL_Ready\nPE_SNK_Ready PE_SRC_Ready Message AMS Pro-\ntWochoelr Eer NroSr/R/NK Sise cintidoinc a6t.8ed.1 ,f o\"Sr oRfte cReeisveetd a nd Protosc othl iEsr ror\" apply to the ,\nor states only since unexpected s received during an are\nCos n(tsreoel Message Data Message Sourc)e. Sink Cable Plug VDM\nCommand DFP UFP Cable Plug\nThis section covers and support for s, and s. It also covers\nsupport for s, s and s.\nPage 300 Universal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10\n6.13.1 Applicability of Control Messages\nTable6.77, \"Applicability of Control Messages\" Control Message Shall Should Shall Not\nSource Sink Cable Plug VPD Dual-Role Power Port Dual-Role Data Port\nShall Source details Sink s that / / be transmitted\nand received by a , , or . Requirements for s and s\noverride any requirementsT faobr le6.77- o Anplyp loirc abili-tOyn olyf CPoonrttsr.ol Messages\nMessage Type Source Sink Dual-Role Dual-Role Cable Plug VPD\nPower Data\n9\nTransmitted Message\nAccept\nData_Reset\nN N N N\nDR_Swap CN 10 /R CN 10 /R NA NA\nFR_Swap\nO O N NA NA\nGet_Country_Codes\nNA NA R NA NA\nGet_PPS_Status CN 7 /NA CN 7 /NA NA NA\nGet_Sink_Cap NA CN 6 NA NA\nGet_Sink_Cap_Extended\nR NA N NA NA\nGet_Source_Cap\nR NA R NA NA\nGet_Source_Cap_Extended\nNA R N NA NA\nGet_Source_Info\nNA R R NA NA\nGet_Revision\nNA R R NA NA\nGet_Status\nR R NA NA\nGoodCRC\nR R NA NA\nGotoMin (Deprecated)\nN N N N\nNot_Supported\nNA NA NA NA\nPing (Deprecated)\nN N NA NA\nPR_Swap\nNA NA NA NA\nPS_RDY\nNA NA N NA NA\nReject N CN 1 /NA N NA NA\nSoft_Reset N O O O CN 10 /NA NA\nVCONN_Swap\nN N NA NA\nWait\nR R NA NA\nShall Port VCONN\nO NA O O NA NA\nShall Source_Capabilities_Extended\n1) be supported by any that can supply .\nShall Source Alert\n2) be supported products that support the Message.\nShall Fast Role Swap Request\n3) be supported by s that support the Message.\nShall VCONN Swap\n4) be supported when the is supported.\nShall SPR PPS Mode\n5) be supported when is supported.\nShall\n6) be supported when is supported.\nShall Active Cable\n7) be supported when required by a country authority.\nVPD CT-VPD Connected Charger CT-VPDShall\n8) be supported by s.\nConnected Charger\n9) includes s when not to a . PD communication with a only take\nShall [USB4]\nplace when not to a .\nShall Source PortSPRCharger Invariant PDOs\n10) be supported by products that support .\n11) be supported by all s except single s with .\nUniversal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10 Page 301\nTable6.77 Applicability of Control Messages (Continued)\nMessage Type Source Sink Dual-Role Dual-Role Cable Plug VPD\nPower Data\n9\nReceived Message\nAccept\nData_Reset\nN N N N I I\nDR_Swap CN 10 /R CN 10 /R I I\nFR_Swap\nO/NS O/NS N I I\nGet_Country_Codes NS NS CN 4 /NS I I\nGet_PPS_Status CN 7 /NS CN 7 /NS I I\nGet_Sink_Cap CN 6/ NS NS I I\nGet_Sink_Cap_Extended\nNS N N I I\nGet_Source_Cap\nNS N N I I\nGet_Source_Cap_Extended\nN NS N I I\nGet_Source_Info CN 2 /NS NS CN 2 /NS I I\nGet_Revision CN 11 NS N I I\nGet_Status\nN N O/I O/I\nGoodCRC CN 3 /NS CN 3 /NS CN 3 /NS CN 8 /I I\nGotoMin (Deprecated)\nN N N N\nNot_Supported NS NS I I\nPing (Deprecated) N N CN 8 /I I\nPR_Swap\nNS NS/I I I\nPS_RDY\nNS NS N I I\nReject CN 1 /NS N N I I\nSoft_Reset CN 5 /NS N N N I I\nVCONN_Swap\nN N N N\nWait CN 1 / NS CN 1 / NS I I\nShall\nCN\n5P\n/\no\nN\nrt\nS N\nVCONN\nN N I I\nShall Source_Capabilities_Extended\n1) be supported by any that can supply .\nShall Source Alert\n2) be supported products that support the Message.\nShall Fast Role Swap Request\n3) be supported by s that support the Message.\nShall VCONN Swap\n4) be supported when the is supported.\nShall SPR PPS Mode\n5) be supported when is supported.\nShall\n6) be supported when is supported.\nShall Active Cable\n7) be supported when required by a country authority.\nVPD CT-VPD Connected Charger CT-VPDShall\n8) be supported by s.\nConnected Charger\n9) includes s when not to a . PD communication with a only take\nShall [USB4]\nplace when not to a .\nShall Source PortSPRCharger Invariant PDOs\n10) be supported by products that support .\n11) be supported by all s except single s with .\nPage 302 Universal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10\n6.13.2 Applicability of Data Messages\nTable6.78, \"Applicability of Data Messages\" Data Message VDMCommand Shall Should\nShall Not Source Sink Cable Plug VPD Dual-Role Power Port\nShall Source details Sink s (except for s) that / /\nbe transmitted and received by a , , or . Requirements for s\noverride any requirements fTora ble6.7-8o n Alyp oprl icabi-lOitnyl yo fP Dorattsa. Messages\nMessage Type Source Sink Dual-Role Cable Cable VPD\nPower\nPlug SOP\u2019 Plug SOP\u2019\u2019 6\nTransmitted Message\nSource_Capabilities\nRequest\nN NA N NA NA NA\nGet_Country_Info\nNA N NA NA NA\nBIST CN 5 /O CN 5 /O NA NA NA\nSink_Capabilities N 1 N 1 NA NA NA\nBattery_Status\nNA N N NA NA NA\nAlert CN 2 CN 2 NA NA NA\nEnter_USB CN 11 /R CN 11 /R NA NA NA\nEPR_Request CN 7 /O CN 7 /O NA NA NA\nEPR_Mode NA CN 9 NA NA NA\nSource_Info CN 9 CN 9 NA NA NA\nRevision CN 10 NA N NA NA NA\nReceived Message 12\nN N CN /O/I NA O\nSource_Capabilities\nRequest\nNS N N I I I\nGet_Country_Info\nN NS I I I\nBIST CN 5 /NS CN 5 /NS I I I\nSink_Capabilities 1 1 1 1 1\nN N N N N\nBattery_Status CN 4 NS CN 4 I I I\nAlert CN 3 /NS CN 3 /NS I I I\nEnter_USB\nR/NS R/NS I I I\nB7IST Mode B7IST Shall 8 Section 58.9 Section 6.4.3\nCN /O CN /O CN /I CN /I I\nShall\n1) For details of which s and Messages be supported see and .\nShall Get_Battery_Status\n2) be supported by products that contain batteries.\nShall Get_Sink_Cap\n3) be supported by products that support the Message.\nShall\n4) be supported by products that support the Message.\nVPD CT-VPD Connected Charger CT-VPDShall\n5) be supported when required by a country authority.\nConnected Charger\n6) includes s when not to a . PD communication with a only take\nShall [USB4]\nplace when not to a .\nShall Active Cable [USB4]\n7) be supported by products that support .\nShall Source EPR Mode\n8) be supported by s that support .\nShall Source Port PortSPRCharger Invariant PDOs\n9) be supported by products that support operation in .\nShall SPR PPS Mode\n10) be supported by all s except single s with .\nShall Active Cable\n11) be supported when is supported.\n12) be supported by s.\nUniversal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10 Page 303\nTable6.78 Applicability of Data Messages (Continued)\nMessage Type Source Sink Dual-Role Cable Cable VPD\nPower\nPlug SOP\u2019 Plug SOP\u2019\u2019 6\nEPR_Request\nEPR_Mode CN 9 NA I I I\nSource_Info CN 9 CN 9 I I I\nRevision\nNA N N I I I\nBIST Mode BIST Shall Section 5.9 Section 6.4.3\nN N I I I\nShall\n1) For details of which s and Messages be supported see and .\nShall Get_Battery_Status\n2) be supported by products that contain batteries.\nShall Get_Sink_Cap\n3) be supported by products that support the Message.\nShall\n4) be supported by products that support the Message.\nVPD CT-VPD Connected Charger CT-VPDShall\n5) be supported when required by a country authority.\nConnected Charger\n6) includes s when not to a . PD communication with a only take\nShall [USB4]\nplace when not to a .\nShall Active Cable [USB4]\n7) be supported by products that support .\nShall Source EPR Mode\n8) be supported by s that support .\nShall Source Port PortSPRCharger Invariant PDOs\n9) be supported by products that support operation in .\nShall SPR PPS Mode\n10) be supported by all s except single s with .\nShall Active Cable\n11) be supported when is supported.\n12) be supported by s.\nPage 304 Universal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10\n6.13.3 Applicability of Extended Messages\nTable6.79, \"Applicability of Extended Messages\" Extended Message VDEMCommand\nShall Should Shall Not Source Sink Cable Plug VPD Dual-\nRole Power Port Shall detailsS ource Sinks (except for s) that\n/ / be transmitted and received by a , , or . Requirements for\ns overrideT aanbyl ere6q.u7i9r e Ampepnltisc afobri lity of E-oxntleyn odre d Me-Ossnalyg ePsorts.\nMessage Type Source Sink Dual-Role Cable Cable VPD\nPower\nPlug SOP\u2019 Plug SOP\u2019\u2019 13\nTransmitted Message\nBattery_Capabilities\n1 1\nCountry_Codes CN /NA CN /NA NA NA NA\n10 10\nCountry_Info CN /NA CN /NA NA NA NA\n10 10\nEPR_Source_Capabilities CN /NA CN /NA NA NA NA\n14 14\nEPR_Sink_Capabilities CN /NA NA CN /NA NA NA NA\n14 14\nExtended_Control NA CN /NA CN Sec / ti N on A 6.13.4 NA NA NA\nFirmware_Update_Request See for details\n7 7\nFirmware_Update_Response CN /NA CN /NA NA NA NA\n7 7 7\nGet_Battery_Cap CN /NA CN /NA CN /NA O NA\nGet_Battery_Status R R NA NA NA\nGet_Manufacturer_Info R R NA NA NA\nManufacturer_Info R R NA NA NA\nPPS_Status R R R NA NA\n8\nSecurity_Request CN /NA NA NA NA NA\n6 6\nSecurity_Response CN /NA CN /NA NA NA NA\n6 6 6\nSink_Capabilities_Extended CN /NA CN /NA CN /NA NA NA\nSource_Capabilities_Extended NA N N NA NA NA\nShall\nR NA R NA NA NA\nShall Get_Source_Cap_Extended\n1) be supported by products that contain batteries.\nShall Get_Status\n2) be supported by products that can transmit the Message.\nShall Get_Battery_Cap\n3) be supported by products that can transmit the Message.\nShall Get_Manufacturer_Info\n4) be supported by products that can transmit the Message.\nShall [USBTypeCAuthentication\n5) be supported by products that can transmit the Message.\n1.0]\n6) be supported by products that support USB security communication as defined in\nShall\n.\n[USBPDFirmwareUpdate 1.0]\n7) be supported by products that support USB firmware update communication as defined in\nShall\n.\nShall Get_PPS_Status\n8) be supported when PPS is supported.\nShall\n9) be supported by products that can transmit the Message.\nShall Get_Sink_Cap_Extended\n10) be supported when required by a country authority.\nShall Active Cable\n11) be supported by products that can transmit the Message.\nVPD CT-VPD Connected Charger CT-VPDShall\n12) be supported by s.\nConnected Charger\n13) includes s when not to a . PD communication with a only take place\nShall EPR Mode\nwhen not to a .\nShall Source Alert\n14) be supported by products that support operation in .\n15) be supported by s that support the Message.\nUniversal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10 Page 305\nTable6.79 Applicability of Extended Messages (Continued)\nMessage Type Source Sink Dual-Role Cable Cable VPD\nPower\nPlug SOP\u2019 Plug SOP\u2019\u2019 13\nStatus\n15 15 15 12 12\nVendor_Defined_Extended CN /R CN /R CN /R CN /NA CN /NA NA\nReceived Message\nO O O O O\nBattery_Capabilities\n4 4\nCountry_Codes CN /NS CN /NS I I I\n10 10\nCountry_Info CN /NS CN /NS I I I\n10 10\nEPR_Source_Capabilities CN /NS CN /NS I I I\n14 14\nEPR_Sink_Capabilities NS CN /NS CN /NS I I I\n14 14\nExtended_Control CN /NS NS CN Sect / i N on S 6.13.4 I I I\nFirmware_Update_Request See for details\n7 7 7\nFirmware_Update_Response CN /NS CN /NS CN /I O I\n7 7\nGet_Battery_Cap CN /NS CN /NS I I I\n1 1\nGet_Battery_Status CN /NS CN /NS I I I\n1 1\nGet_Manufacturer_Info CN /NS CN /NS I I I\nManufacturer_Info R/NS R/NS R/I I I\n5 5\nPPS_Status CN /NS CN /NS I I I\n9\nSecurity_Request NS CN /NS I I I\n6 6 6\nSecurity_Response CN /NS CN /NS CN /I I I\n6 6\nSink_Capabilities_Extended CN /NS CN /NS I I I\n11 11\nSource_Capabilities_Extended CN /NS NS CN /NS I I I\nShall 2 2\nNS CN /NS CN /NS I I I\nShall Get_Source_Cap_Extended\n1) be supported by products that contain batteries.\nShall Get_Status\n2) be supported by products that can transmit the Message.\nShall Get_Battery_Cap\n3) be supported by products that can transmit the Message.\nShall Get_Manufacturer_Info\n4) be supported by products that can transmit the Message.\nShall [USBTypeCAuthentication\n5) be supported by products that can transmit the Message.\n1.0]\n6) be supported by products that support USB security communication as defined in\nShall\n.\n[USBPDFirmwareUpdate 1.0]\n7) be supported by products that support USB firmware update communication as defined in\nShall\n.\nShall Get_PPS_Status\n8) be supported when PPS is supported.\nShall\n9) be supported by products that can transmit the Message.\nShall Get_Sink_Cap_Extended\n10) be supported when required by a country authority.\nShall Active Cable\n11) be supported by products that can transmit the Message.\nVPD CT-VPD Connected Charger CT-VPDShall\n12) be supported by s.\nConnected Charger\n13) includes s when not to a . PD communication with a only take place\nShall EPR Mode\nwhen not to a .\nShall Source Alert\n14) be supported by products that support operation in .\n15) be supported by s that support the Message.\nPage 306 Universal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10\nTable6.79 Applicability of Extended Messages (Continued)\nMessage Type Source Sink Dual-Role Cable Cable VPD\nPower\nPlug SOP\u2019 Plug SOP\u2019\u2019 13\nStatus\n33 3\nVendor_Defined_Extended CN /NS CN /NS I I I\nShall\nO/NS O/NS O/I O/I O/I\nShall Get_Source_Cap_Extended\n1) be supported by products that contain batteries.\nShall Get_Status\n2) be supported by products that can transmit the Message.\nShall Get_Battery_Cap\n3) be supported by products that can transmit the Message.\nShall Get_Manufacturer_Info\n4) be supported by products that can transmit the Message.\nShall [USBTypeCAuthentication\n5) be supported by products that can transmit the Message.\n1.0]\n6) be supported by products that support USB security communication as defined in\nShall\n.\n[USBPDFirmwareUpdate 1.0]\n7) be supported by products that support USB firmware update communication as defined in\nShall\n.\nShall Get_PPS_Status\n8) be supported when PPS is supported.\nShall\n9) be supported by products that can transmit the Message.\nShall Get_Sink_Cap_Extended\n10) be supported when required by a country authority.\nShall Active Cable\n11) be supported by products that can transmit the Message.\nVPD CT-VPD Connected Charger CT-VPDShall\n12) be supported by s.\nConnected Charger\n13) includes s when not to a . PD communication with a only take place\nShall EPR Mode\nwhen not to a .\nShall Source Alert\n14) be supported by products that support operation in .\n15) be supported by s that support the Message.\nUniversal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10 Page 307\n6.13.4 Applicability of Extended Control Messages\nTable6.80, \"Applicability of Extended Control Messages\" Extended Control Message Shall Should\nShall Not Source Sink Cable Plug VPD Dual-Role Power Port\nDual-Role Data Port Shall detaiSlso urce Sink s that / /\nbe transmitted and received by a , , or . Requirements for s\nand s Ta obvleer6ri.8de0 a Anpy preliqcuaibrielmitye notfs E foxrte nded -Coonnlytr oorl Mes-sOangleys Ports.\nMessage Type Source Sink Dual-Role Dual-Role Cable Plug VPD\nPower Data\n2\nTransmitted Message\nEPR_Get_Source_Cap\n1 1\nEPR_Get_Sink_Cap NA CN CN NA NA\n1 1\nEPR_KeepAlive CN NA CN NA NA\n1\nEPR_KeepAlive_Ack NA CN NA NA\n1 Received Message\nCN NA NA NA\nEPR_Get_Source_Cap\n1 1\nEPR_Get_Sink_Cap CN NS CN I I\n1 1\nEPR_KeepAlive NS CN CN I I\n1\nEPR_KeepAlive_Ack CN NS I I\nShall 1 EPR Mode\nNS CN I I\nVPD CT-VPD Connected Charger CT-VPDShall\n1) be supported by products that support .\nConnected Charger\n2) includes s when not to a . PD communication with a only take\nplace when not to a .\nPage 308 Universal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10\n6.13.5 Applicability of Structured VDM Commands\nTable6.81, \"Applicability of Structured VDM Commands\" Structured VDMCommand Shall Should\nShall Not DFP UFP Cable Plug VPD Structured VDM\nDFP UFP VDMCommandShall Not_ dSeutpapilos rted s that / /\nbe transmitted and received by a , , or . If s are not supported, the\nor receiving a T able6.81 Appli sceanbdil ait y of Structured M VeDsMsa gCeo min mreasnpdonsse.\nCommand Type DFP UFP Cable Plug Cable Plug VPD4\nSOP\u2019 SOP\u2019\u2019\nTransmitted Command Request\nDiscover Identity\n1,6 2\nDiscover SVIDs CN /R R NA NA NA\n1\nDiscover Modes CN /O O NA NA NA\n1\nEnter Mode CN /O O NA NA NA\n1\nExit Mode CN /NA NA NA NA NA\n1\nAttention CN /NA NA NA NA NA\nReceived Command Request/Transmitted Command Response\nO O NA NA NA\nDiscover Identity\n5,6 1,6\nCN /R/ CN /R/ N I N\n3 3\nDiscover SVIDs NK NK\n3 1 3 1\nDiscover Modes O/NK CN /NK CN /NK I NK\n3 1 3 1\nEnter Mode O/NK CN /NK CN /NK I NK\n3 1 3 1\nExit Mode NK CN /NK CN /NK O NK\n3 1 3 1\nAttention NK CN /NK CN /NK O NK\nShall 3 Modal Ope3ration\nO/I O/I I I I\nMay UFP Source Section 6.4.4.3.1, \"Discover\n1) be supported when is supported.\nIdentity\" Section 8.3.3.25.3, \"Source Startup Structured VDM Discover Identity of a\n2) Cable b Pel turga nStsamteit Dteida gbrya am \" / during discovery (see\nand\nStructured VDM DFP UFP VDMCommandShall\n).\nNot_Supported\n3) If s are not supported, the or receiving a\nVPD CT-VPD Connected Charger CT-\nsend a Message in response.\nVPDShall Connected Charger\n4) includes s when not to a . PD communication with a\nShall DFP\nonly take place when not to a .\nShall [USB4]\n5) be supported by products with more than one .\n6) be supported by products that support .\nUniversal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10 Page 309\n6.13.6 Applicability of Reset Signaling\nTable6.82, \"Applicability of Reset Signaling\" Shall Should Shall Not\nDFP UFP Cable Plug\ndetails the Reset that / / be transmitted and\nreceived by a / or Tab.le6.82 Applicability of Reset Signaling\nReset Type DFP UFP Cable Plug Cable Plug VPD\nSOP\u2019 SOP\u2019\u2019 2\nTransmitted Message/Signaling\nSoft_Reset\nHard Reset N N NA NA NA\nCable Reset N N NA NA NA\n1 Received Message/Signaling\nCN NA NA NA NA\nSoft_Reset\nHard Reset N N N N N\nCable Reset N N N N N\nShall SOP\u2019 Packet Port\nDR DR N N N\nVCONN\n1) be supported when transmission of s are supported, and the\nVPD CT-VPD Connected Charger\ncan supply .\nCT-VPDShall Connected Charger\n2) includes s when not to a . PD communication with a\nonly take place when not to a .\n6.13.7 Applicability of Fast Role Swap Request\nTable6.83, \"Applicability of Fast Role Swap Request\" Fast Role Swap Request Shall Should Shall\nNot Source Sink\ndetails the that / /\nbe transmitted and receivTeadb bley 6a .83 Ap polri cabi.lity of Fast Role Swap Request\nCommand Type Source Sink Dual-Role Power\nTransmitted Message/Signaling\nFast Role Swap\nReceived Message/Signaling\nNA NA R\nFast Role Swap\nNA NA R\nPage 310 Universal Serial Bus Power Delivery SpecificationRevision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "6.14", "title": "Value Parameters", "page": 311, "level": 2, "parent_id": "6", "full_path": "6.14 Value Parameters", "tags": [], "text": "6.14 Value Parameters\nTable6.84, \"Value Parameters\"\ncontains vTaalubele p6ar.8a4m eVtearlus eu sPeadr ianm theitse rsesction.\nParameter Description Value Unit Reference\nMaxExtendedMsgLen Extended Message Section 6.2.1.2\nData Size\nMaximum length of an as 260 Byte\nMaxExtendedMsgChunkLen expressed in the Exte n fi d e e ld d . Message Section 6.2.1.2\nChunk\nMaximum length of an 26 Byte\nMaxExtendedMsgLegacyLen Extended Message Section 6.2.1.2\n.\nChunking\nMaximum length of an 26 Byte\nthat can be sent without .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 311"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "7.1", "title": "Source Requirements", "page": 312, "level": 2, "parent_id": "7", "full_path": "7.1 Source Requirements", "tags": [], "text": "7 Power Supply\n7.1 Source Requirements\n7.1.1 Behavioral Aspects\nPDUSBSource\nA \uf06c S hall exhib[UitsS Bth Tey fpoell-oCw 2i.n4g] bUeShBa Tvyiopres-:C VBUS Default Contract Implicit\nContract \u00ae\nsupply current to while in a or\n\uf06c Shall . Section 7.1.5, \"Response to Hard Resets\" Hard Reset\nSignaling\nfollow the requirements as specified in when\n\uf06c Shall is recVeBivUeSd.\ncontrol voltage transitions as bound by undershoot, overshoot and transition time\n7.1.2requirem e Sntos.urce Bulk Capacitance\nSource Shall Not\nSource Figure 7.1, \"Placement of Source Bulk\nTCahpea citance b\"ulk capacitance be placed between the transceiver isolation impedance and the USB\nreceptacle. The bulk capacitance consists of C1 and C2 as shown in Source VBUS\n. The Ohmic InterconneScet cmtiiognh 7t .c1o.7n.s5i,s \"tO ouf tPpCuBt Vtroaltcaegse f oLrim piotw\" er distribuStoiounrc oerS phoawller switching\ndevices. ThSein OkhSmhaicl lInterconnectS minikghOtV aPlso be part of the Sciercctuioitn i m7.2p.l9e.m2, e\"nIntepdu tb Oy vtehre Voltage t Por loimteictt iitosn \" Output\nVoltage Limit (OVVL)\nB U\na\nS\ns described in . Though a limit its output\nvoltage, a implement as described in to protect\ncaSgracinBsutl ekxScheasrseivde input voltage. The capacitance might bPeo ar tsingle capacitor, a capacitor bank or distributed\nccaSprcaBciutalknce. If the power supply is shared across multiple ports, the bulk capacitance is defined as\n. If the power supply is dedicated to a single , the minimum bulk capacitance is defined as\nSourc.e Negotiated Shall\nSource Power Role Swap Initial Source\nTShhae ll bulk capSawcaitpa nSctaen isd balylowed to change for a newNlyew Sink power level. The capacitance change\noccur before tPhoew er Role i sS rweaapdyS htoa lolperate at the nSewwa pp oSwtaenrd lbeyvel. During a , the\ntransition to before operating as the . Any change in bulk capacitance required to\ncomplete the Figur eo 7cc.1u rP dlaucreinmg ent of Source .Bulk Capacitance\nOhmic VBUS\nInterconnect\nC2\nGND\nSHIELD\n7.1.3 Types of Sources\nPower Data Object Section 6.4.1, \"Capabilities Message\"\nSource\nConsistent with the s discussed in , the power supply types\nthat\uf06c are avaiFlaixbeled aSsu pplyPDsO in a USB Power Delivery System are: Source Shall\nFixed Supply vSafe5V Fixed SupplyShall\nThe exposes well-regulated fixed voltage power supplies. s support at\nleast one capable of supplying . The output voltage of a remain\nPage 312 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n...\nVBUS\nData\nLines\nGND\nSHIELD\n...\nSOURCE CABLE\nPower\nSupply\nData\nC1 OVL Lines\nSource Bulk Capacitance\nvSrcNew vSrcValid\nTable7.23, \"Source Electrical Parameters\" Section 7.1.8, \"Output Voltage Tolerance\nwanitdh Rina nthgee \"range defined by the relative tolerance and the absolute band as listed\nin and described in\n\uf06c Variabl.e Supply Battery PDO Source\nVariable Supply Battery Shall\nThe (non- ) exposes leVssa rwiaeblll-er eSguuplpaltyePdD O s. The output voltage of a\n(non- ) remain within the absolute maximum output voltage and the\n\uf06c absoBluattete mryi nSiumpuplmy PoDuOtput voltage exposed in the . Source VBUS\nBattery SupplyShall\nThe exposes BBaatttteerriey sS tuhpapnl ycaPnD bOe connected directly as a to . The output\nvoltage of a remain within the absolute maximum output voltage and the absolute\n\uf06c minimum output exposed in the Augme nted .Power Data Object APDO Source\nThe Programmable Power SupplyS (hPaPlSl) ( ) exposes a with\navnP posuNtpeuwt voltage that can be adjuvPstpesdV parloidgrammatically over a defined range. The output voltage of\nthe Programmable Power Supply remain within a range defined by the relative tolerance\n\uf06c Adjus taanbdle t hVeo latabgsoe lSuutep pblayndA VS Augme.nted Power Data Object APDO Source\nTAhVeS Shall ( ) v A(vsNew) exposes a with an\novAutvpsuVta vliodltage that can be adjusted programmatically over a defined range. The output voltage of the\nremain within a range defined by the relative tolerance and the absolute band\n7.1.4 S. ource Transitions\n7.1.4.1 Fixed Supply\n7.1.4.1.1 Fixed Supply Positive Voltage Transitions\nSourceShall VBUS\nNegotiated vSrcNew\nTheS ourceS hould transition from thSei nskta Srttainngd bvyoltage to the higher new voltage in a controlled manner. The\nnewV v\nB\no\nU\nl\nS\ntage (e.g., 5V, 9V, 15V, \u2026) defines the nomiSnhaal lvl aNluoet for vSrcS. lDeuwrPinogs the positive transition\ntShoeu rce be aSbhlae ltlo supply the vSrcNew tcSurrcrSeenttt alend theS toruarncseieSnhta clulrrent to charge the toNtaelg boutilakt ed\ncapacitance on . The slew ratet Sorfc tRheea pdoysitive transition exceedS hall . The tvrSarncsVitailoinding\noutputE vxopllitcaigt eC ontra cstettle within vSrcValid by . TheE xplicit Contra bcet aFbilgeu tore s 7u.p2p, \"lyT rthaen sition\npEonwveelor pleev feolr aPto tshitei vnee Vwo vltoalgtae gTer abnys itions\" . The positSihvea lvloltage travnSsrictiNoenw remtSaricnS aebttolvee min of\nthe prFeivgiuorues 7 .2, \"Transition En avnedlo bpee lfoowr P ositive Vo lmtaagxe oTfr tahnes intieown s\" tSrcTran (sition\nEOP GoodCRCMessage ). The voltage Sour cseettle to within . The starting time,\nt0, in starts after the last bit of the\nof the Figure h7a.2s bTereann rseitcieoinve Edn bvye tlohpe e for P.ositive Voltage Transitions\nUpper bound of valid Source range\nvSrcValid(max)\nvSrcNew(max)\nvSrcNew(typ)\nvSrcNew(min)\nLower bound of valid Source range\n(cid:167)\nvSrcSlewPos\nStartingvoltage\nvSrcValid(min) beyond min/max limits of starting voltage\n(cid:167)\nt0 tSrcSettle tSrcReady\nVBUS Shall Not vSrcValid\nvSrcNew VBUS vSafe5V vSafe5V\nAt the start of the positive voltage transition the voltage level droop min below either\n(i.e., if the starting voltage level is not ) or as applicable.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 313\nSection 7.1.14, \"Non-application of VBUS Slew Rate Limits\" vSrcSlewPos\nlists transitions that are exempt from the\nl7im.1it..4.1.2 Fixed Supply Negative Voltage Transitions\nFigure 7.3, \"Transition Envelope for Negative Voltage\nTransitions\" Figure 7.3, \"Transition Envelope\nNfoerg Naetigvaet ivvoel tVaogleta tgrae nTsriatinosnitsi oanres\" defined as shown ivnS afe0V\nShall Not and avrSer cspSleecwifiNeedg in a similar manner to positive voSlhtaaglel transitions. vSrcValid\nExplicit Contract vSrcV daolieds not apply to Explic ittr Canonsittriaocnts. The slew rateF oigf uthree 7n.3eg, \"aTtirvaen tsritainosni tion\nEnvelope f eoxrc Neeegda tive Voltage T. rTahnes intieognast\"ive voltage transitioSno urce remain below Shall maxv oSrf cthNee wprevious\ntSrcSettle and above Fig umrien 7 o.3f ,t \"hTer nanewsit ion Envelope for ,N aesg sahtoivwe nV oinlt aFge Transitions\"\ntSrcTransition EOP. The traGnosoitdioCnRiCngM essage output voltage settleS toou rce within\n. The starting time, t0, in starts\nafter thFeig lausrte b 7it. 3o fT trhaen sitio onf Ethnev elope for Negativ eh aVso blteaegne r Tecreainvseidt iboyn tshe .\nvSrcValid(max)\nStartingvoltage\nvSrcSlewNeg\n(cid:167)\nUpper bound of valid Source range\nvSrcNew(max)\nvSrcNew(typ)\nvSrcNew(min)\nvSrcValid(min)\nLower bound of valid Source range\n(cid:167)\nt0 tSrcSettle tSrcReady\nNegotiated vSafe5V vSrcValid Shall\nSourceShall vSafe5V tSrcSettle\nIf the newly voltage is , then the limits determine the transition window and\ntSheec ttiroann 7s.i1ti.o14n,i n\"Ng on-app licatio nse otft lVeB wUSit Shlienw t hRea te Limits \"limits by . vSrcSlewNeg\nlists transitions that are exempt from the\nl7im.1it..4.2 SPR Programmable Power Supply (PPS)\n7.1.4.2.1 SPR Programmable Power Supply Voltage Transitions\nShall VBUS\nRDO\nThe Programmable Power Supply (PPSSh) all transition over the definevdP vposlNtaegwe rantgPep isnS ar ccTornatrnoslSlemda ll\nmanner. The Output Voltage vavlPupes iSnm thaell PStreopgrammable defines the nominal vvaPlupes Nofe twhe PPS output voltage\ntaPftpesrS crocmTrpalentsinLga rag veoltage change and settle within the limits defined by CL by for\nvstPeppssN semwalSlehra tllh Nano tor equal vtoP psValid , or else, within the limits defivnPepds bNye wShall N obty vPpsValid\n, but onlCyL in case the Programmable PoweMr aSyupply is not in mode. Any overshoot beyond\nexceed Shall a Nt oatny time. vAPnpys uSnledwerPsohsoot beyond vPpsSl eewxcNeeegd\nfor currents not resulting in mode. The PPS output voltage chanSghea inll a step-wise or linear manner andL SthBe\nslew rate of eLiSthBer type of change exceed v Pfoprs vSoteltpage increSahsaelsl or for voltage\nNdeecgroetaiasteesd. The nominal requested voltage of all linear voltage changes equate to an integer numberS hoaf ll\nchanges. An change of the PPS output voltage is defined as . A PPS be able to supply the\ncurrent level as it changes its output voltage to the requested level. All PPS voltage increases\nPage 314 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nShall\nresult in a voltage that is greater than or equal to the previous PPS output voltage. Likewise, all PPS voltage\ndecreasSeisn k result in a voltage that iNs elegsost itahtaend oArP eDqOual to the previous PPS output voltage.\nCL Sink\nSiBnacett ae ry can draw cVu B r U re S nt up to the current level in case of a voltage steBpa,t ttheery voltage might\nnot increase to the requested level due to theS opuorwceer supply operating in modSeo. uLrikceewise, since a can have\na coVn\nB\nn\nUS\nected to , the voltage might not decrease to the requested PleSv_eRlD dYueM teos stahgee voltage being\nhigher than the output voltage set point the is transitioning to. Were the to rely on checking the\nvoltage on , in either case, to determineP wS_hReDn YitsM peosswaegre sSuhpapllly is ready a would never be sent.\nWh\uf06cen thteP PpPsSSr vcoTlrtaagnes Lstaerpgse up or down, a GoodCR CMes sbaeg seent within: AcceptMessage\nvPpsSmallStep\nafter the last bit of the following the for steps\n\uf06c tlaPrpgseSrr tchTarna nsSmall . GoodCRCMessage AcceptMessage\nvPpsSmallStep VBUS vPpsNew\naftCeLr the last bit of the following the for steps\nless than or equal to provided that either the voltage on has reached or\nvPthpes Npeowwer supply is in mBaotdteer.y Source SinkShall\nBattery VBUS\nWSinhken is lower than the vSoeclttaiogne ,7 o.2r .t1h, e\"B ehavio'sr aplr Aimspaercyt sp\"owerS iesc ctuiotn o 7ff. 2th.9e, \"Rob ust Sin k\niOmpmereadtiioante\"ly disconnect its from . In these situations, the output current could reverse polarity and the\nis not allowed to source current (see and\nFigure 7.4, )\".PPS Positive Voltage Transitions\" Figure 7.5, \"PPS Negative Voltage Transitions\"\nvPpsMinVoltage andv PpsMaxVoltage below show the\noutput voltage behaviorT oafb ale P1r0o.g1r1a,m \"SmPaRb Pler oPgorwamerm Saubplpe lPyo iwn erre sSpuopnpslye Vtoo lptaogsiet iRvaen agneds \"negative voltage change\nrvePqpuseMstins.V Tohltea pgaerameters Minim aunmd Voltage defineA tPhDe Olowerv aPnpds uMpapxeVro llimtaigtse of the PPS\nranMgaex riemspuemct Vivoelltya (gseee APDO Sink APDO for required ranges).\nAPDO coSrrheaslplonds to the Section 7 .f3ie.1ld, \" iTnr athnes iPtiPoSn s cause adn bdy a Request Messag ceo\"rresponds\nto field in the PPS . If the negotiates for a new PPS , then the transition between\nthe two PPS s occur asF digesucrreib 7e.d4 iPnP S Positive Voltage Transitions .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 315\negatloVniMspPv\negatloVniMspPv\n+\n1\n=\n)2(V\n(cid:167)\n(cid:167)\nvPpsMinVoltage V(1)\negnaR\ntuptuO\nylppuS\nrewoP\nelbammargorP\nvPpsSlewPos\n(cid:167)\negatloVniMspPv\n+\nn+1\n=\n)3(V\n(cid:167)\n(cid:167)\n0 Volts\negatloVxaMspPv\nV(4) > V(3) vPpsMaxVoltage V(4)\nvPpsSlewPos\n(cid:167)\nvPpsValid\nV(3) > V(2) (cid:167)\nNominal V(3) vPpsNew (cid:167)\nvPpsValid\nvPpsSlewPos\n(cid:167) (cid:167)\nvPpsValid\nV(2) > V(1) (cid:167)\nNominal V(2) vPpsNew (cid:167)\nvPpsValid\n(cid:167) (cid:167) (cid:167) (cid:167)\nFigure 7.5 PPS Negative Voltage Transitions\nSection 7.1.14, \"Non-application of VBUS Slew Rate Limits\" vPpsSlewNeg\nvPpsSlewPos\nlists transitions that are exempt from the\nand Section 7.1.8.1 ,l \"imAVitSs/.PPS Output Voltage Ripple\"\nSee Section 7.1.8.2, \"AVS/PPS DNL Errors and Output fVoorl toaugtep/uCtu vrorletnatg eT orlieprpalne cleim\"its.\nDNL\nSee for output voltage and current\n7.1. s4te.2p .a2djustments. SPR Programmable Power Supply Current Limit\nSPR PPS ModeShall Operating\nCurrent RDO Sink Operating Current\nThe Programmable Power Supply operating in liiPmpits CitLsS otuetpput current to the\nfield valueS ihna tlhle when the Ope artatetminpgt Cs utor rdernatw more current thatnP tphseC LProgramSettle fieSlPdR\nPvaPlSue level. The programming step size for the OpeCrautrirnegn Ct uLirmreintt is iP.p AsCllL pNreowgramming changes of the\nOperating CurreCnutr rent L simetittle to thei nPepwsC LMin Source field valueS PwRi tPhPinS ModeShall Cur. rTehnet Limit\nOperating Current reguiPlaptsioCnL Macicnuracy during is defined as SPR PPSAPD. TOhe mSoinuirmceum\nprogrammable level is iPpsCLMin. SAh ould that supports Source support\nprogrammabiliitPyp bseCtLwMeienn Shall and the Maximum Current value in the . A which\nreceives a request for current below reject the request. A that accepts a request for\ncurrent below SPR PP S set its current limit at 1A. SPR PPS\nSPR PPS\nThe response of an to a load change depends on the Operating mode of the and the magnitude of\nthe load change. These dependencies lead to one of four possible responses of an to any load change. They\nare \uf06cdifferentiated by the value of the PPS Status OMF before and after the load chanSgPeR: PPS\nSPR PPS Shall vPpsValid\nISfP tRh eP PPSPS Status OMF is cleared both Sbheafolrle and after the loavdP pchsNanegwe, the responds solely by\nmtPapisnTtarianninsige tnhte output voltage. The Sha olultput voltage remain within range. The\nSPR PPS response to the load change settle within the tolerance band by the time\n. The Operating Mode Flag remain cleared during the load change response of the\n\uf06c . SPR PPS\nSPR PPS SPR PPS\nSIfh tahlel PPS Status OMFi Pisp cslCeVaCreLdT rbaenfosriee nthte load change and set afteirP tphseC VloCaLdT crhaannsgiee,n tthe SPR\nresponds by reducing its output voltage to limit the output current. The output current\nstay within the range once it reaches the range. The\nPage 316 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\negatloVniMspPv\n+\n1\n=\n)c(V\negatloVniMspPv\n(cid:167)\n(cid:167)\nvPpsMinVoltage V(d)\negnaR\ntuptuO\nylppuS\nrewoP\nelbammargorP\n(cid:167)\negatloVniMspPv\n+\nn\n+\n1\n=\n)b(V\n(cid:167)\n(cid:167)\n0 Volts\negatloVxaMspPv\nvPpsMaxVoltage V(a)\nvPpsSlewNeg\n(cid:167)\nvPpsValid\n(cid:167)\nV(b) < V(a)\nvPpsNew Nominal V(b)\n(cid:167)\nvPpsValid\nvPpsSlewNeg\n(cid:167) (cid:167)\nvPpsValid\n(cid:167)\nV(c) < V(b)\nvPpsNew Nominal V(c)\n(cid:167)\nvPpsSlewNeg vPpsValid\nV(d) < V(c)\n(cid:167) (cid:167) (cid:167) (cid:167)\nPPS Shall iPpsCLNew\ntPpsCVCLTransient Shall SPR PPS\nresponse to the load change settle within the tolerance band by the time\n. The Operating Mode Flag be set when the load change response\n\uf06c settles. SPR PPS\nSPR PPS Shall\nIiPf tphseC PLTPrSa Sntastieuns tOMF is set boSPthR bPePfoSre and after the load change, Sthhea ll responds biPyp asdCjuLsNteinwg\nits output voltage to maintatiPn pthsCeL oSuettptulet current. The outpSuht acullrrent stay within the\nrangeS. TPRhe P PS response to the load change settle within the\ntolerance band by the time . The Operating Mode Flag remain set during the load\n\uf06c change response of the .\nvPpsNew SPR PPS\nIf the PPS StatuSs hOaMllF is set before thveP lopasdC LchCaVnTgrea annsdie cnlteared after thSPe Rlo PaPdS change, the PPS responds\nto the loSahda cllhange by increasivnPg pitssN oeuwtput voltage to andtP thpesnC LmCaViTnrtaainnsiniegn itt. The\noutput voltSahgae ll stay within the range. The response to the load\nchange settle within the tolerance band by the time . The Operating\nSPRM PoPdSeS oFulargc eShal lbe cleared when the PPS load change response settles. RDO\nCurrent Limit\nThe Cu rrent L mimaiitntain its output voltage at tShPeR v PaPluSe requested in the PPS forv Palpl ssSthatuictd aonwd n\ndSoyunracmeiMc aloyad conHdaitriodn Rse esxecteSpigt nwahliengn in Shall opeVra B t U i S on. IvnS raefsep0oVnse to any statiUc SoBr Ddyenfaaumlti cO ploearda tion\ncvoSnadfeit5iVon during operation that causes the output voltage to drop below the\nsend and discharge to then resumes at\n. Sink RDO SourceShall\nSource Current Limit Shall iPpsCLNew Sink\nWMahye nN tohte attempts to draw more current than thReD OOperating Current in the , the limit its\noutput current. The current available from the during mode meet . The\nreduce Siths aOlplerating Current requeSsPtR i nP PthSeS ource wShiennk the PPS Status OMF is set. Shall\nSection 7.2.9, \"Robust Sink Operation\" SourceShall Not\nCurrent limiting be performCeudrr beyn tt hLeim it . s that rely on PPS Current Limiting mSeecetti othne\n7re.1q.7u,i r\"eRmobeunstts Soofu rce Operation\" . TheS ource shutdown or otherwise disrupt the\navailable output power while in mode unless another protection mechanism as outlined in\nSPR PPSSource is engaCguerdr etnot p LriomteitcSt hthaell Not from damage.\niPpsCLLoadStepRate iPpsCLLoadReleaseRate\nAn that is operating in change its set-point in a manner that exceeds\nor SPR PPS . SPR PPS Current LimitShall\nFigure 7.6, \"SPR PPS Programmable Voltage and Current Limit\" Constant\nTVohlet argeelationship betweCeunr rent Limi tprogrammable output voltage and programmable Shall\nbe as shown in Current Limit . The transition between the\nSourceS mhaoldle and the iPpsCLNew mode occurs between points a and b. The PPS Status OMF be set or\ncleared within this region. In mode when the load resistance changes, the output current of the\nstay within . The proper behavior is represented by point c.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 317\nFigure 7.6 SPR PPS Programmable Voltage and Current Limit\nCurrent\n7.1.4.2.3 SPR PPS Constant Power Mode\nSourceMay\nSource PDP Rating Sink May RDO Shall\nIn SCeocntisotann 7t. 2P.o9w, \"eRro mbuosdt eS i(nwkh Oepne trhaeti PonP\"S Power Limited bit is set) the supply power that exceeds the\n's . s limit their Operating Current request in the and meet the requirements\nof . Shall Not Figure 7.7,\n\"SPR PPS Constant Power\"\nThe tolerances along the Constant Power Curve extend into the Guaranteed Capability Area of\n.\nPage 318 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nVoltage\nPPS APDO\nMax Voltage\nvPpsNew Programmable Voltage &\nCurrent Limit Flag cleared Programmable Current Limit Region\nPPS RDO a\nOutput Voltage\nb\nCurrent Limit Flag set\niPpsCLNew\nProgrammable\nVoltage Only\nRegion\nPPS APDO\nMin Voltage (max)\nc c c\nvPpsShutdown (min)\nValid Current Limit Response\nInvalid Current Limit Response\nSource Disconnect Region\niPpsCLMin\nPPS RDO PPS APDO\nOperating Current Max Current\nPoint arepresents entry into the transition region between Constant Voltage mode and Current Limit mode.\nPoint brepresents exit from the transition region between Constant Voltage mode and Current Limit mode.\nPoint c represents the exit from the iPpsCLNewregion as the voltage drops below the PPS APDO Min Voltage.\nThe Source Maydisconnect at any point inside the tolerance range of the minimum voltage defined in the PPS APDO.\nFigure 7.7 SPR PPS Constant Power\nCapabilities when the Power Limited bit is set\ne The figure shows only the steady state after the transition\ng\na\nt PDP constant power\nol\ncurve\nV\niPpsCLNew\nvPpsNew\nMax APDO Voltage\nvPpsNew\n(X = PDP/PPS APDO Max Current, Y = PPS APDO Max Voltage)\nCoordinate applies when PPS Power Limited is set\nExample:\n\u2022 PDP = 27 W\n\u2022 PPS APDO Max Voltage = 11 V\nCoordinate = (2.45, 11)\n(X = PPS APDO Max Current, Y = Prog Voltage)\nCoordinate applies when PPS Power Limited is set\nExample:\n\u2022 PDP = 27 W\n\u2022 Prog Voltage = 9V\n\u2022 PPS APDO Max Current = 3 A\nCoordinate = (3, 9)\nvPpsNew\nMin APDO Voltage\nvPpsNew\nValid Current Limit Range\n0V\n0A iPpsCLMin(1A) PPS APDO Current\nMin Current Limit\nMax Current\nNominal limits as pr. the APDO\nGuaranteed operating capability as pr. the APDO\nTolerance area for actual voltages (only static tolerances are shown)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 319\n7.1.4.3 Adjustable Voltage Supply (AVS)\n7.1.4.3.1 Adjustable Voltage Supply Voltage Transitions\nAdjustable Voltage Supply AVS Shall VBUS\nAVSRDO AVS\nThe Shall ( ) transition ovvAevrs tNheew definteAdv svSorlctaTgrea rnasnSgme ainll a controlled manner.\nThe Outputv VAovlstaSgmea vlalSluteep in the defines the nominal vavlAuev soNf ethwe tA ovustSprucTt vraolntsaLgae ragfteer completing a\nvoltagveA cvhsSamngael laSntde p settle within the limvitAsv dseNfienwedS hbya ll Not by vAvsValid for steps smaller than\nor equalv tAov sNewShall Not, or else, vwAitvhsiVna tlhide limits defined byA VS by May for steps larger\nthan . Any overshoot beyond Shall No etxceed vAvsSlew aPt oansy time. Any undershoot\nbvAeyvosSnlde wNeg exceed at any time. The output voltage change iSnh aa slltepwise or\nlinear manner and LthSBe slew rate of eLiSthBer type of chanAgeV S exceed vA fvosrS vtoelptage iAnVcrSeSahseasll or\nfor vNoeltgaogtei adteecdreases. The nominal requested voltage of all linear voltage changes equate to an\ninteger number of changes. An vA cvhsaSnmgael olSf ttehpe outpuvt AvvosltNaegwe is deAfiVnSed as . AnS hal l be\nable to supply the current level as it changAeVsS its output voltage to the requAesVtSed level if the changSeh oafl l\noutput voltage is less than or equal to relatiAveV Sto . All voltage incSroeuarscees resuAltV inS\na voltage that is greater than or equal to the previous output voltage. Likewise,v aAllv sSm vaolllStategpe decreases\nresult in a voltage that is less than or equal to the previous output voltage. Any time the enters the\nrange of opAeVrSation that voltage transition iPs Sc_oRnDsiYdeMreesds aag veoSlthaaglel step larger than .\nWh\uf06cen thteA vsSr vcoTlrtaagnes Lsaterpgse up or down, a GoodCR CMes sbaeg seent within: AcceptMessage\nvAvsSmallStep\nafter the last bit of the following the for steps\n\uf06c tlaArvgseSrr tchTarna nsSmall . GoodCRCMessage AcceptMessage\nvAvsSmallStep VBUS vAvsNew\nafter the last bit of the following the for steps\nFigure 7l.8es, s\"A thVaSn P oorsi etiqvue aVl otlot age Transitions\" provFidigeudr teh 7e. 9v,o \"lAtaVgSe Noeng ative h Vaosl traegaec hTerda nsitions\" .\nAVS\nvAvsMinVoltage vAvsMaxVoltage and AVS below show the\noutput voltage behavior of an in response to positive and negative voltage change requests. The parameters\n\uf06c SPR A VanSdS ource define the lower and upper limits of tvhAev sMin rVanogltea rgeespectively:\nvAvsMaxVoltage Source PDP Table10.9, \"SPR Adjustable\nFVoorlt age Supp ly (AVSs) t hVeorltea agree R twanog peos\"ssible voltage ranges where the is always 9V and\nis either 15V or 20V depending on the 's . See\n\uf06c EPR AVSSource vAvsMinVoltage. Minimum Voltage EPR\nAVSAPDO vAvsMaxVoltage Maximum Voltage EPR AVSAPDO\nFToarb le10.15, \"EPR Ads justable Voltage S ucopprrlye s(pAoVnSd) sV toolt age Ranges\" field (always 15V) in the\nand corresponds to field in the . See\nfor required ranges.\nPage 320 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.8 AVS Positive Voltage Transitions\nFigure 7.9 AVS Negative Voltage Transitions\nSection 7.1.8.1, \"AVS/PPS Output Voltage Ripple\"\nSee Section 7.1.8.2, \"AVS/PPS DNL Errors and Output fVoorl toaugtep/uCtu vrorletnatg eT orlieprpalne cleim\"its. DNL\nSee for output voltage step\nadjustments.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 321\negatloVniMsvAv\negatloVniMsvAv\n+\n1\n=\n)2(V\n(cid:167)\n(cid:167)\nvAvsMinVoltage V(1)\negnaR\ntuptuO\nylppuSegatloV\nelbatsujdA\nvAvsSlewPos\n(cid:167)\negatloVniMsvAv\n+\nn+1\n=\n)3(V\n(cid:167)\n(cid:167)\n0 Volts\negatloVxaMsvAv\nV(4) > V(3) vAvsMaxVoltage V(4)\nvAvsSlewPos\n(cid:167)\nvAvsValid\nV(3) > V(2) (cid:167)\nNominal V(3) vAvsNew (cid:167)\nvAvsValid\nvAvsSlewPos\n(cid:167) (cid:167)\nvAvsValid\nV(2) > V(1) (cid:167)\nNominal V(2) vAvsNew (cid:167)\nvAvsValid\n(cid:167) (cid:167) (cid:167) (cid:167)\negatloVniMsvAv\n+\n1\n=\n)c(V\negatloVniMsvAv\n(cid:167)\n(cid:167)\nvAvsMinVoltage V(d)\negnaR\ntuptuO\nylppuSegatloV\nelbatsujdA\n(cid:167)\negatloVniMsvAv\n+\nn\n+\n1\n=\n)b(V\n(cid:167)\n(cid:167)\n0 Volts\negatloVxaMsvAv\nvAvsMaxVoltage V(a)\nvAvsSlewNeg\n(cid:167)\nvAvsValid\n(cid:167)\nV(b) < V(a)\nvAvsNew Nominal V(b)\n(cid:167)\nvAvsValid\nvAvsSlewNeg\n(cid:167) (cid:167)\nvAvsValid\n(cid:167)\nV(c) < V(b)\nvAvsNew Nominal V(c)\n(cid:167)\nvAvsSlewNeg vAvsValid\nV(d) < V(c)\n(cid:167) (cid:167) (cid:167) (cid:167)\n7.1.4.3.2 Adjustable Voltage Supply Current\nAVSShall AVSRDO\nRDO SPR PPS AVS\nThe maintainM iatsy output voltage at the vaPluDeP requested in the for all static and dynamic load\nconditions that do not exceed the Operating Current in the . Unlike the programmable current, the\nprogrammable power range from zero to the .\nThe\uf06c maximuSmP Ro pSoeurartcieng current: SPRSource_CapabilitiesMessage\nMaximum Current 15V Maximum Current 20V\nFor s, the maximum operating current is defined in the\n\uf06c EPR Source / fields. PDP\nOutput Voltage Table10.12, \"EPR Source Capabilities based on the\nFPoorr t Maximum Ps,D tPh ea nmda uxisminugm an o EpPerRa Ctianpga cbulerr Ceanbt lhea\"s to be calculated as the lower of the field\nvalue/ or 5A whichever is lower. See\n7.1.5 Response to Hard Resets\nHard ResetSignaling SourceShall VCONN\nShall R VCONN Shall VBUS vSafe0V Figure 7.10, \"Source VBUS and\nVCONN Respo nse to Ha ridn dRiecsaette\"s a communication failMuraey has occurred anHda trhde R eset stVo B p U d S riving ,\nremvoSvaef e5 p Vfrom the pin and drive to as svhSoawfen0 iVn VBUS\nSourceShall tSrcRecover. The USB connectioVn C ONN reset during aV BUS vSaf es5inVce thSoeu rceS vhoalltlage will be\nlessV th\nCO\na\nN\nn\nN\nfor an extende[dU SpBer Tioydp eo-fC t i2m.4e]. After establishing the voltage condition on , the\nwait before re-applying and restoring to . A conform to\nthSei nk timing aHsa srpde Rciefsieedt in cSnkBulkPd. VBUS vSafe0V SourceShall\nA that enters can have present until drops below . The take\nthis into consideration. Hard Reset\nDev\uf06cice operation during and aSfhteoru al d Not is defined as follows: Hard Reset Section 9.1.2, \"Mapping\nto USB Device States\"\nSelf-powered devices disconnect from USB during a (see\n\uf06c ). vSafe5VMay Not Hard\nReset\nSelf-powered devices operating at more than maintain full functionality after a\n\uf06c . Hard Reset\nBus powered devices will disconnect from USB during a due to the loss of their power\nHsoaurrdc Re.eset SourceShall VCONN Shall R VCONN Shall\nVBUS vSafe0V\nWhen a occurs the stop driving , remove p from the pin and start\nto tr\uf06cansittPioSnH tahred Rese tvoltage to eitheHr:ard ResetSignaling Sink\n\uf06c tPSHardReset after the last bit of the Hard Reset Signaling has been received froSmou trhcee or\nSourceShall after ttShaef ela5sVt bit oft Sthaefe 0V has been sent by the . Figure\n7.10, \"Source VBUS and VCONN Response to Hard Reset\"\nThe meet both and relative to the start of the voltage transition as shown in\n.\nPage 322 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.10 Source VBUS and VCONN Response to Hard Reset\nOld voltage\n(cid:167)\nvSafe5V(max), VCONN(max)\nvSafe0V(max)\nvVconnDischarge\n0V\nt0\nvSrcNeg(max)\ntVconnDischarge tVconnOn\ntSafe5V\ntSrcRecover\ntSafe0V tSrcTurnOn\nVCONN Figure 7.10, \"Source VBUS\nand VCONN Response to Hard Reset\" Cable Plug VCONNShall\nwill mVB e\nU\ne\nS\nt tVCONNDivsSchaafer5geV relative to the start of the voltage transition as shown in\ndue to the discharge circuitry in the . meet tVCONNOn\nrNeolateti:ve to reaching . [USB Type-C 2.4]\n7.1.6 tVCONN O Cn hanad ntVgCOiNnNgD istchhaer gOe auret pdeufinte Pd ion wer Capabi.lity\nNegotiation Source\nSourceShall\ntSSormcRe eUaSdBy Power Delivery s will require the to adjust its output power capability without\nchanging the output voltage. In this case the be able to supply a higher or lower load current within\n7.1.7 . Robust Source Operation\n7.1.7.1 Output Over Current Protection\nSource Shall\nSource Source\ns implemSehnatl olver current protection to prevent damage from output current that exceeds the current\nhandling capability of the . The definition of curreHnatr hda Rnedsleitng cEaprraobri lRiteyc oisv leerfyt to Sthhea ldl iNscortetion of the\niNmepgloetmiaetendtaVt\nB\nio\nU\nn\nS\nand take into consideration the current handling capability of the connector contacts. If the\nover current protection implementation does not use a or , it interfere with the\ncurrent level. SourceShall ErrorRecovery\nSAoftuerrc ethrSeheo cuolndsecutive over curHreanrtd e Rveenstest Signalin g go to . Alert\nMessage OCP Explicit Contract\ns May attempt to send Port when over current protection engages followed by an\nShould indicating an UevSeBn Dt eofnacuel ta Onp eration has been established. The over current protection\nresponse M aenygage at either the oPr osrytstem level. Systems or ports that have engaged over current protection\nattempt to resume Sourc eafter determining that the cause of over current is no longer\npresent and latch off to protect the or system. The definition of how to detect if the cause of over current\nis stiSllo purrecseeSnhta isll lRefet- ntoe gthotei adtiescretion ofS tihnek implementation. USB Default Operation\nRe-negotiate Source\nThe with the after choosing to resume . The decision of how\nto SourceSha lalfter an over current event is lePfotr tto the discretion of the implementation.\nUSB Default Operation Re-negotiation Port\nThe prevent continual system or cycling if over current protection continues to engage after\ninitially resuming either or . Latching off the or system is an acceptable\nresponse to recurring over current. Port Source\nVBUS vSafe5VShall VBUS vSafe5V tSafe5V vSafe0V\ntDSuarfien0gV the over current response and subsequent system or shutdown, all affected ports operating\nwith greater than discharge to by the time and by the time\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 323\n7.1.7.2 Over Temperature Protection\nSource Shall OTP\nSource\ns implement Over Temperature Protection ( ) to prevenSto duarmceage from temperature that exceeds\nthe thermal capability of the . The definition of thermal capability and the monitoring locations used to\ntrigger the over temperature pOrToPtection aSroeu lrecfet toM tahye discretion of the implementation.\nSink Source\nIn order to avoid reaching an event, s Sou prrcoeaSchtiovuelldy reduce thAe laevratiMlaebslsea pgoewer being offered to the\n, even though these offers might be lower than the SO wPoSutaldt ubse Mexepsseacgteed to offer during normal thermal\noperating conditions. Prior to reducing power, the generate indicating an Operating\nCSoounrdcietioSnh Cohualdnge and set the TeHmapredr aRteusreet SStiagtnuasl binigt in the OTP to WarniAnlge r(t1M0be)s.sage\nOTP Explicit Contract OTP May Port\ns attempt to send OTP wShhoeunl d engages followedU SbBy aDne fault O peration indicaMtianyg\nan event once an Port has been established. The response engage at either the or\nsystem level. Systems or ports that have engaged attempt to resume and\nlatchS oofufr tcoe pSrhoatlelcRt eth-nee gotia oter system. Sink USB Default Operation\nRe-negotiate Source\nThe with the after choosing to resume . The decision of how\nto SourceSha lalfter an over temperature evePnotr its left to the discretion of the implementation.\nUSB Default Operation Re-negotiation Port\nThe prevent continual system or cycling if over temperature protection continues to engage after\ninitially resuming either or . Latching off the or system is an acceptable\nresponse toO rTePcurring over temperature. Port Source VBUS\nvSafe5VShall VBUS vSafe5V tSafe5V vSafe0V tSafe0V\nDuring the and subsequent system or shutdown, all affected ports operating with greater\n7th.a1n .7.3 d ivscShaarfgee5 V E tox terna lblyy t hAep tipmlei ed to Panodr ts Sup bpy tlhyei ntimge v Safe5. V\nSource Shall vSafe5V VBUS\nVBUS Shall vSafe5V\nSvaSfaef eo5pVeration mandates that Power Delivery s be tolerant of being present on when\nsimultaneously applying power to . Normal USB PD communication be supported when this to\n7.1.7.4 connection e Dxisetst.ach\nDetach CC USB Type-C Source Detached\nSourceShall vSafe0V tSafe0V Detach\nA UvSSBa fe0V isV d B e U t S ected elecSthraiclallly using vS daeftee5cVtion on thteS afe5V connector. WhenD ethtaec h is\nthe Shall N ot transivtSioanf eto5 V by relative to when the event occurred. During the transition\nto the voltage be below max by relative to when the event occurred\naSnoudr ce exceedE PR Mode max after this time.\n[USB Type-C 2.4] Source EPR Mode\ns operating in Sh anleled to avoid creating large differentialV v B o U l S tages at the connectoMra. Syee Appendix H\nin the spSeocuifricceation for background informSahtoiounld. To achieve this, s operating in ,\nupoSno duertceecting a disconnect, stop sourcing current aSnodu mrcienimize capacitance. There continue to be\ncurrent sourced frSoomur tchee bulk capacitFaingcuer,e b 7u.t1 t, h\"Palta cement a olfs oS obuer mcei nBiumlki zCeadp bayc idtaisnccoen\"necting as much of\nthe bulk capacitance as possible. For example, the can stop sourcing from the Power Supply and the\nC1 portion of the bulk capacitance in by disabling the\nOhmSico uInrcteerSchoonunledct switch. VBUS\nCC VBUS\nThe detect the disconnect, stop sourcing current, and minimize the capacitance as quickly as\npractical. If this is done after the contacts disconnect and before the contacts disconnect there is less risk\nNofo ltaer:ge differential voltages at the conneScotourr.ce\nSource\nA USB-PD transmission by the during a disconnect event will delay disconnect detection by the\n7.1.7.5 . Output Voltage Limit\nSource Shall vSrcNew vSrcValid vPpsNew vPpsValid vAvsNew\nvAvsValid NegotiatedVBUS Source Shall\nThe output voltage of s account for , or , or ,\nas determined by the value. s meet applicable safety and regulatory\nrequirements.\nPage 324 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.1.8 Output Voltage Tolerance and Range\ntSrcReady Source\nShall vSrcNew vSafe5V vSrcNew\nvASftaefre 5a Vvoltage transition is complete (i.e., after ) and during static load conditions the output\nvoltage remain within the tSrcRead oyr limits as applicable. The ranges dSoeufirnceed by anSdh all\nNot account for DC regulation accvuSrraccVya, lliidne regulation, load regulatSioonu racned output ripple. After a voltage\ntransition is comvpSrlectNee (wi.e., avftSearf e5V vS)r acnVda ldidurSihnag ltlr Nanostient loadtS crocnTdriatinosnise nthte oTuatbpluet7 v.o2l3t,a \"gSeo urce\nElec tgroic bael yPoanrdam theete rrasn\"ge specified by . The amount of time thFeig ure 7.1 1o,u \"tAppupt lvicoalttaiogne ocaf nvS brecN ine wth aen bda nd\nbvSertcwVeaelnid e liitmhietrs after tSrcR oera dy\" and v SerxccNeeedw vSrcValid. Refer to\nfor the output voltage tolerance specifications.\nillustrates the application of and after the voltage transition is\ncompvlSertceN.ew vSrcValid Shall Not VBUS VBUS\nFast Role Swap Section 7.1.13, \"Fast Role Swap\"\nThe and limits apply to during the discharge and switchover that occurs\nduring a Figur ea s7 d.1e1sc Aripbpeldic iant ion of vSrcNew and vSrcValid. limits after tSrcReady\nvSrcValid(max)\nvSrcNew(max)\nvSrcNew(typ)\nvSrcNew(min)\ntSrcTransient window\nvSrcValid(min)\niLoadStepRate\nSink Load I1\ntSrcReady\nSource Shall SourceShall\nThe output voltage be measured at the connector receptSaeccleti. oTnh 7e. 2s.t6a,b \"iTlirtayn osfi etnhte L oad Be havio rb\"e\ntested in 25% load step iSnhcarellments from minimum load to maximum load and also from maximum load to\nminimum load. The transient behavior of theS olouardce current is defined in . The\ntime between each step be sufficient to allow for the output voltage to settle between load steps. In some\nsystems it might be necessaryS toou drceesign the to compensate for the voltage drop between the output stage of\nthe power supply electronics and the receptacle contact. The determination of whether compensation is necessary\ni7s .l1ef.t8 to. 1the discretio nA oVf Sth/e PPS O imuptlpemuetn Vtaotiolnta. ge Ripple\nAVS PPS LSB Figure\n7.12, \"Expected AVS/PPS Ripple Relative to an LSB\"\nThe / output voltage ripple is expected to exceed the magnitude of one or more as show in the\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 325\n(cid:1091)(cid:3)(cid:3)\ntSrcTransient windows\n(cid:1091)(cid:3)(cid:3)\n(cid:1091)(cid:3)(cid:3)\nSink Load I2\niLoadReleaseRate\nFigure 7.12 Expected AVS/PPS Ripple Relative to an LSB\ntime\n7.1.8.2 AVS/PPS DNL Errors and Output Voltage/Current Tolerance\nLSB DNL Figure 7.13, \"Allowed DNL errors\nand tolerance of Voltage and Current in AVS/PPS mode\" LSB\nThe PPS voltage and current discrvePtep sSte sptevpAsv hsaSvtee pa tolerance aisP pshsoCwLSnt einp\nValidLSB Figure 7.13, \"Allowed DNL b eerlroowrs. aInn da btosolelruaten ctee romf Vs othltea gsete apn sdi zCeu orrf etnhte in AV fSo/rP bPoSt h\nvmooltdaeg\"e and current is defined by / for voltage and for current. Several examples of\nsteps are shown in\n\uf06c : DNL LSB\n\uf06c The upper end of the DNL error (+1L SB ) shows the case where one step is effectively skipped.\nThe lower end of the error (-1 ) shows the case where the voltage or current set-point\nremained the sameD.NL\nThe ideal scenDaNriLo for the error (=0) matches the typical step size for the voltage or current.\nThe intent of is to guarantee that changes to the voltage/current have the correct directionality, and that the\nmNoatxeim: um stepS soiuzrec iesS chleoaurlldy defined.\nDNL\nThe avoid scenarios where multiple consecutive steps have errors close to the Maximum\nand Minimum .\nPage 326 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\negatlov\n+1 LSB\n+1 LSB\nFigure 7.13 Allowed DNL errors and tolerance of Voltage and Current in AVS/PPS mode\nCode\n7.1.8.3 Programmable Power Supply Output Voltage Tolerance and\nRange\ntPpsSrcTransSmall\ntPpsSrcTransLarge Source Shall vPpsNew\nAfter a voltage transition of av PPprosgNreawmmable Power Supply is complete (i.e. after or\n) and during static load conditions the tPp soSurtcpTurt avnosltSamgea ll t rPepmsSarinc TwriathnisnL tahreg e\nlimits. The range defined by So aucrccoeunts for DC reguSlhataiolln N aoctcuracy, line regulation, load regulavtPiopns aVnadli d\noutput ripple. After a voSltoaugrec teransition is complete (i.e. after vPpsNe wor vPpsValidShall )N aontd\nduring ttrPapnssTiernatn lsoiaedn tconditions the output voltage go beyond the range specified by .\nThe amount of time the output voltage can be in the band between and\ne7x.c1ee.8d .4 A.djustable Voltage Supply Output Voltage tolerance and Range\nAVS tAvsSrcTransSmall tAvsSrcTransLarge\nSource Shall vAvsNew\nvAAftvesrN ae vwoltage transition of an is complete (i.e. after or ) and during\nstatic load conditions the t AovustSpructT vroaltnasgSem all retAmvasiSnr wcTitrhainns tLhaer ge limits. The range defined by\nSource accounts for DC Srehgaulll aNtiootn accuracy, line regulation, load revgAulvastVioanli adnd output ripple. After a vSoolutargcee\ntransition is complete (i.e. after vAvsNew or vAvsValidShall N)o atnd durintgA vtrsaTnrsaiennstie lonatd conditions\nthe output voltage go beyond the range specified by . The amount of time the\noutput voltage can be in the band between and exceed .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 327\nVoltage,\nCurrent\nMax DNL = 1 LSB\nvPpsNew,vAvsNew,\niPpsNew\n(max)\nDNL < 0 LSB\nDNL = -1 LSB\n1 LSB\nvPpsNew,vAvsNew,\niPpsNew\n(min)\nvPpsNew,vAvsNew,\niPpsNew\n7.1.9 Charging and Discharging the Bulk Capacitance on VBUS\nSourceShall VBUS Source Negotiated\nShall Not\nSTohuer ce charget aSnrcdR deiascdhyarge the bulk capacitance on whenever the voltage is to\na different value. The charging or discharging occurs during the voltage transition and interfere with the\n7.1.1's0 ability to mSweeta p Stan.dby for Sources\nSource Sink Dual-Role Power PortShall Swap Standby Swap Standby Source\nSource VBUS vSafe0V Power Role Swap\ns and s of a support . occurs for the after\nthe power supply has discharged the bulk capacitance on to as part of the\ntransitionS.wap Standby\nWh\uf06cile in SourceSha:ll Not VBUS vSafe0V\n\uf06c The drive that is therefore veSxapfeec0teVdS thoa rlelmain at . VBUS\n\uf06c Any Ddiusaclh-Raroglee Pciorwcueirt rPyo rthtaSth walals used to achieve Sink be removed from .\n\uf06c The Shall Not be configured asv aS afe5.V VBUS Section 9.1.2,\n\"Mapping to USB Device States\"\nThe USB connection reset even though is no longer present on (see\nPS_RDYMessage ). Source Swap StandbyShall VBUS\nSource Swap StandbyShall Not tSrcSwapStdby\nSTwhea p Standb y Sou arscseociated with the Po wbeeirn Rgo ilne Source be sent after the New dSrinivke is\nremoved. The time foSrw tahpe Standb yto transition tNo ew SinkShall exceedtN ewSnk New. U Spinokn Menatyering\n, the hSaosu rrecleinquished itPsS _RDYMess aagse and is ready to become the . The\ntransition time from to being the be no more than . The start\nu7s.i1ng. 1po1wer afte r Sthoe nuerwc e Pe saeknd Cs tuher rent Opera. tion\nSource Fixed SupplyPDO AVSAPDO Shall\nCapabilities Table6.10, \"Fixed Power Source Peak Current Capability\"\nATa ble6.1 6th, \"aEt PhRas A tVhSe Power Source Pea ko Cr urre nt Cap aPbeialikty C\"urrent bits set to 01b, 10b and 11b be designed\nto support one of the overload definTeadb lien 6.10, \"Fixed Power Source Peak Current Capability\" or\nTable6.16, \"EPR AVS Power Source Peak Current Capability\" rSeosupreccetively. The overload conditions are bound in\nmagnitude, duration and duty cycle as listed in Source vSrcPeak or\nvSrcNew Figure 7.14, \"So. urce Pesa ka rCeu nrroetn rte Oqvueirreloda tdo\" support continuous\noverload operation. When oSovuerrlcoead conditions occur, the is allowed the range of (instead of\n) relatSiovue rtcoe the noSmouirncael Mvaaluye (see Source_CapabilitiesMessage ).F Wixehde nS utphpel oyvPeDrOload AVS\nAcaPpDaObility is exceeded, the is expected take whatever action is necessary to prevent electrical or thermal\nNdaemgoatgiaet teod the S.i nTkhe send a new with the or\nPeak Current bits set to 00b to prohibit overload operation even if an overload capability was previously\nwith the .\nPage 328 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.14 Source Peak Current Overload\nOperating range for supply that DOES\nSource Port Voltage\nNOT support overload capability\nAdditional operating range for\nvSrcNew(max)/\nFixed Supply that supports\nvSrcPeak(max)\noverload capability\nNominal Voltage\nvSrcNew(min)\nvSrcPeak(min)\nSink Port Current\nI level % level with respect to I\nOC OC\nas requested in the Operating as advertised in the Peak Current\nCurrent field of an RDO field of Fixed Supply PDO\n7.1.12 Source Capabilities Extended Parameters\nPDUSBSource Static\nImplementers can choose to make availaSbtalet iccertain characteristics of a Sectio ans 6 a.5 s.1e,t of and/or\nd\"Syonuarmcei_cC paapraabmileittieerss_ Etoxt iemndperdo vMe eisnstaegreo\"perability betwFiegeunr ee x6t.e3r7n, a\"Sl opuorwcee_rC saopuarbcielist iaensd_E pxoterntadbelde Mcoemsspaugeti\"ng\ndevices. The complete list of reportable parameStoeurrsc eis C daepsacbriiblietide sin full in\nand listed in . The\nsubset of parameters listed below directly represent and are described in the rest of this\nsect\uf06cion.\n\uf06c Voltage Regulation.\n\uf06c Holdup Time.\n\uf06c Compliance.\n\uf06c PSoeuarkc Ceurrent.\n\uf06c Inputs.\n7.1.12B.a1tteries. Voltage Regulation Field\nSource\nVoltage Regulation\nThe power consumption of a deSvoiucrec cean change dynamically. The ability of the to regulate its voltage output\nmight be important if the device is sensitive to fluctuations in voltage. The bit field is used to\nc7o.n1v.e1y2 in.1fo.r1mation abo u Lt othae d Steps oSultepuwt rRegautlaetion and tolerance to various load steps.\nSourceShall\nSource_Capabilities_ExtendedMessage\nThe default load step slew rate is established at 150mA/\u00b5s. A meet the following requirements under\nthe \uf06cload stepS roeuprocertSehda ilnl the VBUS vSrcVal:id\n\uf06c The CmCaintaiSnh all regulation wvitNhoinis tehIed le vNo risaenAgcet.ive\nThe noise on the line remain below and .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 329\nAdvertise\nSourceShall\nTest conditions require a change in both positive and negative load steps from 1Hz to 5S0e0ct0ioHnz ,5 u.8p. 2to, \" tThrea nsmit andd\nRLoecaedi vSet eMpa Mskasg\"nitude of the full load output including from both 10 mA and 10% initial load. The\nensure that PD Communications meet the transmit and receive masks as specified in\n7.1.12.1.2 under al l Llooada cdo nSdtietipon Ms. agnitude\nShall IoC SourceMay\nIoC\nThe default load step magnitude rate be 25% of . The report higher capability tolerating a load\n7ste.1p .o1f 920.%2 of . Holdup Time Field\nHoldup Time Shall\nAC Supply\nThe field return a numeric value of the number of milliseconds the output voltage stays in\nregAulCa Stiuopnp ulipeodnS oau srhcoerSth inatlelrruption of the .\nAC Supply Source\nAn AC Su pply report its holdup time in this field. The holdup time is measured with the load at ratAeCd\nSmuapxpilmyum, with the at 115VAC rms and 60Hz (or at 230VAC rms and 50Hz for vaS rcVali dthat doeSso nuortc e\nsupport 115VAC ). The reported time describes the minimum length of time from the last completed\ninput cycle (zero-degree phase angAlCe )S uunptpilly when tFhieg uoruet p7u.1t5 v, o\"lHtaogldeu dpe cTaimyse b Meleoawsu rement\" (min). s\nare recommended to support a minimum of 3ms and are preferred to support over 10 milliseconds holdup time\n(equivalent to a half cycle drop fromF itghue re 7.15 Ho).l dSeuep Time Measurement .\nAC mains voltage\n(cid:1091)\nV\nBUS\nvSrcValid(min)\nHold Up Time\n7.1.12.3 Compliance Field\nSPR Source LPS [IEC 62368-1] Shall Capabilities\nCompliance SPR SourceMay SPR\nSAonu rce claiming , PS1 orP PDSO2 cSohmapllliance (see LPS ) report its in the\nfield. Since the have several potential output voltage and current settings, every\nNote: supply (each indicated by a ) [IE Cb 6e 0c9o5m0p-l1ia]nt to [I rEeCq 6u2ir3e6m8e-n3t]s.\nLPSSource SPR Source EPR Source SPR Mode LPS\nSAocucrocredinEgP tRo S tohuer rceequirements ofE PR Mode and/or [IEC 62368,- a1 ]device tested and certified with\nan ( or operating in ) is prohibited from using a non-\n( operating in ). Alternatively, , classifies power sources\n7.1.12.a4ccording t oP teheairk m Cauximrruemn, ctonstrained power output (15watts or 100watts).\nSource Negotiated Peak\nCurrent Shall\nThe Io Creports its ability to source peak current delivery in excesIso oCf the amount in the\nfield. The duration of peak current be followed by a current consumption below the Operating\nCurrent ( ) in order to maintain average power delivery below the current.\nPage 330 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nSourceMay Peak Current\nFixed SupplyPDO AVSAPDO SourceShall Peak\nCAu rrent1 Pea hka Cveu rgrreenatte2r cPaepaakb Ciluitryr teon sto3urce peak curSroeunrtc teh_aCna cpaanb bileit rieesp_oErxtteedn udseindgM tehses age field in\nthe or . In this case the report its additional capability in the\n/ Shal/l fields in the .\nSection 6.5.1.10, \"Peak Current\nEFiaeclhd \"ovSehralolla dN opteriod bNee fgoolltoiawteedd by a period of reduced current draw such that the rolling average current\nover the Overload Period field value with the specified Duty Cycle field value (see\n) exceed the current. This is calculated as:\nP7e.r1io.d1 o2f .r5educed cu r Sreonut =r (c1e - vIanlupeu int sDuty Cycle field/100) * value in Overload Period field\nSource Inputs Source\nTNhoete : Sou friceeld identifies the possible iBnaptutetsr ythat provide power to the . AC\nSupply\nSome s are only powered by a (e.g., an automobile) rather than the more common\n7.1.12.6 . Batteries\nNumber of Batteries/Battery Slots Shall Source Source\nShall Fixed Batteries\nThe field report the number of Batteries the supports. The\n7.1. i1nd3ependen tFlya respto rRt othlee n uSmwbear pof Hot Swappable Batteries and the number of .\nFast Role Swap VBUS HubDFP\nUFPAttached DRPAttached HostPort DRP Figure 7.16, \"VBUS\nAPo wer during Fas lti mRoitlse tShwea inpt\"erruption of power to a bus powered accessory connected to a that has\na to a power source and a to a supporting as shown in\n. Figure 7.16 VBUS Power during Fast Role Swap\nDRP DRP DFP Bus Powered Power flow before the\nAccessory Fast Role Swap\nUSB PD Capable USB PD Capable\nHost Hub\nPower flow after the\nUFP Power Source\nFast Role Swap\nHubUFP VBUS HubDRP\nvSrcValid VBUS Negotiated vSafe5V vSafe5V\nWheFna stth Re oploew Swera spo Ruerqceu ecsotnSnheacltled to the H sutobpDsR sPourcing HpoowsteDrR aPnd atH tuhbe DRP Shal lconnector\ndiscFhaasrtg Reso lbee Slowwap (minH),u ibf DRP has been to a higher voltage than HubDRP, oShr all Not (min)\ntVh B e U S be sent from the Init tiaol t Shoeu rce New a nSdin tkhe H ubD FPPo rstink pShoawlelr. In\nthe US Bu sTey pcaes-Ce, the [ bUeShBa vTeysp leik-Ce 2a. 4b]idirectional poEwxpelri cpiat tCho. nTthrae ct N ego tiated enable\ndischarge circuitry when changing operation from to . The (s)\nsupport default Fast Role S Cwuarpr eRnetq (useeset VBUS v) Suanfteil5 aV new New SinkS hisa ll Not .\niNewFrsSink New Source R New SinkShall Not iSnkStdby VBUS\nAfter tsSennkdFinRgS wthaep and whileF ast Ro >le Swap Re (qmuiens)t, theV BUS dvrSaawf em5oVre than\ntSnkFRSw uanptil the Shall has applied its p. The Fast Role Swap Requ dersatw more thVa B n U S frvoSma fe5V\nuntil after it has started sending tthSen kFRSwap New Sink oSrh all N ohtas fallen below iNewF r(smSiinn)k.\nThe New Sour tcieme start atR the beginninNge owf Sthoue rce R orN wewh eSnin kSha falllls below USB\n(Tmypine-)C, whichever com[UeSsB la Tteyrp. eA-fCte 2r. w4]aiting foImr plicit Contrac, tthe Explicit Co dnrtraawc tmorNee tghoatnia ted Sink\nuntil the Shall has applied Nitesw p S. iAnfkter the Fast Role h Sawsa appplied its p, the Fast Rol e Swa pbe limited to\nHostDR CPurrent (see Section 7.2.10), i\"nF aasnt Role Swap\" untiHl ao snteDwR P is Initial Sin.k All\nrequFiarsetm Reonlets S wap apply to the after the is complete. The response of the\nis described in since the is operating as the prior to\nthe VBUS . HubDRP vSafe5V PS_RDYMessageShall\nHostDRP Fast Role Swap Section 7.3.4, \"Transitions Caused by Fast Role Swap\"\nAfter the voltage level at the connector drops below a be sent to the\nas shown in the transition diagram of .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 331\nFigure 7.17, \"VBUS detection and timing during Fast Role Swap, initial VBUS (at new source) > vSafe5V(min)\"\nFigure 7.18, \"VBUS detection and timing during Fast Role Swap, initial VBUS (at new source) < vSafe5V(min)\"\nVBUS New Source Fast Role Swap Fast Role Swap Request and\nNew SourceMay VBUS VBUS vSafe5V show the\nNew Sdoeuterccetion and timVB in U g S for the v dSuarfien5gV a after thSeh all VBUS has been\nreceivetdS.r TchFeR Swap turn ovnS athfee5 V output switch once is below (max). In this case, the\nprevents from falling below (min). The new source turn on the output switch\nVwBiUthSin of fallinvgS abfeelo5wV (min). Fast Role Swap Request VBUS\nvSafe5V vSafe5V vSafe5V Fast Role Swap\nRequ emstight have started atV BUS or avt Shaigfhe5erV voltage. When the Shall is dVet B e U c S ted, could\ntherefotrSer bceF ReSitwhearp above (mFaasxt) ,R wolieth Siwn athpe R equest range, or below (min). If the\nFast iRso dlee tSewctaepd Rwehqeunes t V i B s U b S elow (mMiany), thetSnr tchFeR nSewwa psource tFR tSuwrna opnR xthe output switch\nwithin of detecting the . In this case, the maximum time from the beginning of\ntFhieg ure 7.17 VBUS detectio tno a nd t ibmeiinngg sdouurricnegd Fast Rboe le Swap, init i(aml VaxB)U +S (at new sou (rmcea)x >). vSafe5V(min)\nOld Voltage VBUS\nNew Source may\nturn on at any time\n(cid:167) after VBUSfalls below\nvSafe5V(max)\nvSafe5V(max)\nvSafe5V(min)\nOld Source\ndetects power loss\nand signals Fast\nRole Swap\n0V\ntSrcFRSwap\nFigure 7.18 VBUS detection and timing during Fast Role Swap, initial VBUS (at new source) < vSafe5V(min)\nNew Source may turn on after\nVBUSis below vSafe5V(min) detecting Fast Role Swap signal\nbefore FRS signal is finished\nvSafe5V(min)\nOld Voltage\nVBUSat new\nSource\ntFRSwapRx (max)\nCC\n0V\nOld Source detects power tSrcFRSwap\nloss and signals Fast Role\nSwap\n7.1.14 Non-application of VBUS Slew Rate Limits\nvSrcSlewPos vPpsSlewPosVBUS VBUSMay\nScenarios where and slew rate limits do not apply and transition faster\nthan\uf06c specified are as followsV: BUS Attach\n\uf06c When first applyViBnUgS after anP ower R.ole Swap SourcePower Role\n\uf06c When applying VBU aSs part voSf aaf e0V vSafe5V to Ha rd Reset .\n\uf06c When incFraeasts iRnogl e Swa fprom In ittoia l Sink durinVgB aU S .\nDuring a when the applies .\nPage 332 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nvSrcSlewNeg vPpsSlewNegVBUS VBUSMay\nScenarios where and slew rate limits do not apply and transition faster\nthan\uf06c specified are as followVsB:US vSafe0V Hard Reset\n\uf06c When discharging VBUS to vSafe0V during a Power R.ole Swap SinkPower Role\n\uf06c When discharging VBUS to vSafe0V as part Doef taa ch to .\n\uf06c When disFcahsatr gRionlge Swap to V aBfUteSr a . HubUFP\n7.1.15During a VCONN Po wwheenr t hCey cle power source connected to the stops sourcing power.\n7.1.15.1 UFP VCONN Power Cycle\nData Reset DFP VCONN Source\nUFP VCONN Source Shall\nThe process requires the to be the by the end of the process. In the case where the\n\uf06c is the , the followinGgo sotdeCpRs CMes sbaeg feollowed: AcceptMessage\nData_ResetMessage UFPShall VCONN [USB Type-\nFCo 2ll.4ow] ing the ltaVs\nC\nt\nO\nb\nN\ni\nN\nt Zoef rthoe acknowledging the in response to the\n, the turn off and ensure it is below vRaReconnect (see\n\uf06c )V wCOitNhNin . UFPShall PS_RDYMessage\nNote: When UFP is below vRaRecoVnCnOeNcNt, the sePnSd_ aR DYMess age .\n\uf06c If tDhFeP Sha wllas nott VsCoOuNrNciRnega pplied, it still sends the GoodC. RCMessage\nPS_RDYMessage VCONN DFPShall VCONN [USB\nTThype e-C 2 .4] wait tVCONNValid following the last bit of the acknowledging the\nbefore sourcing . The ensure is within vVCONNValid (see\nFigure 7.19, \"Data Re) sweti tUhFinP VCONN Power. Cycle\" UFPVCONN\nFigure 7.19 Dat ab eRloewse itl lUuFstPr aVtCeOs NthN eP owe r Cycl ePower Cycle process.\nUFP DFP\nvVCONNValid\nvRaReconnect\n0V\nAccept PS_RDY\n(DFP/UFP) (UFP)\ntVCONNZero\ntVCONNReapplied tVCONNValid\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 333\n7.1.15.2 DFP VCONN Power Cycle\nData Reset DFP VCONN Source\nDFP VCONN Source Shall\nThe process requires the to be the by the end of the process. In the case where the\nis the DFP , thDe afotall_oRweisnegt sMteepsssa ge be followed:VCONN Shall VCONN\n[USB Type-C 2.4] tVCONNZero GoodCRC\n1) IMf ethssea ge sent the Ac ceptMes asangde is sourcing thDeant iat _Rese ttuMrens osaffg e and ensure it\nis below vRaReconnect (see ) within of the last bit of the\nUF PacknowledDgaintag _tRhees etMess age in reDspFoPnSshea tlol the VCONN .\n[USB Type-C 2.4] tVCONNZero GoodCRCMessage\n2) If the sent the AcceptMes sage then the Data t_uRrens eotffM essag eand ensure it is below\nvRaReconnect (see ) within following the last bit of the\nacknowVCleOdNgNing the in resDpFoPnsSeh taol lthe tVCONNRe applied . VCONN\n3) WheDn FPSha lils below vVRCOaRNNeconnect, the wait [USB Type-C 2.4] before stVouCOrcNiNnVga lid .\nFigu4r)e 7T.2h0e, \"Dat a Rese te nDsFuPr eV CONN P oisw werit Chyincl ve\"VCONNValid (see DFPVCONN ) within .\nFigure 7.20 Dat ab eRloewse itl lDuFstPr aVtCeOs NthNe P owe r Cycl ePower Cycle process.\nUFP DFP\nvVCONNValid\nvRaReconnect\n0V\nAccept\n(DFP/UFP)\ntVCONNZero\ntVCONNReapplied tVCONNValid\nPage 334 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "7.2", "title": "Sink Requirements", "page": 335, "level": 2, "parent_id": "7", "full_path": "7.2 Sink Requirements", "tags": [], "text": "7.2 Sink Requirements\n7.2.1 Behavioral Aspects\nPDUSBSink\nA \uf06c S hall Nexohtibits the following[U bSeBh aTvyipoers-C: 2.4]USB Type-C VBUS Default Contract\nImplicit Contract\ndraw more than Current from while in a\n\uf06c oShr all . Section 7.1.5, \"Response to Hard Resets\" Hard Reset\nSignaling\nfollow the requirements as specified in when\n\uf06c Shall is reVcBeUivSed. [USB 2.0]\n[USB 3.2]\ncontrol in-rush current when increasing current consumption according to or\n7.2.2 aSsi anppkr oBpruialtek. Capacitance\nSink Figure 7.21, \"Placement of Sink Bulk Capacitance\"\nThe bulk capacitance consists of C3 and C4 as shown in SinkOVP . STihnke\nOhmic InterconSneecctti omni g7h.2t. 9co.2n, s\"iIsntp ouft POCvBer t rVaocletas gfoe rP prootwecetri odnis\"tribution or power switchingV d\nB\ne\nU\nv\nS\nices. The Ohmic\nSInintekrSchoannllect is expectOedV Pto be pSairntk oSf hana liln Npoutt Over VoltagSeo Purrocetection ( ) circuit implemenOtVePd by the\nas described in to protect against excessive input voltage. A\ncSnk BulkP idmSphleamlle Nnot t . The rely on the output voltage limit for its input . The\ncVa\nB\np\nU\na\nS\ncitance might be a single capacitor, a capacitor bank or distributed capacitance. An upper bound of\nbe exceeded so that the transient charging, or discharging, of the total bulk capacitance on\nS ciannk be accounted for during voltage tracnSsnitkiBonuslk. cSnkBulkPd\nNegotiated Sink Sink Standby\nThe bulk capacitance that is within Stihnek max or max limits is allowed to chSiannkge to\nsupport a neSwhlayl l Not power level. The capacVit B a U n S ce can be changed when thCeo ntra cetnters Power R oolre\ndSwuraipng a voltage tSrainnksiSthioanl lor when the Swa bpe Sgtinans dtob yoperate at the new powerN leewv eSlo. Curhcaenging the bulk\ncapacitance cause a transienPto cwuerrr eRnotl eo nSw apS thhaaltl violates the prSewseanpt S tandby . During a\nthe Default transition to before operating as the . Any change in bulk\ncapacitance required to compleFteig tuhree 7.21 Placement of Sin okc cBuur ldku Crainpga citance .\nV\nBUS\nGND\nSHIELD\n7.2.3 Sink Standby\nSinkShall Sink Standby VBUS Sink Standby Sink\nShall iSnkStdby Source\nThe transition to bSeifnokre a positive voltage transition of . During SinkSh thaell\nreduce the current drSainwkn S ttoa ndby . TtShnisk Satlldobwys the to manaAgec ctehpet vMoletsasgaeg etransition Saosu wrceell as\nsupply sufficient operating cuSrirneknt to the to mSianikn tSatiann PdDby oSphearalltion during the transittioSnn.k TNheew Pow er\nicSonmkpSltedtbey this transition tSoh all within Sink after evaluating the from the . The\ntransition when returning to operation from be completed within . The\nSection r 7e.q3u, \"irTermanesnitt ions\" only apply if the current draw is higher than this level.\nSee for details.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 335\n...\nV\nBUS\nData C3\nLines\nGND\nSHIELD\n...\nCABLE SINK\nOhmic\nLoad\nInterconnect\nData\nLines OVP C4\nSink Bulk Capacitance\n7.2.3.1 Programmable Power Supply Sink Standby\nSink Sink Standby Negotiated APDO SinkMay\nRDO\nA is not reSqPuRi rPePdS to tCraunrrseitnito nLi tmoi t SinkSh awllhen operating within the PPS . A\nconsume the OperatingS iCnukrrent value in the PPS during PPS output voltage changes. However, prior to\noperating theC urrent L iimn it , the progrSaPmR tPhPeS PSPoSu Orcpeerating VoCltuargree ntot Lthime iltowestS pinrkacSthicaalll\nlNeovtel that satisfies the load requirement. iDPopisnCgL sLoo awdilSl tmepinRiamtieze thiPep insCruLsLho acudrRreelneta tsheaRt aotcecurs when the\ntransition toSh all Not occurs. When operCautirnrgen wt iLtihm aint that is iiPnp sCLLoadStep, the\nchange its load in a manner that exceeds or . The load change\nmagniStiundkeN egotiate request a chanAgeP DtoO the set-point thVaBt UeSxceeds SinkS.hall\nSink Standby APDO Section 7.3.1, \"Transitions caused by a Request\nIMf ethssea ge\" s for a new PPS , that is expected to increase voltage, then the transition\nto while changing between PPS s as described in\n7.2.4 . Suspend Power Consumption\nSource USB Suspend Supported Section 6.4.1.2.1.2, \"USB Suspend Supported\" SinkShall\nShall pSnkSusp\nWhen hapsH seutb iStsu sp PDUSB H fluabg (see Source ), a\ngo to the lowest power state during USB suspend. The lowest power state be or lower for a PDUSB\nPeripheral and or lower for a . There is no requirement for the voltage to be changed\nd7u.r2in.g5 USB suspe nZde. ro Negotiated Current\nSink Negotiation Source SinkShall\npSnkSusp\nWhen a Requests zero current as part of a power with a , the go to the lowest\np7o.w2e.r6 state, Tra onr sloiweenr, tw Lheorea idt c aBn esthill acovmimournicate using PD signaling.\nSink\nShall Not iOvershoot\nWhen a 's operatingi Ocuverrresnhto cohtanges due to a load step, load release or any other change in load level, the\npositive or negative overshoot of the new load current exceed the rSainngke defined by . For the\npurposes oSfh malela Nsoutring iLoadSt ethpeR naetew load current value iiLs odaedfiRneelde aass ethRea taeverage steady state value of the\nload cuSrinreknt after the load step has settled. The rate of change of any shift in load current during normal\noperation exceed (for load steps) and (for load releases) as measured\nat thSei nk receptacle. Shall Not Source\nVoltage Regulation Shall\nThe 's operSaetcitnigo nc u5r.8re.2n, t\" Transmit a cnhda nRgeec efiavset eMr atshkasn\" the value reported in the 's Load Step Slew Rate\nin its bit field and ensure that PD Communications meet the transmit and receive masks\na7s. s2pe.7cified in Swap Standby for Sinks .\nSink Dual-Role Power PortShall Swap Standby Swap Standby Sink\nAcceptMessage Source Power Role Swap Swap Standby Sink\nThe Sha fulln Ncotitonality iniS an kSwapStdby VB US suppoDrut al-Role Power . PortShall occurs for the Sou racfteer\nevaluVat B i U n S g the fromvS tahfee 0V during a Initial Source . WhSilien kin theS hou'lsd c Nurortent\ndraw excveSeadfe 5V from VB U a S nd the Section 9.1.2 , \"Map bpein cgo tnof iUgSuBre Dde avsic ae States\"\nafter has beSeinn kdischarged to Swap Sbtya nthdeb yexSihsatilnlg . ThtSen kSw'as pUSStBd bcoynnection Swap Stand bbey\nreseSti envken though isP noowt perr eRsoelnet onS tinhke conductor (see New Source ).\nThe tiSmwea fpo Sr ttahned by toN terwan Ssoiutirocne tSoh all bteN newo mSrocre than . When in\nthe has relinquished its as and will prepare to become the . The transition time\nf7ro.2m .8 S tion k Peak Cur bree nno tm oOrep teharna tion .\nSink Shall Source Fixed SupplyPDO\nSection 6.4.1.2.1.8, \"Peak Current\" AVSAPDO Section 6.4.1.2.4.3.2, \"Peak Current\"\ns only make usSei nokf a Shall overload capability when the corresponding Peak Current\n(Nseegeo tiated Fixed Supply ) AoVr S Peak Current (see ) bits are\nset to 01b, 10b and 11b. s manage thermal aspects of the overload event by not exceeding the average\nSink output of a or that supports Peak Current operation. Shall\nAttached Source\ns that depend on tShoeu Prceeak Current capability for enhanced system performance also function correctly\nwhen to a that does not offer the Peak Current capability or when the Peak Current capability has\nbeen inhibited by the .\nPage 336 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.2.9 Robust Sink Operation\n7.2.9.1 Sink Bulk Capacitance Discharge at Detach\nSource Detached Sink SinkShall\nVBUS vSafe5V tSafe5V Detach Sink\nWhen a Sh isa ll fromS ian k , the cNoengtointuiaet etod dVr B a U w S power from its inpvuSta bfue5lkV capacSihtaanlcle until\nis discharged to or lower by no longer than Sink from the event. This safe\nrequirement apply to all s operating with a level greater than and apply\nduringD aeltla lochw power and high-powSienrk operating modes of the . Sink\nSource Attached\nD Ife tthaech is detectedV B d U u S ring a low power staStein, ksuch as USB Suspend, tShhea ll can then draw as mucVh B US\npower as needed vfrSormcV iatsli dbulk capacitance sintScea fae 5V is no Sloonugrecer . In order to achieve a successful\nDetach detect based on VBUS voltage level droop, the power consumption be high enough so thaSti nk\nwill decay below (min) well within after the bulk capacitance is removed due to the\n. Once adequate droop has been achieved, a discharge circuit can be enabled to meet the safe\nrequirement. Sink Sink\nTo illustrate the point, the following set of conditions will not meet the safe requirement without\nadd\uf06citionNale gdoistciahtaerdgeV BcUirScuitry:\n\uf06c = 20V. VBUS\n\uf06c Maximum allowable supplied voltage = 21.55V.\n\uf06c Maximum bulk capacitaDnectea =ch 30\u00b5F.\nPoDweetra cchonsumption at = 12.5mWSo.urce\nVBUS\nWhen the VBUS occurs (hevnScrec rVeamliodval of the bulk capacitance) the 12.5mW power consumption will\ndraw downS tihnke voltage from the worst-case maximum levSeinl kof 21.55V to 17V in approximately 205ms. At this\npoint, with well below (min) an approximate 100mW discharge circuit cSainn kbe enabled to increase\nSthinek rate of bulk capacitanceD detisacchharge and meet the safe requirement. The potwSearf ele5vVel of the discharge\ncircuit is dependent on how much time is left to discharge the remaining voltage on the bulk capacitance. If a\nhas the ability to detect the in a different manner and in much less time than , then this different\nmanner of detection can be used to enable a discharge circuit, allowing even lower power dissipation during low\npower modes such as USB SuspSiennkd. Sink\ncSnkBulkPd Detach Sink Sink\nIn most applicationvsS, tahfee 5sVafe requirement wilSl ilnimkit the maximum bulk capacitance weVl\nB\nl\nU\nb\nS\nelow the\nvSafe5V limit. A occurring during high power operating modes must quickly discharge the\nbulk capacitance to or lower as long as the continues to draw adequate power until has decayed\n7to. 2.9.2 or lower . Input Over Voltage Protection\nSink Shall OVP\nSink\nSinks implement input Over-Voltage ProtectionSi (nk S)h taol lp Nreovtent damage from input voltage that exceedSsh tahlle\nvoltage handvlSinrcgN ceawpabvSilritcyV oafl itdhe vPp. TsNhee wdevfiPnpitsioVna loidf voltage handling capabNieligtyo tiisa lteefdt tVo\nB U\nth\nS\ne discretionS oinf kthe\nShou ilmdplementation. The over voltage revspSopnrMsea oxf Ssh all interfere with normal PD operatiovSnp arnMda x\naccount for E, PR Sink Sh ooru ld , as determinedv bEyp trhMe ax Shal l value. SPR s\ntolerate vinEppurtM vaoxltages as high as and meet applicable safety requirements if is\nexceeded. Likewise, s tolerate input voltages as high as and meet applicable safety\nSreinqkuirSehmoeunldts if is exHcaeredd eRde.setSignaling AlertMessage\nOVP Explicit Contract OVP May Port\ns attempt to send OV wPhSehna OllVP engagUeSsB fo Dlleofwaueldt Obpye arna tion S ionudriccaeting an\nevent ovnScae faen5 V VBUS has been established. The response engage at either the or\nsystem level. Systems or ports that have engaged resume when the has re-\nestabSliinskheSdh all on Re-n.egotiate Source USB Default Operation\nRe-negotiation OVP Sink\nThe be able to with the after resuming . The decision of how\nto reSsipnoknSdh taol l after an evPeonrtt is left to thOeV dPiscretion of the implementation.\nUSB Default Operation Re-negotiation Port\nThe prevent continual system or cycling if continues to engage after initially resuming either\nor . Latching off the or system is an acceptable response to recurring over\nvoltage.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 337\n7.2.9.3 Over Temperature Protection\nSink Shall OTP\nSink\ns implement over temperature protection ( ) toS pinrkevent damage from temperature that exceeds the\nthermal capability of the . The definition of thermal capability and the monitoring locations used to trigger the\nSoivnekr tSehmapllerature protectioHn aarrde lReefts teot Sthigen dailsincrgetion of the implementation. Alert\nMessage OTP Explicit Contract\ns M aatytempt to send Port when over temperature protection engages followed by an\nindSihcoautilndg an event once UanSB Default Operati ohnas been established. The over temperatuMrea pyrotection\nresponse P eonrgtage at either the or system level. Systems or ports that have engaged oSvinekr temperature\nprotection attempt to resume after sufficient cooling is achieved and latch off\nto prSoitnekctS thhael l or systReme-n. Tehgoet diaetfeinition of sSuoffuicriceent cooling is left tUoS tBh eD defiascurlte tOiopner oaft tiohne implementation.\nRe-negotiation Sink\nThe be able to with the after resuming . The decision of how\nto reSsipnoknSdh taol l after an over tePmorpterature event is left to the discretion of the implementation.\nUSB Default Operation Re-negotiation Port\nThe prevent continual system or cycling if over temperature protection continues to engage after\ninitially resuming either or . Latching off the or system is an acceptable\n7re.s2po.9ns.e4 to recurrin g O ovveer rte mCuperrarteurnet. Protection\nSink Shall\nVBUS Source Sink\nShalsl that operate with a Programmable Power Supply implement theirA oPwDnO internal current protection\nmechanism to protect against internal current faults as well as erratic current regulation. The\n7.2. n1e0ver draw hFigahsert cRurorelnet tShawn tahpe Maximum Current value in the PPS .\nSection 7.1.13, \"Fast Role Swap\" Fast Role Swap VBUS\nHubDFP UFPAttached DRPAttached Host\nPAosr dtescribed in DRP a Figure 7.1 l6im, \"Vit B s U t S h eP oinwteerr rduuprtiniogn F oafs t Rol ep Sowwaepr \"to a bus\npowered accessory connected to a that has a to a power source and a to a\nHthoastt DsuRpPports . This configuErxaptliiocnit iCso snhtorawcnt iSnh all Initial Source Sink Capabilities .\nInitial Source Fast Role Swap Sink_Capabilities\nTMhees sage , upon establisInhiitniga la Sno urce , querFya tsht eR ole Swap req'su ired USB Type-C t Cou drerteenrmt ine\nwhether theH ostDRP supports , and what level of cHuorrstenDtR iPt rMeaquyires. If the Fast Role Swap\nHo srteDceRiPved from the Sink Chaapsa abt illeitaiests one of theI nitial Source Sink_CapabilitiesMessag beits\nset, and theF ast R ole S iws aapble to source the requested current at 5V, the Hos tDRP arm itself for .\nIf the F ast R hoales Snwota qpuerieHdo tshteD RPShall Not from the Fast Role Swa, por if thSeh allIgnore Fast Role Swa p\nrReepqouretsst no support or a current that is beyond what the is able or willing to source in the\nevent of a , the arm itself for and any\ns thHaots atrDeR dPetected. Fast Role Swap Fast Role Swap Request HostDRPShall\nShall vSafe5V VBUS HostDRP\nWhen the that suvpSapofer5tsV detecVt\nB\ns\nU\nt\nS\nhe F HostDR, tPhe stop\nsinkingv Scuarfere5nVt and H boest rDeRadPy and aNbelew t oSo suorucrecSeh all if tvhSea free5siVdual Hu vboDltRaPge level atSt rthcFeR Swa p\nHcoonsnteDcRtoPrS ihsa glrle Naotetr than VBUS . When the residual voltage lPeovwele ar tR tohlee Ini tcioaln Sniencktor dNieswch Saorugrecse\nbelow (min) the as the supply to the within . The\nN ew S ourceSha elnlable vS adfies5chVargeU ScBir cTuyiptrey-C when changing[U SB Type-Cs 2 f.r4o]m Atod vertise .\nFast Role Swap required USB Type-C Current Section 6.4.1.3.1.6, \"Fast Role Swap USB Type-C Current\"\nTheS ource supSphlayl l at New Sour cCeurrent (seeF ast Role Swap ) at the valueF ast Role Sdw inap the\nHubDRP Section 7fi.e1l.d13 (,s \"eFea st Role Swap\" HubDRP Initia)l.\nSAollu rce requiremFeanstts R ole Sw aappply to the after the is complete The\nresponse of the is described in since the is operating as the\nprHioors ttoD tRhPe VB.US HubDRP PS_RDYMessageShall HubDRP\nFast Role Swap Request AMS Section 7.3.4, \"Transitions Caused by Fast Role Swap\"\nAfter the is providing power to the , a be sent to the as\ndefined by the and the detailed in .\nPage 338 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "7.3", "title": "Transitions", "page": 339, "level": 2, "parent_id": "7", "full_path": "7.3 Transitions", "tags": [], "text": "7.3 Transitions\nNegotiation Negotiation\nMessage Signaling\nThe foMlloewssiangge sections illustrate the power supply's response to various types of s. TMhees sage s\nare triggered by certain s or . It provides examples of the transitions and is organized around each\nof the s and Signals that result in a response from the power supply. The response to a or Signal\ncan result in different transitions depending upon the power supply's starting conditions and the requested\ncha\uf06cnge. RequestMessage\n\uf06dTransitions caused by a (A )PDO :\n\uf06eGeneric transition between s:\n\uf06e Increase the current.\n\uf06e Increase the voltage.\n\uf06e Increase the voltage and the current.\n\uf06e Increase the voltage and decrease the current.\n\uf06e Decrease the voltage and increase the current.\n\uf06e Decrease the voltage and the current.\n\uf06d No change in Current or v P o D lt O age F . ixed Supply Battery Supply Variable Supply\n\uf06eTransitions within the same ( , , ):\n\uf06e Increase the current.\n\uf06e Decrease the current.\n\uf06d No change in current. APDO\n\uf06eTransitions within the same PPS :\n\uf06e Increasing the Programmable Power Supply (PPS) voltage.\n\uf06e Decreasing the Programmable Power Supply (PPS) voltage.\n\uf06e Increasing the Programmable Power Supply (PPS) Current.\n\uf06e Decreasing the Programmable Power Supply (PPS) Current.\n\uf06d Same Request Programm A ab V l S e A P P o D w O er Supply (PPS).\n\uf06eTransitions within A t d h j e u s s t a a m bl e e Volt age Su : pply AVS\n\uf06e Increasing the Adjustable Voltage Supply ( AVS ) voltage\n\uf06e Decreasing the A djustable Voltage Supply ( AVS ) voltage\n\uf06c Same Request PR_SwapMessage ( )\n\uf06dTra S n o s u it r i c o e ns caused by P t o h w e e r Role Sw ap :\n\uf06d Sink requests P a o wer Role Swap\n\uf06c requests a Hard ResetSignaling\n\uf06dTra S n o s u it r i c o e ns cause H d a b r y d ResetSigna ling :\n\uf06d Sink issue H s a rd ResetSig naling .\n\uf06c issues F ast Role . Swap Request\n\uf06dTra S n o s u it r i c o e ns caused R by the [USB Type-C : 2.4]\nasserts d at its preferred current.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 339\n7.3.1 Transitions caused by a Request Message\nRequestMessage\nT7h.3is .s1ec.t1ion describe sC thraansnitgioinns gth tath aere S caouuserdc bey ba etwee n Diff.erent (A)PDOs\n(A)PDO Power Data Object\nPDO APDO CapabilitiesMessage\nIn these transition descriptions the term is used to describe any , regardless of whether\nit is a or an in the . RequestMessage\nThis\uf06c section descri(bAe)sP DtrOansitions in r(eAs)pPoDnOse to a :\n\uf06c From one I mplicit C t o o n a tr n a o c t t her Expli cit Contract\n\uf06c From a [U n S B Type-C 2.4] to an First Explicit Contract\nFrom operation to the\nThese transitions usuaDlleyv ricees uPlot liincy a M vaonltaaggeer changPeo rbtuPt oilsi cnyo Etn rgeinqeuired. Shall\nFigure 7.23, \"Transition Diagram for Increasing the Voltage and Current\"\nThe Finigteurraec 7ti.2o5n, o\"fT trhaen sition Diagram for Decr, ethaesi ng th e Voltage an dan Indc trheea sPionwg ethr eS Cuuprprleyn tth\"at be followed\nwhen increasing the current is shown in\nand Source Shall ValidVBUS . Source\nPDO APDO Source Shall ValidVBUS\nThe New SvooultracgeeP aDsO the AtrPaDnOsition starts be aSnhya lvloltage within the T raabnlgee7 o.2f, t \"hSee qpureenvicoeu Dsi agram\nfor In ocrr easing. Tthhee V oltage vaonldta Cguer arfetnetr\" the trTaanbslieti7o.n4 ,i \"sS ceoqmuepnlectee D escri pbteio ann fyo vr oDletacgreea wsiinthgi tnh teh Veo ltage and range\nIonfc trheea sing the Cur rent\" or . The sequence that Shal lbe followed is described inT able7.23, \"Source Electrical\nParameters\" Table7.24, \"Sink Electrica la Pnadr ameters\" Table7.25, \"Common Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in\nNote: , Sink , aRnedq uestMessage Source .\nIn this figure, the has previously sent a to the . vSmallStep\nShall (A)PDO (A)PDO Battery\nSTuhpep vlyoltagVea irsi acbolnes Sidueprpelyd to increase if the change from VOLD to VNEW is greater than . The\ndetermination be based on the nominal voltage before and after, unless either is\n\uf06c or when the worst case of the following is assumed in making this determination.\n\uf06c Minimum voltage to voltage.\n\uf06c Minimum voltage to Maximum voltage.\nVoltage to Maximum voltage.\nThe following sections begin with a description of the generic process followed by more specific examples of the\nmost common transitions.\nPage 340 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.1.1 Examples of changes from one (A)PDO to another (A)PDO\n(A)PDO\nT7h.3e .s1e.v1e.n1 e.1xamples of In ccrheanagsei ntrga ntshiteio Vnos bltealogwe illustrate the most common transitions.\nSystem Policy Device Policy Shall\n(A)PDO Figure 7.22, \"Transition Diagram for Increasing the\nTVohlet aingtee\"raction of the Shall , , and power Tsuapbplely7 .t1h, a\"tS equen bcee Dfoelslcorwipetdio wn hfoern I cnhcarenagsiningg f rthoem\nVonolet age\" to another while increasinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\"\nTable7.2. 4T, h\"Sei snekq Euleenctcrei ctahla Pt arame bteer fso\"lloweTda isb ldee7s.c2r5ib, \"eCdo imnm on Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in ,\nNote: Figure 7.22, \"Transition Dia, garnadm for Increasing the Voltage\" Sink . Request\nMessage Source\nIn , the has previously sent a\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 341\nFigure 7.22 Transition Diagram for Increasing the Voltage\ntSrcTransReq\n1 5\ntSrcTransition\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer Port to Port\n2 6\nMessaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n4\nSource Port Source\nDevice Policy Mgr (cid:215) V\nSource Port\nt2\nInteraction\nSource Port\nPower Supply\nSource VOLD Source VNEW\n3 7 8\nSink Port Sink to Sink ... Sink Standby\nDevice Policy Mgr Standby to Sink Sink Port\nt1 t3\nInteraction\nSink Port\nPower Supply Sink (cid:148) IOLD Sink iSnkStdBy (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:50)(cid:47)(cid:39)\nSource Port\nVoltage\nVNEW\nSource\nV Voltage\nVOLD BUS\nSink Port\nCurrent\n(cid:148)IOLD (cid:148)IOLD\nSink\nI1\nV Current\nBUS\nI1 (cid:148) iSnkStdBy + cSnkBulkPd(VBUS/t)\nPage 342 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n(cid:167)\nTable7.1 Sequence Description for Increasing the Voltage\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\noutput power. Policy En.gine Device Policy Manager\n3 tells the to\niSnkStdby tSnkStdby Shall\ninstruct the power supply to reduce current drawn\ntSrcTransition SinkShall Not\nto within (t1); t1\nSection\ncomplete before . The\n7.2.6, \"Transient Load Behavior\"\nviolate transient load behavior defined in\nwhile transitioning\ntSrcTransition GoodCRC Message to and operating at the new power level.\n4 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t2). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tSrcTransReq Source\n5 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the the .\nProtocol L ayer followingG tohoed CRCMe ssage . Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n6 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource (A)PDO\nfrom the and tells the\nPS_RDYMessage\nthat the is operating at the new .\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\nSi nkMay .\nPS_RDYMessage\n7 The begin operating at the new power level\nany time after evaluation of the .\nThis StiinmkeS dhuarlal tNioont is indeterminate.\nSection 7.2.6, \"Transient Load\n8 The violate the transient load\nBehavior\"\nbehavior defined in\nwhile transitioning to and operating at the\nnew power level. The time duration (t3) depends on\nthe magnitude of the load change.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 343\n7.3.1.1.1.2 Increasing the Voltage and Current\nSystem Policy Device Policy Shall\n(A)PDO Figure 7.23, \"Transition Diagram for\nTInhcer einasteinrga ctthioe nV oolft tahgee and Current\", , and pSohwaellr supply that be followTeadb wleh7e.n2 ,c \"hSaenqguienngc efr om\nDoniaeg ram for tIon carneoatshinegr wthhei lVeo ilntacgreea asnindg C tuhrer evnotl\"tage and current is shown in Shall\nTable7.23, \"Source Electrical Param.e Ttehres \"seTqaubelnec7e. 2th4a, \"t Sink E lbeec tfroilclaolw Peadr aism deetescrsr\"ibed inT able7.25, \"Common\nSource/Sink Electrical Parameters\" . The timing parameters that be followed are listed in\n, , and\nNote: Figure 7.23, \"Transition. Diagram for Increasing the Voltage and Current\" Sink\nRequestMessage Source\nIn , the has previously sent\na to the .\nPage 344 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.23 Transition Diagram for Increasing the Voltage and Current\ntSrcTransReq\n1 5\ntSrcTransition\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer Port to Port\n2 6 Messaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n4\nSource Port Source\nDevice Policy Mgr (cid:215) V (cid:215) I Source Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Source VNEW\n3 7\nSink to Sink Sink Standby\nStandby to Sink\nt3 Sink Port\nInteraction\nSink (cid:148)(cid:3)IOLD Sink iSnkStdBy (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:49)(cid:40)(cid:58)\nVNEW\nSource\nVOLD V BUS Voltage\n(cid:148)(cid:3)INEW\n(cid:148)IOLD Sink\nI1 V BUS Current\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 345\n(cid:167)\nt2\n8\nSink Port ...\nDevice Policy Mgr\nt1\nSink Port\nPower Supply\nSource Port\nVoltage\nSink Port\nCurrent\nI1 (cid:148) iSnkStdBy + cSnkBulkPd(VBUS/t)\nTable7.2 Sequence Diagram for Increasing the Voltage and Current\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine Accept\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC. Message\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\noutput power. Policy En.gine Device Policy Manager\n3 tells the to\niSnkStdby tSnkStdby Shall\ninstruct the power supply to reduce current drawn\ntSrcTransition SinkShall Not\nto within (t1); t1\nSection\ncomplete before . The\n7.2.6, \"Transient Load Behavior\"\nviolate transient load behavior defined in\nwhile transitioning\ntSrcTransition GoodCRC Message to and operating at the new power level.\n4 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t2). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.l icy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tSrcTransReq Source\n5 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the the .\nProtocol L ayer followingG tohoed CRCMe ssage . Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n6 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource (A)PDO\nfrom the and tells the\nPS_RDYMessage\nthat the is operating at the new .\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out, the sends\nSi nkMay .\nPS_RDYMessage\n7 The begin operating at the new power level\nany time after evaluation of the .\nThis StiinmkeS dhuarlal tNioont is indeterminate.\nSection 7.2.6, \"Transient Load\n8 The violate the transient load\nBehavior\"\nbehavior defined in\nwhile transitioning to and operating at the\nnew power level. The time duration (t3) depends on\nthe magnitude of the load change.\nPage 346 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.1.1.3 Increasing the Voltage and Decreasing the Current\nSystem Policy Device Policy Shall\n(A)PDO Figure 7.24, \"Transition\nTDhiaeg irnatmer afocrt iIonnc roefa tshineg the Voltage a, nd Decreasing, a tnhde Cpuorwreenr ts\"upply that be fSohllaowlled when changing from\nonTe able7.3, t\"oS aenquoethnecre wDehsicler iipntciroena fsoirn gIn tchree avsoilntgag teh ea nVdo ldtaecgree aansidn Dg ethcree causrinrgen tth ies Csuhrorwennt i\"n\nShall Table7.23, \"Source Electrica.l TPhaera smeqeuteernsc\"eT tahbalte 7.24, b\"Sei nfokl lEolwecetdri cisa dl escribed\nPina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\" . The timing parameters\nthat be followed are listed in ,\nNote: ,F aignudr e 7.24, \"Transition Diagram for Increasing the Voltage an.d Decreasing the Current\" Sink\nRequestMessage Source\nIn , the has\npreviously sent a to the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 347\nFigure 7.24 Transition Diagram for Increasing the Voltage and Decreasing the Current\ntSrcTransReq\n1 5\ntSrcTransition\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer Port to Port\n2 6 Messaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n4\nSource Port Source\nDevice Policy Mgr (cid:215) V (cid:216)I Source Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Source VNEW\n3 7 8\nSink Port Sink to Sink ... Sink Standby\nDevice Policy Mgr Standby to Sink\nSink Port\nt1 t3\nInteraction\nSink Port\nPower Supply\nSink (cid:148)(cid:3)IOLD Sink iSnkStdBy (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:49)(cid:40)(cid:58)\nSource Port\nVoltage\nVNEW\nSource\nV Voltage\nVOLD BUS\nSink Port\nCurrent\n(cid:148)IOLD\nSink\n(cid:148)INEW\nV Current\nI1 BUS\nI1 (cid:148) iSnkStdBy + cSnkBulkPd(VBUS/t)\nPage 348 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n(cid:167)\nt2\nTable7.3 Sequence Description for Increasing the Voltage and Decreasing the Current\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\noutput power. Policy En.gine Device Policy Manager\n3 tells the to\niSnkStdby tSnkStdby Shall\ninstruct the power supply to reduce current drawn\ntSrcTransition SinkShall Not\nto within (t1); t1\nSection\ncomplete before . The\n7.2.6, \"Transient Load Behavior\"\nviolate transient load behavior defined in\nwhile transitioning\ntSrcTransition GoodCRC Message to and operating at the new power level.\n4 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t2). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.l icy Engine PS_RDYMessage Policy Engine PS_RDY Message\nSink tSrcTransReq Source\n5 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the the .\nProtocol L ayer followingG tohoed CRC Me ssage . Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n6 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource (A)PDO\nfrom the and tells the\nPS_RDYMessage\nthat the is operating at the new .\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\nSi nkMay .\nPS_RDYMessage\n7 The begin operating at the new power level\nany time after evaluation of the .\nThis StiinmkeS dhuarlal tNioont is indeterminate.\nSection 7.2.6, \"Transient Load\n8 The violate the transient load\nBehavior\"\nbehavior defined in\nwhile transitioning to and operating at the\nnew power level. The time duration (t3) depends on\nthe magnitude of the load change.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 349\n7.3.1.1.1.4 Decreasing the Voltage and Increasing the Current\nSystem Policy Device Policy Shall\n(A)PDO Figure 7.25, \"Transition\nTDhiaeg irnatmer afocrt iDoenc oref athsien g the Voltage ,a nd Increasing, a tnhde Cpuorwreenr ts\"upply that be fSohllaowlled when changing from\nonTe able7.4, t\"oS aenquoethnecre wDehsicler idpeticorne afosirn Dge tchree avsoilntagg teh ae nVdo litnacgree aasnind gI nthcree causrinregn tth ies Csuhrorwennt i\"n\nShall Table7.23, \"Source Electrica.l TPhaera smeqeuteernsc\"eT tahbalte 7.24, b\"Sei nfokl lEolwecetdri cisa dl escribed\nPina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\" . The timing parameters\nthat be followed are listed in ,\nNote: ,F aignudr e 7.25, \"Transition Diagram for Decreasing the Voltage an.d Increasing the Current\" Sink\nRequestMessage Source\nIn , the has\npreviously sent a to the .\nPage 350 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.25 Transition Diagram for Decreasing the Voltage and Increasing the Current\ntSrcTransReq\n1 4\ntSrcTransition\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer\nPort to Port\n2 5\nGood Evaluate Good Evaluate Messaging\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n3\nSource Port Source\nDevice Policy Mgr (cid:216) V (cid:215) I\nt2 Source Port\nSource Port Interaction\nPower Supply\nSource VOLD Source VNEW\n6 7\nSink Port ... Sink\nDevice Policy Mgr (cid:215) I\nSink Port\nt1\nInteraction\nSink Port\nPower Supply\nSink (cid:148)(cid:3)IOLD (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)(cid:49)(cid:40)(cid:58)\nSource Port\nVoltage\nVOLD\nSource\nV Voltage\nVNEW BUS\nSink Port (cid:148)INEW\nCurrent Sink\n(cid:148)IOLD V Current\nBUS\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 351\nTable7.4 Sequence Description for Decreasing the Voltage and Increasing the Current\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\ntoSurtcpTurta pnoswiteior.n GoodCRC Message .\n3 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t1). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tSrcTransReq Source\n4 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the the .\nProtocol L ayer followingG tohoed CRCMe ssage . Protocol Layer GoodCRCMessage\nSink Source Policy Engine PS_RDY\n5 receives the from sends the to the\nMessage Source Device Policy\nthe . . then evaluates the\nManager\nfrom the and tells the\nSink Mit aisy okay to operate at the new power level.\nPS_RDYMessage\n6 The begin operating at the new power level\nany time after evaluation of the .\nThis time duration is indeterminate.\nPage 352 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.1.1.5 Decreasing the Voltage\nSystem Policy Device Policy Shall\n(A)PDO Figure 7.26, \"Transition Diagram for Decreasing the\nTVohlet aingtee\"raction of the Shall , , and power Tsuapbplely7 .t5h, a\"tS equen bcee Dfoelslcorwipetdio wn hfoern D cehcarnegaisning gfr tohme\nVonolet age\" to another while decreasinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\"\nTable7.2. 4T, h\"Sei snekq Euleenctcrei ctahla Pt arame bteer fso\"lloweTda isb ldee7s.c2r5ib, \"eCdo imnm on Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in ,\nNote: Figure 7.26, \"Transition Dia, garnadm for Decreasing the Voltage\" Sink . Request\nMessage Source\nIn , the has previously sent a\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 353\nFigure 7.26 Transition Diagram for Decreasing the Voltage\ntSrcTransReq\n1 4\ntSrcTransition\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer Port to Port\n2 5\nMessaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n3\nSource Port Source\nDevice Policy Mgr (cid:216) V\nt Source Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Source VNEW\nSink Port\nDevice Policy Mgr\nSink Port\nInteraction\nSink Port\nPower Supply\nSink (cid:148)(cid:3)IOLD\nSource Port\nVoltage\nVOLD\nSource\nV Voltage\nVNEW BUS\nSink Port\nCurrent\n(cid:148)IOLD (cid:148)IOLD\nSink\nV Current\nBUS\nPage 354 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.5 Sequence Description for Decreasing the Voltage\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine Accept Message\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\ntoSurtcpTurta pnoswiteior.n GoodCRC Message .\n3 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t1). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tSrcTransReq GoodCRC Source\n4 The sends the to the The receives the from\nMessage AcceptMessage\nwithin of the end of the the .\nProtocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n5 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource (A)PDO\nfrom the and tells the\nPS_RDYMessage\nthat the is operating at the new .\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 355\n7.3.1.1.1.6 Decreasing the Voltage and the Current\nSystem Policy Device Policy Shall\n(A)PDO Figure 7.28, \"Transition Diagram for\nTnoh ec hinatnegrea cinti oCnu rorfe tnhte o r Voltage\" , , anSdh paollwer supply that be follToawbeled 7w.6h, e\"nS ecqhuaenngcien g from\nDoneesc ription ftoor aDneoctrheears iwngh itlhee d Veoclrteaagsei nagn dth teh ev oClutarrgeen atn\"d current is shown in Shall\nTable7.23, \"Source Electrical Par.a Tmheet seersq\"ueTnacbele th7a.2t4 , \"Sin kb eE lfeoclltoriwcaeld P ias rdaemscertiebres\"d in Table7.25, \"Common\nSource/Sink Electrical Parameters\" . The timing parameters that be followed are listed in\n, , and\nNote: Figure 7.27, \"Transition. Diagram for Decreasing the Voltage and the Current\" Sink\nRequestMessage Source\nIn , the has previously\nsent a to the .\nPage 356 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.27 Transition Diagram for Decreasing the Voltage and the Current\ntSrcTransReq\n1 5\ntSrcTransition\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer\nPort to Port\n2 6\nGood Evaluate Good Evaluate Messaging\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n4\nSource Port Source\nDevice Policy Mgr (cid:216) V (cid:216) I\nt2 Source Port\nSource Port Interaction\nPower Supply\nSource VOLD Source VNEW\n3\nSink Port Sink\nDevice Policy Mgr (cid:216) I\nt1 Sink Port\nSink Port Interaction\nPower Supply\nSink (cid:148)(cid:3)IOLD Sink (cid:148)(cid:3)INEW\nSource Port\nVoltage\nVOLD\nSource\nVNEW V BUS Voltage\nSink Port\nCurrent\n(cid:148)IOLD\nSink\n(cid:148)INEW\nV Current\nBUS\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 357\nTable7.6 Sequence Description for Decreasing the Voltage and the Current\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\noutput power. Sink.Shall\ntSnkNewPower Shall\n3 The be able to operate with lower current\ntSrcTransition SinkShall Not\nwithin (t1); t1 complete before\nSection 7.2.6, \"Transient\n. The violate transient\nLoad Behavior\"\nload behavior defined in\nwhile transitioning to and operating\ntSrcTransition GoodCRC Message at the new power level.\n4 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t2). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tSrcTransReq Source\n5 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the the .\nProtocol L ayer followingG tohoed CRCMe ssage . Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n6 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource (A)PDO\nfrom the and tells the\nPS_RDYMessage\nthat the is operating at the new .\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\nSi nkShall N.ot\nSection 7.2.6, \"Transient Load\n7 The violate the transient load\nBehavior\"\nbehavior defined in\nwhile transitioning to and operating at the\nnew power level.\nPage 358 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.1.1.7 No change in Current or Voltage\nSystem Policy Device Policy Shall\n(A)PDO Sink\nThFei ginutreer a7c.2ti8o, n\" Torfa tnhsei tion Diagram ,f or no change ,i na nCdu rproewnte or rs uVpolptlayg teh\"at be followedS whhaelln changing from\none tTo aabnloet7h.e7r, \"wSehqiluee tnhcee Desc rreipqtuieosnt fso trh neo s cahmaen vgoe litna gCeu rarnedn tC ourr Vreonltta agse i\"t is currently operating at is shSohwalnl\nin Table7.23, \"Source Electrical Parameters\" Tabl. eT7h.e2 4s,e \"qSuinekn cEel etchtarti cal Pa rbaem foetlleorws\"ed is\nTdeasbcleri7b.e2d5 ,i n\"C ommon Source/Sink Electrical Parameters\" . The timing parameters that\nbe followed are listed in , , and\nNote: Figure 7.28, \"Transition Diagram for no chan.ge in Current or Voltage\" Sink\nRequestMessage Source\nIn , the has previously sent a\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 359\nFigure 7.28 Transition Diagram for no change in Current or Voltage\ntSrcTransReq\n1 3\ntSrcTransition\nSource Port Send Send\nPolicy Engine Accept PS_RDY\nPSTransitionTimer Port to Port\n2 4 Messaging\nSink Port Good Evaluate Good Evaluate\nPolicy Engine CRC Accept CRC PS_RDY\nSource Port\nDevice Policy Mgr\nSource Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Vold Source VOLD\nSink Port\nDevice Policy Mgr\nSink Port\nInteraction\nSink Port\nPower Supply\nSink (cid:148)(cid:3)IOLD\nSource Port\nVoltage\nVBUS doesn\u2019t change\nSource\nV Voltage\nBUS\nSink Port\nCurrent Sink\nCurrent doesn\u2019t change\nV Current\nBUS\nTable7.7 Sequence Description for no change in Current or Voltage\nStep Source Port Sink Port\nPolicy Engine Accept Message Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the GoodCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Source Policy Engine\n2 receives the from sends the to the\nPSTransitionTimer Accept\nthe . . then starts the\nMessage\nand evaluates the\nPolicy Engine tSrcTransition Policy En.gine PS_RDYMessage\nPS_RDYMessage Sink\n3 The waits then sends receives the .\ntSrcTransReq GoodCRCMessage\nthe to the starting within\nAcceptMessage\nof the end of the\nPfoollliocwy iEnngg tihnee Goo.dCRCMessage Protocol Layer GoodCRC Message\nSink Source Policy Engine PS_RDYMessage\n4 receives the from sends the to the\nNote:\nthe . . evaluates the .\nDevice Pol-\niTchy eM daencaisgieorn that no power transition is re-\nquired could be made either by the\nor the power supply depending\non implementation.\nPage 360 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.2 Transitions within the same Fixed, Battery or Variable PDO or\nbetween Different (A)PDOs\n7.3.1.2.1 Increasing the Current Only\nSystem Policy Device Policy Shall\nFigure 7.29, \"Transition Diagram for Increasing the Current\"\nThe interactionS hoaf ltlhe , Ta, balned7 p.8o, w\"Seerq suuepnpcley D thesactr iption b feo rf oInllcorweaesdi nwgh tehne iCnucrrreeansti\"ng the\ncurrent without changinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\" Table7.24, \". STihnke\nsEeleqcuterinccael Pthaarta meter bs\"e folloTwaebdle is7 d.2e5s,c \"rCiboemdm ino n Source/Sink Electrical Parameters\" . The\ntiming parameters that be followed are listed in ,\nNote: Figure 7.2,9 a, n\"Tdr ansition Diagram for Increasing the Current\" Sink . Request\nMessage Source\nIn , the has previously sent a\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 361\nFigure 7.29 Transition Diagram for Increasing the Current\n3\nSource Port Source\nDevice Policy Mgr (cid:215) I\nSource Port\nPower Supply\n6 7\nSink Port ... Sink\nDevice Policy Mgr (cid:215) I\nSink Port\nPower Supply\nSink (cid:148)(cid:3)IOLD Sink (cid:148)(cid:3)INEW\nSource Port\nVoltage\nVBUSdoesn\u2019t change\nSink Port\nCurrent\n(cid:148)INEW\n(cid:148)IOLD\nPage 362 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n(cid:167)\ntSrcTransReq\n1 4\ntSrcTransition\nSource Port Send Send\nPolicy Engine Accept PS_RDY\nPSTransitionTimer Port to Port\n2 5 Messaging\nGood Evaluate Good Evaluate\nSink Port CRC Accept CRC PS_RDY\nPolicy Engine\nt1 Source Port\nInteraction\nSource VOLD Source VOLD\nSink Port\nt2\nInteraction\nSource\nV Voltage\nBUS\nSink\nV Current\nBUS\nTable7.8 Sequence Description for Increasing the Current\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\ntoSurtcpTurta pnoswiteior.n GoodCRC Message .\n3 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t1). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tSrcTransReq Source\n4 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the the .\nProtocol L ayer followingG tohoed CRC Me ssage . Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n5 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource (A)PDO\nfrom the and tells the\nPS_RDYMessage\nthat the is operating at the new .\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\nSi nkMay .\nPS_RDYMessage\n6 The begin operating at the new power level\nany time after evaluation of the .\nThis StiinmkeS dhuarlal tNioont is indeterminate.\nSection 7.2.6, \"Transient Load\n7 The violate the transient load\nBehavior\"\nbehavior defined in\nwhile transitioning to and operating at the\nnew power level. The time duration (t2) depends on\nthe magnitude of the load change.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 363\n7.3.1.2.2 Decreasing the Current Only\nSystem Policy Device Policy Shall\nFigure 7.30, \"Transition Diagram for Decreasing the Current\"\nThe interactionS hoaf ltlhe , Ta, balned7 p.9o, w\"Seerq suuepnpcley D thesactr iption b feo rf oDlelocwreeads iwngh ethne d Ceucrrreeansti\"ng the\ncurrent without changinSgh tahlel voltage is shown in Table7.23, \"Source Electrical Parameters\" Table7.24, \". STinhke\nEseleqcuterinccael Pthaarta meter bs\"e folloTwaebdle is7 d.2e5s,c \"rCiboemdm ino n Source/Sink Electrical Parameters\" . The\ntiming parameters that be followed are listed in ,\nNote: Figure 7.3,0 a, n\"Tdr ansition Diagram for Decreasing the Current\" Sink . Request\nMessage Source\nIn , the has previously sent a\nto the .\nPage 364 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.30 Transition Diagram for Decreasing the Current\ntSrcTransReq\n1 5\ntSrcTransition\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer\nPort to Port\n2 6\nGood Evaluate Good Evaluate Messaging\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n4\nSource Port Source\nDevice Policy Mgr (cid:216) I\nt2 Source Port\nSource Port Interaction\nPower Supply\nSource VOLD Source VOLD\n3\nSink Port Sink\nDevice Policy Mgr (cid:216) I\nt1 Sink Port\nSink Port Interaction\nPower Supply\nSink (cid:148)(cid:3)IOLD Sink (cid:148)(cid:3)INEW\nSource Port\nVoltage\nVBUS does not change\nSource\nV Voltage\nBUS\nSink Port\nCurrent\n(cid:148)IOLD\nSink\n(cid:148)INEW V BUS Current\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 365\nTable7.9 Sequence Description for Decreasing the Current\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage Policy Engine Device Policy\nto instruct the power supply to modify its and evaluates the\nManager\noutput power. . tells the\nto instruct the power supply to reduce\npoweSrin ckoSnhsuamll pNtoiot n.\nSection 7.2.6, \"Transient Load\n3 The violate the transient load\nBehavior\"\nbehavior defined in\nSinkShall\nwhile transitioning to and operating at the\ntSnkNewPower\nnew power level. The be able to operate\nShall tSrcTransition\nwith lower current within (t1); t1\ntSrcTransition GoodCRC Message complete before .\n4 after the was\nShall\nreceived, the power supply starts to change its output\ntSrcReady\npower capability. The power supply be ready to\nDevice Policy\noperate at the new power level within\nManager\n(t2). The power supply informs the\nPolicy\nthat it is ready to operate at the new power\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tSrcTransReq Source\n5 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the the .\nProtocol L ayer followingG tohoed CRCMe ssage . Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n6 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource (A)PDO\nfrom the and tells the\nPS_RDYMessage\nthat the is operating at the new .\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nPage 366 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.3 Changing Voltage or Current within the same PPS APDO\n7.3.1.3.1 Increasing the Programmable Power Supply (PPS) Voltage\nSystem Policy Device Policy Shall\nFigure 7.31, \"Transition Diagram for Increasing the Programmable Power Supply Voltage\"\nThe interactionS hoaf ltlhe , Ta, balned7 .p1o0w, \"eSre qsuupenpclye Dtheastc riptio nb feo fro Ilnlocwreeads iwngh ethne i nPrcoregarasimngm tahbel e\nPvoolwtaegre S iusp sphlyo wVonl tinag e\" Shall Table7.23, \"Source Electric.a Tl he\nPseaqruamenectee rtsh\"atT able7 b.2e4 f,o \"lSloinwke Edl eisc tdreicsaclr Pibaerda mine ters\" Table7.25, \"Common Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in\nNote: ,F igure 7.31, \"Transition Diagram for Incr,e aansdin g the Programmable Power Supply Voltage\" Sink .\nRequestMessage Source\nIn , the has\npreviously sent a to the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 367\nFigure 7.31 Transition Diagram for Increasing the Programmable Power Supply Voltage\n1 4\ntPpsSrcTransSmall, tPpsSrcTransLarge\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer Port to Port\n2 5\nMessaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n3\nSource Port Source\nDevice Policy Mgr (cid:215) V\nSource Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Pps Transition Interval Source VNEW\nSink Port\nDevice Policy Mgr\nSink Port\nInteraction\nSink Port\nSink draws current continuously (not to exceed negotiated current)\nPower Supply\nSource Port\nVoltage\nVNEW\nSource\nV Voltage\nVOLD BUS\nSource\nSource Port CL doesn\u2019t change\nCurrent CL Current\nSink Port\nCurrent Current may change (not to exceed negotiated current) Sink\nV Current\nBUS\nPage 368 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.10 Sequence Description for Increasing the Programmable Power Supply Voltage\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . . then starts the\nMessage\nto instruct the power supply to increase its and evaluates the\noutput voltage. AcceptMessage .\n3 After sending the , the Programmable\nPower Supply starts to increase its output voltage.\nShall tPpsSrcTransLarge\nThe Programmable Power Supply new voltage set-\nvPpsSmallStep\npoint be reached by for\ntPpsSrcTransSmall\nsteps larger than or else by\nDevice Policy Manager\n. The power supply informs the\nVBUS\nthat it has reached the new\nCL\nset-point and whether is at the corresponding\nPolicy\nnew level, or if the supply is operating in mode.\nEngine\nThe power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tPpsSrcTransSmall Source\n4 The sends the to the The receives the from\ntPpsSrcTransLarge GoodCRC\nstarting within or the .\nMessage AcceptMessage\nof the end of the\nProtocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n5 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource\nfrom the and tells the\nvPpsNew\nthat the is operating at the new voltage set\nPS_RDYMessage\npoint (corresponding to ).\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 369\n7.3.1.3.2 Decreasing the Programmable Power Supply (PPS) Voltage\nSystem Policy Device Policy Shall\nFigure 7.32, \"Transition Diagram for Decreasing the Programmable Power Supply Voltage\"\nThe interactionSh oaf ltlhe , Ta,b alend7 .p11o,w \"Seer qsuuepnpcley Dtheasct ription b feo rfo Dlleocwreeads iwngh ethne d Percorgeraasminmg athbele\nPvoolwtaegre S iusp sphloy wVonl tina ge\" Shall Table7.23, \"Source Electric.a Tl he\nPseaqruamenectee rtsh\"atT able7 b.2e4 f,o \"lSloinwke Edl eisc tdreicsacrl iPbaerda imne ters\" Table7.25, \"Common Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in\nNote: ,F igure 7.32, \"Transition Diagram for Decr, eaansdin g the Programmable Power Supply Voltage\" Sink .\nRequestMessage Source\nIn , the has\npreviously sent a to the .\nPage 370 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.32 Transition Diagram for Decreasing the Programmable Power Supply Voltage\n1 4\ntPpsSrcTransSmall, tPpsSrcTransLarge\nSource Port Send Send\nPolicy Engine Accept PS_RDY\nPSTransitionTimer Port to Port\n2 5 Messaging\nSink Port Good Evaluate Good Evaluate\nPolicy Engine CRC Accept CRC PS_RDY\n3\nSource Port Source\nDevice Policy Mgr (cid:216)V\nSource Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Pps Transition Interval Source VNEW\nSink Port\nDevice Policy Mgr\nSink Port\nInteraction\nSink Port\nSink draws current continuously (not to exceed negotiated current)\nPower Supply\nSource Port\nVoltage\nVOLD\nSource\nV Voltage\nVNEW BUS\nSource Port CL doesn\u2019t change Source\nCurrent CL Current\nSink Port\nCurrent Current may change (not to exceed negotiated current)\nSink\nV Current\nBUS\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 371\nTable7.11 Sequence Description for Decreasing the Programmable Power Supply Voltage\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . . then starts the\nMessage\nto instruct the power supply to decrease its and evaluates the\noutput voltage. Accept Message .\n3 After sending the , the Programmable\nPower Supply starts to decrease its output voltage.\nvPpsNew Shall\nThe Programmable Power Supply new voltage set-\ntPpsSrcTransLarge\npoint (corresponding to ) be reached\nvPpsSmallStep tPpsSrcTransSmall\nby for steps larger than\nDevice Policy Manager\nor else by . The\npower supply informs the that\nPolicy Engine\nit has reached the new level. The power supply status\nis paPssoelidc yt oE nthgein e P.S_RDYMessage Policy Engine PS_RDYMessage\nSink tPpsSrcTransSmall Source\n4 The sends the to the The receives the from\ntPpsSrcTransLarge GoodCRC\nstarting within or the .\nMessage AcceptMessage\nof the end of the\nProtocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n5 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource\nfrom the and tells the\nvPpsNew\nthat the is operating at the new voltage set\nPS_RDYMessage\npoint (corresponding to ).\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nPage 372 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.3.3 Increasing the Programmable Power Supply (PPS) Current\nSystem Policy Device Policy Shall\nAPDO APDO\nThe interaction of thFeig ure 7.33, \"Tra, nsition Diagra, amn dfo pr oinwcerer assuinpgp ltyh teh Caut rrent i nb eP fPoSl lmowodeed\" when increasing the\nScuhrarlelnt limit in the same , nToat belxec7ee.1d2i,n \"gS ethqeu emnacxe iDmeusmcr ifpotrio tnh afot r incre aasnidn gw tihthe oCuutr crhenatn igni nPgP tSh me oredqeu\"ested\nvoltage is shown in Shall Table7.23, \"Source Electrical Paramet.e Trsh\"e Tseaqbulee7n.c2e4 t, h\"Saitn k\nElectr bicea lf oPlalorwamede tiesr ds\"escribTedab inle 7.25, \"Common Source/Sink Electrical Parameters\" . The\ntiming parameters that be followed are listed in ,\nNote: Figure 7.3,3 a, n\"Tdr ansition Diagram for increasing the Current in PPS mode\". Sink\nRequestMessage Source\nIn , the has previously sent\nSinkMaa y to the . Current Limit Source PS_RDY\nMessage Request\nThe draw current equal to the increasing of the before it has received the\nfor the new .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 373\nFigure 7.33 Transition Diagram for increasing the Current in PPS mode\n1 tPpsSrcTransSmall 4\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer (running)\nPort to Port\n2 5\nMessaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n3\nSource Port Source(cid:313)|\nDevice Policy Mgr\nSource Port\nInteraction\nSource VOLD\nS\nP\no\no\nu\nw\nr\ne\nc\nr\ne\nS\nP\nu\no\np\nr\np\nt\nly\nSource IOLD PPS Transition Interval Source INEW\n6 7\nSink Port ... Sink (cid:313)| Sink Port\nDevice Policy Mgr\nInteraction\nSink Port\nPower Supply\nSink draws current continuously ((cid:148)old negotiated current) (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)NEW\nSource Port\nVoltage Source\nV\nOLD V NEW V BUS Voltage\nSource Port CL NEW\nCurrent Source\nCL OLD CL change CL Current\nSink Port\nCurrent Sink\nI OLD Follows CL change Passive Sink following CL Source I NEW V Current\nBUS\nActive Sink at I\nOLD\nPage 374 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.12 Sequence Description for increasing the Current in PPS mode\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to increase its and evaluates the\nset-point for the current limit. Current Limit Sink.\nCurrent Limit Source\n3 The Power Supply increases its set- The draws current according to the increased\npoinPt otoli ctyh eE nngewin erequesttePdp vsSarluceT.r ansSmall Policy Engine of the P.S_RDYMessage\nPS_RDYMessage Sink\n4 The waits then receives the .\ntPpsCLProgramSettle GoodCRC\nsends the to the starting within\nMessage AcceptMessage\nof the end of the\nPolicy En fgoilnloewing the Goo dCRCMe.ssage Protocol Layer GoodCRC Message\nSink Source\n5 receives the from sends the to the\nthe . Policy E. ngine PSTransitionTimer\nPS_RDYMessage Device\n6 then stops the ,\nPolicy Manager\nevaluates the and tells the\nSource CL\nit can increase the current up to the\nrequested value without the going into\nPS_RDYMessage\nmode.\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\nSi nk .\n7 The increases its current.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 375\n7.3.1.3.4 Decreasing the Programmable Power Supply (PPS) Current\nSystem Policy Device Policy Shall\nAPDO APDO\nThe interaction of thFeig ure 7.34, \"Tra, nsition Diagra, amn dfo pr odwecerre asusipnpgl yth teh Catu rrent ibne P fPoSll omwoedde \"when decreasing the\ncSuhrarlelnt limit in the same , nToat belxec7ee.1d3i,n \"gS ethqeu emnicnei mDeusmcr ifpotri othna fto r decr eaansdin wg itthheo Cuut rcrheanntg iinn gP PthS em roedqeu\"ested\nvoltage is shown in Shall Table7.23, \"Source Electrical Paramete. rTsh\"eT saebqluee7n.2ce4 ,t \"hSaitn k\nElectr bicea lf oPlalorwamede tiesr ds\"escribTedab inle 7.25, \"Common Source/Sink Electrical Parameters\" . The\ntiming parameters that be followed are listed in ,\nNote: Figure 7.3,4 a, n\"Tdr ansition Diagram for decreasing the Current in PPS mode\". Sink\nRequestMessage Source\nIn , the has previously sent\na to the .\nPage 376 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.34 Transition Diagram for decreasing the Current in PPS mode\n1 tPpsSrcTransSmall 4\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer (running)\nPort to Port\n2 5\nMessaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\n3\nSource Port Source(cid:315) |\nDevice Policy Mgr\nSource Port\nInteraction\nSource VOLD\nS\nP\no\no\nu\nw\nr\ne\nc\nr\ne\nS\nP\nu\no\np\nr\np\nt\nly\nSource IOLD PPS Transition Interval Source INEW\n6 7\nSink Port ... Sink (cid:313)| Sink Port\nDevice Policy Mgr\nInteraction\nSink Port\nPower Supply\nSink draws current continuously ((cid:148)old negotiated current) (cid:54)(cid:76)(cid:81)(cid:78)(cid:3)(cid:148)(cid:3)(cid:44)NEW\nSource Port\nVoltage V OLD Set-point V does not change, only resulting V V Source\nNEW\nV Voltage\nBUS\nSource Port CL\nOLD\nCurrent Source\nCL change CL\nNEW CL Current\nSink Port I OLD\nCurrent Sink\nFollows CL change Active Sink at I I\nOLD NEW V Current\nBUS\nPassive Sink following CL Source\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 377\nTable7.13 Sequence Description for decreasing the Current in PPS mode\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine Accept\n2 receives the from sends the to the\nManager Message Sink\nthe . The tells the . then evaluates the\nNegotiated\nto instruct the power supply to decrease its and instructs the to reduce its current to\nPSTransitionTimer\nset-point for the current limit. below the new current level and starts the\nCurrent Limit Sink .\nNegotiated Negotiated Source\n3 The Power Supply decreases its set- The reduces its current to less than the new\nCurrent Limit\npoint to the new value. current to prevent the from going\nPolicy Engine PS_RDY Message into .\nSink tPpsSrcTransSmall\n4 The sends the to the\nGoodCRCMessage AcceptMessage\nstarting within of the end of\ntPhoeli cy Engine folloGwoiondgC tRhCe Messag e . Policy Engine PS_RDYMessage\nSink\n5 receives the from receives the .\nthe . Protocol Layer GoodCRCMessage\nSource Policy Engine\n6 sends the to the\nPSTransitionTimer PS_RDY\n. then stops the\nMessage\nand evaluates the\nPS_RDYMessage\n.\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\nSi nk .\nVBUS\n7 The is allowed to draw INEW but must be aware\nthe voltage on can drop doing so.\nPage 378 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.3.5 Same Request Programmable Power Supply (PPS)\nSystem Policy Device Policy Shall Sink\nNegotiated Figure 7.35,\nT\"Threa innstietiroanc tDioiang orfa tmhe f or no change i,n Current or V, oalntadg peo iwn ePrP sSu mppoldye t\"hat be followedS hwahleln the requests\nthe same voltTaagbe laen7d.1 c4u,r \"rSeenqtu leenvceels D aess tchreip ptiroens efnort no change i lne vCeulrsr feonrt v oorl tVaogleta agned i cnu PrPreSn mt oisd seh\"own in\nShall Table7.23, \"Source Ele.c Ttrhieca sle Pqaureanmcee ttehrast\" Table b7e. 2fo4l,l o\"Swinekd is\ndEelescctrriibceadl P ina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\" . The timing\nparameters that be followed are listed in ,\nNote: Figure 7.3,5 a, n\"Tdr ansition Diagram for no change in Current or Voltage in P.PS mode\" Sink\nRequestMessage Source\nIn , the has previ-\nously sent a to the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 379\nFigure 7.35 Transition Diagram for no change in Current or Voltage in PPS mode\n1 tPpsSrcTransSmall 3\nSend Send\nSource Port\nAccept PS_RDY\nPolicy Engine PSTransitionTimer (running)\nPort to Port\n2 4\nMessaging\nGood Evaluate Good Evaluate\nSink Port\nCRC Accept CRC PS_RDY\nPolicy Engine\nSource Port\nDevice Policy Mgr\nSource Port\nInteraction\nSource VOLD\nSource Port\nPower Supply\nSource IOLD\nSink Port Sink Port\nDevice Policy Mgr\nInteraction\nSink Port\nPower Supply\nSink (cid:148) IOLD\nSource Port V doesn\u2019t change\nVoltage BUS Source\nV Voltage\nBUS\nSource Port\nCurrent CL doesn\u2019t change Source\nCL Current\nSink Port\nCurrent Current doesn\u2019t change Sink\nV Current\nBUS\nTable7.14 Sequence Description for no change in Current or Voltage in PPS mode\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Source Policy Engine Accept\n2 receives the from sends the to the\nMessage PSTransitionTimer\nthe . . then evaluates the\nPolicy Engine PS_RDYMessage Policy En agninde starts the PS_RDYMessage.\nSink tPpsSrcTransSmall\n3 The then sends the to receives the .\nGoodCRCMessage Accept\nthe starting within of the\nMessage\nend of the following the\nPolicy En.gine GoodCRCMessage Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n4 receives the from sends the to the\nPSTransitionTimer PS_RDY\nNote:\nthe . . then stops the\nDevice Pol- Message Source Sink\nand evaluates the\niTchy eM daencaisgieorn that no power transition is re-\nquired could be made either by the from the . The is already\nor the power supply depending operating at the new power level, so no further action\nPS_RDYMessage\non implementation. is required.\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nPage 380 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.4 Changing Voltage or Current within the same AVS APDO\n7.3.1.4.1 Increasing the Adjustable Voltage Supply (AVS) Voltage\nSystem Policy Device Policy Shall\nFigure 7.36, \"Transition Diagram for Increasing the Adjustable Power Supply Voltage\"\nThe interactionS hoaf ltlhe , Ta, balned7 p.1o5w, \"eSre squupepnlcye t Dheastc riptio bne f ofor lIlnocwreeads winhge tnh ein Acdrejuasstianbgl eth e\nVvoollttaaggee iSsu sphpolwy Vno ilnta ge\" Shall Table7.23, \"Source El.e Tcthreic al\nsPeaqruaemnectee rtsh\"atT able7 b.2e4 f,o \"lSlionwke Edle icst driecsaclr Pibaerdam ine ters\" Table7.25, \"Common Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in\nNote: ,F igure 7.36, \"Transition Diagram for Incr,e aansdin g the Adjustable Power Supply Voltage\" Sink .\nRequestMessage Source\nIn , the has pre-\nviously sent a to the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 381\nFigure 7.36 Transition Diagram for Increasing the Adjustable Power Supply Voltage\n1 4\ntAvsSrcTransSmall, tAvsSrcTransLarge\nSource Port Send Send\nPolicy Engine Accept PSTransitionTimer PS_RDY Port to Port\n2 5\nMessaging\nSink Port Good Evaluate Good Evaluate\nPolicy Engine CRC Accept CRC PS_RDY\n3\nSource Port Source\nDevice Policy Mgr (cid:215) V\nSource Port\nInteraction\nSource Port\nPower Supply\nSource VOLD AVS Transition Interval Source VNEW\nSink Port\nDevice Policy Mgr\nSink Port\nSink Port Sink draws current continuously for voltage changes less than or equal to vAvsSmallStep. For larger voltage changes, the Sink Interaction\nPower Supply reduces to iSnkStdby.\nSource Port\nVoltage\nVNEW\nSource\nV Voltage\nVOLD BUS\nSink Port Depends on magnitude of AVS voltage\nCurrent IOLD change IOLD Sink\nV Current\nBUS\nPage 382 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.15 Sequence Description for Increasing the Adjustable Voltage Supply Voltage\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . . then starts the\nMessage\nto instruct the power supply to increase its and evaluates the\noutput voltage. . vAvsSmallStep\nSinkShall iSnkStdby\nIf the voltage increase is larger than ,\ntSnkStdby. iSnkStdby\nthe reduce its current draw to\nwithin The reduction to is not\nvAvsSmallStep\nrequired if the voltage increase is less than or equal\nAcceptMessage AVS to .\nAVS\n3 After sending the , the starts to\nShall tAvsSrcTransLarge\nincrease its output voltage. The new voltage set-\nvAvsSmallStep\npoint be reached by for\ntAvsSrcTransSmall\nsteps larger than or else by\nDevice Policy Manager\n. The power supply informs the\nPolicy\nthat it has reached the new\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tAvsSrcTransSmall Source\n4 The sends the to the The receives the from\ntAvsSrcTransLarge GoodCRC\nstarting within or the .\nMessage AcceptMessage\nof the end of the\nProtocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage\nSink Source Policy Engine\n5 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then stops the\nSource Device Policy Manager\n, evaluates the\nSource\nfrom the and tells the\nSinkMay\nthat the is operating at the new voltage set\nPS_RDY\npoint. The begin operating at the new\nMessage\npower level any time after evaluation of the\nPS_RDYMessage\n.\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 383\n7.3.1.4.2 Decreasing the Adjustable Voltage Supply (AVS) Voltage\nSystem Policy Device Policy Shall\nFigure 7.37, \"Transition Diagram for Decreasing the Adjustable Voltage Supply Voltage\"\nThe interactionS hoaf ltlhe , Ta, balned7 p.1o6w, \"eSre squupepnlcye t Dheastc riptio bne f ofor lDloewcreeda swinhge nth dee Acdrejuasstianbgl eth e\nVvoollttaaggee iSsu sphpolwy Vno ilnta ge\" Shall Table7.23, \"Source Elec. tTrhicea l\nPseaqruamenectee rtsh\"atT able7 b.2e4 f,o \"lSlionwke Edle icst driecsaclr Pibaerdam ine ters\" Table7.25, \"Common Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in\nNote: ,F igure 7.37, \"Transition Diagram for Dec,r aenadsi ng the Adjustable Voltage Supply Voltage\" Sink .\nRequestMessage Source\nIn , the has\npreviously sent a to the .\nPage 384 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.37 Transition Diagram for Decreasing the Adjustable Voltage Supply Voltage\n1 4\ntAvsSrcTransSmall, tAvsSrcTransLarge\nSource Port Send Send\nPolicy Engine Accept PSTransitionTimer PS_RDY Port to Port\n2 5\nMessaging\nSink Port Good Evaluate Good Evaluate\nPolicy Engine CRC Accept CRC PS_RDY\n3\nSource Port Source\nDevice Policy Mgr (cid:216)V\nSource Port\nInteraction\nSource Port\nPower Supply\nSource VOLD AVS Transition Interval Source VNEW\nSink Port\nDevice Policy Mgr\nSink Port\nInteraction\nS\nP\ni\no\nn\nw\nk\ne\nP\nr\no\nS\nrt\nupply\nSink (cid:148)(cid:3)IOLD\nSource Port\nVoltage\nVOLD\nSource\nV Voltage\nVNEW BUS\nSink Port\nCurrent (cid:148)(cid:3)IOLD Sink\nV Current\nBUS\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 385\nTable7.16 Sequence Description for Decreasing the Adjustable Voltage Supply Voltage\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Policy Engine Device Policy Source Policy Engine\n2 receives the from sends the to the\nManager PSTransitionTimer Accept\nthe . The tells the . then and starts the\nMessage\nto instruct the power supply to decrease its and evaluates the\noutput voltage. AcceptMessage AVS .\nAVS\n3 After sending the , the starts to\nShall tAvsSrcTransLarge\ndecrease its output voltage. The new voltage set-\nvAvsSmallStep\npoint be reached by for\ntAvsSrcTransSmall\nsteps larger than or else by\nDevice Policy Manager\n. The power supply informs the\nPolicy\nthat it has reached the new\nEngine\nlevel. The power supply status is passed to the\nPo.licy Engine PS_RDYMessage Policy Engine PS_RDYMessage\nSink tAvsSrcTransSmall Source\n4 The sends the to the The receives the from\ntAvsSrcTransLarge GoodCRC\nstarting within or the .\nMessage AcceptMessage\nof the end of the\nProtocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage\nSink Source Policy Engine stops the\n5 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nthe . . then\nSource Device Policy Manager\n, evaluates the\nSource\nfrom the and tells the\nvAvsNew\nthat the is operating at the new voltage set\nPS_RDYMessage\npoint (corresponding to ).\nPSTransitionTimer Sink Hard\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nPage 386 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.3.1.4.3 Same Request Adjustable Voltage Supply (AVS) Voltage\nSystem Policy Device Policy Shall Sink\nNegotiated Figure\nT7.h3e8 ,i n\"Tterraancstiitoionn o Df tihager am for no cha, nge in Curren,t a onrd V pooltwageer sinu pApVlSy mthoadte \" be followed wheSnh athlle requests\nthe same voltTaagbel ean7d.1 c7u, r\"Sreenqut elenvceel sD aessc trhipe tpiorne sfeonr tn o change in l Cevuerlrse nfotr o vr oVlotaltgaeg aen idn cAuVrSr emnotd aes\" shown in\nShall Table7.23, \"Source Electric.a Tl hPea rsaemqueetenrcse\" tThaabt le7.24 b, e\" Sfoinllko wed is\nEdleescctrriibceadl P ina rameters\" Table7.25, \"Common Source/Sink Electrical Parameters\" . The timing\nparameters that be followed are listed in ,\nNote: Figure 7.3,8 a, n\"Tdr ansition Diagram for no change in Current or Voltage in A. VS mode\" Sink\nRequestMessage Source\nIn , the has previ-\nousFlyi gsuenret a7 .38 Tran sition D tioa gthrea m for n. o change in Current or Voltage in AVS mode\n1 3\ntAvsSrcTransSmall, tAvsSrcTransLarge\nSource Port Send Send\nPolicy Engine Accept PSTransitionTimer PS_RDY Port to Port\n2 4\nMessaging\nSink Port Good Evaluate Good Evaluate\nPolicy Engine CRC Accept CRC PS_RDY\nSource Port\nVoltage VBUS doesn\u2019t change Source\nV Voltage\nBUS\nSink Port\nCurrent Current doesn\u2019t change Sink\nV Current\nBUS\nTable7.17 Sequence Description for no change in Current or Voltage in AVS mode\nStep Source Port Sink Port\nPolicy Engine AcceptMessage Sink Policy Engine AcceptMessage\n1 Protocol Laye rsends the Goo dCRCMe tsos athgee . Protocol Laye rreceives theG oodCRC Messag.e\nSink Source Policy Engine\n2 receives the from sends the to the\nPSTransitionTimer Accept\nthe . . then and starts the\nMessage\nand evaluates the\nPolicy Engine PS_RDYMessage Polic.y Engine PS_RDYMessage\nSink tAvsSrcTransSmall Source\n3 The sends the to the The receives the from\nGoodCRCMessage AcceptMessage\nstarting within of the end of the .\ntPhreo tocol Laye r followGionogd tChReC Messa ge . Protocol Layer GoodCRCMessage\nSink Source Policy Engine stops the\n4 receives the from sends the to the\nPSTransitionTimer PS_RDYMessage\nNote:\nthe . . then\nDevice Pol- Source Sink\n, evaluates the\niTchy eM daencaisgieorn that no power transition is re-\nquired could be made either by the from the . The is already operating at the\nPS_RDYMessage\nor the power supply depending new power level, so no further action is required.\nPSTransitionTimer Sink Hard\non implementation.\nIf the is not received before\nResetSignaling\ntimes out the sends\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 387\n7.3.2 Transitions Caused by Power Role Swap\n7.3.2.1 Sink Requested Power Role Swap\nSystem Policy Device Policy Shall Sink\nPower Role Swap Figure 7.39, \"Transition Diagram for a Sink Requested Power Role Swap\"\nThe iSnhtearllaction of the , Table7.18, \", Saenqdu peonwcee Dr essucprpiplyti tohna fto r a Sin bke R foelqlouwesetedd d Puorwinegr aR ole S rweaqpu\"ested\nis showSnh ianl l Table7.23, \"Source Electrical Parameters\" Ta. bTlhee7 s.2e4q,u \"eSnincke\ntEhleact trical Pbaer faomlloewteersd\" is desTcaribbleed7 i.2n5 , \"Common Source/Sink Electrical Parameters\" . The\ntiming parameters that be followed are listed in ,\nNote: Figure 7.3,9 a, n\"Tdr ansition Diagram for a Sink Requested Power Role Swap\". Sink\nPR_SwapMessage Source\nIn , the has previously sent\na to the .\nPage 388 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.39 Transition Diagram for a Sink Requested Power Role Swap\ntSrcTransOff PSSourceOnTimer\n1 5 9\nSend tSrcTransition Send Good Evaluate\nInitial Source Port Accept PS_RDY CRC PS_RDY\nPolicy Engine\nPSSourceOffTimer\ntSrcTransOn\nPort to Port\n2 6 8\nGood Evaluate Good Evaluate Send Messaging\nInitial Sink Port CRC Accept CRC PS_RDY PS_RDY\nPolicy Engine\nInitial Source 4 10 New Sink\nInitial Source Port Source to Swap Standby\nDevice Policy Mgr Swap Standby to Sink\nS P o o u w r e c r e S (cid:198) up S p i l n y k Source VOLD\nt2 (cid:379)(cid:3)(cid:53)pto Rd\nSwap Standby\nt4\nImplicit Contract\nS\nIn\no\nt\nu\ne\nr\nr\nc\na\ne\nc t\nP\nio\no\nn\nrt\nInitial Sink 3 7 New Source\nInitial Sink Port Sink to Swap Swap Standby\nDevice Policy Mgr Standby to Source\nS P i o n w k e (cid:198) r S S u o p u p r l c y e Sink (cid:148) IOLD\nt1\nSwap Standby\nRdto Rp t3\nSource vSafe5V In\nS\nt\ni\ne\nn\nr\nk\na\nP\nct\no\nio\nrt\nn\nS Vo o l u ta rc g e e Port VOLD vSafe5V Source\nInitial Source New Source\nVBUSVoltage\nnot driven\nS C i u n r k re P n o t rt IOLD Sink\nInitial Sink I1 I2 I1 New Sink VBUSCurrent\nnot driven\nI1 (cid:148) iSnkSwapStdby I 2 I2 (cid:148)(cid:3)iSnkSwapStdby+ cSnkBulkPd(VBUS/t)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 389\nTable7.18 Sequence Description for a Sink Requested Power Role Swap\nStep Initial Source Port \uf0e0 New Sink Port Initial Sink Port \uf0e0 New Source Port\nPolicy Engine AcceptMessage Initial Policy Engine Accept\nSink\n1 sends the to the receives the .\nProt.ocol Layer GoodCRCMessage Protocol Layer GoodCRCMessage\nSink Policy Engine Device Policy Initial Source Policy Engine\n2 receives the from sends the to the\nManager PSSourceOffTimer Accept\nthe . The tells the . then starts the\nMessage\nto instruct the power supply to modify its and evaluates the\noutput power. Policy En.gine Device Policy Manager\nSwap\n3 tells the to\nStandby tSnkStdby Shall\ninstruct the power supply to transition to\ntSrcTransition Sink Standby\nwithin (t1); t1 complete\nInitial SinkShall Not\nbefore min. When in the\niSnkSwapStdby SinkShall Not\ndraw more than\nSection 7.2.6,\n(I1). The violate\n\"Transient Load Behavior\"\ntransient load behavior defined in\nwhile transitioning to and\ntSrcTransition GoodCRC Message operating at the new power level.\n4 after the was\nSwap Standby Section 7.1.10,\nreceived, the power supply starts to change its output\n\"Swap Standby for Sources\" Shall\npower capability to (see\nSwap Standby\n). The power supply\ntSrcSwapStdby\ncomplete the transition to within\nDevice Policy Manager\n(t2). The power supply informs the\nNew Sink CC R\nthat it is ready to operate as\nR [USB Type-C 2.4]\nthe . The termination is changed from p\nPolicy Engine\nto d (see ). The power supply\nPolicy Engine\nstatus is passed to the .\nPS_RDYMessage\n5 The power supply is ready, and the\nNew Source\nsends the to the device that will\ntSrcTransOff GoodCRCMessage\nbecome the , starting within\nAcceptMessage\nof the end of the\nfPorlolotowcionlg L tahyee r Go.odCRCMessage Protocol Layer GoodCRCMessage\nNew Source New Sink\n6 receives the from The sends the to\nPolicy Engine PSSourceOnTimer Policy Engine PSSourceOffTimer\nthe device that will become the . the .\nPS_RDYMessage Device Policy Manager\nstarts the . Upon the stops the and\nGoodCRC Message Initial Source New Source\nsending the and receiving the tells the to instruct the power\nNew Sink\nPS_RDYMessage\nthe is ready to be the supply to operate as the .\nPSTransitionTimer Sink Hard\n.\nIf the is not received before\nResetSignaling\ntimes out the sends\nCC . R R\n[USB Type-C 2.4] New\n7 The termination is changed from d to p (see\nSource Swap Standby\n). The power supply as the\nvSafe5V tNewSrc\ntransitions from to sourcing\nDevice Policy Manager\ndefault within (t3). The power\nNew Source\nsupply informs the that it is\nPolicy Engine PS_RDYMessage oDpeevircaet iPnogl iacsy tMhea nager . Policy Engine\nSource Policy Engine\n8 receives the from the informs the the\nPS_RDYMessage New Sink\n. power supply is ready, and the sends\ntSrcTransOn GoodCRCMessage\nthe to the , starting within\nAcceptMessage\nof the end of the\nfollowing the .\nPage 390 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.18 Sequence Description for a Sink Requested Power Role Swap (Continued)\nStep Initial Source Port \uf0e0 New Sink Port Initial Sink Port \uf0e0 New Source Port\nProtocol Layer GoodCRCMessage Protocol Layer GoodCRCMessage\nNew Source PSSourceOnTimer New Sink\n9 sends the to the receives the from\nPolicy Engine PS_RDYMessage\nand then stops the . the .\nNew Source Device Policy Manager\nevaluates the from\nNew\nthe and tells the to\nSink\ninstruct the power supply to draw current as the\n. New Sink\nSwap Standby\n10 The power supply as the transitions from\nImplicit Contract\nand begins to drawing the current\nDevice Policy Manager\nallowed by the . The power supply\nNew Sink\ninforms the that it is\nNegotiation New Source New\noperating as the . At this point subsequent\nSinkMay SinkShall Not\ns between the and the\nSection\nproceed as normal. The\n7.2.6, \"Transient Load Behavior\"\nviolate the transient load behavior defined in\nwhile transitioning\nto and operating at the new power level. The time\niLoadStepRate\nduration (t4) depends on the magnitude of the load\nchange ( ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 391\n7.3.2.2 Source Requested Power Role Swap\nSystem Policy Device Policy Shall Source\nPower Role Swap Figure 7.40, \"Transition Diagram for a Source Requested Power Role Swap\"\nThe interaction of tShhea ll , , aTnadb pleow7.1e9r ,s \"uSpepqluye tnhcaet D escri pbteio fno lfloorw ae Sdo duurcrein Rge aq uested P ower\nRreoqleu eSswtaedp\" is shown in Shall Table7.23, \"Source Electrical Parameters\".\nTTahbel see7q.u24en, \"cSei nthka Et lectric bael Pfoalrlaomweetde irss \"descriTbaedbl ien7 .25, \"Common Source/Sink Electrical Parameters\"\n. The timing parameters that be followed are listed in ,\nNote: Figure 7.40, \"Transition Dia, garnadm for a Source Requested Power Role Swap\" Source .\nPR_SwapMessage Sink\nIn , the has previously\nsent a to the .\nPage 392 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.40 Transition Diagram for a Source Requested Power Role Swap\n4 PSSourceOnTimer 9\n2 Send Good (running) Evaluate\nInitial Source Port Evaluate PS_RDYCRC PS_RDY\nPolicy Engine Accept\n1 tSrcTransition 5 7 Port to Port\nI P n o it l i i a c l y S E in n k g i P n o e rt A S c e c n e d pt G C o R o C d PSSourceOffTimer (running) P E S va _ l R ua D t Y e PS S _ e R n D d Y G C o R o C d Messaging\nInitial Source 4 10 New Sink\nInitial Source Port Source to Swap Standby\nDevice Policy Mgr Swap Standby to Sink\nS P o o u w r e c r e S (cid:198) up S p i l n y k Source VOLD\nt2 (cid:379)(cid:3)(cid:53)pto Rd\nSwap Standby\nt4\nImplicit Contract\nS\nIn\no\nt\nu\ne\nr\nr\nc\na\ne\nc t\nP\nio\no\nn\nrt\nInitial Sink 2a 6 New Source\nInitial Sink Port Sink to Swap Swap Standby\nDevice Policy Mgr Standby to Source\nS P i o n w k e (cid:198) r S S u o p u p r l c y e Sink (cid:148) IOLD\nt1\nSwap Standby\nRdto Rp t3\nSource vSafe5V In\nS\nt\ni\ne\nn\nr\nk\na\nP\nct\no\nio\nrt\nn\nS Vo o l u ta rc g e e Port VOLD vSafe5V Source\nInitial Source New Source\nVBUSVoltage\nnot driven\nS C i u n r k re P n o t rt IOLD Sink\nInitial Sink I1 I2 I1 New Sink VBUSCurrent\nnot driven\nI1 (cid:148) iSnkSwapStdby I 2 I2 (cid:148)(cid:3)iSnkSwapStdby+ cSnkBulkPd(VBUS/t)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 393\nTable7.19 Sequence Description for a Source Requested Power Role Swap\nStep Initial Source Port\uf0e0 New Sink Port Initial Sink Port \uf0e0 New Source Port\nPolicy Engine AcceptMessage Policy Engine Accept Message Initial\nSource\n1 receives the . sends the to the\nProtocol Layer GoodCRCMessage Protoco.l Layer GoodCRC Message\nSink Policy Engine Device Policy Initial Source Policy Engine\n2 sends the to the receives the from\nManager PSSourceOffTimer\n. The tells the the . starts the\nto instruct the power supply to modify its .\noutput power. Policy Engine Device Policy Manager\nSwap\n2a The tells the to\nStandby Shall\ninstruct the power supply to transition to\nSwap Standby tSnkStdby\n. The power supply complete the\nShall tSrcTransition SinkShall\ntransition to within (t1); t1\nNot\ncomplete before . The\nSection 7.2.6, \"Transient Load Behavior\"\nviolate the transient load behavior defined in\nwhile\nSink Standby Initial SinkShall Not\ntransitioning to and operating at the new power level.\niSnkSwapStdby\nWhen in the draw\ntSrcTransition GoodCRC Message more than (I1).\n3 after the was sent\nSwap Standby Section 7.1.10, \"Swap\nthe power supply starts to change its output power\nStandby for Sources\" Shall\ncapability to (see\nSwap Standby\n). The power supply\ntSrcSwapStdby\ncomplete the transition to within\nDevice Policy Manager\n(t2). The power supply informs the\nNew Sink CC R\nthat it is ready to operate as\nR [USB Type-C 2.4]\nthe . The termination is changed from p\nPolicy Engine\nto d (see ). The power supply\nstatuPso ilsic pya Esnsegdin teo the PS_RDY.Message Policy Engine PS_RDY\nNew Source\n4 The sends the to the receives the .\ntSrcTransOff GoodCRC\ndevice that will become the , starting\nMessage AcceptMessage\nwithin of the end of the\nProtocol fLoalyloewring the Go odCRCM.essage Protocol Layer GoodCRCMessage\nNew Source Policy Engine New Sink\n5 receives the from sends the to the\nPSSourceOnTimer Initial Source Policy Engine PSSourceOffTimer\nthe soon to be . starts the .\nNew Sink Device Policy Manager\n. At this point the is then stops the and\nNew Source\nready to be the . tells the to instruct the power\nPS_RDYMessage\nsupply to operate as the .\nPSSourceOffTimer Sink\nIf the is not received before the\nHard ResetSignaling\ntimes out the starts sending\nCC . R R\n[USB Type-C 2.4] New\n6 The termination is changed from d to p (see\nSource Swap Standby\n). The power supply as the\nvSafe5V tNewSrc\ntransitions from to sourcing\nDevice Policy Manager\ndefault within (t3). The power\nNew Source\nsupply informs the that it is\nPolicy Engine PS_RDYMessage oDpeevircaet iPnogl iacsy tMhea nager . Policy Engine\nPolicy Engine\n7 receives the . informs the the\nPS_RDYMessage New Sink\npower supply is ready, and the sends\ntSrcTransOn GoodCRCMessage\nthe to the , starting within\nAcceptMessage\nof the end of the\nfollowing the .\nPage 394 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.19 Sequence Description for a Source Requested Power Role Swap (Continued)\nStep Initial Source Port\uf0e0 New Sink Port Initial Sink Port \uf0e0 New Source Port\nProtocol Layer GoodCRCMessage Protocol Layer GoodCRCMessage\nNew Source PSSourceOnTimer New Sink\n8 sends the to the receives the from\nPolicy Engine PS_RDYMessage\nand then stops the . the .\nNew Source Device Policy Manager\nevaluates the from\nNew\nthe and tells the to\nSink\ninstruct the power supply to draw current as the\n. New Sink\nSwap Standby\n9 The power supply as the transitions from\nImplicit Contract\nto drawing the power allowed by the\nDevice Policy Manager New\n. The power supply informs the\nSink Negotiation\nthat it is operating as the\nNew Source New SinkMay\n. At this point subsequent s\nNew SinkShall Not\nbetween the and the\nSection 7.2.6,\nproceed as normal. The violate\n\"Transient Load Behavior\"\nthe transient load behavior defined in\nwhile transitioning to and\noperating at the new power level. The time duration\niLoadStepRate\n(t4) depends on the magnitude of the load change\n( ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 395\n7.3.3 Transitions Caused by Hard Reset\n7.3.3.1 Source Initiated Hard Reset\nSystem Policy Device Policy Shall Source\nHard Reset Figure 7.41, \"Transition Diagram for a Source Initiated Hard Reset\"\nThe iSnhtaerllaction of the , Table7.20, \", Saenqdu epnocwe eDre ssucprippltyio tnh afot r a Sou brec efo Ilnloitwiaetedd d Huarirndg R ae set\"\nInitiated is shSohwalnl in Table7.23, \"Source Electrical Parameters\" Tab. lTeh7e. 2s4e,q \"uSeinnkc e\ntEhleact trical P baer faomlleotweresd\" is desTcarbibleed7 .i2n5 , \"Common Source/Sink Electrical Parameters\" . The\ntiming parameters that be applied are listed in ,\n, and .\nPage 396 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.41 Transition Diagram for a Source Initiated Hard Reset\n1\nSource Port Send tPSHardReset\nPolicy Engine Hard Reset\nPort to Port\n2 Messaging\nSink Port Process\nPolicy Engine Hard Reset\n4 5\nSource Port Source Source\nDevice Policy Mgr Hard Reset Recover\nt2 t3 Source Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Source vSafe0V Source vSafe5V\n3\nSink Port Sink\nDevice Policy Mgr Prepare\nSink Port\nt1\nInteraction\nSink Port\nPower Supply Sink (cid:148) IOLD Ready to recover and power up\nSource Port tSrcRecover\nVoltage\nVOLD vSafe5V\nSource\n(cid:167) V Voltage\nBUS\nvSafe0V\nSink Port\nCurrent\n(cid:148)IOLD Default current draw\nSink\n(cid:167) V Current\nBUS\niSafe0mA\nTable7.20 Sequence Description for a Source Initiated Hard Reset\nStep Source Port Sink Port\nPolicy Engine Hard ResetSignaling Sink Sink Hard ResetSignaling\n1 sends to the . Polic rye Ecnegivinese Har.d Reset Policy\nEngine Device Policy Manager\n2 is informed of the .\nHard Reset\ntells the to instruct the\npoweSirn skupply to prepare fHora rad Reset .\ntSnkHardResetPrepare\n3 The prepares for the within\nDevice Policy Manager Sink\n(t1) and passes an\nShall Not iSafe0mA VBUS\nindication to the The\nvSafe0V\ndraw more than when is\nPolicy Engine tPSHardReset driven to .\nHard ResetSignaling Device Policy\n4 waits after sending\nManager\nand then tells the\nHard Reset vSafe0VShall\nto instruct the power supply to perform a\ntSafe0V\n. The transition to occur\nwithintS rcRecov (etr2). Source VBUS SinkShall Not\nSection 7.2.6, \"Transient Load\n5 After the applies power to The violate the transient load\nSink USB Default Operation Behavior\"\nin an attempt to re-establish communication with the behavior defined in\nvSafe5VShall tSrcTurnOn\nand resume . The while transitioning to and operating at the\ntransition to occur within new power level.\n(t3).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 397\n7.3.3.2 Sink Initiated Hard Reset\nSystem Policy Device Policy Shall Sink\nHard Reset Figure 7.42, \"Transition Diagram for a Sink Initiated Hard Reset\" Shall\nThe interaction of the Table7.21, ,\" Sequence Des, carnipdt pioonw foerr sau Spinpkly I tnhitaita ted H abred f Roellsoewt\"ed during a Initiated\nShall is shown in Table7.23, \"Source Electrical Parameters\" Table7.2. T4,h \"eS sinekq uEelenccter itchaal t be\nPfoalrloawmeedte irss \"describTeadb lien7 .25, \"Common Source/Sink Electrical Parameters\" . The timing parameters\nthat be followed are listed in ,\n, and .\nPage 398 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.42 Transition Diagram for a Sink Initiated Hard Reset\n4\nSource Port Evaluate\nPolicy Engine Hard Reset\nPort to Port\nSink Port Se 1 nd tPSHardReset Messaging\nPolicy Engine Hard Reset\n2 5 6\nS D o e u vi r c c e e P P o o l r ic t y Mgr Ha P r r d o c R e e s s s et Ha S rd o u R rc e e set R S e o c u o r v c e e r\nt2 t3 Source Port\nInteraction\nSource Port\nPower Supply\nSource VOLD Source vSafe0V Source vSafe5V\n3\nSink Port Sink\nDevice Policy Mgr Prepare\nt1 Sink Port\nInteraction\nSink Port\nPower Supply Sink (cid:148) IOLD Ready to recover and power up\nSource Port tSrcRecover\nVoltage\nVOLD vSafe5V\nSource\n(cid:167) V Voltage\nBUS\nvSafe0V\nSink Port Defalt current\nCurrent\n(cid:148)IOLD\ndraw Sink\n(cid:167) V Current\nBUS\niSafe0mA\nTable7.21 Sequence Description for a Sink Initiated Hard Reset\nStep Source Port Sink Port\nPolicy Engine Hard ResetSignaling\nSource\n1 sends to the\nPolicy E.ngine Device Policy Manager\nHard\n2 tells the to\nReset\ninstruct the power supply to prepare for a\nS.i nk Hard Reset\ntSnkHardResetPrepare\n3 The prepares for the within\nDevice Policy Manager Sink\n(t1) and passes an\nShall Not iSafe0mA VBUS\nindication to the . The\nvSafe0V\ndraw more than when is\nPolicy Engine Hard Reset driven to .\n4 Policy Engine is infotrPmSeHda orfd tRhees et .\nHard ResetSignaling Device Policy\n5 waits after receiving\nManager\nand then tells the\nHard Reset vSafe0VShall\nto instruct the power supply to perform a\ntSafe0V\n. The transition to occur\nwithintS rcRecov (etr2). Source VBUS SinkShall Not\nSection 7.2.6, \"Transient Load\n6 After the applies power to The violate the transient load\nSink USB Default Operation Behavior\"\nin an attempt to re-establish communication with the behavior defined in\nvSafe5VShall tSrcTurnOn\nand resume . The while transitioning to and operating at the\ntransition to occur within new power level.\n(t3).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 399\n7.3.4 Transitions Caused by Fast Role Swap\n7.3.4.1 Fast Role Swap\nSystem Policy Device Policy Shall Fast Role Swap\nFigure 7.43, \"Transition Diagram for Fast Role Swap\" Shall\nThe interactioTna bolfe th7.e2 2, \"Sequence D, escription for, aFnadst p Roowlee rS wsuappp\"ly that be followed durinSgh aa ll\nis shown in Table7.23, \"Source Electrical Parameters\" Table7.2. 4T, h\"eS ipnakr Eallleeclt sriecqaul ePnacreasm thetaetr s\" beT faobllleow7.e2d5 ,a re\n\"dCeosmcrmiboend Sino urce/Sink Electrical Parameters\" Negotiation . The tiNmeiwng S opuarrcaemeters thNate w Sin kbMe faoyllowed\nare listedN inew Source PS_RDYMessage , , and\n. s between the and the occur\nNafoteter :the Figure 7 .s4e3n, d\"Ts rtahnes fiitnioanl Diagram for Fast. Role Swap\" Table7.22, \"Sequence Description for Fast\nRole Swap\" Message\nIn . and\nnumbers are used to indicate related steps and letters are used to indicate other\nevents.\nPage 400 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 7.43 Transition Diagram for Fast Role Swap\nB 2 3 5 8\nSignal Fast Evaluate Send Send Evaluate\nSource Port Swap FR_Swap Accept PS_RDY PS_RDY\nPolicy Engine Port to Port\nC 1 4 6 7 Signaling &\nSink Port Detect tFRSwapInit Send Evaluate Evaluate Send Messaging\nFast Swap FR_Swap Accept PS_RDY PS_RDY\nPolicy Engine\nA D1 F\nSource Port Source VBUS< Rp Changed\nDevice Policy Mgr Stops vSafe5V to Rd\nSource Port\nSource Port Interaction\nPower Path Source Sink\nD2 E G\nSink Port VBUS< Source Rd Changed\nDevice Policy Mgr vSafe5V < tSrcFRSwap VBUS to Rp\nSink Port\nSink Port Sink Ready & Able to Source Source vSafe5V Interaction\nPower Path vSafe5V\nSource Port\nVoltage O\nA\nld\nny\nS\nv\no\no\nu\nlta\nrc\ng\ne\ne\ndischarging New Source = vSafe5V\nV\nSo\nV\nu\no\nrc\nlt\ne\na ge\nBUS\n> vSafe5V\n0 V\nSink Port\nCurrent No c V ur B r U en S t i s m b a e y l o b w e v d S ra a w fe n 5 V while New Sink Sink\n0 A V Current\nBUS\nOld Sink\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 401\nTable7.22 Sequence Description for Fast Role Swap\nStep Initial Source Port\uf0e0 New Sink Port Initial Sink Port \uf0e0 New Source Port\nFast Role Swap Request and Power Transition\nSource HubUFP Figure\n7.16, \"VBUS Power during Fast Role Swap\"\nA The connected to the (see\nVBUS\n) stops\nsPooulirccyi nEgn gine. Fast Role Swap Request\nInitial Sink CC VBUS vSafe5V\nB sends the to the\nDevice Policy Manager\non the wire. When <\niSnkStdby tSnkFRSwap\n(min), it tells the not to draw\nmore than until the timer\nhas elapsed. Policy Engine Fast Role Swap Request\nCC Initial Source Shall\nC detects the on\nFR_SwapMessage Initial Source\nthe wire from the and send\nVBUS\nthe back to the (that\ntFRSwapInit\nis no longer powering ) within time\nPolicy Engine VBUS vSafe5V .\nPS_RDY Message New Source\nD1 The monitors for \u2264 so\nthat a can be sent to the\nat Step 5 of the messaging sequence. Policy Engine VBUS vSafe5V\nInitial Sink Power Role New Source\nD2 The monitors for \u2264 so the\nVBUS\ncan assume the of\nand beVgBinU Sto svoSuarfcee5 V . New SourceMay\nVBUS VBUS vSafe5V New Source\nE When = the provide\nShall VBUS tSrcFRSwap\npower to . When < the\nNew Source PS_RDY\nprovide power to within .\nMessage New Sink\nOnce the is providing power, the\ncan be sent to the at Step 7 of the\nCC R R messaging sequence.\n[USB Type-C 2.4] New Sink\nF The termination is changed from p to d (see\nPS_RDYMessage New Source\n) before the sends the\nat Step 5 to the . CC R R\n[USB Type-C 2.4] New Source\nG The termination is changed from d to p (see\nPS_RDYMessage New Sink\n) before the sends the\nFast Role Swap Message Sequence\nat Step 7 to the .\nPolicy Engine FR_SwapMessage Policy Engine FR_Swap Message\nInitial Sink New Initial Source VBUS\n1 receives the from sends the to the\nSource Fast Role Swap Request\nthe that is transitioning to be the (that is no longer powering ) after\nProtoco.l Layer GoodCRCMessage dPerotetoctcionlg L tahyee r GoodCRC aMt eSstseapg Ce.\nInitial Sink Policy Engine Initial Source\n2 sends the to the receives the from\nFR_SwapMessage\n. then evaluates the the .\nPolicy Eng ine . Accept Message Initial Policy Engine AcceptMessage\nSink New Source Initial Source New Sink\n3 sends an to the receives the from the\nProt othcoalt Lisa ytrearnsitioning to Gbeo othdeC RCMessage. Protocol Laye rthat is transGitoioondiCnRgC toM beess tahgee .\nInitial Sink New Initial Source New Sink\n4 receives the from sends the to the\nSource\nthe that is transitioning to be the that is transitioning to be the .\n.\nPage 402 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.22 Sequence Description for Fast Role Swap (Continued)\nStep Initial Source Port\uf0e0 New Sink Port Initial Sink Port \uf0e0 New Source Port\nPolicy Engine PS_RDY Message Initial Policy Engine PS_RDYMessage\nSink New Source New Sink\n5 sends a to the receives the from the\nPolicy EngineShall PS_RDYMessage\nthat is transitioning to be the . The .\ntFRSwap5V AcceptMessage\nstart the at least\nafter it has sent the , and\nPwrhoetnoc Sotle Lpa Dye1r has also beenG cooomdpClReCteMd.essage Protocol Layer GoodCRCMessage\nNew Source Initial Sink New\n6 receives the from sends the from the\nSource Policy Engine PS_RDY\nthe . that has completed the transition to\nMessage\n. then evaluates the\nPolicy Engine PS_RDY Message Policy En.gine PS_RDY Message New\nNew Source Sink Policy EngineShall\n7 receives the from the sends a to the\nPS_RDY Message Shall\n. . The wait for Step E before\nPS_RDYMessage tFRSwapComplete\nsending the , and send the\nPS_RDYMessage Initial Source\nwithin of\nreceiving the from the\nPort.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 403"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "7.4", "title": "Electrical Parameters", "page": 404, "level": 2, "parent_id": "7", "full_path": "7.4 Electrical Parameters", "tags": [], "text": "7.4 Electrical Parameters\n7.4.1 Source Electrical Parameters\nSource Shall Table7.23, \"Source Electrical Parameters\"\nThe Electrical Parameters thTaatb le7.2 b3e fSoolluorwceed E alerec tsrpieccailf iPeadr ianm eters .\nParameter Description MIN TYP MAX UNITS Reference\ncSrcBulk Source Section 7.1.2\nbulk 10 \u00b5F\nPort\ncapacitance when a\nis powered from a\n1\ncSrcBulkShared dSoeudriccaeted supply. Section 7.1.2\nbulk 120 \u00b5F\nPort\ncapacitance when a\nis powered from a\n1\nDNL shared supply. LSB Section 7.1.4.2.1\nDifferential Non-\nDeviation between -1 0 +1\nLinearity\nideal analog values\n(\ncorresponding to\n)\nadjacent input digital\niPpsCLMin vSaPlRu ePsPS Section 7.1.4.2.2\nCurrent Limit\nMinimum 1 A\niPpsCLNew setting. Current Limit Section 7.1.4.2.2\naccuracy\n1A \u2264 Operating -150 150 mA\nCurrent \u2264 3A\niPpsCLStep OSPpRe rPaPtiSnCgu crurrernetn Lti m> 3itA -5 5 % Section 7.1.4.2.2\n50 mA\nLSB\nprogramming step size\niPpsCLLoadReleaseRate (1 ). Section 7.1.4.2.2\nMaximu C m ur l r o e a n d t Limit -150 mA/\u00b5s\ndecrease slew rate\nduring\niPpsCLLoadStepRate set-point changes. Section 7.1.4.2.2\nMaximu C m ur l r o e a n d t Limit 150 mA/\u00b5s\nincrease slew rate\nduring\niPpsCLTransient set-point changes. Section 7.1.4.2.2\nAllowed output New load + mA\ncurrent overshoot 100\nCL\nwhen a load increase\noccurs while in\nmode.\nAllowed output New load \u2013 mA\ncurrent undershoot 100\nCL\nwhen a load decrease\noccurs while in\nSourceShall\nmode.\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nPage 404 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\niPpsCVCLTransient CV CL iPpsCLNe Section 7.1.4.2.2\nw\nto transient New load + mA\ncurrent bounds - 100 500\nassuming the\nSection\nOperating Voltage\n7.2.3.1, \"Programmable\nreduction of\nPower Supply Sink\nStandby\"\ntAvsTransient . Section 7.1.8.4\nAVS\nThe maximum time for 5 ms\nvAvsNew\nthe to be between\nvAvsValid\nand\nin response\ntAvsSrcTransLarge to a load tranAsiVenSt. Section 7.1.4.3.1\nShall\nThe time the set- 0 700 ms\npoint transition\nbetween requested\nvoltages for steps\nvAvsSmallStep\nlarger than\ntAvsSrcTransSmall AV.S Section 7.1.4.3.1\nShall\nThe time the set- 0 50 ms\npoint transition\nbetween requested\nvoltages for steps\nvAvsSmallStep\nsmaller than\ntNewSnk . Section 7.1.10\nInitial Source Swap\nTime allowed for an 15 ms Figure 7.39\nStandby\nin\nNew Sink Figure 7.40\nto transition\ntPpsCLCVTransient CL CV operation. Section 7.1.4.2.2\nto transient 275 ms\ntPpsCLProgramSettle vSoPlRt aPgPeS sCeuttrlrinengt t iLmimei.t Section 7.1.4.2.2\n250 ms\nprogramming settling\ntPpsCLSettle tCiLme. Section 7.1.4.2.2\nload transient 250 ms\ntPpsCVCLTransient cCuVrrenCtL settling time. Section 7.1.8.3\nto transient 250 ms\ntPpsSrcTransLarge settling time. Section 7.3.1.3\nThe time the 0 275 ms\nProgrammable Power\nShall\nSupply\u2019s set-point\ntransition\nbetween requested\nvoltages for steps\nvPpsSmallStep\nlarger than\nSourceShall\n.\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 405\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\ntPpsSrcTransSmall Section 7.3.1.3\nThe time the 0 25 ms\nProgrammable Power\nShall\nSupply\u2019s set-point\ntransition\nbetween requested\nvoltages for steps less\nvPpsSmallStep\nthan or equal to\ntPpsTransient . Section 7.1.8.3\nThe maximum time for 5 ms\nthe Programmable\nvPpsNew\nPower Supply to be\nvPpsValid\nbetween and\nin response\nto a load transient\nwhen target load is\ngreater than or equal\nSection 7.1.8.3\nto 60mA.\nThe maximum time for 150 ms\nthe Programmable\nvPpsNew\nPower Supply to be\nvPpsValid\nbetween and\nin response\nto a load transient\nwhen target load is less\ntSrcFRSwap than 60mA. Initial Section 7.1.13\nSink\nTime from the 150 \u00b5s\nVBUS\ndetecting that\nvSafe5V\nhas dropped\nInitial Sink\nbelow until\nSource\nthe /new\nUSB Type-C\nis able to supply\n[USB Type-C 2.4]\nCurrent\nSourceShall\n(see )\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nPage 406 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\ntSrcReady SPR Mode Figure 7.2\nTime from positive/ 285 ms Figure 7.3\nnegative transition\nSource\nstart (t0) to when the\nis ready to\nNegotiated\nprovide the newly\npower\nSPR\nlevel.\nMode\nApplies only to\nvoltage\nEPR Mode transitions.\nTime from positive/ 720\nnegative transition\nSource\nstart (t0) to when the\nis ready to\nNegotiated\nprovide the newly\npower\nEPR Mode\nlevel.\nApplies to\nvoltage transitions and\nany voltage transition\nEPR Mode\nthat either begins or\ntSrcRecover SPR Mode ends in . Section 7.1.5\nSource\nEPR Mode Time allotted for the 0.66 1.0 s\nto recover.\ntSrcSettle SPR Mode 1.085 1.425 Figure 7.2\nTime from positive/ 275 ms\nnegative transition\nstart (t0) to when the\ntransitioning voltage is\nvSrcNew\nwithin the range\nSPR\n.\nMode\nApplies only to\nvoltage\nEPR Mode transitions.\nTime from positive/ 700\nnegative transition\nstart (t0) to when the\ntransitioning voltage is\nvAvsNew\nwithin the range\nEPR Mode\n.\nApplies to\nvoltage transitions and\nany voltage transition\nEPR Mode\nthat either begins or\ntSrcSwapStdby ends in . Section 7.1.10\nSource\nThe maximum time for 650 ms Figure 7.17\nSwap\nthe to\nStandby Figure 7.18\ntransition to\nSourceShall\n.\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 407\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\ntSrcTransient Section 7.1.8\nSource\nThe maximum time for 5 ms\nthe output\nvSrcNew\nvoltage to be between\nvSrcValid\nand\nin response\nto a load transient\nwhen target load is\ngreater or equal to\nSection 7.1.8\nthan 60mA.\nSource\nThe maximum time for 150 ms\nthe output\nvSrcNew\nvoltage to be between\nvSrcValid\nand\nin response\nto a load transient\nwhen target load is less\ntSrcTransition than 60mA. Source Section 7.3\nShall\nThe time the 25 35 ms\nwait before\ntransitioning the\nSink\npower supply to\nensure that the\nhas sufficient time to\nprepare (does not\napply to transitions\nAVSAPDO\nwithin the same PPS or\ntSrcTransOff SPR ). Section 7.3.2\nMode GoodCRC\nTime from the last bit 690 ms\nMessage\nof the\nAcceptMessage\nacknowledging the\nin\nPR_SwapMessage\nresponse to the\nPS_RDY\nMessage\nuntil the\nmust be\nSPR\nstarted.\nMode\nApplies only to\nvoltage\ntSrcTransOn transitions. Section 7.3.2\nGoodCRC\nTime from the last bit 280 ms\nMessage\nof the\nPS_RDY Message\nacknowledging the\nSource\nsent\nby the new , in\nPR_Swap Message\nresponse to the\nPS_RDY\nMessage\nuntil the\nmust be\nSourceShall\nstarted.\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nPage 408 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\ntSrcTransReq SPR Section 7.3\nMode GoodCRC\nTime from the last bit 325 ms\nMessage\nof the\nAcceptMessage\nacknowledging the\nin\nRequestMessage\nresponse to the\nPS_RDYMessage\nuntil\nthe\nSPR\nmust be started.\nMode\nApplies only to\nvoltage\nEPR transitions. Section 7.3\nMode GoodCRC\nTime from the last bit 760 ms\nMessage\nof the\nAcceptMessage\nacknowledging the\nin\nRequestMessage\nresponse to the\nPS_RDYMessage\nuntil\nthe\nEPR Mode\nmust be started.\nApplies to\nvoltage transitions and\nany voltage transition\nEPR Mode\nthat either begins or\ntSrcTurnOn ends in . Figure 7.10\nvSafe0V vSafe5V\nTransition time from 275 ms Table7.20\nto .\nTable7.21\nvAvsMaxVoltage APDO APDO Section 7.1.4.3.1\nAVSAPDO\nMaximum Voltage Max Max V\nField in the .\nVoltage Voltage *\nvAvsMinVoltage APDO APDO Section 7.1.4.3.1\n*0.95 1.05\nAVSAPDO\nMinimum Voltage Min V\nField in the .\nVoltage Min\n*0.95\nVoltage *\nvAvsNew RDO RDO RDO RDO Section 7.1.8.4\n1.05\nAdjustable Output V\nSource\nVoltage measured at\nOutput Output Output\nthe receptacle.\nVoltage Voltage Voltage\nvAvsSlewNeg AVS Section 7.1.8.4\n*0.95 *1.05\nmaximum slew -30 mV/\u00b5s\nrate for negative\nSourceShall\nvoltage changes.\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 409\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\nvAvsSlewPos AVS Section 7.1.8.4\nmaximum slew 30 mV/\u00b5s\nrate for positive\nvAvsSmallStep vAoVltSage changes. Section 7.1.4.3.1\nstep size defined -1.0 1.0 V\nas a small step relative\nvAvsNew\nto the previous\nvAvsStep AVS . Section 7.1.8.4\nvoltage 100 mV\nprogramming step\nvAvsValid size. Section 7.1.8.4\nvAvsNew\nA Th V e S range in addition -0.5 0.5 V\nto which the\nValid\noutput is\nconsidered\nduring and after a\ntransition as well as in\nresponse to a transient\nvPpsCLCVTransient lCoLad cCoVndition. Section 7.1.4.2.2\nto load transient Operating Operating V\nvoltage bounds.\nVoltage * Voltage *\n0.95 \u2013 1.05 +\nvPpsMaxVoltage APDO APDO Section 7.1.4.2.1\n0.1V 0.1V\nMaximum Voltage Max V\nField in the\nAPDO Max Voltage *\nProgrammable Power\n1.05\nVoltage\nSupply .\nvPpsMinVoltage A*0P.D9O5 APDO Section 7.1.4.2.1\nMinimum Voltage Min V\nField in the Voltage *\nAPDO Min\nProgrammable Power 1.05\nVoltage\nSupply .\nvPpsNew RDO RDO*0.95 RDO RDO Section 7.1.8.3\nProgrammable V\nOutput Voltage\nSource Output Output Output\nmeasured at the\nVoltage Voltage Voltage\nvPpsShutdown receptacle. APDO APDO Section 7.1.4.2.2\n*0.95 *1.05\nSPR PPS\nThe voltage at which V\nthe shuts\nCL Minimum Minimum\ndown when operating\nVoltage *\nin . Voltage *\n0.85\nvPpsSlewNeg Section 7.1.8.3\n0.95\nProgrammable Power -30 mV/\u00b5s\nSupply maximum slew\nrate for negative\nvPpsSlewPos voltage changes Section 7.1.8.3\nProgrammable Power 30 mV/\u00b5s\nSupply maximum slew\nrate for positive\nSourceShall\nvoltage changes\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nPage 410 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\nvPpsSmallStep Section 7.1.4.2.2\nPPS Step size defined -500 500 mV\nas a small step relative\nvPpsNew\nto the previous\nvPpsStep . Section 7.1.8.3\nPPS L S v B oltage 20 mV\nprogramming step size\nvPpsValid (1 ). Section 7.1.8.3\nvPpsNew\nThe range in addition -0.1 0.1 V\nto which the\nProgrammable Power\nValid\nSupply output is\nconsidered in\nvSmallStep rVeBsUpSonse to a load step. Section 7.1.4.3.1\nstep size increase 500 mV\ndefined as a small step\nVBUS\nrelative to the\nprevious when\n(A)PDO\nRequesting a different\nvSrcNeg . Figure 7.10\nMost negative voltage -0.3 V\nallowed during\nvSrcNew tFriaxnedsi Stiuopnp.ly\noutput PDO PDO PDO V Table7.2\nSource\nmeasured at the Voltage Voltage Voltage\nVariabl ree Scueppptalycle. *0.95 *1.05\noutput PDO PDO V\nSource\nmeasured at the Minimum Maximum\nBattery r Seucpeppltyacle. Voltage Voltage\noutput PDO PDO V\nSource\nmeasured at the Minimum Maximum\nvSrcPeak receptacleF.ixed Voltage Voltage Table6.10\nSupply EPR AVS\nThe range that a PDO PDO V Table6.16\nor in Voltage Voltage\nFigure 7.14\nPeak Current *0.90 *1.05\noperation is allowed\nwhen overload\nvSrcSlewNeg conditions occur. Section 7.1.4.2\nMaximum slew rate -30 mV/\u00b5s Table7.2\nallowed for negative\nvoltage transitions.\nLimits current based\non a 3 A connector\nSink\nrating and maximum\nbulk capacitance\nSourceShall\nof 100 \u00b5F.\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 411\nTable7.23 Source Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\nvSrcSlewPos Section 7.1.4\nFigure 7.2\nMaximum slew rate 30 mV/\u00b5s\nallowed for positive\nvoltage transitions.\nLimits current based\non a 3 A connector\nSink\nrating and maximum\nbulk capacitance\nvSrcValid of 100 \u00b5F. Figure 7.2\nvSrcNew Figure 7.3\nThe range in addition -0.5 0.5 V\nNegotiated Section 7.1.8\nto which a\nnewly\nValid\nvoltage is considered\nduring and after\na transition as well as\nin response to a\ntransient load\ncondition. This range\nvSafe5V\nalso applies to\nSourceShall\n.\n1) The charge and discharge the total bulk capacitance to meet the transition time requirements.\nPage 412 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.4.2 Sink Electrical Parameters\nSink Shall Table7.24, \"Sink Electrical Parameters\"\nThe Electrical Parameters that Table b7e .f2o4ll o Swinekd aErlee cstpreicciafli ePda irna meters .\nParameter Description MIN TYP MAX UNITS Reference\ncSnkBulk Sink VBUS [USB 3.2] Section 7.2.2\nAttach FRS [USB 3.2]\nbulk capacitance on at See\nInitial Source\nand during after the\nFirst\nstops sourcing and\nExplicit Contract Appendix E,\nprior to establishing the\n\"FRS System Level Example\"\n(see\nfor an\n1\ncSnkBulkPd example). VBUS Sink Section 7.2.2\nBulk capacitance on a is 100 \u00b5F\nNegotiation\nallowed after a successful\n1\niLoadReleaseRate . Section 7.2.6\nLoad release di/dt. -150 mA/\niLoadStepRate \u00b5s Section 7.2.6\nLoad step di/dt. 150 mA/\niNewFrsSink New Sink \u00b5s Section 7.1.13\nFast Role Swap\nMaximum current the Default USB A\nNew Source R\ncan draw during a current or 1.5\nuntil the aFpapslite Rs olpe. or 3.0\nSwap required USB Type-C\nMatches the required\nCurrent Fixed\nSupply Initial Source\nCurrent field of the\nSink_CapabilitiesMessage\nPDO of the \u2019s\niOvershoot . Section 7.2.6\nPositive or negative overshoot -230 230 mA\niLoadStepRate\nwhen a load change occurs less\nthan or equal to ;\nrelative to the settled value after\niPpsCLLoadStep the load change. Section 7.2.3.1\nCL\nMaximum Current set-point -500 500 mA\nchange while operating in\niSafe0mA mode. Sink Figure 7.29\nVBUS\nMaximum current a is 1.0 mA Figure 7.30\nvSafe0V\nallowed to draw when is\niSnkStdby driven to . Section 7.2.3\nMaximum current during voltage 500 mA\niSnkSwapStdby transition. Sink Section 7.2.7\nSwap Standby\nMaximum current a can draw 2.5 mA\nduring . Ideally this\nPort\ncurrent is very near to 0 mA\nlargely influenced by leakage\ncSnkBulk cSnkBulkPd Shall\ncurrent.\nVBUS [USB 3.2]\n1) If more bypass capacitance than max or max is required in the device, then the device\nincorporate some form of surge current limiting as described in Section 11.4.4.1.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 413\nTable7.24 Sink Electrical Parameters (Continued)\nParameter Description MIN TYP MAX UNITS Reference\npHubSusp Section 7.2.3\nHub\nSuspend power consumption for a 125 mW\nPort\n. 25mW + 25mW per\ndownstream for up to 4\npSnkSusp ports. Section 7.2.3\nSuspend power consumption for a 25 mW\ntNewSrc peripheral device. Section 7.2.7\nInitial Sink Swap Standby Table7.18\nMaximum time allowed for an 275 ms\nNew Source Table7.19\nin to\ntransition to\ntSnkFRSwap operation. Fast Role Swap Section 7.1.13\nNew Sink\nTime during a 200 \u00b5s\niSnkStdby\nwhen the can draw no\ntSnkHardResetPrepare more than S.ink Table7.12\nHard\nTime allotted for the power 15 ms\nReset\nelectronics to prepare for a\ntSnkNewPower . Section 7.2.3\nMaximum transition time 15 ms\ntSnkRecover between powSeinr klevels. USB Table7.20\nDefault Operation\nTime for the to resume 150 ms\ntSnkStdby . Sink Standby Section 7.2.3\nSink\nTime to transition to 15 ms\ntSnkSwapStdby from . Sink Section 7.2.7\nSwap Standby\nMaximum time for the to 15 ms\nvEprMax transition to EPR Sink. Section 7.2.9.2\nHighest voltage an is 55 V\nvSprMax expected to tolerate S PR Sink Section 7.2.9.2\nHighest voltage an is 24 V\ncSnkBulk cSnkBulkPd Shall\nexpected to tolerate\nVBUS [USB 3.2]\n1) If more bypass capacitance than max or max is required in the device, then the device\nincorporate some form of surge current limiting as described in Section 11.4.4.1.\nPage 414 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n7.4.3 Common Electrical Parameters\nSource Sink Shall\nTable7.25, \"Common Source/Sink Electrical Parameters\"\nElectrical Parameters that are common to both the and the that be followed are specified in\nTable7.25 Common Source\u201d/.Sink Electrical Parameters\nParameter Description MIN TYP MAX UNITS Reference\ntSafe0V vSafe0V Section 7.1.5\nFigure 7.10\nTime to reach max. 650 ms\nTable7.20\nTable7.21\ntSafe5V vSafe5V Section 7.1.5\nFigure 7.10\nTime to reach max. 275 ms\nTable7.20\nTable7.21\ntVCONNReapplied UFP VCONN Source Figure 7.19\nWhen the is the : 10 20 ms Figure 7.20\nGoodCRC\ntime from the last bit of the\nPS_RDYMessage\nacknowledging the\nVCONN\nbefore\nreapplying\nD FP\n.\nVCONN Source\nVCONN\nWhen the is the :\ntime from when drops\ntVCONNValid below vRaRtVecCoOnNnNeRceta.pplied Figure 7.19\nVCONN\nTime from until 0 5 ms Figure 7.20\n[USB Type-C 2.4]\nis within vVconnValid (see\n1\ntVCONNZero ). Figure 7.19\nGoodCRC\nTime from the last bit of the 125 ms Figure 7.20\nAcceptMessage\nacknowledging the\nData_ResetMessage VCONN\nin response to the\n[USB\nuntil is\nType-C 2.4]\nbelow vRaReconnect (see\nvSafe0V ). Section 7.1.5\nSafe operating voltage at \u201czero 0 0.8 V\nvSafe5V volts\u201d. Section 7.1.5\n[USB 2.0] [USB 3.2]\nSafe operating voltage at 5V. See 4.75 5.5 V\nVBUS\nand for\n[USB Type-C 2.4]\nallowable voltage range.\n1) tVCONNStable (See ) still applies.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 415"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "8.1", "title": "Overview", "page": 416, "level": 2, "parent_id": "8", "full_path": "8.1 Overview", "tags": [], "text": "8 Device Policy\n8.1 Overview\nDevice Policy Policy Engine\nDevice Policy Manager Section 2.6, \"Architectural Overview\"\nThis section describes the and that implements it. For an overview of the architecture and\nhow the fits into this architecture, please see .\nPage 416 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "8.2", "title": "Device Policy Manager", "page": 417, "level": 2, "parent_id": "8", "full_path": "8.2 Device Policy Manager", "tags": [], "text": "8.2 Device Policy Manager\nDevice Policy Manager\nThe is responsible for managing the powCaepr aubsielidt ibeys one or more USB Power Delivery ports.\nIn order Ptoo rhtave sufficient knowledge to complete this task it needs relevant information about the device it resides\niUnS. BF-iCrst lPyo, ritt hCoans tar oplriori knowledge of the device including the of the power supply and the receptacles\non eac\n\u00ae\nh since these will for example havCea psapbeicliiftiice scurrent ratings. It also has to know information from the\nmodule regaDrdevinicge c Paoblliec yin Msearntaiogner, type and rating of cable etc. It also has to have information\nfCraopma bthiliet ipeoswer supply about chanPgoerst in its as well as being able to request power supply changes.\nWith all of this information the is able to provide up to date information regarding the\navailable toC aa psapbeicliiftiice s and to mSoaunracgee P tohret powDere vriecseo Puorlciecsy wMiatnhaing ethre device.\nPort\nWhen working out the for a given the Capabilities will take into account firstly\nDtheev iccuer Preonlitc yr aMtiannga ogfe trhe 's receptacle and whether the inserted cable is PD or non-PD rated and if so, what is\nthe capability of the plug. This will set Dane vuicpep Pero lbicoyu Mnda nfoarg tehre which might be offered. After this the\nwill consider the available power supply resources since this will bound whSiycsht evmol tPaogleicsy a nd\nMcuarnreangtesr mightD beev ioceff eProelidc.y F Minaanllayg, ethre Capabi lwitiilel sconsider what power is currently allocated to\nother ports, which power is in the Power Reserve and any other amendments to Policy from the\n. The wiSlli nokff Pero rat set oDf evice Policy M waitnhaigne trhe bounds detailCeadp aabboilvitei.es\nSource Capabilities Device Policy Manager\nWhen selecting a capabilCitayp faobri ali tgiievsen the Sink will look at the offered by\nthe . This will set an upper bound for the which might be requested. The\nSwoiullr acleso consider which are required by the in order to operate. If an appropriate match for\nvoltage and Current can be foCuanpda wbiiltihtiiens t Mheis lmimaittcsh of the receptacle and cable, then this will be requested from the\n. If an appropriate match cannot be found then a request for an offered voltage and current will be made,\nalong with an indication of a .\nUSB\uf06c PD defines two types of power sFoiuxrecde Ss:upply Variable Supply Battery Supply\n\uf06c Predefined voltage sources ( , and )\n\uf06dProgrammable voltage sources:\n\uf06d PArdojugsrtaamblme aVbolleta Pgoew Seurp SpulyppAlyV S(PPS)\n( ) Charger Sink Device\nPolicy Manager Sink Source\nThe first are generally used for clasSsiinck chaBragtitnegr ywherein the electronics reside inside the . The\nin the requests a fixed voltage from the list of PDOs offered by the and which is\nconverted internally toC chhaarrggeer the 's and/or power its function. Sink\nSource SPR PPS Mode Device Policy Manager Sink\nThe second moves the electronics that manage the voltSaignek control outside the and back into the\nitself. WSPhRe nP PinS Source , the Sink in the requests a specific voltage wDeitvhic ae 2P0omlicVy\nMacacnuaragceyr and seStsin ak current limit. Unlike traditional USB where s are responsible for limiting the current, they\nconsume, the limits the current to what the has requested. When operating in, the\nin the requests a specific voltage with a 100mV accuracy and requests a maximum current it is\naNlolotwe:ed to draAwV. SSource SPR PPSSource Sink\nThe s unlike s do not support current limit mode. A operating in is respon-\nsible not to draw more current than it requests. Source\nThe process to request power is the same for both types of power s although the actual format and contents\nof th\uf06ce requSeinskt are slightly dSiPffRe rPePnSt. The primary operational differences are: Source\nHard Reset\nA that is using is required to periodically sent requests to let the know it is still alive\n\uf06c anSdi nckommunicatingS. PWRh Meno dtheis communication fails a results.\n\uf06c A Sink operating in EPR Mode has no special timing requirements. Source\nHard Reset\nA operating in is required to periodically communicate with the to let it know it\nDuails-R sotilell Poopwereart Pioonratl. If thDee cvoicme mPoulniciyc aMtiaonna fgaeilrs, a results. Source Sink\nPower Role Swap\nFor s the manages the functionality of both a and a . In\naddition, it is able to manage the process between the two. In terms of power management this\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 417\nPort Sink Source\nAttachedSource\ncould mean that a which is initially consuming power as a is able to become a power resource as a .\nConversely, sD meviigche tP roelqicuye Msta tnhaagt eprower be provided to them. Policy Engine\nCapabilities\nThe functionality within the System Po (laicnyd M toa naa cgeerrtain extent theC apabilities M)i sims sactaclhable depending\non the complexity of the device, including the number of different power supply and the number of\ndifferent features supported for example inteUrSfaBc eH uobr , and the Port\nnumber of ports being managed. Within these parameters it is possible to implement devices from very simple\nSphoowuelrd supplies to more complDeexv picoew Peorl iscuyp Mplainesa goerr devices such as s or Hard Drives. Within multi-\ndevices it is also permitted to have a combination of USB Power Delivery and non-USB Power Delivery ports which\nall bSee mctaionna g2e.6d, b\"Ayr tchhei tectural Overview\" .\nDevice Policy Manager\nAs noted in the logical architecture used in the PD specification will vary\ndepending on the implementation. This means Ptholaicty d Eifnfgeirneent implemDeenvitcaet iPoonlsic oyf Mthaen ager might\nbe relatively small or large depending on the complexity of the device, as indicated above. It is also possible to\nallocate different responsibilities between the and the , which will lead to\ndiffeDreenvtic tey pPeosli coyf Maracnhaitgeecrtures and interfaces.\nThe\uf06c Lo cisa lr Pesopliocnysible for the following:\n\uf06c MaintSaoinuirncge the for the deCvaipcaeb. ilities\n\uf06c For a Sink , monitoring the present Capabili taiensd triggering notifications ofP tohliec yc hEnagnignee.\nPort\nFor a , evaluating and responding to related requests from the for a given\n\uf06c . Source Sink\n\uf06c Control of the USB-C/ Port Cino ntthreo ldevice. Port\n\u00ae\n\uf06c Control of the Policy Engine moduPleo frotr each .\nDevIicnet eProfaliccey tMoa tnhaeg er for a given . Optional\nThe\uf06c is respoSnyssitbelme fPoorl itchye following features when implemented:\n\uf06c ComSmouurnciecations with the over USB.\n\uf06c For s with multiple ports monitoring and balancing power requirements across these ports.\n\uf06c Monitoring of batteriesP aonrdt PAaCr tpnoewrer suCpapblliee sP.lug\n8.2.1Managing CMoadpesa inb iitlsi ties and (s).\nDevice Policy Manager ProviderShall\nCapabilities Shall\nThe in a know the poweSrh saulplplies available in the device and their\nCapabilities. In adSidniktion, it be aware of any other PD sources of power such as batteries and AC inputs. The\navailable power sources and existing demands on the device be taken into account when presenting\nDevice P tool iac y Ma.nager ConsumerShall Sink\nCapabilities Source Shall\nThe in a Sink know the requirements of the and use this to evaluate the\noffered by a . It be aware of its own power sources e.g., Batteries or AC supplies where\ntheseD ehvaivcee Pa obleicayr Minagn oang ietrs opeDrautaiol-nR aosle a P owe.r DeviceShall Capabilities Shall\nAttached\nThe in a combine the above and also be able\n8to .p2re.2sent the du a Sl-ryoslet neamtur eP oof tlhiec dyevice to an PD Capable device.\nShall Device Policy\nAM agnivaegne rPD Capable device might have no USB capability, or PD might have been addedS htoa lal USB device in such a\nway that PD is not integrated with USB. In these two cases there be no requirement for the\nto interact with the USB interface of the device. The following requirements only apply to PD\ndevices that expose PD functionality over USB.\nPage 418 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nDevice Policy ManagerShall System Policy Manager\n[UCSI] Device Policy ManagerShall Local Policy\nThe coSmymsteumni Pcaotleic oy vMera nUaSgBe rwith the System Policy a Mccaonradginegr to the\nrequirBematetenrtys detailed in . Whenever requested the implement a\naccording to that requested by the . For example, the might request\ntNhoatte a: powered Device temporarily stops charginSgh saol lthat there is sufficient power for an HDD to spin up.\nDue to timing constraints, a PD Capable device be able to respond autonomously to all time-critical\n8.2.3 PD rela t eCdo renqturesotsl. of Source/Sink\nDevice Policy Manager ProviderShall Source Port Shall\nNegotiated Shall Policy\nETnhgei ne for a manage the power supply for each PD and know\nat any given time what the power is. It request transitions of the supply and inform the\nDe wvihcee nPeovliecry aM tarnanagsietrion comCopnlseutemse.rShall Sink Sink Port Shall\nNegotiated\nThe for a manage the for each PD and know at any given\ntimeD wehviacte t Phoel icy Manage rpowerD isu.al-Role Power DeviceShall Source SinkPower\nRole Dual-Role Power Port Shall Power Role Port\nThe for a manage the transition between /\n8.2s .f4or each PD Cable Detecti aonnd know at any given time what the is in.\n8.2.4.1 Device Policy Manager in a Provider\nDevice Policy Manager ProviderShall USB-C Port Control Shall\nUSB-C Port Control Attachment \u00ae\nThe in the control the module and be able to use the\n\u00ae\nNote: module to determinDee tvhicee Policy Mana sgteartus. Discov-\ner IdentityCommand Capabilities Section 6.4.4.3.1, \"Dis-\ncIto mveirg hIdte bnet intye\"cessary for the to also initiate additional discovery using the\nin order to determine the full of the cabling (see\n8.2.4.2 De).vice Policy Manager in a Consumer\nDevice Policy Manager Consumer USB-C Port Control Shall USB-\nC Port Control Attachment \u00ae\nThe in a controls the module and be able to use the\n\u00ae\n8.2.4.3 modu l eD toe dveitcerem Pinoe lthice y Manag setart uisn. a Consumer/Provider\nDevice Policy Manager Consumer/Provider Consumer Provider Shall\nUSB-C Port Control Dead Battery\nThe \u00ae Port in a inherits characteristics of s and s and\ncontrol the module in order to support the back-powering case to determine the\nfollo\uf06cwinAgt ftoarc ham gievnetn : Provider/Consumer Dead Battery\n\uf06c oVfB aU SUSB Power Delivery which supports back-powering.\n8.2.4.P4resence of De.vice Policy Manager in a Provider/Consumer\nDevice Policy Manager Provider/Consumer Consumer Provider May\nUSB-C Port Control Dead Battery\nThe \u00ae Port in a inherits characteristics of s and s and\ncontrol the module in order to support the back-powering case to determine the\nfollo\uf06cwing for a givenV BUS:\nPresence of .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 419\n8.2.5 Managing Power Requirements\nDevice Policy Manager Provider\nSource Port\nIt is the responsibility of the in a to be awareA totfa tchhee dpower requirements of all\ndevices connected Dtoe ivtisc e Policy Mansa. gTehris includes being aware of any reserve power that might be required by\ndevices in the future and ensuring that power is shared optimally amongst PD Capable devices. This is a\nkey funcDtioevni coef tPhoeli cy Manager ; whose implementation is critical to ensuring that all PD Capable devices\nget the power they require in a timely fashion in order to facilitate smooth operation. This is balanced by the fact\nthat Cthoen sumer Device Policy M iasn raegsperonShsiabllle for managing the sources of power that are, by definition, finite.\nRequest Provider\nTRehqeu est Shoul'ds ensure that it takes no more power than is required toA pttearcfhoermdS iitnsk\nfunctions and wPhoernt its requirements change, it Should make a new . The , after satisfying the\n, reclaim any unused power to ensure that it can meet total power requirements of s\nNono taet: least one .\n8.2.5.1It is expec t eMd tahant aa gfuitnurge dtehseig nP gouwidee wri lRl perosveidrev aedditional guidance.\nThere might be some products where a Device has certain functionality at one power level and a greater\nfunctionality at anoUthSeBr H, foosrt examDpelev iac eP rPionltiecry/ MScaannangeerr tShhaot uolpderates only as a printer with one power level and as\na scanner if it can get more power. While the visibility of the linkage between power and functionality might only\nbe apparent to the ; the provide mechanisms to manage the power\nrequiremDeenvitcse o Pf osluiccyh M Daenvaicgeesr.\nHubShall\nIt is the 's rPeosrptonsibility to allocate power and maintain a power reserve so as not to over-\nsubscribe its available power resource. A Device with multiple ports such as a always attempt to meet\n8th.e2 in.5cr.e2mental dem aPndosw ofe thre C ap raebquiilriintyg tMhe ihsigmheastt icnhcremental power from its power reserve.\nCapabilities Mismatch Consumer Provider Source\nConsumer Capabilities Device\nAPo licy Manager Soycsctuerms Pwohliecny aM anager cannot obtain required power from a (or the is\nnot PD Capable) and the requires such to operate. Different actions are taken by the\n8.2.5.2.1 and the Local device han ind tlhiins gca osef. mismatch\nConsumer Device Policy ManagerShall\nCapabilities Mismatch\nThe 's cause a notification to be displayed to the end user that a power\n\uf06c has occurredM. Eaxyamples of such feedback can include:\nFor a simple Device an LED be used to indicate the failure. For example, during connection the LED\ncould be solid amber. If the connection is successful, the LED could change to green. If the connection\n\uf06c fails, it could be red or alternately blink amber. Should\nA more sophisticated Device with a user interface, e.g., a mobile device or monitor, provide no-\nProvtiifdiecratioDne vthicreo Puoglhic tyh Me aunsearg einrtMerafayce on the Device. Capabilities\nMismatch\nThe 's cause a notification to be displayed to the user of the power\n. Capabilities Mismatch Provider Device Policy ManagerShould\nNot Sink SPR Sink Minimum PDP\nBEPecRa uSisnek t hMei nimum PDPAdvertise might noSt icnaku_sCea oppaebrialtiitoiensa_lE fxatileunrdee, tdhMe essage 's Section 6.5.13,\n\"Sin kd_iCspalpaayb ail nitoietsif_iEcxatteionnd etod tMhees ussaegre i\"f the power offered to the meSehtso uorld e xNcoeteds the /\nSink d in theS PR Sink Minimum PDP EPR Sink Min (ismeeu m PDPAdvertise\nSink_Capabilities_ExtendedMessage). If a notification is displayed, it be shown as an error unless the\npower offered to the is less than the / d in the\n8.2.5.2.2 Dev ice Po.licy Manager Communication with System Policy\nSystem Policy Manager Section 8.2.2, \"System Policy\"\nDevice Policy ManagerShall System Policy Manager Shall\nIn a USB PowSyesrt Demel iPvoelricyy a Mwaarnea gsyesrtem with an active [UCS I(]see System Policy ManagerSho),u tlhde\nnotify the of the mismatch. This information be passed\nback to the using the mechanisms described in . The\nPage 420 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPort Consumer\nShould Port\nensure that the user is informed of the condition. When another in the system could satisfy the 's\npower requirements the user So buer cdei rPeocrtted to moCvoen tshuem Deervice Stoys ttheem a Pltoelricnya Mtea nag.erShall\nDevice Policy Manager Consumer Device Policy Manager\nISnh aorllder to iGdeetn_tSiifnyk a_ CmaopreM seusistaagbele Section 6 f.o3r.8 t,h \"eG et_Sink_Ca pth Me essage\" communicate\nwith the Consumer in order to determine the 's requirements. The\nuse a (see ) to discover which power levels can\n8be. 2ut.il6ized by the Use of. \"Unconstrained Power\" bit with Batteries and AC\nsupplies\nDevice Policy Manager Provider ConsumerMay\nCapabilities Source\nThe in a Section o6r.4 .1.2.1.3, \"U ncon mstoraniintoedr tPhoew setar\"tus of Saencyt ivoanr 6ia.4b.l1e. 3s.o1u.3r,c \"eUs nocfo pnoswtrearin tehda t\ncPoouwledr h\"ave an impact on its Source_ Caas paa bilitie ssuchS ains kB_aCtatepraibesil aitnieds AMCe ssusapgpelies anSde crteifolenc 6t .t4h.1is, \"iCna tphaeb ilities\n\"MUenscsaognes\"trained Power\" bit (see and [UCSI]\nBattery) provided Saesc ptaiornt o9f.4 t.h1e, \"GetBatteryStatus\" S hoar ll Sy (ssteeme Policy Manager\n). When monitored, and a USB interface is supported, the External Power status (see ) and the\nstate (see ) also be reported to the using the\n8US.B2 .in6t.e1rface. AC Supplies\nSource Sink Section 6.4.1.2.1.3, \"Unconstrained Power\"\nSection 6.4.1.3.1.3, \"Unconstrained Power\" Advertise\nThe Unconstrained Power bit provided by s and s (see and\n) notifies a connected device that it is acceptable to use the d\npower for charging as well as for what is needed for normal operation. A device that sets the Unconstrained Power\nbit has either an external source of power that is sufficient to adequately power the system while charging external\ndevices or expects to charge external devices as a primary state of functiAoCn S (uspupclhy as a battery pack).\nAC Supply Attached\nIn the case of the external power source, the power can either be from an directly connected to the device\nor from an connected to an device, which is also getting unconstrained power from its power\nsupply. The Unconstrained Power bit is in this way communicated through a PD system indicating that the origin\nof th\uf06ce power is from a single or multiple AC supplies, from a battery bank, or similar: AC Supply\n\uf06c If the \"Unconstrained Power\" bit is set, then that power is originally sourced from an .\nAdvertise ProviderPort\nDevices capable of consuming on multiple ports can only claim that they have \"Unconstrained Power\"\nfor the power d as a if there is unconstrained power beyond that needed for nor-\n\uf06c mal operation coming from external supplies, (e.g., multiple APCr osuvipdpelries). Consumer\nAC Sup-\nTplhyis concept applies as the power is routed through multiple and tiers, sAoC, aSsu apnp leyx-\nample. Power provided out of a monitor that is connected to a monitor that gets power from an\n, will claim it has \"Unconstrained Power\" even though it is not directly connected to the Fi.gure\n8.1, \"Example of daisy chained displays\"\nAn example use case is a Tablet computer that is used with two USB A/V displays that aArtet adcahiesyd chained (see\n). The tablet and 1st display are not externally powered, (meaning, they\nhave no source Aotft paochweedr outside of USB PD). The 2nd display has an external supply which could either\nbe a USB PD based supply or some other form of externaClh saurpgperly. When the displays are connected as shown, the\npower adapter to the 2nd display is able to power both the 1st display and the tablet. In this case the 2nd\ndisplay will indicate the presence of a sufficiently sized to the 1st display, by setting its \"Unconstrained\nPower\" bit. The 1st display will then in turn assess and indicate the presence of the extra power to the tablet by\nsetting its \"Unconstrained Power\" bit. Power is transmitted through the system to all devices, provided that there\nis sufficient power available from the external supply.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 421\nFigure 8.1 Example of daisy chained displays\nTablet\nDisplay 1\nDisplay 2\nAC\nAttached\nAnother example use case is a laptop computer that is to both an external supply and a Tablet computer.\nIn this situation, if the external supply is large enough to power the laptop in its normal state as well as charge an\nexternal device, the laptop would set its \"Unconstrained Power\" bit and the tablet will allow itself to charge at its\npeak rate. If the external supply is small, however, and would not prevent the laptop from discharging if maximal\npower is drawn by the external device, the laptop would not set its \"Unconstrained Power\" bit, and the tablet can\nchoose to draw less than what is offered. This amount could be just enough to prevent the tablet from discharging,\nor none at all. Alternatively, if the tablet determines that the laptop has significantly larger battery with more\ncharge than Stihnek tablet has, the tablet can Ustnilcl ocnhsotorsaei ntoe dch Paorwgee ritself, although possibly nSootu artc ethe maximal rate.\nSource\nIn this way, s that do not receive the bit from the connected can still choose to\ncharge their batteries, or charge at a reduced rate, if their policy determines that the impact to the is\nminimal -- such as in the case of a phone with a small battery charging from a laptop with a large battery. These\np8o.l2ic.i6es. 2can be decid e Bd vaitat feurrthye rS UuSpB pPDli ceosmmunication.\nBattery Shall System Policy\nManager\nWhen monitored, and a USB interface is supported, the state be reported to the\nusing Bthaett UerSyB interface.\nShould\nIf the device is -powered but is in a state that is primarily for charging external devices, the device is\nconsidered to be an unconstrained source of power andB tahtutesr y set the \"Unconstrained Power\" bit. Battery\nPower Role Swap\nA simplified algorithm is detailed below to ensure that powered devices will get charge from non-\npowered devices when possible, and also to ensure that devices do not constanSthlyo uld back and forth.\nPower Role Swap\nWhen two devices are connected that do not have Unconstrained Power, they define their own policies so\nas to prevent constant ping. Section 6.4.1.2.1.3, \"Unconstrained Power\" Section\n6.4.1.3.1.3, \"Unconstrained Power\"\nThis algorithm usesC tahpea \"bUilnitcieosnstrained Power\" bit (see and\n), thus the decisions are based on the availability and sufficiency of an external\nsupply, not the full of a system or device or product.\nRec\uf06commPernodviadteior/nCs:onsumer Should\nPower Role Swap Consumer/Provider\ns using large external sources (\"Unconstrained Power\" bit set) always deny\nrequests from s not using external sources (\"Unconstrained Pow-\ner\" bit cleared).\nPage 422 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Provider/Consumer Should\nPower Role Swap Consumer/Provider\ns not using large external sources (\"Unconstrained Powered\" bit cleared) al-\nways accPerpotv aid er/Consumer request from a using large external power sources\n(\"Unconstrained Power\" bit set) unless the requester is not able to provide the requirements of the\n8.2.7present Interface to. the Policy Engine\nDevice Policy ManagerShall Policy Engine Port\nT8h.2e .7.1 Dev ice P moailnitcayin Man ainntearfgaceer t oi nth ea Provide fror each in the device.\nDevice Policy Manager ProviderShall Policy Engine\nThe\uf06c Policy En ignin ae also provide tAhtet afochllmowenintg functions to the :\n\uf06c Inform the Policy Engine of changes in cSaobulerc/e d Ceavpicaeb ilities status forP oar gtiven cable.\n\uf06c Inform the wheAntteavcehre tdhCe onsumer available for a Pcohliacny gEen.gine\n\uf06c Evaluate requests from an and provide rPeoslpicoy nEsnegsin teo the .\n\uf06c Respond to rePqouliecys tEsn fgoirn epower supply transitions from the .\n\uf06c Indication to when power supply transitPioonrst are complete.\n8.2.7.M2aintain a p o Dweerv reisceerv Pe ofolri dceyvi cMesa onpearagteinrg oinn a a Co ant lseussm thaenr maximum power.\nDevice Policy Manager ConsumerShall Policy Engine\nThe\uf06c Policy En ignin ae also provideA ttthaec hfomlleonwting functions to the :\n\uf06c Inform the Policy Engine of changes in cable/device stPaoturst.\n\uf06c Inform thSeo urce Capabi lwitiheesnever the power requirements for a change.\n\uf06dEvaluate Cap aanbdil iptrieosvide suitable responses:\n\uf06d Request from offered .\n\uf06c Indicate whether addSitiinoknal power is required.Policy Engine\n8.2.7.R3espond to r eDqueevstisc foer Pol itrcayn sMitioanns afrogme rth ien a Dual-.Role Power Device\nDevice Policy Manager Dual-Role Power DeviceShall Policy Engine\nThe\uf06c ProviderDevice Pol iicny a M anager provide the following functions to the :\n\uf06c Consume rDevice Policy Manager\n\uf06c Policy Engine Source Sink\n\uf06c Interface for thPeo licy Engine to reqPuowesetr p Roowlee rS wsuappply transitions from to and vice versa.\n8.2.7.I4ndications t o D evice Po dluircinyg Manager in tara Dnsuitiaonl-s.Role Power Device Dead Bat-\ntery handling\nDevice Policy Manager Dual-Role Power Device Dead BatteryShould\nThe\uf06c Sin kin a SinkDFP with a : AttachedSource\n\uf06c SwitVchBU PSorts to At-toanclhye odrS ourc e operation to obtain power from the next .\nNegotiation\nUse from the to power the USB Power Delivery communications as well as\ncharging to enable the of higher input power.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 423"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "8.3", "title": "Policy Engine", "page": 424, "level": 2, "parent_id": "8", "full_path": "8.3 Policy Engine", "tags": [], "text": "8.3 Policy Engine\n8.3.1 Introduction\nPolicy Engine Port Device Policy Manager\nLocal Policy Port\nThere is one instance per that interacts with the in order to implement\nthe \uf06cpresAenMtS for that particular . This section includes:\n\uf06c s for various operations. Sink Cable Plug\nState diagrams covering operation of Sources, s and s.\nPage 424 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2 Atomic Message Sequence Diagrams\n8.3.2.1 Introduction\nPolicy Engine Atomic Message Sequence AMS AMS\nLocal Policy\nThe drives the s ( ) and responses based on both the expected s and\nthe ApMreSseSnhta ll . Message PE_SRC_Ready\nPE_SNK_Ready PE_CBL_Ready Section 8.3.3.2, \"Policy Engine Source Port State Diagram\" Section\n8A.n3 .3.3, \" Policy b Een dgeinfien Seidn ka sP ao rt State D sieaqguraemnc\"e thatS estcatirotsn a8n.3d.3/.o2r5 e, n\"Cdasb ilne ePiltuhge rS pthecei fic State Diagra,m s\"\nor states (see ,\nCable Plug and Section 8.3.3.25.3, \"Source Startup Structured )V. DM\nDiscover Identity of a Cable Plug State Diagram\"Shall AMS\nIn addition, the discovery sequence specified in\nSource Sink Protocol Layer be AdeMfiSned as an . PE_SRC_Ready\nPE_SNK_Ready Section 8.3.3.2, \"Policy Engine Source Port State Diagram\" Section 8.3.3.3, \"Policy Engine\nSTihnek Port St aanted Diag rianmdi\"cate to the when an starts and ends on entry to/exit from\nor (see and\nAMSShall ). Initiator Policy Engine\nGoodCRCMessage Message\nAn Por tbe coAnMsiSdeSrheadl lto have been started by the when the proMteoscsoalg eengine signals the\nthat transmission is a success (the has been received in response to the initial ). For the\nreceAiMviSngS hall the be considered to have started when the initial has arrived.\nAn \uf06c be coPnrostidoecorel dLa tyoe hrave ended:Policy Engine Message AMS\nPort Message\nWhen the signals the that transmission of the final in the is a\n\uf06c suScocefts_sR aensdet fMore tshsaeg oeppHoasridte R eset wSihgenna tlihneg finalS OP\u2019 SO hPa\u2019\u2019s beCeanb rleec Reievseedt.Signaling\nA , for or or has been sent or\nSection 8r.e3c.2ei.1v.e3d, .\"Atomic Message Sequences\" AMS\ngives details of these 's.\nInformative\nThis section contains sequence diagrams that highlight some of the more interesting transactions. It is by no means\na complete summary of all possible combinations but is in nature.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 425\n8.3.2.1.1 Basic Message Exchange\nFigure 8.2, \"Basic Message Exchange (Successful)\" Message Table8.1, \"Basic Message\nFlow\" Source Sink\nSink Source Message below illustrates how a is senMte. ssage Protocol\nLayer details the steps in Ptholei cfylo Ewn.g Ninoete that theM seesnsadgeer might be either a PHY Loar yer while the receiver might\nbe either a or . The basic sequence is the same. It starts when the Sender's\nat the behest of its Figure 8fo.2rm Bsa as ic Messa gthea Et xitc phaasnsgees (toS uthccee ssful) .\nMessage Sender Message Receiver\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send message 2: Message\n3: Message + CRC 4: Message\nStart CRCReceiveTimer\nCheck MessageID against\nlocal copy\nStore copy of MessageID\n5: Message received\n6: GoodCRC\n8: GoodCRC 7: GoodCRC + CRC Consume message\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Message sent\nTable8.1 Basic Message Flow\nStep Message Sender Message Receiver\nPolicy Engine Protocol Layer Message\nProtocol Layer Message PHY\n1 directs to send a .\nLayer\n2 creates the and passes to\nPHY Layer CRC Message PHY Layer Message CRC\n.\nCRCReceiveTimer Message\n3 appends a and sends the . Starts receives the and checks the to\nPHY Layer CRC Message\n. verify the .\nProtocol Layer\n4 removes the and forwards the\nProtocol Layer MessageID\nto the .\nMessage\n5 checks the in the incoming\nis different from the previously stored value\nProtocol Layer Message\nand then stores a copy of the new value.\nPolicy Engine\nforwards the received\nProtocol Layer GoodCRCMessage\ninformation to the that consumes it.\nPHY Layer\n6 generates a and\nPHY Layer Message CRC PHY Layer CRC GoodCRC\npasses it to the .\nMessage Message\n7 receives the and checks the to appends and sends the\nPHY Layer CRC GoodCRC\nverify the . .\nMessage Protocol Layer\n8 removes the and forwards the\nProtocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nchecks and increments the\nProtocol Layer Policy Engine\nand stops .\nMessage\n9 informs the that the\nwas successfully sent.\nPage 426 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.2 Errors in Basic Message flow\nMessage\nFigure 8.3, \"Basic Message flow indicating possible errors\" Figure 8.2, \"Basic Message\nTExhcehraen agree (vSaurcicoeusss fpuol)i\"nts during the flow where failures Tina bcolem8m.2u, \"nPiocatetniotnia ol irs southese irn i sBsauseics Mcaens soacgceu Fr.l ow\"\nis an annotated version of\nindicating at which point issues can occur.\ndetails the steps in the flowF.igure 8.3 Basic Message flow indicating possible errors\n\u2022Message currently being received \u2022Message does not arrive \u2022Message is a retry\n\u2022Channel unavailable \u2022Message has bad CRC\nMessage Sender Message Receiver\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send message 2: Message\nA B C\n3: Message + CRC 4: Message\nStart CRCReceiveTimer\nCheck MessageID against\nlocal copy\nStore copy of MessageID\nD\n5: Message received\nE\nF 6: GoodCRC\nG 8: GoodCRC 7: GoodCRC + CRC Consume message\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer \u2022Message currently being received\n\u2022Channel unavailable\n9: Message sent\n\u2022GoodCRC does not arrive \u2022Message is unexpected\n\u2022GoodCRC has the wrong MessageID \u2022GoodCRC has a bad CRC \u2022Message is unknown\n\u2022Response is not GoodCRC\nTable8.2 Potential issues in Basic Message Flow\nPoint Possible issues\nMessage PHY Layer\nMessage Message\nA 1) There is an incoming on the channel meaning that the is unable to send. In this case\nthe outgoing is removed from the queue and the incoming processed. Message\nDiscarded PHY Layer Protocol Layer\n2) Due to some sort of noise on the line it is not possible to transmit. In this case the outgoing is\nMessage PHY Layer\nby the . Retransmission is via the \u2019s normal mechanism.\nB 1) Message does not arrive at the due to noise oCnR Cthe channel.\n2) Mess aargreives but has been cPorrortuopctoel dL aaynedr has a bad . GoodCRCMessage\nCRCReceiveTimer Message\nThere is no to pass up to the on the receiver which means a is not\nMessageID Message MessageID Message\nsent. This leads to a timeout in the Sender.\nPolicy Engine\nC 1) of received matches stored so this is a retry. is not passed\nPolicy Engine Message\nup to the .\nD 1) Policy Engine receives a knUonwrenc ognized M thesasta igt ewas not expecting.\n2) receives an . Soft_ResetMessage\nMessage\nThese cases are errors in the protocol which could lead to the generation of a .\nE Same as point A but at the Receiver side.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 427\nTable8.2 Potential issues in Basic Message Flow\nPoint Possible issues\nGoodCRCMessage Message\nF 1) GoodCRC Message response does not arrive at the CRC Sender side due to the noise on the channel.\n2)GoodCRCMessa ge response arrivesM beusts ahgaes a bad P.rotocol Layer CRCReceiveTimer\nMessage\nA is not received by the Sender\u2019s . This leads to a\nGoodCRCMessage MessageID Message\ntimeout in the Sender.\nG 1) Message is received but dGooeosd cCoRnCta Mine stshaeg seame as the transmitted .\nMessage Protocol Layer\n2) A is received but it is not a (similar case to that of an unexpected or unknown\nbut this time detected in the ).GoodCRCMessage\nCRCReceiveTimer Protocol Layer Cable\nBoth of these issues indicate errors in receiving an expected which will lead to a\nPlug\ntimeout in the and a subsequent retry (except for communications with\ns).\nFigure 8.4, \"Basic Message Flow with Bad followed by a Retry\" Message\nCRC Message Message Protocol Layer\nPolicy Engine Message illuPsHtrYa tLeasy oerne of thPeroseto ccaosle Lsa; ythere basic flow\nwith a retry due to a bad at the RencReievterry. CIto sutnatrtsT wahbelen8 t.h3e, \"Basic Me Ssseangdee rF'lso w with CRC fail uatr et\"he\nbehest of its forms a that it passes to the . The is responsible for\nretries on a \u201c'n' strikes and you are out\" basis ( ).\ndetails the steps in the floFwig.ure 8.4 Basic Message Flow with Bad followed by a Retry\nMessage Sender Message Receiver\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send message 2: Message\n3: Message + CRC\nStart CRCReceiveTimer Message is not received or CRC\nis bad so message is not passed\nto the protocol layer\nCRCReceiveTimer expires\nRetry and increment RetryCounter\n4: Message\n5: Message + CRC\n6: Message\nStart CRCReceiveTimer\nCheck MessageID against\nlocal copy\nStore copy of MessageID\n8: GoodCRC 7: Message received\n10: GoodCRC 9: GoodCRC + CRC Consume message\nCheck and increment MessageIDCounter\nReset RetryCounter\nStop CRCReceiveTimer\n11: Message sent\nPage 428 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.3 Basic Message Flow with CRC failure\nStep Message Sender Message Receiver\nPolicy Engine Protocol Layer Message\nProtocol Layer Message PHY\n1 directs to send a .\nLayer\n2 creates the and passes to\nPHY Layer CRC Message PHY Layer Message Message\n.\nCRCReceiveTimer CRC Protocol Layer\n3 appends a and sends the . Starts receives no or a with an\nCRCReceiveTimer\n. incorrect . Nothing is passed to .\nProtocol\n4 L Si a n y c e e r no re R sp et o r n y s C e o i u s n re te c r eived, the Protocol Lay er\nwill expire and trigger the first retry by the\nMessage PHY Layer\n. The is incremented.\nPHY Layer CRC Message PHY Layer Message CRC\npasses the to the .\nCRCReceiveTimer Message\n5 appends a and sends the . Starts receives the and checks the to\nPHY Layer CRC Message\n. verify the .\nProtocol Layer\n6 removes the and forwards the\nProtocol Layer MessageID\nto the .\nMessage\n7 checks the in the incoming\nis different from the previously stored value\nProtocol Layer Message\nand then stores a copy of the new value.\nPolicy Engine\nforwards the received\nProtocol Layer GoodCRCMessage\ninformation to the that consumes it.\nPHY Layer\n8 generates a and\nPHY Layer Message CRC PHY Layer CRC GoodCRC\npasses it to the .\nMessage Message\n9 receives the and checks the to appends and sends the\nPHY Layer CRC GoodCRC\nverify the . .\nMessage Protocol Layer\n10 removes the and forwards the\nProtocol Layer MessageID\nto the .\nCRCReceiveTimer RetryCounter\n11 Protocol Layer verifies the Policy Eng , i n st e ops\nand resets the .\nMessage\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 429\n8.3.2.1.3 Atomic Message Sequences\nAtomic Message Sequence AMS Table8.4, \"Atomic Message Sequences\"\nMessage Message AMS\nTNhoen -tiynpteersr oufp tible s ( ) arAeM liSsted in Message . ATMheS followinRg\ntables list sequCenolcleissi oonf eAivthoeidra nce sS oerc ctioomn b5i.7n,a \"tCioonllsi soiof n Avoidasn caen\"d oSnhea lolr more embedded es which are\n. Where there is an embedded the entirMe essage sequence is treated as an and the p\nvalue used AfoMr S (see ) only be changed on leaving or\nentering the ready state at the beginning or end of the entire sequence, and not at the start or end of the\neNmotbee:dded AM.S Message\nGoodCRCMessage Message\nAn is has not started until the first in the sequence has been successfully sent (i.e., a\nTable8.31, \"AMS: Ha rd Reset \"has been rHecaeridv Redes aectknowledgiSnigg nthaeli ng ).AMS SPR Contract\nNegotiationAMS Shall Non-interruptible\ndetails a (which is not an ) followed by an\nwhich be treatTeadb alse 8.4 Atomic Mess.age Sequences\nType of AMS Table Reference Section Reference\nNegotiation Table8.5, \"AMS: Power Negotiation (SPR)\" Section 8.3.2.2.1\nNegotiation Table8.6, \"AMS: Power Negotiation (EPR)\" Section 8.3.2.2.2\nPower (SPR)\nUnsupported Message Table8.7, \"AMS: Unsupported Message\" Section 8.3.2.3\nPower (EPR)\nSoft Reset Table8.8, \"AMS: Soft Reset\" Section 8.3.2.4\nData Reset Table8.9, \"AMS: Data Reset\" Section 8.3.2.5\nHard Reset Table8.31, \"AMS: Hard Reset\" Section 8.3.2.6\nPower Role Swap Table8.10, \"AMS: Power Role Swap\" Section 8.3.2.7\nFast Role Swap Table8.11, \"AMS: Fast Role Swap\" Section 8.3.2.8\nData Role Swap Table8.12, \"AMS: Data Role Swap\" Section 8.3.2.9\nVCONN Swap Table8.13, \"AMS: VCONN Swap\" Section 8.3.2.10\nTable8.14, \"AMS: Alert\" Section 8.3.2.11.1\nTable8.15, \"AMS: Status\" Section 8.3.2.11.2\nAlert\nSource Capabilities\nStatus Table8.16, \"AMS: Source/Sink Capabilities (SPR)\" Section 8.3.2.11.3.1\nSink Capabilities\n/\nSource Capabilities\n(SPR) Table8.17, \"AMS: Source/Sink Capabilities (EPR)\" Section 8.3.2.11.3.2\nSink Capabilities\n/\nExtended Capabilities Table8.18, \"AMS: Extended Capabilities\" Section 8.3.2.11.4\n(EPR)\nBatteryCapabilities Table8.19, \"AMS: Battery Capabilities\" Section 8.3.2.11.5\nTable8.20, \"AMS: Manufacturer Information\" Section 8.3.2.11.6\nand Status\nTable8.21, \"AMS: Country Codes\" Section 8.3.2.11.7\nManufacturer Information\nTable8.22, \"AMS: Country Information\" Section 8.3.2.11.8\nCountry Codes\nTable8.23, \"AMS: Revision Information\" Section 8.3.2.11.9\nCountry Information\nSource Table8.24, \"AMS: Source Information\" Section 8.3.2.11.10\nRevision Information\nTable8.25, \"AMS: Security\" Section 8.3.2.12\nInformation\nTable8.26, \"AMS: Firmware Update\" Section 8.3.2.13\nSecurity\nStructured VDM Table8.27, \"AMS: Structured VDM\" Section 8.3.2.14\nFirmware Update\nTable8.28, \"AMS: Built-In Self-Test (BIST)\" Section 8.3.2.15\nTable8.29, \"AMS: Enter USB\" Section 8.3.2.16\nBuilt-In Self-Test (BIST)\nUnstructured VDM Table8.30, \"AMS: Unstructured VDM\" Section 8.3.2.17\nEnter USB\nPage 430 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.3.1 AMS: Power Negotiation (SPR)\nTable8.5 AMS: Power Negotiation (SPR)\nAMS Message Sequence Conditions AMS Ref State Machine\nRef\nSource_Capabilities\nMessage\n1.\nRequestMessage Section 8.3.2.2.1.1.1\nNegotiation\nSPR Explicit Contract AcceptMessage\n2.\n(Accept) PS_RDYMessage\n3.\nSource_Capabilities\n4. Source Section 8.3.3.2\nMessage\n1. SPR Mode Section 8.3.2.2.1.1.2 Section 8.3.3.3\nNegotiation RequestMessage Started by , ,\nSPR Explicit Contract\nRejectMessage\n(Reject) 2.\nSource_Capabilities\n3.\nMessage\n1. Section 8.3.2.2.1.1.3\nNegotiation RequestMessage\nSPR Explicit Contract\nWaitMessage\n(Wait) 2.\nRequestMessage\n3.\nSPR PPS AcceptMessage Section 8.3.2.2.1.2 Section 8.3.3.3\n1.\nPS_RDYMessage\nKeep Alive 2.\nRequestMessage\n3.\nSPR Sink\nAcceptMessage Sink Section 8.3.2.2.1.3.1\n1.\nMakes Request PS_RDYMessage SPR Mode\n(Accept) 2. Started by , Section 8.3.3.2\nSPR Sink 3. Request Message\nSection 8.3.2.2.1.3.2 Section 8.3.3.3\nRejectMessage ,\nMakes Request 1.\n(SRPeRj eScint)k 2. Reque stMessage\nSection 8.3.2.2.1.3.3\nWaitMessage\nMakes Request 1.\n(Wait) 2.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 431\n8.3.2.1.3.2 AMS: Power Negotiation (EPR)\nTable8.6 AMS: Power Negotiation (EPR)\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nEPR_Mode\nMessage\n1. (Enter)\nEPR_Mode\nMessage\n2. (Enter\nVCONN Source Section 8.3.3.25.1\nAcknowledge)\nVCONN\nSection 8.3.2.2.2.1 Section 8.3.3.25.2\n3. Source Swap, ,\nEPR Mode ( I in n Oi i p t ti i t a ait t oe o n ( d r A a bl c ) y c . R e n p e o s t n p ) - o A n M d S er SPR Mode Sink S S e e c c t t i i o o n n 8 8 . . 3 3 . . 2 2 . . 1 1 0 0 . . 1 2 , , S S e e c c t t i i o o n n 8 8 . . 3 3 . . 3 3 . . 1 2 9 0 , .1 ,\nEntering Started by , Section 8.3.2.12.3 Section 8.3.3.21.1\n(Success) 4. Op ttoio nal Section 8.3.2.2.2.4 , Section 8.3.3.2 ,\nDiscover Identity (ACK) , ,\nAMS ( for Section 8.3.3.3\n,\nSources with captive\nEPR_Mode\ncables)\nMessage\n5. (Enter\nSucceeded)\n6. EPR Explicit Contract\nEPR_Mode\nNegotiation AMS\nMessage\n1. (Enter)\nEPR_Mode\nMessage\n2. (Enter\nVCONN Source Section 8.3.3.25.1\nAcknowledge)\nVCONN Section 8.3.2.2.2.2\nSection 8.3.3.25.2\nEPR Mode 3. Source Swap, Sink Section 8.3.2.10.1 ,\nEPR initiatOepdt bioyn naoln- , Section 8.3.3.19\nECanbtelering\nInitiato\n(\nr\nAcc\nR\nep\nes\nt\np\n)\nonder S\nS\nt\nP\na\nR\nr t\nM\ned\no d\nb\ne\ny ,\nSection 8.3.2.10.2\n, Section 8.3.3.20.1\n,\n(Failure due to non- AMS( ). Section 8.3.2.12.3 ,\n, Section 8.3.3.21.1\n) 4. Op ttoio nal ,\nDiscover Identity (ACK)\nAMS ( for\nSources with captive\nEPR_Mode\ncables)\nMessage\n5. (Enter Failed)\nEPR_Mode\nMessage\n1. (Enter)\nEPR_Mode\n.\nMessage\nSection 8.3.2.2.2.3 Section 8.3.3.25.1\nEP V R C O M N o N d S e wap 2. A VC c O k N n N o w So le u d r c g ( e E e) n ter V CONN . SPR Mode Sink Section 8.3.2.10.1 , Section 8.3.3.25.2 ,\nEntering 3. Source Swap, Started by , Section 8.3.2.10.2 , Section 8.3.3.19 ,\n(Failure of ) initiatOepdt bioyn naoln-\n(Reject)\nEPR_Mode\nAMS( ).\nMessage\n4. (Enter Failed)\nPage 432 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.6 AMS: Power Negotiation (EPR)\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nEPR_Source_Capabilities\nMessage\n1. Source\nEPR_RequestMessage Section 8.3.2.2.2.2.1\nNegotiation EPR Mode\nEPR Explicit Contract AcceptMessage Started by ,\n2.\n(Accept) PS_RDYMessage\n3.\nEPR_Source_Capabilities\n4.\nMessage\n1. Section 8.3.2.2.2.2.2\nNegotiation EPR_RequestMessage Section 8.3.3.2\nEPR Explicit Contract\nRejectMessage Section 8.3.3.3\n(Reject) 2. ,\nEPR_Source_Capabilities\n3.\nMessage\n1. Section 8.3.2.2.2.2.3\nNegotiation EPR_RequestMessage\nEPR Explicit Contract\nWaitMessage\n(Wait) 2.\nEPR_KeepAliveMessage\n3. Sink\nEPR_KeepAlive_Ack Section 8.3.2.2.2.3\n1. EPR Mode\nMessage Started by ,\nEPR Keep Alive 2.\nEPR_Mode\nEPR Mode Sink Message Sink Section 8.3.2.2.2.4.1\n1. (Exit) EPR Mode Section 8.3.2.2.1.1 Section 8.3.3.25.3\nExiting ( Started by , ,\nSection 8.3.3.25.4\nInitiated) 2. SPR Explicit Contract ,\nEPR_Mode Section 8.3.3.2\nNegotiation AMS ,\nEPR Mode Message Source Section 8.3.2.2.2.4.2 Section 8.3.3.3\n1. (Exit) ,\nSource EPR Mode Section 8.3.2.2.1.1\nExiting Started by , ,\n( Initiated) 2. SPR Explicit Contract\nEPR_RequestMessage\nNegotiation AMS\nEPR Sink Sink\nAcceptMessage Section 8.3.2.2.2.5.1\n1. EPR Mode\nMakes PS_RDYMessage Started by ,\n2.\nRequest (Accept) Section 8.3.3.2\nEPR Sink 3. EPR_Req uestMessage Sink\nSection 8.3.2.2.2.5.2 Section 8.3.3.3\nRejectMessage EPR Mode ,\nMakes 1. Started by ,\nREePqRu Seisnt k(Reject) 2. EPR_R equestMessage Sink\nSection 8.3.2.2.2.5.3\nWaitMessage EPR Mode\nMakes 1. Started by ,\nRequest (Wait) 2.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 433\n8.3.2.1.3.3 AMS: Unsupported Message\nTable8.7 AMS: Unsupported Message\nAMS Message Sequence Conditions AMS Ref State\nMachine Ref\nMessage\nSection\nUnsupported Message Source Sink Section 8.3.2.3\n1. Any which is not supported Source Sink 8.3.3.6.2\nNot_SupportedMessage Started by\nby the or\nor\n2.\n8.3.2.1.3.4 AMS: Soft Reset\nTable8.8 AMS: Soft Reset\nAMS Message Sequence Conditions AMS Ref State\nMachine Ref\nSoft_ResetMessage Section\nAcceptMessage 8.3.3.4.1\n1.\nSection\n2. SPR M ode Section 8.3.2.4 8.3.3.4.2 ,\n3. I N n e got E i P at R io M n o A : d S M e P S R Explicit Contract S 8 e .3 c . t 2 io .2 n .1 .1 , 8 Se .3 c . t 3 i . o 2 n 5 . , 2.1\nSoft Reset 4. or in : EPR Explicit Contract Source Sink Section , Section\nNegotiation AMS. Started by 8.3.2.2.1.1 8.3.3.25.2.3 ,\nor Section\n, Section\n8.3.2.2.2.2 ,\n8.3.3.25.2.4\nSection 8.3.3.2\n,\nSection 8.3.3.3\n,\n8.3.2.1.3.5 AMS: Data Reset\nTable8.9 AMS: Data Reset\nAMS Message Sequence Conditions AMS Ref State\nMachine Ref\nDFP Data Reset\nData_ResetMessage\nDFP VCONN AcceptMessage DFP Section 8.3.2.5.1\nInitiated 1.\nSource Data_Reset_CompleteMessage\nwhere the is the 2. Started by\nDFP Data Reset 3.\nData_ResetMessage\nDFP VCONN AcceptMessage UFP Section 8.3.2.5.2\nReceives 1.\nSource Data_Reset_CompleteMessage\nwhere the is the 2. Started by Section\nData_ResetMessage 8.3.3.5.1\n3.\nDFP Data Reset AcceptMessage Section\nUFP VCONN 1. DFP Section 8.3.2.5.3 8.3.3.5.2 ,\nSour Icneitiated 2. PS_RDY Message\nwhere the is the Data_Reset_CompleteMessage Started by\n3.\nData_ResetMessage\n4.\nDFP Data Reset\nAcceptMessage\nUFP VCONN 1. UFP Section 8.3.2.5.4\nSour Rceeceives 2. PS_RDY Message\nwhere the is the Data_Reset_CompleteMessage Started by\n3.\n4.\nPage 434 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.3.6 AMS: Power Role Swap\nTable8.10 AMS: Power Role Swap\nAMS Message Sequence Conditions AMS Ref State\nMachine Ref\nPR_SwapMessage\nAcceptMessage Section\n1.\nSource Power Role PS_RDYMessage 8.3.2.7.1.1\n2.\nSwap Initiated 3. PS_RDY Message 8 Se .3 c . t 2 i . o 2 n .1 .1 ,\n(Accept)\n4.\nSource\n5. SPR Explicit Contract Negotiation Started by\nSource Power Role P A R M _ S SwapMessage Section\nSwap RejectMessage 8.3.2.7.1.2\nInitiated 1. Section\nSourc e(Reject) Power Role 2. PR_Sw apMessage Section 8.3.3.19.3\nSwap WaitMessage 8.3.2.7.1.1 Section\nInitiated 1. ,\n8.3.3.19.4\n(Wait) 2. PR_Sw apMessage\nSection 8.3.3.2\nAcceptMessage Section ,\n1.\nSink Power Role PS_RDYMessage 8.3.2.7.2.1 Section 8.3.3.3 ,\n2.\nSwap Initiated 3. PS_RDY Message 8 Se .3 c . t 2 i . o 2 n .1 .1 ,\n(Accept)\n4. Sink\n5. SPR Explicit Contract Negotiation\nSink Power Role P A R M _ S SwapMessage Started by Section\nSwap RejectMessage 8.3.2.7.2.2\nInitiated 1.\nSink (Reject)Power Role 2. PR_Sw apMessage Section\nSwap WaitMessage 8.3.2.7.2.3\nInitiated 1.\n(Wait) 2.\n8.3.2.1.3.7 AMS: Fast Role Swap\nTable8.11 AMS: Fast Role Swap\nAMS Message Sequence Conditio AMS Ref State Machine\nns Ref\nFR_SwapMessage\nAcceptMessage Section 8.3.3.2\n1.\nFast Role Swap 2. PS_RDY Message Section 8.3.2.8 Section 8.3.3.3 ,\n3. PS_RDY Message S S t in a k rted by Section 8.3.2.2. , 1.1 Section 8.3.3.19 , .5\nSection 8.3.3.19.6\n4. ,\n5. SPR Explicit Contract Negotiation\nAMS\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 435\n8.3.2.1.3.8 AMS: Data Role Swap\nTable8.12 AMS: Data Role Swap\nAMS Message Sequence Conditions AMS Ref State\nMachine\nRef\nData Role Swap DR_SwapMessage\nSection\nUFP\n, In\nS\nit\nin\nia\nk\nted by 1.\nAcceptMe ssage Sink\n8.3.2.9.1.1\nOperating as 2. Started by\nData Role Swap DR_SwapMessage\n(Accept) Section\nUFP\n, In\nS\nit\nin\nia\nk\nted by 1.\nRejectMe ssage\n8.3.2.9.1.2\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Reject) Section\nUFP\n, In\nS\nit\nin\nia\nk\nted by 1.\nWaitMes sage\n8.3.2.9.1.3\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Wait) Section\nUFP\n, In\nS\nit\no\ni\nu\na\nr\nte\nce\nd by 1.\nAcceptMe ssage\nSource 8.3.2.9.2.1\nStarted by\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Accept) Section\nUFP\n, In\nS\nit\no\ni\nu\na\nr\nte\nce\nd by 1.\nRejectMe ssage\n8.3.2.9.2.2\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Reject) Section\nUFP\n, In\nS\nit\no\ni\nu\na\nr\nte\nce\nd by 1.\nWaitMes sage\n8.3.2.9.2.3\nSection\n8.3.3.19.1\nOperating as 2.\nData Role Swap DR_SwapMessage Section\n(Wait) Section ,\nDFP\n, In\nS\nit\no\ni\nu\na\nr\nte\nce\nd by 1.\nAcceptMe ssage\nSource 8.3.2.9.3.1\n8.3.3.19.2\nStarted by\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Accept) Section\nDFP\n, In\nS\nit\no\ni\nu\na\nr\nte\nce\nd by 1.\nRejectMe ssage\n8.3.2.9.3.2\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Reject) Section\nDFP\n, In\nS\nit\no\ni\nu\na\nr\nte\nce\nd by 1.\nWaitMes sage\n8.3.2.9.3.3\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Wait) Section\nDFP\n, In\nS\nit\nin\nia\nk\nted by 1.\nAcceptMe ssage Sink\n8.3.2.9.4.1\nOperating as 2. Started by\nData Role Swap DR_SwapMessage\n(Accept) Section\nDFP\n, In\nS\nit\nin\nia\nk\nted by 1.\nRejectMe ssage\n8.3.2.9.4.2\nOperating as 2.\nData Role Swap DR_SwapMessage\n(Reject) Section\nDFP\n, In\nS\nit\nin\nia\nk\nted by 1.\nWaitMes sage\n8.3.2.9.4.3\nOperating as 2.\n(Wait)\nPage 436 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.3.9 AMS: VCONN Swap\nTable8.13 AMS: VCONN Swap\nAMS Message Sequence Conditions AMS Ref State Machine\nRef\nVCONN Source\nVCONN_SwapMessage\nSection\nVCONN AcceptMessage VCONN Source\nSource Swap, 1. PS_RDYMess age 8.3.2.10.1.1\ninitiated by 2. Started by\nVCONN S (oAucrcceept)\n3.\nVCONN_S wapMessage\nSection\nVCONN RejectMessage 8.3.2.10.1.2\nSource Swap, 1.\ninitiated by\nVCONN S\n(\no\nR\nu\ne\nr\nj\nc\ne\ne\nct)\n2. VCONN_ SwapMessage\nSection\nVCONN WaitMessage 8.3.2.10.1.3\nSource Swap, 1.\ninitiated by\nVCONN S\n(\no\nW\nur\na\nc\nit\ne\n)\n2. VCONN _SwapMessage Section 8.3.3.20\nVCONN Source Swap, 1.\nAcceptMess age VCONN Source\n8\nSe\n.3\nc\n.\nt\n2\ni\n.\no\n1\nn\n0 .2.1\ninitiated by non- PS_RDYMessage\n2. Started by non-\nV\n(A\nCO\ncc\nN\ne\nN\np\nS\nt)\nource 3. VCONN_S wapMessage\nRejectMessage Section\nVCONN Source Swap, 1. 8.3.2.10.2.2\ninitiated by non-\n2.\nV\n(R\nCO\nej\nN\ne\nN\nc t\nS\n)\nource VCONN_SwapMessage\nSection\nWaitMessage 8.3.2.10.2.3\nVCONN Source Swap, 1.\ninitiated by non-\n2.\n(Wait)\n8.3.2.1.3.10 AMS: Alert\nTable8.14 AMS: Alert\nAMS Message Sequence Conditions AMS Ref AMS Ref\nSource Alert Message\nSink\nsends Alert to 1.\nSenderResponseTi\nam er Source Section Section 8.3.3.7.1\n( 8.3.2.11.1.1 Section 8.3.3.7.2\nSource AlertMessage ,\nTimeout) Started by\nSink Get_Status\nsends Alert to 1.\nMessage\na ( 2. Sink Gets Source Status AMS\nSink AlertMessage\n)\nSource\nsends Alert to a 1.\nSenderResponseTi\nmer Sink\nSection Section 8.3.3.7.3\n( 8.3.2.11.1.2 Section 8.3.3.7.4\nSink AlertMessage ,\nTimeout) Started by\nSource Get_Status\nsends Alert to a 1.\nMessage\n( 2. Source Gets Sink Status AMS\n)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 437\n8.3.2.1.3.11 AMS: Status\nTable8.15 AMS: Status\nAMS Message Sequence Conditions AMS Ref State Machine\nRef\nSink Source Get_StatusMessage Section\nStatusMessage Sink 8.3.2.11.2.1\nGets 1.\nSSotautrucse Sink 2. Get_Sta tusMessage Started by Source Section , Section 8.3.3.10.1\n8.3.2.11.2.2\nStatusMessage Section 8.3.3.10.2\nGets 1. Started by ,\nVStCaOtNuNs Source 2. Get_Sta tusMessage Section\nCable Plug StatusMessage VCONN Source 8.3.2.11.2.3\nGets 1.\nSink S oSutarctues 2. Get_PP S_StatusMessage Started by Sink Section , Section 8.3.3.10.3\n8.3.2.11.2.4\nPPS_StatusMessage Section 8.3.3.10.4\nGets PPS 1. Started by ,\nStatus 2.\n8.3.2.1.3.12 AMS: Source/Sink Capabilities (SPR)\nTable8.16 AMS: Source/Sink Capabilities (SPR)\nAMS Message Sequence Conditions AMS Ref State Machine\nRef\nSink Source Get_Source_CapMessage\nCapabilities EPR Source_Capabilities\nGets 1.\nMode Message\n( 2.\nSink ) Source\nGet_Source_CapMessage\nSource_Capabilities\nCapabilities 1.\nGets Message\nSPR\n2.\nSPR Mode\nMode\n(Accept in Section 8.3.2.11.3.1.1\n3. In only: SPR Sink\n) M Ge a t k _ e S s o u R r e c q e u _ e C s a t p (A M c e c s e s p a t) g A e MS Sink Section 8.3.2.2.1.3.1 , Section 8.3.3.2\nSink Source Source_Capabilities Section 8.3.2.2.1.3.2 , Section 8.3.3.3 ,\n1.\nCapabilities Message Started by Section 8.3.2.2.1.3.3\nSP G R e M ts o de 2. SPR Mode , ,\n(Reject\nin ) 3. In only: SPR Sink\nGet_Source_CapMessage\nMakes Request (Reject) AMS\nSink Source Source_Capabilities\n1.\nCapabilities Message\nSP G R e M ts o de 2. SPR Mode\n(Wait\nin ) 3. In only: SPR Sink\nDual-Role Power Get_Source_CapMessage\nMakes Request (Wait) AMS\nSource Source\nSource_Capabilities Section 8.3.3.19.7\nCapabilities 1. Message Source Section 8.3.2.11.3.1.2\nGets Section 8.3.3.19.10\nDual-Role Power 2. ,\nfrom a Started by\nSink\nSource Sink Get_Sink_CapMessage Section 8.3.3.2\nSource Section 8.3.2.11.3.1.3\nCapabilities Sink_CapabilitiesMessage Section 8.3.3.3\nGets 1. ,\nDual-Role Power Get_Sink_CapMessage Started by\n2. ,\nSink Sink Sink_CapabilitiesMessage Section 8.3.3.19.9\nCapabilities 1. Sink Section 8.3.2.11.3.1.4\nDual -GReotl e Power 2. Section 8.3.3.19.8 ,\nSource from a Started by\nPage 438 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.3.13 AMS: Source/Sink Capabilities (EPR)\nTable8.17 AMS: Source/Sink Capabilities (EPR)\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nEPR_Get_Source_Cap\nSink\nMessage\nSource Capabilities 1.\nGets EPR EPR_Source_Capabilities\nSPR Mode\nMessage\n2.\n( ) EPR_Get_Source_Cap\nSink Message\n1.\nSource Capabilities EPR_Source_Capabilities\nGets EPR\nEPR Message\n2.\nMode EPR Mode EPR Sink\n(Accept in\nSection 8.3.2.11.3.2.1\n) 3. In only:\nSection 8.3.2.2.2.5.1 Section 8.3.3.2\nM EP a R k _ e G s e R t e _S q o u u e r s c t e ( _ A C c a c p ept) AMS Sink ,\nMessage Section 8.3.2.2.2.5.2 Section 8.3.3.3\nSink 1. , ,\nEPR_Source_Capabilities Started by Section 8.3.2.2.2.5.3\nSource Capabilities , ,\nGets EPR Message\nEPR Mode 2.\nEPR Mode EPR Sink\n(Reject in )\n3. In only:\nEPR_Get_Source_Cap\nMakes Request (Reject) AMS\nMessage\nSink 1.\nEPR_Source_Capabilities\nSource Capabilities\nGets EPR Message\nEPR Mode 2.\nEPR Mode EPR Sink\n(Wait in )\n3. In only:\nDual-Role Power EPR_Get_Source_Cap\nMakes Request (Wait) AMS\nSource Source Message\nSection 8.3.3.19.7\nCapabilities 1. EPR_Source_Capabili ties Section 8.3.2.11.3.2.2\nGets Source Section 8.3.3.19.10\nDual-Role Power Message Started by ,\nEPR Sink from a 2.\nEPR_Get_Sink_CapMessage\nSource SinkEPR Section 8.3.3.2\nEPR_Sink_Capabilities Section 8.3.2.11.3.2.3\nCapabilities 1. Source Section 8.3.3.3\nGets Message Started by ,\n2.\nDual-Role Power EPR_Get_Sink_CapMessage ,\nSink SinkEPR\nEPR_Sink_Capabilities Section 8.3.3.19.8\n1.\nCapabilities Message Sink Section 8.3.2.11.3.2.4\nGet Section 8.3.3.19.9\nDual-Role Power 2. ,\nfrom a Started by\nSource\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 439\n8.3.2.1.3.14 AMS: Extended Capabilities\nTable8.18 AMS: Extended Capabilities\nAMS Interruptible Message Conditions AMS Ref\nSequence\nGet_Source_Cap_Extended\nSink Source\nMessage Section 8.3.3.8.1\nExtended 1. Sink Section 8.3.2.11.4.1\nGets Source_Capabilities_Extended M Section 8.3.3.8.2\nCapabilities ,\nessage Started by\n2.\nDual-Role Power Get_Source_Cap_Extended\nSource Source Message\nExtended 1. Source_Capabilities_Exten ded M Section 8.3.3.19.11\nGets Section 8.3.2.11.4.2\nCapabilities essage Source Section 8.3.3.19.12\nDual-Role Power 2. Started by ,\nfrom a\nSink\nGet_Sink_Cap_Extended\nSource Sink\nMessage Section 8.3.3.8.3\nExtended 1. Section 8.3.2.11.4.3\nGets Sink_Capabilities_Extended Source Section 8.3.3.8.4\nCapabilities Started by ,\nMessage\n2.\nDual-Role Power Get_Sink_Cap_Extended\nSink Sink Message\nExtended 1. Sink_Capabilities_Exten ded Section 8.3.3.19.13\nGets Sink Section 8.3.2.11.4.4\nCapabilities Message Section 8.3.3.19.14\n,\nDual-Role Power 2. Started by\nfrom a\nSource\n8.3.2.1.3.15 AMS: Battery Capabilities\nTable8.19 AMS: Battery Capabilities\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nGet_Battery_CapMessage\nSink Battery\nBattery_Capabilities Sink Section 8.3.2.11.5.1\nCapabilities 1.\nGets Message Section 8.3.3.11.1\n2. Started by\nGet_Battery_CapMessage Section 8.3.3.11.2\nSource Battery ,\nBattery_Capabilities Section 8.3.2.11.5.2\nCapabilities 1. Source\nGets Message Started by\n2.\nSink Battery Get_Battery_StatusMessage\nSink Section 8.3.2.11.5.3\nBattery_StatusMessage Section 8.3.3.12.1\nGets 1.\nSSitnaktus Battery 2. Get_Battery_Ca pMessage Started by Sink Section 8.3.2.11.5.4 Section 8.3.3.12.2 ,\nBattery_StatusMessage\nGets 1.\nStarted by\nStatus 2.\nPage 440 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.3.16 AMS: Manufacturer Information\nTable8.20 AMS: Manufacturer Information\nAMS Message Sequence Conditions AMS Ref State Machine\nRef\nSource Port Get_Manufacturer_InfoMessage\nGets 1.\nManufacturer_InfoMes sage\nSource\nSection 8.3.2.11.6.1\nSink Started by\nManufacturer 2.\nSink Port Get_Manufacturer_InfoMessage\nInformation from a\nGets 1.\nManufacturer_InfoMes sage\nSink Section 8.3.2.11.6.2\nMSoaunrucefacturer 2. Started by\nInformation from a\nSource Battery Get_Manufacturer_InfoMessage\nGets 1.\nManufacturer_InfoMes sage\nSource\nSection 8.3.2.11.6.3 Section 8.3.3.12.1\nSink Started by Section 8.3.3.12.2\nManufacturer 2. ,\nSink Battery Get_Manufacturer_InfoMessage\nInformation from a\nGets 1.\nManufacturer_InfoMes sage\nSink Section 8.3.2.11.6.4\nMSoaunrucefacturer 2. Started by\nInformation from a\nVCONN Source Get_Manufacturer_InfoMessage\nGets Cable 1.\nManufacturer_InfoMes sage\nVCONN Source Section 8.3.2.11.6.5\nM Pl a u n g ufacturer 2. Started by\nInformation from a\n8.3.2.1.3.17 AMS: Country Codes\nTable8.21 AMS: Country Codes\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nSource Get_Country_CodesMessage\nSection 8.3.2.11.7.1\nSink Country_CodesMessage Source\nGets Country 1. Started by\nCSiondkes from a 2. Get_Country_Co desMessage Sink Section 8.3.2.11.7.2 Section 8.3.3.14.1\nSource Country_CodesMessage\nGets Country 1. Section 8.3.3.14.2 ,\nC V oCOdNeNs f S r o o u m rc a e 2. Get_Country_Co desMessage Started by\nCable Plug Gets 1.\nCountry_CodesMes sage\nVCONN Source\nSection 8.3.2.11.7.3\nStarted by\nCountry Codes from\n2.\na\n8.3.2.1.3.18 AMS: Country Information\nTable8.22 AMS: Country Information\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nSource Get_Country_InfoMessage\nGets Country 1.\nCountry_InfoMes sage\nSource\nSection 8.3.2.11.8.1\nSink Started by\nInformation from a 2.\nSink Get_Country_InfoMessage Section 8.3.3.14.3\nCountry_InfoMessage Sink Section 8.3.2.11.8.2\nSour c\nG\ne\nets Country 1. Section 8.3.3.14.4,\nInformation from a 2. Started by\nVCONN Source Get_Country_InfoMessage\nCable P Gluegts 1.\nCountry_InfoMes sage\nVCONN Source\nSection 8.3.2.11.8.3\nStarted by\nCountry Information\n2.\nfrom a\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 441\n8.3.2.1.3.19 AMS: Revision Information\nTable8.23 AMS: Revision Information\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nSource Get_RevisionMessage\nGets Revision 1.\nRevisionMes sage\nSource\nSection 8.3.2.11.9.1\nSink Started by\nInformation from a 2.\nSink Get_RevisionMessage\nRevisionMessage Sink Section 8.3.2.11.9.2 Section 8.3.3.15.1\nGets Revision 1.\nSource Section 8.3.3.15.2\nInformation from a 2. Started by ,\nVCONN Source Get_RevisionMessage\nGets 1.\nRevisionMes sage\nVCONN Source Section 8.3.2.11.9.1\nRCaebvliesi Polnu g 2. Started by\nInformation from a\n8.3.2.1.3.20 AMS: Source Information\nTable8.24 AMS: Source Information\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nGet_Source_Cap_Extended\nSink Source Message Section 8.3.3.9.1\n1. Sink Section 8.3.2.11.10.1\nSource_Capabilities_Extended M Section 8.3.3.9.2\nGets ,\nessage Started by\nInformation 2.\nDual-Role Power Get_Source_Cap_Extended\nSource Source Message\nSection 8.3.3.19.15\nDual-R oGlee tPso wer 1. e S s o s u a r g c e e_Capabilities_Exten ded S S M o ta u r r t c e e d by Section 8.3.2.11.10.2 Section 8.3.3.19.16 ,\nISninfokrmation from a 2.\n8.3.2.1.3.21 AMS: Security\nTable8.25 AMS: Security\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nSource Security_RequestMessage\nSection 8.3.2.12.1\nrequests 1. Source\nSink Started by\nsecurity exchange\nSink Security_RequestMessage\nwith\nSink Section 8.3.2.12.2\nrequests 1.\nSource\nsecurity exchange Started by\nVCONN Source Security_RequestMessage\nwith\nCable 1. VCONN Source Section 8.3.2.12.3\nr P e lu q g uests security Started by Section 8.3.3.17.1\nexchange with Section 8.3.3.17.2\nSource Security_ResponseMessage ,\nSection 8.3.3.17.3\nSection 8.3.2.12.1 ,\nresponds to 1. Source\nSink Started by\nsecurity exchange\nSink Security_ResponseMessage\nwith\nSink Section 8.3.2.12.2\nresponds to 1.\nSource\nsecurity exchange Started by\nVCONN Source Security_ResponseMessage\nwith\nCable 1. VCONN Source Section 8.3.2.12.3\nr P e lu q g uests security Started by\nexchange with\nPage 442 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.3.22 AMS: Firmware Update\nTable8.26 AMS: Firmware Update\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nSource Firmware_Update_Request\nMessage Section 8.3.2.13.1\nrequests 1. Source\nSink Started by\nfirmware update\nSink Firmware_Update_Request\nexchange with\nMessage\nrequests 1. Sink Section 8.3.2.13.2\nfSiormurwceare update\nStarted by\nexchange with\nVCONN Source Firmware_Update_Request\nMessage\n1. VCONN Source\nSection 8.3.2.13.3\nrequeCsatbs lfei rPmluwgare Started by Section 8.3.3.18.1\nupdate exchange\nSource Firmware_Update_Response Section 8.3.3.18.2\nwith ,\nMessage Section 8.3.2.13.1 Section 8.3.3.18.3\nresponds to 1. Source ,\nSink Started by\nfirmware update\nSink Firmware_Update_Response\nexchange with\nMessage\nresponds to 1. Sink Section 8.3.2.13.2\nfSiormurwceare update\nStarted by\nexchange with\nVCONN Source Firmware_Update_Response\nMessage\n1. Section 8.3.2.13.3\nresponds to Cable VCONN Source\nStarted by\nfirmware update\nPlug\nexchange with\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 443\n8.3.2.1.3.23 AMS: Structured VDM\nTable8.27 AMS: Structured VDM\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nDiscover IdentityREQ\nInitiator\nCommand\nResponder 1. Section 8.3.2.14.1.1\nto Discover IdentityACK\nDiscover Command\n2.\nIdentity (ACK) Discover IdentityREQ\nInitiator\nCommand Section 8.3.3.21.1\nResponder 1. Section 8.3.2.14.1.2\nto Discover IdentityNAK Section 8.3.3.22.1\n,\nDiscover Command\n2.\nIdentity (NAK) Discover IdentityREQ\nInitiator\nCommand\nResponder 1. Section 8.3.2.14.1.3\nto Discover IdentityBUSY\nDiscover Command\n2.\nI I d ni e t n ia ti t t o y r (BUSY) Discover SVIDsREQ\nResponder Command Section 8.3.2.14.2.1\nto 1.\nSVID Discover SVIDsACKCommand\nDiscover\nInitiast o(ArCK) 2. Discover SVIDs REQ\nCommand\nResponder 1. Section 8.3.2.14.2.2 Section 8.3.3.21.2\nto Discover SVIDsNAK\nSVID Initiator Section 8.3.3.22.2\nDiscover Command Started by ,\n2.\ns (NAK) Discover SVIDsREQ\nInitiator\nCommand\nResponder 1. Section 8.3.2.14.2.3\nto Discover SVIDsBUSY\nSVID\nDiscover Command\n2.\ns (BUSY) Discover ModesREQ\nInitiator\nCommand\nResponder 1. Section 8.3.2.14.3.1\nto Discover ModesACK\nDiscover Command\n2.\nModes (ACK) Discover ModesREQ\nInitiator\nCommand Section 8.3.3.21.3\nResponder 1. Section 8.3.2.14.3.2\nto Discover ModesNAK Section 8.3.3.22.3\n,\nDiscover Command\n2.\nModes (NAK) Discover ModesREQ\nInitiator\nCommand\nResponder 1. Section 8.3.2.14.3.3\nto Discover ModesBUSY\nDiscover Command\n2.\nM DF o P des U (B F U P SY) Enter ModeREQCommand Section 8.3.3.23.1\nSection 8.3.2.14.4.1\nEnter ModeACKCommand Section 8.3.3.24.1\nto Enter 1. ,\nDMFoPde UFP 2. Exit ModeR EQC ommand Section 8.3.3.23.2\nSection 8.3.2.14.4.2\nExit ModeACKCommand Section 8.3.3.24.2\nto Exit 1. DFP ,\nDMFoPde Cable Plug 2. Enter Mod eRE QCommand Section 8.3.3.23.1\nSection 8.3.2.14.4.3\nEnter ModeACKCommand Started by Section 8.3.3.25.4.1\nto 1. ,\nEDnFtPer MCoadbele Plug 2. Exit ModeR EQC ommand Section 8.3.3.23.2\nSection 8.3.2.14.4.4\nExit ModeACKCommand Section 8.3.3.25.4.2\nto 1. ,\nEInxiitti aMtoorde\n2.\nAttention REQ Command\nSection 8.3.2.14.4.5\nSection 8.3.3.21.4\nResponder Initiator Section 8.3.3.22.4\nto 1. Started by ,\nAttention\nPage 444 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.1.3.24 AMS: Built-In Self-Test (BIST)\nTable8.28 AMS: Built-In Self-Test (BIST)\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nBIST BIST Carrier Mode\nBIST Carrier Mode Section 8.3.2.15.1 Section 8.3.3.27.1\n1. ( )\nBIST BIST Test Data\nBIST Test Data Mode Message Section 8.3.2.15.2 Section 8.3.3.27.2\n1. ( )\nM BI e S s T sa B ge IST Shared Test Mode Tester\nEntry Started by\nBIST Shared 1. (\nSection 8.3.2.15.3 Section 8.3.3.27.3\nCapacity Test Mode ) Message\nBIST BIST Shared Test Mode\n2. Series of Messages\nExit\n3. (\n) Message\n8.3.2.1.3.25 AMS: Enter USB\nTable8.29 AMS: Enter USB\nAMS Message Sequence Conditions AMS Ref State Machine Ref\nUFP Enter_USB\nSection 8.3.2.16.1.1\n\u00ae Accept\nEntering USB4 1. Message\nMUFoPde (Accept) 2. Enter_U M SB essage\nSection 8.3.2.16.1.2\nReject\nEntering USB4 1. Message\nMUFoPde (Reject) 2. Enter_ U M S e B ssage\nSection 8.3.2.16.1.3\nWait Section 8.3.3.16.1\nEntering USB4 1. Message DFP\nMCaobdlee P(Wlugait) 2. Enter M _U e S s B sage Section 8.3.2.16.2.1 Section 8.3.3.16.2 ,\nAccept Started by\nEntering 1. Message\nUCaSbBl4e MPloudge (Accept) 2. Enter_U M SB essage\nSection 8.3.2.16.2.2\nReject\nEntering 1. Message\nUCaSbBl4e MPloudge (Reject) 2. Enter_ U M S e B ssage\nSection 8.3.2.16.2.3\nWait\nEntering 1. Message\nUSB4 Mode (Wait) 2. Message\n8.3.2.1.3.26 AMS: Unstructured VDM\nTable8.30 AMS: Unstructured VDM\nAMS Message Sequence AMS Ref State Machine Ref\nVendor_Defined\nUnstructured VDM Section 8.3.2.17.1\n1. Unstructured\nVDEM Vendor_Defined_Extended Section 8.3.2.17.2\nMessage\n1. Message\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 445\n8.3.2.1.3.27 AMS: Hard Reset\nTable8.31 AMS: Hard Reset\nAMS Interruptibl Message Sequence Conditions AMS Ref State\ne Machine Ref\nHard ResetSignaling\nSource Section 8.3.2.6.1\nHard Reset 1. Source Section 8.3.2.2.1.1\nInitiated Started by ,\nNo 2. SPR Explicit Contract\nHard ResetSignaling\nSink Hard Negotiation AMS Section 8.3.2.6.2 Section 8.3.3.2\nReset 1. Sink Section 8.3.2.2.1.1 Section 8.3.3.3\nInitiated Started by , ,\nNo 2. SPR Explicit Contract\nSource Hard ResetSignaling\nNegotiation AMS Section 8.3.2.6.3\nHard Reset Sink\nInitiated 1. Source Section 8.3.2.2.1.1\nStarted by ,\n\u2013 No 2. SPR Explicit Contract\nLong Reset Negotiation AMS\nPage 446 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2 Power Negotiation\n8.3.2.2.1 SPR\n8.3.2.2.1.1 SPR Explicit Contract Negotiation\n8.3.2.2.1.1.1 SPR Explicit Contract Negotiation (Accept)\nFigure 8.5, \"Successful Fixed, Variable or Battery SPR Power Negotiation\"\nMessage Explicit Contract SPR Mode Negotiation\nillustrates an example of a successful\n\uf06c flowS owuhriclee negotiating an Capabilities in Source_.C Tahpea bilitiesMess gaogees through 5 distinct phases:\n\uf06c The Sink sends out its pCoawpaebr ilities in a .\nRequestMessage\nThe evaluates these , and, in the request, phase selects one power level by sending a\n\uf06c Sour ce . AcceptMessage\n\uf06c The Source evaluates the request and accepts the request with an Sink . PS_RDYMessage\n\uf06c The Sink transitions to the new power level and then informs the by sending a .\n\uf06c The SPR P sPtaSrts using the new power level.\n\uf06c For Source operation:\n\uf06c the Sink starts its keep alive timer. RequestMessage\nthe starts its request timer to send periodic s.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 447\nFigure 8.5 Successful Fixed, Variable or Battery SPR Power Negotiation\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nCable Capabilities detected\nPlug type detected\n1: Send Capabilities\n2: Capabilities\n3: Capabilities + CRC\nStart CRCReceiveTimer 4: Capabilities\nCheck MessageID against local copy\nStore copy of MessageID\n5: Capabilities received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Capabilities sent\nEvaluate Capabilities\nStart SenderResponseTimer Detect plug type\n10: Send Request\n11: Request\n12: Request + CRC\n13: Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Request received\n15: GoodCRC\nStop SenderResponseTimer 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Request sent\nEvaluate Request Start SenderResponseTimer\n19: Send Accept\n20: Accept\n21: Accept + CRC\nStart CRCReceiveTimer 22: Accept\nCheck MessageID against local copy\nStore copy of MessageID\n23: Accept received\n24: GoodCRC\n25: GoodCRC + CRC Stop SenderResponseTimer\n26: GoodCRC Start PSTransitionTimer\nReduce current\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Accept sent\nPower supply adjusted to negotiated output\nPrepare for new power\n28: Send PS_RDY\n29: PS_RDY\n30: PS_RDY + CRC\nStart CRCReceiveTimer 31: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n32: PS_RDY received\n33: GoodCRC\n34: GoodCRC + CRC\n35: GoodCRC Stop PSTransitionTimer\nFor PPS operation start\nCheck and increment MessageIDCounter PPSRequestTimer\nStop CRCReceiveTimer\n36: PS_RDY sent\nFor PPS operation start\nPPSTimeoutTimer\nNew Power level\nPage 448 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.32, \"Steps for a successful Power Negotiation\"\nFigure 8.5, \"Successful Fixed, Variable or Battery SPR Power Negotiation\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.32 Steps for a successful Power Negotiation above.\nStep Source Sink\nCable Capabilities\nSection 4.4, \"Cable Type\nD Th et e e ction\" Policy En gorin Pelug Type are P d r e o t t e o c c t o e l d L i a f y th er ese\nare not already known (see\nSource_CapabilitiesMessage\n1 ). directs the to\nsend a that represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Source_CapabilitiesMessage\n.\nSource_CapabilitiesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nSource_Capabilities Message Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Source_CapabilitiesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_CapabilitiesMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Source_Capabilities\nstarts .\nMessage Source\nevaluates the\nSection 4.4, \"Cable Type Detection\"\nsent by the , detects the plug tyPpreo itfo tchoisl is\n10 L n a e y ce er ssary (see Power Data Object ) and\nselects which power it would like. It tells the\nRequest Message\nto form the data (e.g., ) that\nProtocol Layer RequestMessage\nrepresents its into a .\nPHY Layer\ncreates the and passes\n11 PHY Layer RequestMessage\ntPoH Y Layer . CRC Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n12 compares the it calculated with the one sent to\nPHY Layer CRC Request . Starts .\nverify the .\nMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n14 Policy Engine Policy Engine\nThe passes the Request information to\nSenderResponseTimer\nthe . stops\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 449\nTable8.32 Steps for a successful Power Negotiation\nStep Source Sink\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n15 PHY Layer Message CRC\npPaHsYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the\n16 appends and sends the . PHY Layer GoodCRC Message\nit calculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer\n18 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine RequestMessage\nThe starts .\nSink\nevaluates the sent by\nProtocol Layer Accept Message\n19 the and decides if it can meet the request. It tells the\nProtocol Layer Accept Message\nto form an .\nPHY Layer\nThe forms the that is\n20 PHY Layer CRC AcceptMessage PHY Layer Message CRC\npassed to the .\nCRCReceiveTimer Message\nappends and sends the . receives the and compares the\n21 PHY Layer AcceptMessage Protocol\nStarts . it calculated with the one sent to verify the .\nLayer\nforwards the to the\n22 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Accept\nand then stores a copy of the new value.\nMessage Policy Engine\ninforms the that an\nSenderResponseTimer, PSTransitionTimer\n23 has been received. The stops\nstarts the\nDPM\nand reduces its current draw.\nThe prepares the Power supply for transition to\nProtocol Layer GoodCRCMessage\nthe new power level.\nPHY Layer\nThe generates a and\n24 PHY Layer Message CRC\npPHasYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the\n25 PHY Layer GoodCRC Message appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n26 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nAccept Message\nThe informs the that an\n27\nwas successfully sent. Negotiated\nDPM Policy Engine\nPower supply Adjusts its Output to the Value\nThe informs the that the power\nProtocol Layer PS_RDYMessage\n28 supply has settled at the new operating condition and\nProtocol Layer PS_RDYMessage\ntells the to send a .\nPHY Layer PS_RDY Message\n29 TPhHeY Layer foCrmRCs the PS_RD.Y\nCRC\nMessage CRCReceiveTimer receives the and compares\nappends and sends the Message\n30 the it calculated with the one sent to verify the\n. Starts . PHY Layer PS_RDYMessage\n.\nProtocol Layer\nforwards the to the\n31\n.\nPage 450 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.32 Steps for a successful Power Negotiation\nStep Source Sink\nProtocol Layer MessageID\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine\nand then stores a copy of the new value.\nPolicy Engine\ninforms the that a RS_RDY\n32 PSTransitionTimer\nhas been received. The stops the\nSPR PPS Mode Policy Engine\n.\nSinkPPSPeriodicTimer\nWhen in the starts the\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n33 PHY Layer Message CRC\npPHasYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the\n34 PHY Layer GoodCRCMessage appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n35 CRCReceiveTimer\nincrements the . Stops the\nProtocol Layer Policy Engine\n.\nPS_RDYMessage\nThe informs the that the\n36 SPR PPS Mode Policy Engine\nwas successfully sent.\nSourcePPSCommTimer\nWhen in the starts the\n37\n. Negotiated\nNew Power Level\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 451\n8.3.2.2.1.1.2 SPR Explicit Contract Negotiation (Reject)\nFigure 8.6, \"Rejected Fixed, Variable or Battery SPR Power Negotiation\" Message\nExplicit Contract SPR Mode Negotiation\nillustrates an example of a flow\nwhere the request is rejected while negotiating an in . The goes through the\nfollo\uf06cwing phSaosuesrc:e Capabilities Source_CapabilitiesMessage\n\uf06c The Sink sends out its pCoawpaebr ilities in a .\nRequestMessage\nThe evaluates these , and, in the request, phase selects one power level by sending a\n\uf06c Sour ce . RejectMessage\nThe eFvigauluraet e8s.6 th Ree rjeeqcuteedst F ainxde dr,e Vjeacrtsia tbhlee r oerq uBeasttt ewriyth S aP R Pow er Negot.iation\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nCable Capabilities detected\nPlug type detected\n1: Send Capabilities\n2: Capabilities\n3: Capabilities + CRC\nStart CRCReceiveTimer 4: Capabilities\nCheck MessageID against local copy\nStore copy of MessageID\n5: Capabilities received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Capabilities sent\nEvaluate Capabilities\nStart SenderResponseTimer Detect plug type\n10: Send Request\n11: Request\n12: Request + CRC\n13: Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Request received\n15: GoodCRC\nStop SenderResponseTimer 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Request sent\nEvaluate Request Start SenderResponseTimer\n19: Send Reject\n20: Reject\n21: Reject + CRC\nStart CRCReceiveTimer 22: Reject\nCheck MessageID against local copy\nStore copy of MessageID\n23: Reject received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Reject sent\nPage 452 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.33, \"Steps for a rejected Power Negotiation\"\nFigure 8.6, \"Rejected Fixed, Variable or Battery SPR Power Negotiation\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.33 Steps for a rejected Power Negotiation above.\nStep Source Sink\nCable Capabilities\nSection 4.4, \"Cable Type\nD Th et e e ction\" Policy En gorin Pelug Type are P d r e o t t e o c c t o e l d L i a f y th er ese\nare not already known (see\nSource_CapabilitiesMessage\n1 ). directs the to\nsend a that represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Source_CapabilitiesMessage\n.\nSource_CapabilitiesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nSource_Capabilities Message Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Source_CapabilitiesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_CapabilitiesMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Source_Capabilities\nstarts .\nMessage Source\nevaluates the\nSection 4.4, \"Cable Type Detection\"\nsent by the , detects the plug tyPpreo itfo tchoisl is\n10 L n a e y ce er ssary (see Power Data Object ) and\nselects which power it would like. It tells the\nMessage\nto form the data (e.g., ) that\nProtocol Layer RequestMessage\nrepresents its Request into a .\nPHY Layer\ncreates the and passes\n11 PHY Layer RequestMessage\ntPoH Y Layer . CRC Request\nCRC\nreceives the and compares Message CRCReceiveTimer\nMessage appends a and sends the\n12 the it calculated with the one sent to verify the\nPHY Layer CRC Request . Starts .\n.\nMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n14 Policy Engine Policy Engine\nThe passes the Request information to\nSenderResponseTimer\nthe . stops\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 453\nTable8.33 Steps for a rejected Power Negotiation\nStep Source Sink\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n15 PHY Layer Message CRC\npPaHsYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the it\n16 appends and sends the . PHY Layer GoodCRCMessage\ncalculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer\n18 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine RequestMessage\nThe starts .\nSink\nevaluates the sent by\nProtocol Layer Reject Message\n19 the and decides it can\u2019t meet the request. It tells the\nProtocol Layer Reject Message\nto form a .\nPHY Layer\nThe forms the that is\n20 PHY Layer CRC Reject Message PHY Layer Message CRC\npassed to the .\nCRCReceiveTimer Message\nappends and sends the . receives the and compares the\n21 PHY Layer Reject Message Protocol\nStarts . it calculated with the one sent to verify the .\nLayer\nforwards the to the\n22 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Reject\nand then stores a copy of the new value.\n23 Message Policy Engine\ninforms the that a\nSenderResponseTimer.\nhas been received. The stops\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n24 PHY Layer Message CRC\nPpHasYs eLsa yite tro its CRC . Message\nMessage\nreceives the and compares the\n25 PHY Layer GoodCRC Message appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n26 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nReject Message\nThe informs the that a\n27\nwas successfully sent.\nPage 454 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.1.1.3 SPR Explicit Contract Negotiation (Wait)\nFigure 8.7, \"Wait response to Fixed, Variable or Battery SPR Power Negotiation\" Message\nExplicit Contract SPR Mode\nNegotiation illustrates an example of a\nflow where the request is responded to with wait while negotiating an in . The\n\uf06c gSooeusr ctehrough the following pChaapsaebsi:lities Source_CapabilitiesMessage\n\uf06c The Sink sends out its Cpaopwaebri lities in a .\nRequestMessage\nThe evaluates these , and, in the request, phase selects one power level by sending a\n\uf06c Sour ce . WaitMessage\nThe Figu ervea 8lu.7a tWesa tiht er eresqpuoensste a tnod F riexjeecdt,s V tahrei arebqleu eosrt Bwaitthte ar y SPR Power .Negotiation\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nCable Capabilities detected\nPlug type detected\n1: Send Capabilities\n2: Capabilities\n3: Capabilities + CRC\nStart CRCReceiveTimer 4: Capabilities\nCheck MessageID against local copy\nStore copy of MessageID\n5: Capabilities received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Capabilities sent\nEvaluate Capabilities\nStart SenderResponseTimer Detect plug type\n10: Send Request\n11: Request\n12: Request + CRC\n13: Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Request received\n15: GoodCRC\nStop SenderResponseTimer 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Request sent\nEvaluate Request Start SenderResponseTimer\n19: Send Wait\n20: Wait\n21: Wait + CRC\nStart CRCReceiveTimer 22: Wait\nCheck MessageID against local copy\nStore copy of MessageID\n23: Wait received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Wait sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 455\nTable8.34, \"Steps for a Wait response to a Power Negotiation\"\nFigure 8.7, \"Wait response to Fixed, Variable or Battery SPR Power Negotiation\"\nbelow provides a detailed explanation of what\nhappens at each labeled step in\nabove. Table8.34 Steps for a Wait response to a Power Negotiation\nStep Source Sink\nCable Capabilities\nSection 4.4, \"Cable Type\nD Th et e e ction\" Policy En gorin Pelug Type are P d r e o t t e o c c t o e l d L i a f y th er ese\nare not already known (see\nSource_CapabilitiesMessage\n1 ). directs the to\nsend a that represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Source_CapabilitiesMessage\n.\nSource_CapabilitiesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nSource_Capabilities Message Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Source_CapabilitiesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC Message PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_CapabilitiesMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Source_Capabilities\nstarts .\nMessage Source\nevaluates the\nSection 4.4, \"Cable Type Detection\"\nsent by the , detects the plug tyPpreo itfo tchoisl is\n10 L n a e y ce er ssary (see Power Data Object ) and\nselects which power it would like. It tells the\nMessage\nto form the data (e.g., ) that\nProtocol Layer RequestMessage\nrepresents its Request into a .\nPHY Layer\ncreates the and passes\n11 PHY Layer RequestMessage\ntPoH Y Layer . CRC Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n12 compares the it calculated with the one sent to\nPHY Layer CRC Request . Starts .\nverify the .\nMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n14 Policy Engine Policy Engine\nThe passes the Request information to\nSenderResponseTimer\nthe . stops\n.\nPage 456 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.34 Steps for a Wait response to a Power Negotiation\nStep Source Sink\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n15 PHY Layer Message CRC\npPaHsYse Lsa ity teor its CRC. Message\nMessage\nreceives the and compares the\n16 appends and sends the . PHY Layer GoodCRCMessage\nit calculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer\n18 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine RequestMessage\nThe starts .\nSink\nevaluates the sent by\nProtocol Layer Wait Message\n19 the and decides if it can meet the request. It tells the\nProtocol Layer Wait Message\nto form a .\nPHY Layer\nThe forms the that is\n20 PHY Layer CRC Wait Message PHY Layer Message CRC\npassed to the .\nCRCReceiveTimer Message\nappends and sends the . receives the and compares the it\n21 PHY Layer Wait Message Protocol\nStarts . calculated with the one sent to verify the .\nLayer\nforwards the to the\n22 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Wait\nand then stores a copy of the new value.\n23 Message Policy Engine\ninforms the that a\nSenderResponseTimer\nhas been received. The stops\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n24 PHY Layer Message CRC\npPHasYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the\n25 PHY Layer GoodCRC Message appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n26 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nWait Message\nThe informs the that a\n27\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 457\n8.3.2.2.1.2 SPR PPS Keep Alive\nSPR PPS Explicit Contract SPR PPS APDO Figure\n8.8, \"SPR PPS Keep Alive\" Message\nThis is an example of keep alive operation during an with as the .\nshows the s as they flow across the bus and within the devices to accomplish the\nkeep alive. Figure 8.8 SPR PPS Keep Alive\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nPPSRequestTimer Timeout\n1: Send Request\n2: Request\n3: Request + CRC\n4: Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Request received\n6: GoodCRC\n7: GoodCRC + CRC\nStop SenderResponseTimer 8: GoodCRC\nStop PPSCommTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate Request 9: Request sent\nStart SenderResponseTimer\nStop PPSRequestTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer 13: Accept\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC Stop SenderResponseTimer\n17: GoodCRC Start PSTransitionTimer\nReduce current\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nPower supply adjusted to negotiated output\nSend Ping if required to maintain activity Prepare for new power\n19: Send PS_RDY\n20: PS_RDY\n21: PS_RDY + CRC\nStart CRCReceiveTimer 22: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC Stop PSTransitionTimer\nStart PPSRequestTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: PS_RDY sent\nStart PPSCommTimer\nNew Power level\nPage 458 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.35, \"Steps for SPR PPS Keep Alive\"\nFigure 8.8, \"SPR PPS Keep Alive\"\nbelow provides a detailed explanation of what happens at each labeled\nstep in Tab alebo8v.3e5. Steps for SPR PPS Keep Alive\nStep Source Sink\nSinkPPSPeriodicTimer Policy\nEngine Policy Engine Protocol Layer\nThe times out in the\nRequestMessage\n. The tells the to\nProtocol Layer RequestMessage\n1 form a .\nPHY Layer\nThe creates the and\nPHY Layer RequestMessage\npPaHsYse Lsa ity teor .CRC Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n2 compares the it calculated with the one sent to\nPHY Layer CRC Request . Starts .\nverify the .\nMessage Protocol Layer\nremoves the and forwards the\n3 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n4 Policy Engine Policy Engine\nThe passes the Request information to\nSourcePPSCommTimer.\nthe . stops the\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n5 PHY Layer GoodCRCMessage\nPpHasYs eLsa yite tro its CRC . GoodCRC\nCRC\nMessage receives the and\nappends and sends the Message\n6 compares the it calculated with the one sent to verify\n. PHY Layer GoodCRCMessage\nthe .\nProtocol Layer\nforwards the to the\n7 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer\n8 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine DPM\nThe starts .\nRequestMessage Sink\nrequests the to evaluate the\nSource Policy Engine\nsent by the and decides if the\n9 Protocol Layer Accept Message\ncan meet the request. The tells\nProtocol Layer Accept Message\nthe to form an .\nPHY Layer\nThe forms the that is\n10 PHY Layer AcceptMessage\npPaHsYs eLda yteor the CRC . AcceptMessage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n11 the it calculated with the one sent to verify the\nStarts . PHY Layer AcceptMessage Protocol\n.\nLayer\nforwards the to the\n12 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Accept\nand then stores a copy of the new value.\nMessage Policy Engine\ninforms the that an\nSenderResponseTimer PSTransitionTimer\n13 has been received. The stops\n, starts the\nDPM\nand reduces its current draw.\nThe prepares the Power supply for transition to\nthe new power level.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 459\nTable8.35 Steps for SPR PPS Keep Alive\nStep Source Sink\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n14 PHY Layer GoodCRCMessage\npPHasYs eLsa iyte tro its CRC . GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n15 compares the it calculated with the one sent to\nPHY Layer GoodCRC Message .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n16 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nAccept Message\nThe informs the that an\n17\nwas successfully sent. Negotiated\nDPM Policy Engine\nPower supply Adjusts its Output to the Value\nThe informs the that the power\nProtocol Layer PS_RDYMessage\n18 supply has settled at the new operating condition and\nProtocol Layer PS_RDYMessage\ntells the to send a .\nPHY Layer PS_RDY Message\n19 PTHheY Layer fCoRrCms the PS_RDYM. essage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n20 the it calculated with the one sent to verify the\nStarts . PHY Layer PS_RDYMessage Protocol\n.\nLayer\nforwards the to the\n21 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine\nand then stores a copy of the new value.\nPolicy Engine\ninforms the that a RS_RDY\n22 PSTransitionTimer\nhas been received. The stops the\nSPR PPS Mode Policy Engine\n.\nSinkPPSPeriodicTimer\nWhen in the starts the\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n23 PHY Layer GoodCRCMessage\npPHasYs eLsa iyte tro its CRC . GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n24 compares the it calculated with the one sent to\nPHY Layer GoodCRCMessage .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n25 CRCReceiveTimer\nincrements the . Stops the\nProtocol Layer Policy Engine\n.\nPS_RDYMessage\nThe informs the that the\n26 SPR PPS Mode Policy Engine\nwas successfully sent.\nSourcePPSCommTimer\nWhen in the starts the\n27\n.\nPage 460 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.1.3 SPR Sink Makes Request\n8.3.2.2.1.3.1 SPR Sink Makes Request (Accept)\nSink Explicit Contract Figure 8.9,\n\"SPR Sink Makes Request (Accept)\" Message\nThis is an example of SPR when a makes a Request which is Accepted during an .\nshows the s as they flow across the bus and within the devices to\naccomplish the keep alive. Figure 8.9 SPR Sink Makes Request (Accept)\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\n1: Send Request\n2: Request\n3: Request + CRC\n4: Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Request received\n6: GoodCRC\n7: GoodCRC + CRC\nStop SenderResponseTimer 8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate Request 9: Request sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer 13: Accept\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC Stop SenderResponseTimer\n17: GoodCRC Start PSTransitionTimer\nReduce current\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nPower supply adjusted to negotiated output\nPrepare for new power\n19: Send PS_RDY\n20: PS_RDY\n21: PS_RDY + CRC\nStart CRCReceiveTimer 22: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC Stop PSTransitionTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: PS_RDY sent\nNew Power level\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 461\nTable8.36, \"Steps for SPR Sink Makes Request (Accept)\"\nFigure 8.9, \"SPR Sink Makes Request (Accept)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.36 Steps for SPR Sink Make as bRoevqeu. est (Accept)\nStep Source Sink\nDPM Policy Engine\nPolicy Engine Protocol Layer\ntells the to request a different\nRequestMessage\npower level. The tells the\nProtocol Layer RequestMessage\n1 to form a .\nPHY Layer\nThe creates the and\nPHY Layer RequestMessage\npPHasYs eLsa iyte tro C.RC Request\nCRC\nreceives the and compares Message CRCReceiveTimer\nMessage appends a and sends the\n2 the it calculated with the one sent to verify the\nPHY Layer CRC Request . Starts .\n.\nMessage Protocol Layer\nremoves the and forwards the\n3 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\n4 and then stores a copy of the new value.\nPolicy Engine\nThe passes the Request information to\nProtocol Layer GoodCRCMessage\nthe .\nPHY Layer\nThe generates a and\n5 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity teor its CRC . GoodCRC\nCRC\nMessage receives the and compares\nappends and sends the Message\n6 the it calculated with the one sent to verify the\n. PHY Layer GoodCRCMessage\n.\nProtocol Layer\nforwards the to the\n7 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer\n8 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine DPM\nThe starts .\nRequestMessage Sink\nrequests the to evaluate the\nSource Policy Engine\nsent by the and decides if the\n9 Protocol Layer Accept Message\ncan meet the request. The tells\nProtocol Layer Accept Message\nthe to form an .\nPHY Layer\nThe forms the that is\n10 PHY Layer AcceptMessage\npPaHsYse Lda tyoe trhe CRC. AcceptMessage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n11 the it calculated with the one sent to verify the\nStarts . PHY Layer AcceptMessage Protocol\n.\nLayer\nforwards the to the\n12 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Accept\nand then stores a copy of the new value.\nMessage Policy Engine\ninforms the that an\nSenderResponseTimer PSTransitionTimer\n13 has been received. The stops\n, starts the\nDPM\nand reduces its current draw.\nThe prepares the Power supply for transition to\nthe new power level.\nPage 462 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.36 Steps for SPR Sink Makes Request (Accept)\nStep Source Sink\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n14 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity teor its CRC . GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n15 compares the it calculated with the one sent to\nPHY Layer GoodCRC Message .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n16 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nAccept Message\nThe informs the that an\n17\nwas successfully sent. Negotiated\nDPM Policy Engine\nPower supply Adjusts its Output to the Value\nThe informs the that the power\nProtocol Layer PS_RDYMessage\n18 supply has settled at the new operating condition and\nProtocol Layer PS_RDYMessage\ntells the to send a .\nPHY Layer PS_RDY Message\n19 TPhHeY Layer foCrmRCs the PS_RD.Y\nCRC\nMessage CRCReceiveTimer receives the and compares\nappends and sends the Message\n20 the it calculated with the one sent to verify the\n. Starts . PHY Layer PS_RDYMessage Protocol\n.\nLayer\nforwards the to the\n21 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine\nand then stores a copy of the new value.\n22 Policy Engine\ninforms the that a RS_RDY\nPSTransitionTimer\nhas been received. The stops the\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n23 PHY Layer GoodCRCMessage\npPHasYs eLsa iyte tro its CRC . GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n24 compares the it calculated with the one sent to\nPHY Layer GoodCRCMessage .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n25 CRCReceiveTimer\nincrements the . Stops the\nProtocol Layer Policy Engine\n.\nPS_RDYMessage\nThe informs the that the\n26\nwas successfully sent. Negotiated\nNew Power Level\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 463\n8.3.2.2.1.3.2 SPR Sink Makes Request (Reject)\nSink Explicit Contract Figure 8.10,\n\"SPR Sink Makes Request (Reject)\" Message\nThis is an example of SPR when a makes a Request which is Rejected during an .\nshows the s as they flow across the bus and within the devices to\naccomplish the keep alive. Figure 8.10 SPR Sink Makes Request (Reject)\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\n1: Send Request\n2: Request\n3: Request + CRC\n4: Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Request received\n6: GoodCRC\n7: GoodCRC + CRC\nStop SenderResponseTimer 8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate Request 9: Request sent\nStart SenderResponseTimer\n10: Send Reject\n11: Reject\n12: Reject + CRC\nStart CRCReceiveTimer 13: Reject\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nPage 464 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.37, \"Steps for SPR Sink Makes Request (Reject)\"\nFigure 8.10, \"SPR Sink Makes Request (Reject)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.37 Steps for SPR Sink Make sa bRoevqeu.est (Reject)\nStep Source Sink\nDPM Policy Engine\nPolicy Engine Protocol Layer\ntells the to request a different\nRequestMessage\npower level. The tells the\nProtocol Layer RequestMessage\n1 to form a .\nPHY Layer\nThe creates the and\nPHY Layer RequestMessage\npPaHsYse Lsa ity teor .CRC Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n2 compares the it calculated with the one sent to\nPHY Layer CRC Request . Starts .\nverify the .\nMessage Protocol Layer\nremoves the and forwards the\n3 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\n4 and then stores a copy of the new value.\nPolicy Engine\nThe passes the Request information to\nProtocol Layer GoodCRCMessage\nthe .\nPHY Layer\nThe generates a and\n5 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte tro its CRC . GoodCRC\nCRC\nMessage receives the and\nappends and sends the Message\n6 compares the it calculated with the one sent to verify\n. PHY Layer GoodCRCMessage\nthe .\nProtocol Layer\nforwards the to the\n7 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer.\n8 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the\nPolicy Engine DPM\nThe starts .\nRequestMessage Sink\nrequests the to evaluate the\nSource Policy Engine\nsent by the and decides that the\n9 Protocol Layer Reject Message\ncan\u2019t meet the request. The tells\nProtocol Layer Reject Message\nthe to form a .\nPHY Layer\nThe forms the that is\n10 PHY Layer Reject Message\npPaHsYs eLda ytoer the CRC. Reject Message\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n11 the it calculated with the one sent to verify the\nStarts . PHY Layer Reject Message Protocol\n.\nLayer\nforwards the to the\n12 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\ninforms the that an\nDPM\nhas been received. The informs\nProtocol Layer GoodCRCMessage\nthe that the Request has been rejected.\nPHY Layer\nThe generates a and\n14\npasses it to its .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 465\nTable8.37 Steps for SPR Sink Makes Request (Reject)\nStep Source Sink\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n15 compares the it calculated with the one sent to\nPHY Layer GoodCRC Message .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n16 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nReject Message\nThe informs the that a\n17\nwas successfully sent.\nPage 466 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.1.3.3 SPR Sink Makes Request (Wait)\nSink WaitMessage\nExplicit Contract Figure 8.11, \"SPR Sink Makes Request (Wait)\" Message\nThis is an example of SPR when a makes a Request which is responded to with a during an\n. shows the s as they flow across the bus and\nwithin the devices to accomplish tFhieg ukreee p8 .a1li1v eS.PR Sink Makes Request (Wait)\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\n1: Send Request\n2: Request\n3: Request + CRC\n4: Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Request received\n6: GoodCRC\n7: GoodCRC + CRC\nStop SenderResponseTimer 8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate Request 9: Request sent\nStart SenderResponseTimer\n10: Send Wait\n11: Wait\n12: Wait + CRC\nStart CRCReceiveTimer 13: Wait\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 467\nTable8.38, \"Steps for SPR Sink Makes Request (Wait)\"\nFigure 8.11, \"SPR Sink Makes Request (Wait)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.38 Steps for SPR Sink Mak aebso Rvee.quest (Wait)\nStep Source Sink\nDPM Policy Engine\nPolicy Engine Protocol Layer\ntells the to request a different\nRequestMessage\npower level. The tells the\nProtocol Layer RequestMessage\n1 to form a .\nPHY Layer\nThe creates the and\nPHY Layer RequestMessage\npPHasYs eLsa iyte tro CR.C Request\nCRC\nreceives the and compares Message CRCReceiveTimer\nMessage appends a and sends the\n2 the it calculated with the one sent to verify the\nPHY Layer CRC Request . Starts .\n.\nMessage Protocol Layer\nremoves the and forwards the\n3 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\n4 and then stores a copy of the new value.\nPolicy Engine\nThe passes the Request information to\nProtocol Layer GoodCRCMessage\nthe .\nPHY Layer\nThe generates a and\n5 PHY Layer GoodCRCMessage\nPpHasYs eLsa yite tro its CRC . GoodCRC\nCRC\nMessage receives the and\nappends and sends the Message\n6 compares the it calculated with the one sent to verify\n. PHY Layer GoodCRCMessage\nthe .\nProtocol Layer\nforwards the to the\n7 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer\n8 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine DPM\nThe starts .\nRequestMessage Sink\nrequests the to evaluate the\nSource Policy Engine\nsent by the and decides if the\n9 Protocol Layer WaitMessage\ncan meet the request. The tells\nProtocol Layer WaitMessage\nthe to form a .\nPHY Layer\nThe forms the that is\n10 PHY Layer WaitMessage\npPaHsYs eLda ytoer the CRC . WaitMessage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n11 the it calculated with the one sent to verify the\nStarts . PHY Layer WaitMessage Protocol\n.\nLayer\nforwards the to the\n12 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Wait\nand then stores a copy of the new value.\n13 Message Policy Engine\ninforms the that an\nDPM\nhas been received. The informs\nProtocol Layer GoodCRCMessage\nthe that the Request has been rejected.\nPHY Layer\nThe generates a and\n14\npasses it to its .\nPage 468 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.38 Steps for SPR Sink Makes Request (Wait)\nStep Source Sink\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n15 compares the it calculated with the one sent to\nPHY Layer GoodCRC Message .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n16 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nWaitMessage\nThe informs the that a\n17\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 469\n8.3.2.2.2 EPR\n8.3.2.2.2.1 Entering EPR Mode\n8.3.2.2.2.1.1 Entering EPR Mode (Success)\nEPR Mode Sink EPR Mode\nFigure 8.12, \"Entering EPR Mode (Success)\" Message\nThis is an example of an Enter operation where the requests when this process succeeds.\nshows the s as they flow across the bus and within the devices\nto accomplish the Enter EPR procesFsi.gure 8.12 Entering EPR Mode (Success)\nSink Source\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send EPR_Mode (Enter)\n2: EPR_Mode (Enter)\n3: EPR_Mode (Enter) + CRC\nStart CRCReceiveTimer 4: EPR_Mode (Enter)\n5: EPR_Mode (Enter) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Mode (Enter) sent\nStart SinkEPREnterTimer\nStart SenderResponseTimer\n10: Send EPR_Mode (Enter Acknowledged)\n11: EPR_Mode (Enter Acknowledged)\n12: EPR_Mode (Enter Acknowledged) + CRC\nStart CRCReceiveTimer\n13: EPR_Mode (Enter Acknowledged)\nStore copy of MessageID\n14: EPR_Mode (Enter Acknowledged) received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Mode (Enter Acknowledged) sent\n19: Optional VCONN Swap Process \u2013 Source becomes VCONN Source\n20: Source reads Cable E-Marker to determine EPR capability \u2013 Cable is EPR Capable\n21: Send EPR_Mode (Enter Succeeded)\n22: EPR_Mode (Enter Succeeded)\n23: EPR_Mode (Enter Succeeded) + CRC\nStart CRCReceiveTimer\n24: EPR_Mode (Enter Succeeded)\nStore copy of MessageID\n25: EPR_Mode (Enter Succeeded) received\n26: GoodCRC 27: GoodCRC + CRC\n28: GoodCRC\nStop SinkEPREnterTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n29: EPR_Mode (Enter Succeeded) sent\nEPR Mode entered\nPage 470 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.39, \"Steps for Entering EPR Mode (Success)\"\nFigure 8.12, \"Entering EPR Mode (Success)\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.39 Steps for Enter ainbgo vEeP. R Mode (Success)\nStep Sink Source\nPolicy Engine Protocol Layer\nEPR_Mode Message\nThe directs the to\nEPR Mode\n1 generate an (Enter) to request\nProtocol Layer Message PHY\nentry to .\nLayer\ncreates the and passes to\n2 PHY Layer EPR_Mode Message\nPHY L.ayer CRC EPR_Mode\nCRC\nMessage CRCReceiveTimer receives the (Enter) and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n(Enter) . Starts . PHY Layer CRC EPR_Mode\nthe .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\n(Enter) to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\n(Enter) information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC\nverify the . .\nGoodCRC Message Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Mode Source_CapabilitiesMessage\ninforms the that the\n9 Policy Engine\n(Enter) was\nSenderResponseTimer SinkEPREnterTimer\nsuccessfully sent. The starts the\nPolicy Engine EPR_Mode Message\nand the .\nSink Protocol Layer\nevaluates the (Enter)\nEPR_Mode Message\n10 sent by the . It tells the to form a\nProtocol Layer EPR_Mode\n(Enter Acknowledged) .\nMessage PHY Layer\ncreates the (Enter\n11 PHY Layer EPR_Mode PHY Layer CRC EPR_Mode\nAcknowledged) and passes to .\nMessage CRC Message\nreceives the (Enter appends a and sends the\nMessage CRCReceiveTimer\n12 Acknowledged) and compares the it (Enter Acknowledged) . Starts\nPHY Layer CRC\ncalculated with the one sent to verify the . .\nEPR_Mode Message\nremoves the and forwards the\nProtocol Layer\n13 (Enter Acknowledged) to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n14 Policy Engine\nThe passes the (Enter\nPolicy Engine SenderResponseTimer\nAcknowledged) information to the . The\nProtocol Layer GoodCRCMessage\nstops the .\nPHY Layer\nThe generates a and\n15\npasses it to its .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 471\nTable8.39 Steps for Entering EPR Mode (Success)\nStep Sink Source\nPHY Layer Message CRC\nPHY Layer CRC Message\nMessage\nreceives the and compares the\n16 appends and sends the . PHY Layer GoodCRCMessage\nit calculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_Mode Message\n. It informs the that\nProtocol Layer\n18 the (Enter Acknowledged) was\nCRCReceiveTimer\nsuccessfully sent. The stops the\nSource VCONN Source Source VCONN Swap\n.\nSection 8.3.2.10,\n\"VCONN Swap\"\nIf the is not the the initiates the process as described in\n19 Source Cable Discovery Cable Discovery\n.\nSection 8.3.2.14.1, \"Discover Identity\"\nThe performs to determine whether the cable supports EPR. The process\n20\nis described in .\nSource VCONN Source\nSink EPR Capable\nThe is now the and has determined\nPolicy Engine Protocol Layer\nthat the and the cable are .\n21 EPR_Mode Message\nThe tells the to form a\nProtocol Layer EPR_Mode\n(Enter Succeeded) .\nMessage PHY Layer\ncreates the (Enter Succeeded)\n22 PHY Layer EPR_Mode\nPHY Lay aenrd passes to CRC . EPR_Mode\nMessage CRC\nreceives the (Enter Succeeded) Message CRCReceiveTimer\nMessage appends a and sends the\n23 and compares the it calculated with the one\nPHY Layer CRC (Enter Succeeded) . Starts .\nsent to verify the .\nEPR_Mode Message Protocol\nremoves the and forwards the\nLayer\n24 (Enter Succeeded) to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n25 Policy Engine\nThe passes the (Enter\nPolicy Engine SinkEPREnterTimer\nSucceeded) information to the . The\nProtocol Layer GoodCRCMessage\nstops the .\nPHY Layer\nThe generates a and\n26 PHY Layer Message CRC\nPpHasYs eLsa yite tro its CRC . Message\nMessage\nreceives the and compares the\n27 appends and sends the . PHY Layer GoodCRCMessage\nit calculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n28 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_Mode Message\n. It informs the that\nProtocol Layer\n29 the (Enter Succeeded) was\nCRCReceiveTimer\nsuccessfully sent. The stops the\nEPR Mode .\nEntered\nPage 472 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.2.1.2 Entering EPR Mode (Failure due to non-EPR cable)\nEPR Mode Sink EPR Mode\nFigure 8.13, \"Entering EPR Mode (Failure due to non-EPR cable)\"\nTMheisss aisg aen example of an Enter operation where the requests when this process fails due\nto the cable not being capable of EPR. shows the\ns as they flow aFcirgoussr eth 8e. 1b3u sE anntedr winitgh EinP tRh eM doedveic (eFsa tiolu arcec odmuep ltiosh n tohne- EEnPtRe rc EabPRle )process.\nSink Source\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send EPR_Mode (Enter)\n2: EPR_Mode (Enter)\n3: EPR_Mode (Enter) + CRC\nStart CRCReceiveTimer 4: EPR_Mode (Enter)\n5: EPR_Mode (Enter) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Mode (Enter) sent\nStart SinkEPREnterTimer\nStart SenderResponseTimer\n10: Send EPR_Mode (Enter Acknowledged)\n11: EPR_Mode (Enter Acknowledged)\n12: EPR_Mode (Enter Acknowledged) + CRC\nStart CRCReceiveTimer\n13: EPR_Mode (Enter Acknowledged)\nStore copy of MessageID\n14: EPR_Mode (Enter Acknowledged) received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Mode (Enter Acknowledged) sent\n19: Optional VCONN Swap Process \u2013 Source becomes VCONN Source\n20: Source reads Cable E-Marker to determine EPR capability \u2013 Cable is not EPR Capable\n21: Send EPR_Mode (Enter Failed)\n22: EPR_Mode (Enter Failed)\n23: EPR_Mode (Enter Failed) + CRC\nStart CRCReceiveTimer\n24: EPR_Mode (Enter Failed)\nStore copy of MessageID\n25: EPR_Mode (Enter Failed) received\n26: GoodCRC 27: GoodCRC + CRC\n28: GoodCRC\nStop SinkEPREnterTimer Check and increment MessageIDCounter\nStop CRCReceiveTimer\n29: EPR_Mode (Enter Failed) sent\nEPR Mode is not entered. Sink Initiates Soft Reset.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 473\nTable8.40, \"Steps for Entering EPR Mode (Failure due to non-EPR cable)\"\nFigure 8.13, \"Entering EPR Mode (Failure due to non-EPR cable)\"\nbelow provides a detailed explanation of\nwhat happens at eaTcahb llaeb8e.l4ed0 s Stetepp ins for Entering EPR Mode (Failure due to non-EPR cable) above.\nStep Sink Source\nPolicy Engine Protocol Layer\nEPR_Mode Message\nThe directs the to\nEPR Mode\n1 generate an (Enter) to request\nProtocol Layer Message PHY\nentry to .\nLayer\ncreates the and passes to\n2 PHY Layer EPR_Mode Message\nPHY L.ayer CRC EPR_Mode\nCRC\nMessage CRCReceiveTimer receives the (Enter) and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n(Enter) . Starts . PHY Layer CRC EPR_Mode\nthe .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\n(Enter) to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\n(Enter) information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC\nverify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Mode Message\ninforms the that the\n9 Policy Engine SenderResponseTimer\n(Enter) was successfully sent. The\nSinkEPREnterTimer\nstarts the and\nPolicy Engine EPR_Mode Message\nthe .\nSink Protocol Layer\nevaluates the (Enter)\nEPR_Mode Message\n10 sent by the . It tells the to form a\nProtocol Layer EPR_Mode\n(Enter Acknowledged) .\nMessage PHY Layer\ncreates the (Enter\n11 PHY Layer EPR_Mode PHY Layer CRC EPR_Mode\nAcknowledged) and passes to .\nMessage CRC Message\nreceives the (Enter appends a and sends the\nMessage CRCReceiveTimer\n12 Acknowledged) and compares the it (Enter Acknowledged) . Starts\nPHY Layer CRC\ncalculated with the one sent to verify the . .\nEPR_Mode Message\nremoves the and forwards the\nProtocol Layer\n13 (Enter Acknowledged) to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n14 Policy Engine\nThe passes the (Enter\nPolicy Engine SenderResponseTimer.\nAcknowledged) information to the . The\nProtocol Layer GoodCRCMessage\nstops the\nPHY Layer\nThe generates a and\n15\npasses it to its .\nPage 474 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.40 Steps for Entering EPR Mode (Failure due to non-EPR cable)\nStep Sink Source\nPHY Layer Message CRC\nPHY Layer CRC Message\nMessage\nreceives the and compares the\n16 appends and sends the . PHY Layer GoodCRCMessage\nit calculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_Mode Message\n. It informs the that\nProtocol Layer\n18 the (Enter Acknowledged) was\nCRCReceiveTimer\nsuccessfully sent. The stops the\nSource VCONN Source Source VCONN Swap\n.\nSection 8.3.2.10,\n\"VCONN Swap\"\nIf the is not the the initiates the process as described in\n19 Source Cable Discovery EPR Capable\n.\nCable Discovery Section 8.3.2.14.1, \"Discover Identity\"\nThe performs to determine whether the cable supports EPR; cable is not . The\n20 Source\nprocess is described in .\nSection\n6T.h4e.1 0, \"EPR d_Metoedrme Mineesss athgaet\" there has been a failure or\nincompatibility during the EPR process (see\nPolicy Engine Protocol Layer\n21 ).\nEPR_Mode Message\nThe tells the to form a\nProtocol Layer EPR_Mode\n(Enter Failed) .\nMessage PHY Layer\ncreates the (Enter Failed)\n22 PHY Layer EPR_Mode\nPHY Lay aenrd passes to CRC . EPR_Mode\nMessage CRC\nreceives the (Enter Failed) Message CRCReceiveTimer\nMessage appends a and sends the\n23 and compares the it calculated with the one\nPHY Layer CRC (Enter Failed) . Starts .\nsent to verify the .\nEPR_Mode Message Protocol Layer\nremoves the and forwards the\n24 Protocol Layer MessageID\n(Enter Failed) to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n25 Policy Engine Policy Engine\nThe passes the (Enter Failed)\nSinkEPREnterTimer\ninformation to the . The\nProtocol Layer GoodCRCMessage\nstops the .\nPHY Layer\nThe generates a and\n26 PHY Layer Message CRC\npPaHsYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the it\n27 appends and sends the . PHY Layer GoodCRCMessage\ncalculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n28 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_Mode Message\n. It informs the that\n29 Protocol Layer CRCReceiveTimer\nthe (Enter Failed) was successfully\nEPR Mode Sinksent. TheS oft Reset stops the .\nis not entered. Initiates\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 475\n8.3.2.2.2.1.3 Entering EPR Mode (Failure of VCONN Swap)\nEPR Mode Sink EPR Mode\nVCONN Swap Figure 8.14, \"Entering EPR Mode (Failure of VCONN Swap)\"\nMTheisss aisg aen example of an Enter operation where the requests when this process fails due\nto a failure of the process. shows the\ns as they flow acrosFsi gthuer eb u8s.1 a4n dE nwtietrhiinng t hEeP dRe Mviocedse t (oF aacicluormep olifs Vh CtOhNeN E Snwtear pE)PR process.\nSink Source\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send EPR_Mode (Enter)\n2: EPR_Mode (Enter)\n3: EPR_Mode (Enter) + CRC\nStart CRCReceiveTimer 4: EPR_Mode (Enter)\n5: EPR_Mode (Enter) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Mode (Enter) sent\nStart SinkEPREnterTimer\nStart SenderResponseTimer\n10: Send EPR_Mode (Enter Acknowledged)\n11: EPR_Mode (Enter Acknowledged)\n12: EPR_Mode (Enter Acknowledged) + CRC\nStart CRCReceiveTimer\n13: EPR_Mode (Enter Acknowledged)\nStore copy of MessageID\n14: EPR_Mode (Enter Acknowledged) received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Mode (Enter Acknowledged) sent\n19: Optional VCONN Swap Process \u2013 Source fails to become VCONN Source\n20: Send EPR_Mode (Enter Failed)\n21: EPR_Mode (Enter Failed)\n22: EPR_Mode (Enter Failed) + CRC\nStart CRCReceiveTimer\n23: EPR_Mode (Enter Failed)\nStore copy of MessageID\n24: EPR_Mode (Enter Failed) received\n25: GoodCRC 26: GoodCRC + CRC\n27: GoodCRC\nStop SinkEPREnterTimer Check and increment MessageIDCounter\nStop CRCReceiveTimer\n28: EPR_Mode (Enter Failed) sent\nEPR Mode is not entered. Sink Initiates Soft Reset.\nPage 476 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.41, \"Steps for Entering EPR Mode (Failure of VCONN Swap)\"\nFigure 8.14, \"Entering EPR Mode (Failure of VCONN Swap)\"\nbelow provides a detailed explanation of what\nhappens at each labeleTda sbtelep 8in.4 1 Steps for Entering EPR Mode (Failure of VCONN Swa pa)bove.\nStep Sink Source\nPolicy Engine Protocol Layer\nEPR_Mode Message\nThe directs the to\nEPR Mode\n1 generate an (Enter) to request\nProtocol Layer Message PHY\nentry to .\nLayer\ncreates the and passes to\n2 PHY Layer EPR_Mode Message\nPHY L.ayer CRC EPR_Mode\nCRC\nMessage CRCReceiveTimer receives the (Enter) and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n(Enter) . Starts . PHY Layer CRC EPR_Mode\nthe .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\n(Enter) to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\n(Enter) information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC\nverify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Mode Message\ninforms the that the\n9 Policy Engine SenderResponseTimer\n(Enter) was successfully sent. The\nSinkEPREnterTimer\nstarts the and\nPolicy Engine EPR_Mode Message\nthe .\nSink Protocol Layer\nevaluates the (Enter)\nEPR_Mode Message\n10 sent by the . It tells the to form a\nProtocol Layer EPR_Mode\n(Enter Acknowledged) .\nMessage PHY Layer\ncreates the (Enter\n11 PHY Layer EPR_Mode PHY Layer CRC EPR_Mode\nAcknowledged) and passes to .\nMessage CRC Message\nreceives the (Enter appends a and sends the\nMessage CRCReceiveTimer\n12 Acknowledged) and compares the it (Enter Acknowledged) . Starts\nPHY Layer CRC\ncalculated with the one sent to verify the . .\nEPR_Mode Message\nremoves the and forwards the\nProtocol Layer\n13 (Enter Acknowledged) to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n14 Policy Engine\nThe passes the (Enter\nPolicy Engine SenderResponseTimer\nAcknowledged) information to the . The\nProtocol Layer GoodCRCMessage\nstops the .\nPHY Layer\nThe generates a and\n15\npasses it to its .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 477\nTable8.41 Steps for Entering EPR Mode (Failure of VCONN Swap)\nStep Sink Source\nPHY Layer Message CRC\nPHY Layer CRC Message\nMessage\nreceives the and compares the it\n16 appends and sends the . PHY Layer GoodCRCMessage\ncalculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_Mode Message\n. It informs the that\nProtocol Layer\n18 the (Enter Acknowledged) was\nCRCReceiveTimer\nsuccessfully sent. The stops the\nSource VCONN Source Source VCONN Swap\n.\nSection 8.3.2.10,\n\"VCONN Swap\" VCONN Swap\nIf the is not the the initiates the process as described in\n19 Source\n. In this case the process fails.\nSection\n6T.h4e.1 0, \"EPR d_Metoedrme Mineesss athgaet\" there has been a failure or\nincompatibility during the EPR process (see\nPolicy Engine Protocol Layer\n20 ).\nEPR_Mode Message\nThe tells the to form a\nProtocol Layer EPR_Mode\n(Enter Failed) .\nMessage PHY Layer\ncreates the (Enter Failed)\n21 PHY Layer EPR_Mode\nPHY Lay aenrd passes to CRC . EPR_Mode\nMessage CRC\nreceives the (Enter Failed) Message CRCReceiveTimer\nMessage appends a and sends the\n22 and compares the it calculated with the one\nPHY Layer CRC (Enter Failed) . Starts .\nsent to verify the .\nEPR_Mode Message Protocol Layer\nremoves the and forwards the\n23 Protocol Layer MessageID\n(Enter Failed) to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n24 Policy Engine Policy Engine\nThe passes the (Enter Failed)\nSinkEPREnterTimer\ninformation to the . The\nProtocol Layer GoodCRCMessage\nstops the .\nPHY Layer\nThe generates a and\n25 PHY Layer Message CRC\npPaHsYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the it\n26 appends and sends the . PHY Layer GoodCRCMessage\ncalculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n27 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_Mode Message\n. It informs the that\n28 Protocol Layer CRCReceiveTimer\nthe (Enter Failed) was successfully\nEPR Mode Sinksent. TheS oft Reset stops the .\nis not entered. Initiates\nPage 478 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.2.2 EPR Explicit Contract Negotiation\n8.3.2.2.2.2.1 EPR Explicit Contract Negotiation (Accept)\nFigure 8.15, \"Successful Fixed EPR Power Negotiation\" Message\nExplicit Contract EPR Mode Negotiation\nillustrates an example of a successful flow while\nneg\uf06cotiating aSno urce in Capab. iTlihteie s EPR_ Sgoouers cteh_rCoaupgahb sielivteieraslM deisstsiangcet phases:\n\uf06c The Sink sends out its pCoawpearb ilities in an .\nEPR_RequestMessage\nThe evaluates these and, in the request phase, selects one power level by sending an\n\uf06c Source . AcceptMessage\n\uf06c The Source evaluates the request and accepts the request with an Sink . PS_RDYMessage\n\uf06c The Sink transitions to the new power level and then informs the by sending a .\n\uf06c TheS ourc estarts using the new power level.\n\uf06c the Sink starts its keep alive timer EPR_KeepAliveMessage\nthe starts its request timer to send periodic s\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 479\nFigure 8.15 Successful Fixed EPR Power Negotiation\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nCable EPR_Source_Capabilities detected\n1: Send EPR_Source_Capabilities\n2: EPR_Source_Capabilities\n3: EPR_Source_Capabilities + CRC\nStart CRCReceiveTimer 4: EPR_Source_Capabilities\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Source_Capabilities received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Source_Capabilities sent\nStart SenderResponseTimer Evaluate EPR Capabilities\n10: Send EPR_Request\n11: EPR_Request\n12: EPR_Request + CRC\n13: EPR_Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_Request received\n15: GoodCRC\nStop SenderResponseTimer 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Request sent\nEvaluate EPR Request Start SenderResponseTimer\n19: Send Accept\n20: Accept\n21: Accept + CRC\nStart CRCReceiveTimer 22: Accept\nCheck MessageID against local copy\nStore copy of MessageID\n23: Accept received\n24: GoodCRC\n25: GoodCRC + CRC Stop SenderResponseTimer\n26: GoodCRC Start PSTransitionTimer\nReduce current\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Accept sent\nPower supply adjusted to negotiated output\nPrepare for new power\n28: Send PS_RDY\n29: PS_RDY\n30: PS_RDY + CRC\nStart CRCReceiveTimer 31: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n32: PS_RDY received\n33: GoodCRC\n34: GoodCRC + CRC\n35: GoodCRC\nStop PSTransitionTimer\nCheck and increment MessageIDCounter Start SinkEPRKeepAliveTimer\nStop CRCReceiveTimer\n36: PS_RDY sent\nStart SourceEPRKeepAliveTimer\nNew Power level\nPage 480 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.42, \"Steps for a successful EPR Power Negotiation\"\nFigure 8.15, \"Successful Fixed EPR Power Negotiation\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.42 Steps for a successful EPR Power N eagbootviea.tion\nStep Source Sink\nCable Capabilities\nSection 4.4, \"Cable Type Detection\"\nPThoeli cy Engine are d P e ro te t c o t c e o d l L if a t y h e e r se are not\nalready known (see ).\nEPR_Source_CapabilitiesMessage\n1 directs the to send a\nthat represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer EPR_Source_Capabilities\n.\nSource_CapabilitiesMessage CRCReceiveTimer Message CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nEPR_Source_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 EPR_Source_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Source_CapabilitiesMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully\nPolicy Engine EPR_Source_Capabilities\nsent. starts .\nMessage Source\nevaluates the\nProtocol Layer\nsent by the and selects which power it\nPower Data Object\n10 would like. It tells the to form the data\nMessage\n(e.g., ) that represents its Request into\nProtocol Layer EPR_RequestMessage\na .\nPHY Layer\ncreates the and\n11 PHY Layer EPR_RequestMessage\npPaHsYse Lsa toye r . CRC EPR_Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n12 compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nEPR_RequestMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n14 Policy Engine Policy Engine\nThe passes the Request information to\nSenderResponseTimer\nthe . stops\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n15\npasses it to its .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 481\nTable8.42 Steps for a successful EPR Power Negotiation\nStep Source Sink\nPHY Layer Message CRC\nPHY Layer CRC Message\nMessage\nreceives the and compares the it\n16 appends and sends the . PHY Layer GoodCRCMessage\ncalculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_RequestMessage\n. It informs the that\nProtocol Layer CRCReceiveTimer\n18 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine EPR_RequestMessage\nThe starts .\nSink\nevaluates the\nProtocol Layer AcceptMessage\n19 sent by the and decides if it can meet the request. It\nProtocol Layer AcceptMessage\ntells the to form an .\nPHY Layer\nThe forms the that is\n20 PHY Layer CRC AcceptMessage PHY Layer Message CRC\npassed to the .\nCRCReceiveTimer Message\nappends and sends the . receives the and compares the\n21 PHY Layer AcceptMessage Protocol\nStarts . it calculated with the one sent to verify the .\nLayer\nforwards the to the\n22 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Accept\nand then stores a copy of the new value.\nMessage Policy Engine\ninforms the that an\nSenderResponseTimer PSTransitionTimer\n23 has been received. The stops\n, starts the\nDPM\nand reduces its current draw.\nThe prepares the Power supply for transition to\nProtocol Layer GoodCRCMessage\nthe new power level.\nPHY Layer\nThe generates a and\n24 PHY Layer Message CRC\npPaHsYse Lsa ity teor its CRC. Message\nMessage\nreceives the and compares the\n25 PHY Layer GoodCRCMessage appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n26 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nAcceptMessage\nThe informs the that an\n27\nwas successfully sent. Negotiated\nDPM Policy Engine\nPower supply Adjusts its Output to the Value\nThe informs the that the power\nProtocol Layer PS_RDYMessage\n28 supply has settled at the new operating condition and\nProtocol Layer PS_RDYMessage\ntells the to send a .\nPHY Layer PS_RDYMessage\n29 PTHheY Layer fCoRrCms the PS_RDYM. essage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n30 the it calculated with the one sent to verify the\nStarts . PHY Layer PS_RDYMessage\n.\nProtocol Layer\nforwards the to the\n31\n.\nPage 482 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.42 Steps for a successful EPR Power Negotiation\nStep Source Sink\nProtocol Layer MessageID\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine\nand then stores a copy of the new value.\nPolicy Engine\n32 informs the that a RS_RDY\nPSTransitionTimer\nhas been received. The stops the\nPolicy Engine SinkEPRKeepAliveTimer\n.\nProtocol Layer GoodCRCMessage\nThe starts the .\nPHY Layer\nThe generates a and\n33 PHY Layer Message CRC\npPHasYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the\n34 PHY Layer GoodCRCMessage appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n35 CRCReceiveTimer\nincrements the . Stops the\nProtocol Layer Policy Engine\n.\nPS_RDYMessage\nThe informs the that the\n36 Policy Engine\nwas successfully sent.\nSourceEPRKeepAliveTimer\nWhen in EPR operation the starts the\n37\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 483\n8.3.2.2.2.2.2 EPR Explicit Contract Negotiation (Reject)\nFigure 8.16, \"Rejected Fixed EPR Power Negotiation\" Message\nExplicit Contract EPR Mode Negotiation\nillustrates an example of a flow where the request is\nreje\uf06ccted whiSleo unrecgeotiating an Capabil iitni es EP.R T_hSeo urce_Capab iglioteies sthMreosusgahg eseveral distinct phases:\n\uf06c The Sink sends out its pCoawpearb ilities in an .\nEPR_RequestMessage\nThe evaluates these and, in the request phase, selects one power level by sending an\n\uf06c Source . RejectMessage\nThe evaluates tFhieg ruerqeu 8es.1t 6a nRde ajecccteepdts F tihxee dre EqPuRes Pt wowitehr a N egotia tion .\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nCable EPR_Source_Capabilities detected\n1: Send EPR_Source_Capabilities\n2: EPR_Source_Capabilities\n3: EPR_Source_Capabilities + CRC\nStart CRCReceiveTimer 4: EPR_Source_Capabilities\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Source_Capabilities received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Source_Capabilities sent\nStart SenderResponseTimer Evaluate EPR Capabilities\n10: Send EPR_Request\n11: EPR_Request\n12: EPR_Request + CRC\n13: EPR_Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_Request received\n15: GoodCRC\nStop SenderResponseTimer 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Request sent\nEvaluate EPR Request Start SenderResponseTimer\n19: Send Reject\n20: Reject\n21: Reject + CRC\nStart CRCReceiveTimer 22: Reject\nCheck MessageID against local copy\nStore copy of MessageID\n23: Reject received\n24: GoodCRC\n25: GoodCRC + CRC Stop SenderResponseTimer\n26: GoodCRC Start PSTransitionTimer\nReduce current\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Reject sent\nPage 484 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.43, \"Steps for a Rejected EPR Power Negotiation\"\nFigure 8.16, \"Rejected Fixed EPR Power Negotiation\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.43 Steps for a Rejected EPR Powe ra bNoevgeo.tiation\nStep Source Sink\nCable Capabilities\nSection 4.4, \"Cable Type Detection\"\nPThoeli cy Engine are d P e ro te t c o t c e o d l L if a t y h e e r se are not\nalready known (see ).\nEPR_Source_CapabilitiesMessage\n1 directs the to send a\nthat represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer EPR_Source_Capabilities\n.\nSource_CapabilitiesMessage CRCReceiveTimer Message CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nEPR_Source_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 EPR_Source_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Source_CapabilitiesMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully\nPolicy Engine EPR_Source_Capabilities\nsent. starts .\nMessage Source\nevaluates the\nProtocol Layer\nsent by the and selects which power it\nPower Data Object\n10 would like. It tells the to form the data\nMessage\n(e.g., ) that represents its Request into\nProtocol Layer EPR_RequestMessage\na .\nPHY Layer\ncreates the and\n11 PHY Layer EPR_RequestMessage\npPaHsYse Lsa toye r . CRC EPR_Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n12 compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nEPR_RequestMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n14 Policy Engine Policy Engine\nThe passes the Request information to\nSenderResponseTimer\nthe . stops\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n15\npasses it to its .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 485\nTable8.43 Steps for a Rejected EPR Power Negotiation\nStep Source Sink\nPHY Layer Message CRC\nPHY Layer CRC Message\nMessage\nreceives the and compares the it\n16 appends and sends the . PHY Layer GoodCRCMessage\ncalculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_RequestMessage\n. It informs the that\nProtocol Layer CRCReceiveTimer\n18 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine EPR_RequestMessage\nThe starts .\nSink\nevaluates the\nProtocol Layer RejectMessage\n19 sent by the and decides it can\u2019t meet the request. It\nProtocol Layer RejectMessage\ntells the to form a .\nPHY Layer\nThe forms the that is\n20 PHY Layer CRC RejectMessage PHY Layer Message CRC\npassed to the .\nCRCReceiveTimer Message\nappends and sends the . receives the and compares the it\n21 PHY Layer RejectMessage Protocol\nStarts . calculated with the one sent to verify the .\nLayer\nforwards the to the\n22 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Reject\nand then stores a copy of the new value.\n23 Message Policy Engine\ninforms the that a\nSenderResponseTimer\nhas been received. The stops\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n24 PHY Layer Message CRC\npPHasYs eLsa iyte tro its CRC . Message\nMessage\nreceives the and compares the\n25 PHY Layer GoodCRCMessage appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n26 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nRejectMessage\nThe informs the that a\n27\nwas successfully sent.\nPage 486 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.2.2.3 EPR Explicit Contract Negotiation (Wait)\nFigure 8.17, \"Wait response to Fixed EPR Power Negotiation\" Message\nExplicit Contract EPR Mode Negotiation\nillustrates an example of a flow where the\nrequest is responded to with wait while negotiating an in . The goes through\nseve\uf06cral distinSocut rpcheases: Capabilities EPR_Source_CapabilitiesMessage\n\uf06c The Sink sends out its pCoawpearb ilities in an .\nEPR_RequestMessage\nThe evaluates these and, in the request phase, selects one power level by sending an\n\uf06c Source . WaitMessage\nThe evaluaFteigs uthree r8e.1q7ue Wsta aint dr eascpceopntsse t htoe Freixqeude sEt PwRit Pho aw er N egotiatio.n\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nCable EPR_Source_Capabilities detected\n1: Send EPR_Source_Capabilities\n2: EPR_Source_Capabilities\n3: EPR_Source_Capabilities + CRC\nStart CRCReceiveTimer 4: EPR_Source_Capabilities\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Source_Capabilities received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Source_Capabilities sent\nStart SenderResponseTimer Evaluate EPR Capabilities\n10: Send EPR_Request\n11: EPR_Request\n12: EPR_Request + CRC\n13: EPR_Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_Request received\n15: GoodCRC\nStop SenderResponseTimer 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Request sent\nEvaluate EPR Request Start SenderResponseTimer\n19: Send Wait\n20: Wait\n21: Wait + CRC\nStart CRCReceiveTimer 22: Wait\nCheck MessageID against local copy\nStore copy of MessageID\n23: Wait received\n24: GoodCRC\n25: GoodCRC + CRC Stop SenderResponseTimer\n26: GoodCRC Start PSTransitionTimer\nReduce current\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Wait sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 487\nTable8.44, \"Steps for a Wait response to an EPR Power Negotiation\"\nFigure 8.17, \"Wait response to Fixed EPR Power Negotiation\"\nbelow provides a detailed explanation of what\nhappens at each labelTeadb slteep8 .i4n4 Steps for a Wait response to an EPR Power Negotiation above.\nStep Source Sink\nCable Capabilities\nSection 4.4, \"Cable Type Detection\"\nPThoeli cy Engine are d P e ro te t c o t c e o d l L if a t y h e e r se are not\nalready known (see ).\nEPR_Source_CapabilitiesMessage\n1 directs the to send a\nthat represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer EPR_Source_Capabilities\n.\nSource_CapabilitiesMessage CRCReceiveTimer Message CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nEPR_Source_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 EPR_Source_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC Message PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Source_CapabilitiesMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully\nPolicy Engine EPR_Source_Capabilities\nsent. starts .\nMessage Source\nevaluates the\nProtocol Layer\nsent by the and selects which power it\nPower Data Object\n10 would like. It tells the to form the data\nMessage\n(e.g., ) that represents its Request into\nProtocol Layer EPR_RequestMessage\na .\nPHY Layer\ncreates the and\n11 PHY Layer EPR_RequestMessage\npPaHsYse Lsa toye r . CRC EPR_Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n12 compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nEPR_RequestMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n14 Policy Engine Policy Engine\nThe passes the Request information to\nSenderResponseTimer\nthe . stops\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n15\npasses it to its .\nPage 488 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.44 Steps for a Wait response to an EPR Power Negotiation\nStep Source Sink\nPHY Layer Message CRC\nPHY Layer CRC Message\nMessage\nreceives the and compares the it\n16 appends and sends the . PHY Layer GoodCRCMessage\ncalculated with the one sent to verify the .\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_RequestMessage\n. It informs the that\nProtocol Layer CRCReceiveTimer\n18 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine EPR_RequestMessage\nThe starts .\nSink\nevaluates the\nProtocol Layer WaitMessage\n19 sent by the and decides if it can meet the request. It\nProtocol Layer WaitMessage\ntells the to form a .\nPHY Layer\nThe forms the that is\n20 PHY Layer CRC WaitMessage PHY Layer Message CRC\npassed to the .\nCRCReceiveTimer Message\nappends and sends the . receives the and compares the\n21 PHY Layer WaitMessage Protocol\nStarts . it calculated with the one sent to verify the .\nLayer\nforwards the to the\n22 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Wait\nand then stores a copy of the new value.\n23 Message Policy Engine\ninforms the that a\nSenderResponseTimer\nhas been received. The stops\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n24 PHY Layer Message CRC\nPpHasYs eLsa yite tro its CRC . Message\nMessage\nreceives the and compares the\n25 PHY Layer GoodCRCMessage appends and sends the .\nit calculated with the one sent to verify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n26 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nWaitMessage\nThe informs the that a\n27\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 489\n8.3.2.2.2.3 EPR Keep Alive\nExplicit Contract EPR Mode Figure 8.18, \"EPR Keep\nAlive\" Message\nThis is an example of keep alive operation during an in .\nshows the s as they flow acroFsigs uthree b8u.1s8 a nEdP Rw iKtheienp t hAeli dveevices to accomplish the keep alive.\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\nSinkEPRKeepAliveTimer Timeout\nStop SinkEPRKeepAliveTimer\n1: Send EPR_KeepAlive\n2: EPR_KeepAlive\n3: EPR_KeepAlive + CRC\n4: EPR_KeepAlive Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_KeepAlive received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nStop SourceEPRKeepAliveTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate EPR_KeepAlive 9: EPR_KeepAlive sent\nStart SenderResponseTimer\n10: Send EPR_KeepAlive_Ack\n11: EPR_KeepAlive_Ack\n12: EPR_KeepAlive_Ack + CRC\nStart CRCReceiveTimer 13: EPR_KeepAlive_Ack\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_KeepAlive_Ack received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nStart SinkEPRKeepAliveTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_KeepAlive_Ack sent\nStart SourceEPRKeepAliveTimer\nEPR Mode Continues\nPage 490 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.45, \"Steps for EPR Keep Alive\"\nFigure 8.18, \"EPR Keep Alive\"\nbelow provides a detailed explanation of what happens at each labeled step\nin aboveT.able8.45 Steps for EPR Keep Alive\nStep Source Sink\nSinkEPRKeepAliveTimer Policy\nEngine Policy Engine\nThe times out in the\nSinkEPRKeepAliveTimer Protocol\n. The stops the\n1 Layer EPR_KeepAliveMessage\ntimer and tells the\nProtocol Layer EPR_KeepAliveMessage\nto form an .\nPHY Layer Protocol Layer\nThe creates the\n2 PHY Layer EPR_KeepAliveMessage\nPanHdY p Laassyeesr it to CRC. The Requ.est\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n3 compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nEPR_KeepAliveMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Policy Engine Policy Engine\nThe passes the Request information to\nSourceEPRKeepAliveTimer.\nthe . stops the\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n6 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity teor its CRC. GoodCRC\nCRC\nMessage receives the and\nappends and sends the Message\n7 compares the it calculated with the one sent to verify\n. PHY Layer GoodCRCMessage\nthe .\nProtocol Layer\nforwards the to the\n8 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nSinkEPRKeepAliveTimerMessage\n. It informs the that\nProtocol Layer CRCReceiveTimer\n9 the was successfully\nPolicy Engine SenderResponseTimer\nsent. The stops the .\nPolicy Engine DPM\nThe starts .\nSourceEPRKeepAliveTimerMessage Sink\nrequests the to evaluate the\nSource\nsent by the\nPolicy Engine Protocol Layer\n10 and decides if the can meet the request. The\nEPR_KeepAlive_Ack Message\ntells the to form an\nProtocol Layer EPR_KeepAlive_Ack\n.\nMessage PHY Layer\nThe forms the\n11 PHY Layer EPR_KeepAlive_AckMessage\nPHY Laye trhat is passCeRd Cto the .\nCRC\nEPR_KeepAlive_AckMessage CRCReceiveTimer receives the\nappends and sends the Message\n12 and compares the it calculated with the one sent to\n. Starts . PHY Layer EPR_KeepAlive_AckMessage\nverify the .\nProtocol Layer\nforwards the to\n13 Protocol Layer MessageID\nthe .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Accept\nand then stores a copy of the new value.\nMessage Policy Engine\n14 informs the that an\nSenderResponseTimer\nSinkEPR Khaese pbAeelinv ereTcimeiveerd. The stops\n, starts the\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 491\nTable8.45 Steps for EPR Keep Alive\nStep Source Sink\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n15 PHY Layer GoodCRCMessage\npPHasYs eLsa iyte tro its CRC . GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n16 compares the it calculated with the one sent to\nPHY Layer GoodCRC Message .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n17 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nEPR_KeepAlive_Ack Message\nThe informs the that an\nPolicy Engine\nwas successfully sent.\n18 SourceEPRKeepAliveTimer\nThe starts the\n. EPR Mode\nContinues\nPage 492 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.2.4 Exiting EPR Mode\n8.3.2.2.2.4.1 Exiting EPR Mode (Sink Initiated)\nEPR Mode Sink EPR Mode Figure 8.19,\n\"Exiting EPR Mode (Sink Initiated)\" Message\nThis is an example of an Exit operation where the requests to be exited.\nshows the s as they flow across the bus and within the devices to\naccomplish the Exit EPR processF.igure 8.19 Exiting EPR Mode (Sink Initiated)\nSink Source\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPorts in EPR Mode with SPR PDO Explicit Contract\n1: Send EPR_Mode (Exit)\n2: EPR_Mode (Exit)\n3: EPR_Mode (Exit) + CRC\nStart CRCReceiveTimer 4: EPR_Mode (Exit)\n5: EPR_Mode (Exit) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Mode (Exit) sent\n10: Send Source_Capabilities\n11: Source_Capabilities\n12: Source_Capabilities + CRC\nStart CRCReceiveTimer\n13: Source_Capabilities\nStore copy of MessageID\n14: Source_Capabilities received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Capabilities sent\nEPR Mode exited\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 493\nTable8.46, \"Steps for Exiting EPR Mode (Sink Initiated)\"\nFigure 8.19, \"Exiting EPR Mode (Sink Initiated)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.46 Steps for Exiting EPR Mod aeb (oSvine.k Initiated)\nStep Sink Source\nPort Partner Explicit Contract SPR (A)PDO\nPolicy Engine Protocol Layer\nThe s are in an using an (Voltage <= 20V)\nEPR_Mode Message\nThe directs the to\nEPR Mode\n1 generate an (Exit) to request entry\nProtocol Layer Message PHY\nto .\nLayer\ncreates the and passes to\n2 PHY Layer EPR_Mode Message\nPHY L.ayer CRC EPR_Mode\nCRC\nMessage CRCReceiveTimer receives the (Exit) and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n(Exit) . Starts . PHY Layer CRC EPR_Mode\nthe .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\n(Exit) to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\n(Exit) information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n9 EPR_Mode Message\ninforms the that the\nPolicy Engine EPR_Mode Message\n(Exit) was successfully sent.\nSink Protocol Layer\nevaluates the (Exit)\nSource_CapabilitiesMessage\n10 sent by the . It tells the to form a\nProtocol Layer Source_CapabilitiesMessage\n.\nPHY Layer\ncreates the\n11 PHY Layer Source_CapabilitiesMessage\naPnHdY pLaasyseers to CRC.\nCRC\nreceives the Source_CapabilitiesMessage CRCReceiveTimer\nMessage appends a and sends the\n12 and compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nSource_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\n14 and then stores a copy of the new value.\nPolicy Engine\nThe passes the (Enter\nProtocol Layer GoodCRCMessage\nSucceeded) information to the .\nPHY Layer\nThe generates a and\n15 PHY Layer Message CRC\npPaHsYse Lsa ity teor its CRC . Message\nMessage\nreceives the and compares the it\n16 appends and sends the .\ncalculated with the one sent to verify the .\nPage 494 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.46 Steps for Exiting EPR Mode (Sink Initiated)\nStep Sink Source\nPHY Layer GoodCRCMessage\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter. Policy Engine\nThe verifies and increments the\nSource_CapabilitiesMessage\nIt informs the that\n18 Protocol Layer CRCReceiveTimer\nthe was successfully sent.\nEPR Mode Negotiation SecTtihoen 8.3.2.2.1.1, \"SP Rs tEoxppsl itchite Contract Negotiatio.n\"\nExited. Power proceeds as defined in .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 495\n8.3.2.2.2.4.2 Exiting EPR Mode (Source Initiated)\nEPR Mode Source EPR Mode Figure 8.20,\n\"Exiting EPR Mode (Source Initiated)\" Message\nThis is an example of an Exit operation where the requests to be exited.\nshows the s as they flow across the bus and within the devices to\naccomplish the Exit EPR procesFsi.gure 8.20 Exiting EPR Mode (Source Initiated)\nSink Source\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPorts in EPR Mode with SPR PDO Explicit Contract\n1: Send EPR_Mode (Exit)\n2: EPR_Mode (Exit)\n3: EPR_Mode (Exit) + CRC\n4: EPR_Mode (Exit) Start CRCReceiveTimer\n5: EPR_Mode (Exit) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: EPR_Mode (Exit) sent\n10: Send Source_Capabilities\n11: Source_Capabilities\n12: Source_Capabilities + CRC\nStart CRCReceiveTimer\n13: Source_Capabilities\nStore copy of MessageID\n14: Source_Capabilities received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Capabilities sent\nEPR Mode exited\nPage 496 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.47, \"Steps for Exiting EPR Mode (Source Initiated)\"\nFigure 8.20, \"Exiting EPR Mode (Source Initiated)\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.47 Steps for Exiting EPR Mode (Sou arbcoev Ien. itiated)\nStep Sink Source\nPort Partner Explicit Contract SPR (A)PDO\nPolicy Engine Protocol Layer\nThe s are in an using an (Voltage <= 20V)\nEPR_Mode Message\nThe directs the to\nEPR Mode\n1 generate an (Exit) to request entry\nProtocol Layer Message PHY\nto .\nLayer\ncreates the and passes to\n2 PHY Layer EPR_Mode Message\nPHY L.ayer CRC EPR_Mode\nCRC\nreceives the (Exit) and Message CRCReceiveTimer\nMessage appends and sends the\n3 compares the it calculated with the one sent to\nPHY Layer CRC (Exit) . Starts .\nverify the .\nEPR_Mode Message Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\n(Exit) to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\n(Exit) information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRC CRC\npasses it .\nMessage Message\nappends and sends the receives the and checks the to\n7 PHY Layer CRC GoodCRC\n. verify the .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n9 EPR_Mode Message\ninforms the that the\nPolicy Engine EPR_Mode Message\n(Exit) was successfully sent.\nSink Protocol Layer\nevaluates the (Exit)\nSource_CapabilitiesMessage\n10 sent by the . It tells the to form a\nProtocol Layer Source_CapabilitiesMessage\n.\nPHY Layer CRCReceiveTimer\ncreates the\n11 PHY Layer Source_CapabilitiesMessage\naPnHdY p Laassyeesr to CRC. Starts .\nCRC\nreceives the Source_CapabilitiesMessage\nMessage appends a and sends the\n12 and compares the it calculated with the one sent to\nPHY Layer CRC .\nverify the .\nSource_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer EPR_Mode\n14 and then stores a copy of the new value.\nPolicy Engine\nThe passes the (Enter\nProtocol Layer GoodCRCMessage\nSucceeded) information to the .\nPHY Layer\nThe generates a and\n15 PHY Layer Message CRC\nPpHasYs eLsa yite tro its CRC . Message\nMessage\nreceives the and compares the\n16 appends and sends the .\nit calculated with the one sent to verify the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 497\nTable8.47 Steps for Exiting EPR Mode (Source Initiated)\nStep Sink Source\nPHY Layer GoodCRCMessage\nProtocol Layer\nforwards the to the\n17 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nSource_CapabilitiesMessage\n. It informs the that\n18 Protocol Layer CRCReceiveTimer\nthe was successfully sent.\nEPR Mode Negotiation SecTtihoen 8.3.2.2.1.1, \"SP Rs tEoxppsl itchiet Contract Negotiatio.n\"\nExited. Power proceeds as defined in .\nPage 498 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.2.5 EPR Sink Makes Request\n8.3.2.2.2.5.1 EPR Sink Makes Request (Accept)\nSink Explicit Contract Figure 8.21,\n\"EPR Sink Makes Request (Accept)\" Message\nThis is an example of EPR when a makes a Request which is Accepted during an .\nshows the s as they flow across the bus and within the devices to\naccomplish the keep alive. Figure 8.21 EPR Sink Makes Request (Accept)\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\n1: Send EPR_Request\n2: EPR_Request\n3: EPR_Request + CRC\n4: EPR_Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Request received\n6: GoodCRC\n7: GoodCRC + CRC\nStop SenderResponseTimer 8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate EPR_Request 9: EPR_Request sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer 13: Accept\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC Stop SenderResponseTimer\n17: GoodCRC Start PSTransitionTimer\nReduce current\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nPower supply adjusted to negotiated output\nPrepare for new power\n19: Send PS_RDY\n20: PS_RDY\n21: PS_RDY + CRC\nStart CRCReceiveTimer 22: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC Stop PSTransitionTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: PS_RDY sent\nNew Power level\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 499\nTable8.48, \"Steps for EPR Sink Makes Request (Accept)\"\nFigure 8.21, \"EPR Sink Makes Request (Accept)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.48 Steps for EPR Sink Makes aRbeoqvuee.st (Accept)\nStep Source Sink\nDPM Policy Engine\nPolicy Engine Protocol Layer\ntells the to request a different\nEPR_RequestMessage\npower level. The tells the\nProtocol Layer EPR_RequestMessage\n1 to form an .\nPHY Layer\nThe creates the\nPHY Layer EPR_RequestMessage\naPnHdY pLaasyseers it to CRC . EPR_Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n2 compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nEPR_RequestMessage Protocol Layer\nremoves the and forwards the\n3 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\n4 and then stores a copy of the new value.\nPolicy Engine\nThe passes the Request information to\nProtocol Layer GoodCRCMessage\nthe .\nPHY Layer\nThe generates a and\n5 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity teor its CRC . GoodCRC\nCRC\nMessage receives the and\nappends and sends the Message\n6 compares the it calculated with the one sent to verify\n. PHY Layer GoodCRCMessage\nthe .\nProtocol Layer\nforwards the to the\n7 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_RequestMessage\n. It informs the that\nProtocol Layer CRCReceiveTimer\n8 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine DPM\nThe starts .\nEPR_RequestMessage Sink\nrequests the to evaluate the\nSource Policy Engine\nsent by the and decides if\n9 Protocol Layer Accept Message\nthe can meet the request. The\nProtocol Layer Accept Message\ntells the to form an .\nPHY Layer\nThe forms the that is\n10 PHY Layer AcceptMessage\npPaHsYs eLda yteor the CRC . AcceptMessage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n11 the it calculated with the one sent to verify the\nStarts . PHY Layer AcceptMessage Protocol\n.\nLayer\nforwards the to the\n12 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Accept\nand then stores a copy of the new value.\nMessage Policy Engine\ninforms the that an\nSenderResponseTimer PSTransitionTimer\n13 has been received. The stops\n, starts the\nDPM\nand reduces its current draw.\nThe prepares the Power supply for transition to\nthe new power level.\nPage 500 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.48 Steps for EPR Sink Makes Request (Accept)\nStep Source Sink\nProtocol Layer GoodCRCMessage\nPHY Layer\nThe generates a and\n14 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity teor its CRC. GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n15 compares the it calculated with the one sent to\nPHY Layer GoodCRCMessage .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n16 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nAccept Message\nThe informs the that an\n17\nwas successfully sent. Negotiated\nDPM Policy Engine\nPower supply Adjusts its Output to the Value\nThe informs the that the power\nProtocol Layer PS_RDYMessage\n18 supply has settled at the new operating condition and\nProtocol Layer PS_RDYMessage\ntells the to send a .\nPHY Layer PS_RDY Message\n19 PTHheY Layer fCoRrCms the PS_RDYM. essage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n20 the it calculated with the one sent to verify the\nStarts . PHY Layer PS_RDYMessage\n.\nProtocol Layer\nforwards the to the\n21 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine\nand then stores a copy of the new value.\n22 Policy Engine\ninforms the that a RS_RDY\nPSTransitionTimer\nhas been received. The stops the\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\nThe generates a and\n23 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity teor its CRC. GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n24 compares the it calculated with the one sent to\nPHY Layer GoodCRCMessage .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n25 CRCReceiveTimer\nincrements the . Stops the\nProtocol Layer Policy Engine\n.\nPS_RDYMessage\nThe informs the that the\n26\nwas successfully sent. Negotiated\nNew Power Level\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 501\n8.3.2.2.2.5.2 EPR Sink Makes Request (Reject)\nSink Explicit Contract Figure 8.22,\n\"EPR Sink Makes Request (Reject)\" Message\nThis is an example of EPR when a makes a Request which is Rejected during an .\nshows the s as they flow across the bus and within the devices to\naccomplish the keep alive. Figure 8.22 EPR Sink Makes Request (Reject)\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\n1: Send EPR_Request\n2: EPR_Request\n3: EPR_Request + CRC\n4: EPR_Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Request received\n6: GoodCRC\n7: GoodCRC + CRC\nStop SenderResponseTimer 8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate EPR_Request 9: EPR_Request sent\nStart SenderResponseTimer\n10: Send Reject\n11: Reject\n12: Reject + CRC\nStart CRCReceiveTimer 13: Reject\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nPage 502 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.49, \"Steps for EPR Sink Makes Request (Reject)\"\nFigure 8.22, \"EPR Sink Makes Request (Reject)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.49 Steps for EPR Sink Makes a Rboevqeu.est (Reject)\nStep Source Sink\nDPM Policy Engine\nPolicy Engine Protocol Layer\ntells the to request a different\nEPR_RequestMessage\npower level. The tells the\nProtocol Layer RequestMessage\n1 to form an .\nPHY Layer\nThe creates the and\nPHY Layer EPR_RequestMessage\npPaHsYse Lsa ity teor C.RC EPR_Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n2 compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nEPR_RequestMessage Protocol Layer\nremoves the and forwards the\n3 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\n4 and then stores a copy of the new value.\nPolicy Engine\nThe passes the Request information to\nProtocol Layer GoodCRCMessage\nthe .\nPHY Layer\nThe generates a and\n5 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity teor its CRC . GoodCRC\nCRC\nMessage receives the and compares\nappends and sends the Message\n6 the it calculated with the one sent to verify the\n. PHY Layer GoodCRC Message\n.\nProtocol Layer\nforwards the to the\n7 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nEPR_RequestMessage\n. It informs the that\nProtocol Layer CRCReceiveTimer\n8 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine DPM\nThe starts .\nEPR_RequestMessage Sink\nrequests the to evaluate the\nSource Policy Engine\nsent by the and decides that\n9 Protocol Layer RejectMessage\nthe can\u2019t meet the request. The\nProtocol Layer RejectMessage\ntells the to form a .\nPHY Layer\nThe forms the that is\n10 PHY Layer RejectMessage\npPaHsYs eLda ytoer the CRC. RejectMessage\nCRC\nCRCReceiveTimer receives the and compares\nappends and sends the . Message\n11 the it calculated with the one sent to verify the\nStarts . PHY Layer RejectMessage Protocol\n.\nLayer\nforwards the to the\n12 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\ninforms the that an\nDPM\nhas been received. The informs\nProtocol Layer GoodCRCMessage\nthe that the Request has been rejected.\nPHY Layer\nThe generates a and\n14\npasses it to its .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 503\nTable8.49 Steps for EPR Sink Makes Request (Reject)\nStep Source Sink\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n15 compares the it calculated with the one sent to\nPHY Layer GoodCRC Message .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n16 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nRejectMessage\nThe informs the that a\n17\nwas successfully sent.\nPage 504 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.2.2.5.3 EPR Sink Makes Request (Wait)\nSink WaitMessage\nExplicit Contract Figure 8.23, \"EPR Sink Makes Request (Wait)\" Message\nThis is an example of SPR when a makes a Request which is responded to with a during an\n. shows the s as they flow across the bus and\nwithin the devices to accomplish tFhieg ukreee p8 .a2li3v eE.PR Sink Makes Request (Wait)\nSource Sink\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\n1: Send EPR_Request\n2: EPR_Request\n3: EPR_Request + CRC\n4: EPR_Request Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Request received\n6: GoodCRC\n7: GoodCRC + CRC\nStop SenderResponseTimer 8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nEvaluate EPR_Request 9: EPR_Request sent\nStart SenderResponseTimer\n10: Send Wait\n11: Wait\n12: Wait + CRC\nStart CRCReceiveTimer 13: Wait\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 505\nTable8.50, \"Steps for SPR Sink Makes Request (Wait)\"\nFigure 8.23, \"EPR Sink Makes Request (Wait)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.50 Steps for SPR Sink Mak aebso Rveeq. uest (Wait)\nStep Source Sink\nDPM Policy Engine\nPolicy Engine Protocol Layer\ntells the to request a different\nEPR_RequestMessage\npower level. The tells the\nProtocol Layer EPR_RequestMessage\n1 to form an .\nPHY Layer\nThe creates the\nPHY Layer EPR_RequestMessage\naPnHdY p Laassyeesr it to CRC. EPR_Request\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n2 compares the it calculated with the one sent to\nPHY Layer CRC . Starts .\nverify the .\nEPR_RequestMessage Protocol Layer\nremoves the and forwards the\n3 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\n4 and then stores a copy of the new value.\nPolicy Engine\nThe passes the Request information to\nProtocol Layer GoodCRCMessage\nthe .\nPHY Layer\nThe generates a and\n5 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte tro its CRC . GoodCRC\nCRC\nMessage receives the and compares\nappends and sends the Message\n6 the it calculated with the one sent to verify the\n. PHY Layer GoodCRCMessage\n.\nProtocol Layer\nforwards the to the\n7 Protocol Layer\n.\nMessageIDCounter Policy Engine\nThe verifies and increments the\nRequestMessage Protocol\n. It informs the that\nLayer CRCReceiveTimer\n8 the was successfully sent. The\nPolicy Engine SenderResponseTimer\nstops the .\nPolicy Engine DPM\nThe starts .\nEPR_RequestMessage Sink\nrequests the to evaluate the\nSource Policy Engine\nsent by the and decides if\n9 Protocol Layer WaitMessage\nthe can meet the request. The\nProtocol Layer WaitMessage\ntells the to form a .\nPHY Layer\nThe forms the that is\n10 PHY Layer CRC WaitMessage PHY Layer WaitMessage\npassed to the .\nCRCReceiveTimer CRC Message\nappends and sends the . receives the and compares the\n11 PHY Layer WaitMessage Protocol\nStarts . it calculated with the one sent to verify the .\nLayer\nforwards the to the\n12 Protocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Policy Engine Wait\nand then stores a copy of the new value.\n13 Message Policy Engine\ninforms the that an\nDPM\nhas been received. The informs\nProtocol Layer GoodCRCMessage\nthe that the Request has been rejected.\nPHY Layer\nThe generates a and\n14\npasses it to its .\nPage 506 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.50 Steps for SPR Sink Makes Request (Wait)\nStep Source Sink\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nreceives the and Message\nMessage appends and sends the\n15 compares the it calculated with the one sent to\nPHY Layer GoodCRC Message .\nverify the .\nProtocol Layer Protocol Layer\nforwards the to the\nMessageIDCounter\n. The verifies and\n16 CRCReceiveTimer\nincrements the and stops the\nProtocol Layer Policy Engine\n.\nWaitMessage\nThe informs the that a\n17\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 507\n8.3.2.3 Unsupported Message\nUnsupported Message Figure 8.24, \"Unsupported message\"\nMessage\nThis is an example of the response to an . shows the\ns as they flow across the bus anFidg wuriteh 8in.2 t4h eU dnesvuicpepso.rted message\nMessage Initiator Message Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Message\nReset MessageIDCounter, stored\nMessageIDand RetryCounter\n2: Message\n3: Message + CRC\nStart CRCReceiveTimer 4: Message\nReset MessageIDCounter, stored\nMessageIDand RetryCounter\n5: Message received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Message sent\nStart SenderResponseTimer\n10: Send Not_supported\n11: Not_supported\n12: Not_supported + CRC\nStart CRCReceiveTimer\n13: Not_supported\nStore copy of MessageID\n14: Not_supported received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Not_supported sent\nPage 508 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.51, \"Steps for an Unsupported Message\"\nFigure 8.24, \"Unsupported message\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.51 Steps faobro avne. Unsupported Message\nStep Message Initiator Message Responder\nPolicy Engine Protocol Layer\nMessage\nThe directs the to\n1 Protocol Layer MessageIDCounter\ngenerate a .\nMessageID RetryCounter Protocol Layer\nresets , stored\nMessage PHY Layer\n2 and . creates\nPHY Layer CRC Message PHY Layer Message CRC\nthe and passes to .\nCRCReceiveTimer Message\nappends and sends the . Starts receives the and compares the\n3 PHY Layer CRC Message\n. it calculated with the one sent to verify the .\nProtocol Layer\nremoves the and forwards the to\n4 Protocol Layer MessageID\nthe .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Message\n5 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nProtocol Layer GoodCRCMessage\ninformation to the that consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC GoodCRC\nto verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent. starts\nPolicy Engine Protocol Layer\n.\nNot_Supported Message\ntells the to form an\n10 Protocol Layer Not_SupportedMessage\n.\nPHY Layer\ncreates the and\n11 PHY Layer Not_SupportedMessage\npPHasYs eLsa ytoe r . CRC Not_Supported\nCRC\nreceives the and Message CRCReceiveTimer\nMessage appends a and sends the\n12 compares the it calculated with the one sent to\nProtocol Layer MessageID . Starts .\nverify the .\nMessage\nstores the of the incoming\n13 Protocol Layer\n.\nNot_Supported Message Policy\nThe forwards the received\nEngine\n14 information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 509\nTable8.51 Steps for an Unsupported Message\nStep Message Initiator Message Responder\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Not_Supported Message\ninforms the that the\nwas successfully sent.\nPage 510 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.4 Soft Reset\nSoft Reset Figure 8.25, \"Soft Reset\" Message\nSoft Reset\nThis is an example of a operation. shows the s as they flow across the\nbus and within the devices to accomplish the Figure 8.2.5 Soft Reset\nReset Initiator Reset Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Soft Reset\nReset MessageIDCounter, stored\nMessageIDand RetryCounter\n2: Soft Reset\n3: Soft Reset + CRC\nStart CRCReceiveTimer 4: Soft Reset\nReset MessageIDCounter, stored\nMessageIDand RetryCounter\n5: Soft Reset received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Soft Reset sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer\n13: Accept\nStore copy of MessageID\n14: Accept received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nReset Complete, Explicit Contract negotiation\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 511\nTable8.52, \"Steps for a Soft Reset\"\nFigure 8.25, \"Soft Reset\"\nbelow provides a detailed explanation of what happens at each labeled step in\nabove. Table8.52 Steps for a Soft Reset\nStep Reset Initiator Reset Responder\nPolicy Engine Protocol Layer\nSoft_Reset Message Soft Reset\nThe directs the to\n1 Protocol Layer MessageIDCounter\ngenerate a to request a .\nMessageID RetryCounter Protocol Layer\nresets , stored\nMessage PHY Layer\n2 and . creates\nPHY Layer Soft_ResetMessage\ntPhHe Y Layer and passCeRs Cto . Soft_Reset\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nSoft_ResetMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage MessageIDCounter\ndoes not check the in the\nMessageID RetryCounter\nincoming and resets ,\nProtocol Layer Soft_Reset\nstored and .\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSoft_ResetMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Accept\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC AcceptMessage\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the .\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . Starts .\nMessage\nstores the of the incoming\n13 Protocol Layer Accept\n.\nMessage Policy Engine\nThe forwards the received\n14 information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte r . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nPage 512 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.52 Steps for a Soft Reset\nStep Reset Initiator Reset Responder\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 AcceptMessage\ninforms the that the\nPort Partner Explicit ContractNegotiation\nwas successfully sent.\nThe reset is complete and protocol communication can restart. s perform an to re-\nsynchronize their state machines.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 513\n8.3.2.5 Data Reset\n8.3.2.5.1 DFP Initiated Data Reset where the DFP is the VCONN Source\nData Reset DFP VCONN Source Data Reset\nFigure 8.26, \"DFP Initiated Data Reset where the DFP is the VCONN Source\" Message\nThis is an example of a operation wherDea tthae R eset is also the and initiates a .\nshows the s as they flow across\nthe bus and withinF tihgeu dree v8ic.2e6s tDoF aPc cIonmitipalitsehd t Dhea ta Reset w.here the DFP is the VCONN Source\nDFP/VCONNSource UFP\n(Reset Initiator) (Reset Responder)\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Data_Reset\n2: Data_Reset\n3: Data_Reset + CRC\nStart CRCReceiveTimer 4: Data_Reset\n5: Data_Reset received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter Inform DPM that Data_Reset\nStop CRCReceiveTimer has been received\n9: Data_Reset sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer\n13: Accept\nStore copy of MessageID\n14: Accept received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nTell DPM to perform Data Reset Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nDPM indicates that Data\nReset process is complete\n19: Send Data_Reset_Complete\n20: Data_Reset_Complete\n21: Data_Reset_Complete + CRC\nStart CRCReceiveTimer 22: Data_Reset_Complete\n23: Data_Reset_Complete received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC\nInform DPM that\nCheck and increment MessageIDCounter Data_Reset_Complete has\nStop CRCReceiveTimer been received\n27: Data_Reset_Complete sent\nInform DPM that\nData_Reset_Complete has been sent\nData_Reset Complete, USB Connection Established\nPage 514 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.53, \"Steps for a DFP Initiated Data Reset where the DFP is the VCONN Source\"\nFigure 8.26, \"DFP Initiated Data Reset where the DFP is the\nVCONN Source\" below provides a detailed\nexplanation of what happens at each labeled step in\nT aabbloev8e.. 53 Steps for a DFP Initiated Data Reset where the DFP is the VCONN Source\nStep DFP/VCONN Source (Reset Initiator) UFP (Reset Responder)\nPolicy Engine Protocol Layer\nData_ResetMessage Data Reset\nThe directs the to\n1 Protocol Layer Message PHY\ngenerate a to request a .\nLayer\ncreates the and passes to\n2 PHY Layer Data_ResetMessage\nPHY L.ayer CRC Data_Reset\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nData_ResetMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Data_Reset\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\n5\ninformation to the that\nPolicy Engine DPM Data_Reset\nconsumes it.\nMessage\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC GoodCRC\nverify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_ResetMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Accept\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC AcceptMessage\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the .\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . Starts .\nMessage\nstores the of the incoming\n13 Protocol Layer Accept\n.\nMessage Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nDPM Data Reset\n14 The stops the\nDPM VCONN\nand tells the to perform a .\nThe proceeds to cycle and then reset the\nProtocol Layer GoodCRCMessage\ndata connection.\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 515\nTable8.53 Steps for a DFP Initiated Data Reset where the DFP is the VCONN Source\nStep DFP/VCONN Source (Reset Initiator) UFP (Reset Responder)\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 AcceptMessage\ninforms the that the\nDPM Data Reset\nwas successfully sent.\nThe indicates that the process is\nPolicy Engine Protocol Layer\ncomplete.\n19 Data_Reset_Complete Message\nThe directs the to\nProtocol Layer Message PHY\ngenerate a .\nLayer\ncreates the and passes to\n20 PHY Layer CRC PHY Layer Data_Reset_CompleteMessage\n.\nData_Reset_CompleteMessage CRC\nappends and sends the receives the\nCRCReceiveTimer Message\n21 . Starts and compares the it calculated with the one sent to\nPHY Layer CRC\n. verify the .\nData_Reset_CompleteMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\nData_Reset_Complete Message\nThe forwards the received\nPolicy Engine\n23\ninformation to the\nPolicy Engine DPM\nthat consumes it.\nData_Reset_Complete Message\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n24 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n25 PHY Layer CRC\nverify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_Reset_Complete Message\ninforms the that the\n27 Policy Engine DPM\nwas successfully sent.\nData_Reset_Complete Message\nThe informs the that the\nData Reset Section 6.3.14, \"Data_Reset Message\" 5 Port Partner\nwas successfully sent.\nThe is complete as defined in Step . s re-establish a USB data\nconnection.\nPage 516 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.5.2 DFP Receives Data Reset where the DFP is the VCONN Source\nData Reset DFP Data_ResetMessage VCONN Source\nFigure 8.27, \"DFP Receives Data Reset where the DFP is the VCONN Source\" Message\nThis is an example of a operation whereD tahtea Rese rteceives a and is the .\nshows the s as they flow across\nthe bus and withinF tihgeu dree v8ic.2e7s tDoF aPc cRoemcepilivsehs t Dhea ta Reset w.here the DFP is the VCONN Source\nDFP/VCONNSource\nUFP (Reset Initiator) (Reset Responder)\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Data_Reset\n2: Data_Reset\n3: Data_Reset + CRC\nStart CRCReceiveTimer 4: Data_Reset\n5: Data_Reset received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter Inform DPM that Data_Reset\nStop CRCReceiveTimer has been received\n9: Data_Reset sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer\n13: Accept\nStore copy of MessageID\n14: Accept received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nTell DPM to perform a Data Reset\nTell DPM indicates Data Reset\nprocess is complete\n19: Send Data_Reset_Complete\n20: Data_Reset_Complete\n21: Data_Reset_Complete + CRC\nStart CRCReceiveTimer\n22: Data_Reset_Complete\nStore copy of MessageID\n23: Data_Reset_Complete received\n24: GoodCRC 25: GoodCRC + CRC\n26: GoodCRC\nInform DPM Data Reset is\ncomplete\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Data_Reset_Complete sent\nInform DPM Data Reset Message\nsent\nData_Reset Complete, USB Connection Established\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 517\nTable8.54, \"Steps for a DFP Receiving a Data Reset where the DFP is the VCONNSource\"\nFigure 8.27, \"DFP Receives Data Reset where the DFP is the\nVCONN Source\" below provides a detailed\nexplanation of what happens at each labeled step in F\nTa balbeo8ve.5.4 Steps for a DFP Receiving a Data Reset where the DFP is the VCONNSource\nStep UFP (Reset Initiator) DFP/VCONN Source (Reset Responder)\nPolicy Engine Protocol Layer\nData_Reset Message Data Reset\nThe directs the to\n1 Protocol Layer Message PHY\ngenerate a to request a .\nLayer\ncreates the and passes to\n2 PHY Layer Data_ResetMessage\nPHY L.ayer CRC Data_Reset\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to\n. Starts . PHY Layer CRC\nverify the .\nData_ResetMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Data_Reset\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\n5\ninformation to the that\nPolicy Engine DPM Data_Reset\nconsumes it.\nMessage\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC\nverify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_Reset Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Accept\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Accept\n.\nMessage Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\n14 DPM VCONN\nThe stops the .\nThe proceeds to cycle and then reset the\nProtocol Layer GoodCRCMessage\ndata connection.\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 518 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.54 Steps for a DFP Receiving a Data Reset where the DFP is the VCONNSource\nStep UFP (Reset Initiator) DFP/VCONN Source (Reset Responder)\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nAcceptMessage\ninforms the that the\n18 Policy Engine DPM Data\nwas successfully sent.\nReset\nThe tells the to perform a\nDPM Data Reset\n.\nThe indicates that the process is\nPolicy Engine Protocol Layer\ncomplete.\n19 Data_Reset_Complete Message\nThe directs the to\nProtocol Layer Message PHY\ngenerate a .\nLayer\ncreates the and passes to\n20 PHY Layer Data_Reset_Complete PHY Layer CRC\n.\nMessage CRC Data_Reset_CompleteMessage\nreceives the appends and sends the\nMessage CRCReceiveTimer\n21 and compares the it calculated with the . Starts\nPHY Layer CRC\none sent to verify the . .\nData_Reset_CompleteMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\nData_Reset_Complete Message\nThe forwards the received\nPolicy Engine\n23\ninformation to the\nPolicy Engine DPM\nthat consumes it.\nData_Reset_Complete Message\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n24 PHY Layer CRC GoodCRC PHY Layer GoodCRC CRC\npasses it .\nMessage Message\nappends and sends the receives the and checks the to\n25 PHY Layer CRC GoodCRC\n. verify the .\nMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_Reset_Complete Message\ninforms the that the\n27 Policy Engine DPM\nwas successfully sent.\nData_Reset_Complete Message\nThe informs the that the\nSection 6.3.14, \"Data_Reset Message\" 5 Port Partner\nwas successfully sent.\nThe reset is complete as defined in Step . s re-establish a USB data\nconnection.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 519\n8.3.2.5.3 DFP Initiated Data Reset where the UFP is the VCONN Source\nData Reset DFP Data Reset UFP VCONN Source\nFigure 8.28, \"DFP Initiated Data Reset where the UFP is the VCONN Source\" Message\nThis is an example of a operation wherDea tthae R eset initiates a and the is the .\nshows the s as they flow across\nthe bus and withinF tihgeu dreev 8ic.2e8s tDoF aPc cIonmitpialitsehd t Dhea ta Reset w.here the UFP is the VCONN Source\nDFP UFP/VCONNSource\n(Reset Initiator) (Reset Responder)\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Data_Reset\n2: Data_Reset\n3: Data_Reset + CRC\nStart CRCReceiveTimer 4: Data_Reset\n5: Data_Reset received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter Inform DPM that Data_Reset\nStop CRCReceiveTimer has been received\n9: Data_Reset sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer\n13: Accept\nStore copy of MessageID\n14: Accept received\n15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC\nStop SenderResponseTimer\nStart VCONNDischargeTimer Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nRequest DPM to turn off VCONN\nDPM indicates VCONN is off\n19: Send PS_RDY\n20: PS_RDY\n21: PS_RDY + CRC\nStart CRCReceiveTimer\n22: PS_RDY\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC 25: GoodCRC + CRC 26: GoodCRC\nStop VCONNDischargeTimer Check and increment MessageIDCounter\nRequest DPM to perform a Data Reset Stop CRCReceiveTimer\n27: PS_RDY sent\nDPM indicates that Data\nReset process is complete\n28: Send Data_Reset_Complete\n29: Data_Reset_Complete\n30: Data_Reset_Complete + CRC\nStart CRCReceiveTimer 31: Data_Reset_Complete\n32: Data_Reset_Complete received\n33: GoodCRC\n34: GoodCRC + CRC\n35: GoodCRC\nInform DPM that\nCheck and increment MessageIDCounter Data_Reset_Complete has\nStop CRCReceiveTimer been received\n36: Data_Reset_Complete sent\nInform DPM that\nData_Reset_Complete has been sent\nData_Reset Complete, USB Connection Established\nPage 520 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.55, \"Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source\"\nFigure 8.28, \"DFP Initiated Data Reset where the UFP is the\nVCONN Source\" below provides a detailed\nexplanation of what happens at each labeled step in\nT aabbloev8e.. 55 Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source\nStep DFP (Reset Initiator) UFP/VCONN Source (Reset Responder)\nPolicy Engine Protocol Layer\nData_ResetMessage Soft Reset\nThe directs the to generate\n1 Protocol Layer Message PHY\na to request a .\nLayer\ncreates the and passes to\n2 PHY Layer Data_ResetMessage\nPHY L.ayer CRC Data_Reset\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nData_ResetMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Data_Reset\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\n5\ninformation to the that\nPolicy Engine DPM Data_Reset\nconsumes it.\nMessage\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC GoodCRC\nverify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_ResetMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Accept\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the it appends a and sends the . Starts\n12 Protocol Layer MessageID\ncalculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Accept Message\n.\nPolicy Engine\nThe forwards the received\nPolicy Engine SenderResponseTimer\ninformation to the that consumes it.\n14 VCONNDischargeTimer\nThe stops the and\nProtocol Layer GoodCRCMessage\nstarts the .\nPHY Layer\ngenerates a and passes\n15 PHY Layer GoodCRCMessage\niPt HY Layer . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 521\nTable8.55 Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source\nStep DFP (Reset Initiator) UFP/VCONN Source (Reset Responder)\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nAcceptMessage\n18 informs the that the\nPolicy Engine DPM VCONN\nwas successfully sent.\nThe DPM reques V tCsO tNhNe to turn off .\nPolicy Engine Protocol Layer\nWhen the indicates has been turned off the\nPS_RDYMessage\n19 tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n20 PHY Layer Message CRC PHY Layer CRC Accept\n.\nMessage Message CRCReceiveTimer\nreceives the and compares the it appends a and sends the\n21 Protocol Layer MessageID\ncalculated with the one sent to verify the . . Starts .\nMessage\nstores the of the incoming\n22 Protocol Layer PS_RDY\n.\nMessage Policy Engine\nThe forwards the received\ninformation to the that consumes\nPolicy Engine VCONNDischargeTimer\nit.\nDPM Data Reset\n23 The stops the and\nDPM VCONN\ntells the to perform a .\nThe proceeds to turn on and then reset the\nProtocol Layer GoodCRCMessage\ndata connection.\nPHY Layer\ngenerates a and passes\n24 PHY Layer GoodCRCMessage\niPt HY Layer . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n25 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n27 PS_RDYMessage\ninforms the that the\nDPM Data Reset\nwas successfully sent.\nThe indicates that the process is\nPolicy Engine Protocol Layer\ncomplete.\n28 Data_Reset_Complete Message\nThe directs the to generate\nProtocol Layer Message PHY\na .\nLayer\ncreates the and passes to\n29 PHY Layer Data_Reset_CompleteMessage\nPHY L.ayer CRC\nCRC\nData_Reset_CompleteMessage CRCReceiveTimer receives the\nappends and sends the Message\n30 and compares the it calculated with the one sent to\n. Starts . PHY Layer CRC\nverify the .\nData_Reset_CompleteMessage Protocol Layer\nremoves the and forwards the\n31\nto the .\nPage 522 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.55 Steps for a DFP Initiated Data Reset where the UFP is the VCONN Source\nStep DFP (Reset Initiator) UFP/VCONN Source (Reset Responder)\nProtocol Layer MessageID\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\nData_Reset_Complete Message\nThe forwards the received\nPolicy Engine\n32\ninformation to the\nPolicy Engine DPM\nthat consumes it.\nData_Reset_Complete Message\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n33 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n34 PHY Layer CRC GoodCRC\nverify the . .\nMessage Protocol Layer\nremoves the and forwards the\n35 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_Reset_Complete Message\ninforms the that the\n36 Policy Engine DPM\nwas successfully sent.\nData_Reset_Complete Message\nThe informs the that the\nSection 6.3.14, \"Data_Reset Message\" 5 Port Partner\nwas successfully sent.\nThe reset is complete as defined in Step . s re-establish a USB data\nconnection.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 523\n8.3.2.5.4 DFP Receives Data Reset where the UFP is the VCONN Source\nData Reset DFP Data_ResetMessage UFP VCONN\nSource Figure 8.29, \"DFP Receives a Data Reset where the UFP is the VCONN Source\" Message\nThis is an example of a operation where the Da rteac eRievseest a and the is the\n. shows the s as they flow\nacross the bus andF iwguitrhein 8 t.h2e9 dDeFvPic Rese tcoe iavcecso ma pDlaistha tRhees et where t.he UFP is the VCONN Source\nUFP/VCONNSource DFP\n(Reset Initiator) (Reset Responder)\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Data_Reset\n2: Data_Reset\n3: Data_Reset + CRC\nStart CRCReceiveTimer 4: Data_Reset\n6: GoodCRC 5: Data_Reset received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter Inform DPM that Data_Reset\nStop CRCReceiveTimer has been received\n9: Data_Reset sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer\n13: Accept\nStore copy of MessageID\n14: Accept received\n15: GoodCRC 16: GoodCRC + CRC 17: GoodCRC\nStop SenderResponseTimer\nTell DPM to turn off VCONN.\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nStart VCONNDischargeTimer\nDPM indicates that VCONN has\nbeen turned off.\n19: Send PS_RDY\nReset MessageIDCounter, stored\nMessageIDand RetryCounter\n20: PS_RDY\n21: PS_RDY + CRC\nStart CRCReceiveTimer 22: PS_RDY\nReset MessageIDCounter, stored\nMessageIDand RetryCounter\n24: GoodCRC 23: PS_RDY received\n25: GoodCRC + CRC\n26: GoodCRC\nCheck an S d t o in p c C re R m C e R n e t c M ei e v s e s T a i g m e e ID r Counter Requ S e t s o t p D V P C M O t N o N p D e i r s f c o h rm ar g a e D T a im ta e R r eset\n27: PS_RDY sent\nTell DPM indicates Data Reset\nprocess is complete\n28: Send Data_Reset_Complete\n29: Data_Reset_Complete\n30: Data_Reset_Complete + CRC\nStart CRCReceiveTimer\n31: Data_Reset_Complete\nStore copy of MessageID\n32: Data_Reset_Complete received\n33: GoodCRC 34: GoodCRC + CRC 35: GoodCRC\nInform DPM Data Reset is\ncomplete Check and increment MessageIDCounter\nStop CRCReceiveTimer\n36: Data_Reset_Complete sent\nInform DPM Data Reset Message\nsent\nData_Reset Complete, USB Connection Established\nPage 524 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.56, \"Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source\"\nFigure 8.29, \"DFP Receives a Data Reset where the UFP is the\nVCONN Source\" below provides a detailed\nexplanation of what happens at each labeled step in\nTab albeo8v.e5.6 Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source\nStep UFP/VCONN Source (Reset Initiator) DFP (Reset Responder)\nPolicy Engine Protocol Layer\nData_ResetMessage Soft Reset\nThe directs the to\n1 Protocol Layer Message PHY\ngenerate a to request a .\nLayer\ncreates the and passes to\n2 PHY Layer Data_ResetMessage\nPHY La.yer CRC Data_Reset\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nData_ResetMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Data_Reset\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\n5\ninformation to the that\nPolicy Engine DPM Data_Reset\nconsumes it.\nMessage\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC GoodCRC\nto verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_ResetMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Accept\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Accept\n.\nMessage Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\n14 consumes it.\nDPM VCONN\nThe stops the\nProtocol Layer GoodCRCMessage\nand tells the to turn off .\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16\n. it calculated with the one sent to verify the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 525\nTable8.56 Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source\nStep UFP/VCONN Source (Reset Initiator) DFP (Reset Responder)\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nAcceptMessage\n18 informs the that the\nPolicy Engine VCONNDischargeTimer\nwas successfully sent.\nDPM VCONN\nThe starts the .\nPolicy Engine Protocol Layer\nWhen the indicates that has been turned off\nPS_RDYMessage Soft Reset\n19 the directs the to\nProtocol Layer Message PHY\ngenerate a to request a .\nLayer\ncreates the and passes to\n20 PHY Layer PS_RDYMessage\nPHY L.ayer CRC PS_RDY\nCRC\nMessage CRCReceiveTimer receives the and compares\nappends and sends the Message\n21 the it calculated with the one sent to verify the\n. Starts . PHY Layer CRC PS_RDY\n.\nMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\ninformation to the that\n23 Policy Engine VCONNDischargeTimer\nconsumes it.\nDPM Data Reset\nThe stops the\nDPM VCONN\nand requests the perform a .\nThe proceeds to turn on and then reset the\nProtocol Layer GoodCRCMessage\ndata connection.\nPHY Layer\ngenerates a and\n24 PHY Layer GoodCRCMessage\npPHasYs eLsa iyte r C.RC GoodCRC\nCRC\nreceives and compares Message\nMessage appends and sends the\n25 the it calculated with the one sent to verify the\nPHY Layer CRC GoodCRC .\n.\nMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n27 PS_RDYMessage\ninforms the that the\nDPM Data Reset\nwas successfully sent.\nThe indicates that the process is\nPolicy Engine Protocol Layer\ncomplete.\n28 Data_Reset_Complete Message\nThe directs the to\nProtocol Layer Message PHY\ngenerate a .\nLayer\ncreates the and passes to\n29 PHY Layer Data_Reset_Complete PHY Layer CRC\n.\nMessage CRC Data_Reset_CompleteMessage\nreceives the appends and sends the\nMessage CRCReceiveTimer\n30 and compares the it calculated with the . Starts\nPHY Layer CRC\none sent to verify the . .\nData_Reset_CompleteMessage Protocol Layer\nremoves the and forwards the\n31\nto the .\nPage 526 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.56 Steps for a DFP Receiving a Data Reset where the UFP is the VCONN Source\nStep UFP/VCONN Source (Reset Initiator) DFP (Reset Responder)\nProtocol Layer MessageID\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\nData_Reset_CompleteMessage\nThe forwards the received\nPolicy Engine\n32\ninformation to the\nPolicy Engine DPM\nthat consumes it.\nData_Reset_CompleteMessage\nThe informs the that a\nProtocol Layer GoodCRCMessage\nhas been received.\nPHY Layer\ngenerates a and\n33 PHY Layer CRC GoodCRC PHY Layer GoodCRC CRC\npasses it .\nMessage Message\nappends and sends the receives the and checks the to\n34 PHY Layer CRC GoodCRC\n. verify the .\nMessage Protocol Layer\nremoves the and forwards the\n35 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nData_Reset_CompleteMessage\ninforms the that the\n36 Policy Engine DPM\nwas successfully sent.\nData_Reset_Complete Message\nThe informs the that the\nSection 6.3.14, \"Data_Reset Message\" 5 Port Partner\nwas successfully sent.\nThe reset is complete as defined in Step . s re-establish a USB data\nconnection.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 527\n8.3.2.6 Hard Reset\nHard Reset Hard Reset\nPower Role Data Role\nTheH foalrldo wRiensget sections describe the PstHeYp sL areyqeruired for a USB PowShear lDlelivery . The returns\nthe operationP oofr tt hPea rUtSnBer Power Delivery to default / and operating voltage/current. During\nthe USB Power Delivery communications be disabled preventing communication\nbNeottwe:een thHea rd Reset . Port\nHard Reset Hard Reset\nPort , in this case, is applied to the USB Power Delivery capability of an individual on which\nthe is requested. A side effect of the is that it might reset other functions on the\n8.3.2.6.1 such as U SSBo. urce Initiated Hard Reset\nHard Reset Source Figure 8.30, \"Source initiated Hard Reset\"\nMessage Hard Reset\nThis is an example of a operation when initiated by a .\nshows the s as they flow acrFoisgsu trhee 8 b.3us0 aSnodu wrcieth iinni ttihaet eddev Hicaersd t oR aecsceotmplish the .\nSource Sink\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Hard Reset\nStart NoResponseTimer\nWait tPSHardReset Reset MessageIDCounterand\nReset Power Supply RetryCounter\nReset Port Data Role to DFP\nTurn off VCONN\n2: Send Hard Reset\n3: Hard Reset\n4: Hard Reset received\nChannel disabled Channel disabled\nReset MessageIDCounterand\nRetryCounter\n5: Hard Reset received\nReset Power Sink\nReset Port Data Role to UFP\nTurn off VCONN\nPower Sink Reset\n6: Power Sink Reset\n7: Hard Reset Complete\nChannel enabled\nPower Supply Reset\nTurn on VCONN\n8: Power Supply Reset\n9: Hard Reset Complete\nChannel enabled\nHard Reset Complete\n10: Send Capabilities\n11: Capabilities\n12: Capabilities + CRC\nStart CRCReceiveTimer 13: Capabilities\nStore copy of MessageID\n14: Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC Evaluate Capabilities\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Capabilities sent\nStop NoResponseTimer\nStart SenderResponseTimer\nPage 528 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.57, \"Steps for Source initiated Hard Reset\"\nFigure 8.30, \"Source initiated Hard Reset\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.57 Steps for Sou arbcoev ien.itiated Hard Reset\nStep Source Sink\nPolicy Engine Protocol Layer\nHard ResetSignaling\nThe directs the to\nPolicy Engine NoResponseTimer\ngenerate .\nDPM USB\nThe starts the and\nDefault Operation Policy Engine\n1 requests the to reset the power supply to\nDPM Port Data Role DFP\n. The requests the\nVCONN\nto reset the to and to turn off\nProtocol Layer MessageIDCounter\nif this is on.\nRetryCounter.\nresets and\nProtocol Layer PHY Layer Hard Reset\n2 Signaling\nrequests the send\nPHY Layer Hard ResetSignaling PHY Layer Hard ResetSignaling\n.\nPHY Layer PHY Layer\nsends and then receives the and\n3 disables the communications channel for disables the communications channel for\nPHY Layer Protocol Layer Hard Reset\ntransmission and reception. transmission and reception.\nProtocol Layer MessageIDCounter\ninforms the of the .\nRetryCounter\n4 resets and\nProtocol Layer Policy Engine\n.\nHard Reset\nThe informs the of the\nPolicy Engine DPM\n.\nSink USB Default Operation Policy Engine\nThe requests the to reset the Power\n5 DPM Port Data Role UFP\nto . The\nVCONN\nrequests the to reset the to\nSink USB Default Operation\nand to turn off if this is on.\nPolicy Engine Protocol Layer\nThe Power returns to .\nSink\n6 The informs the that the\nProtocol Layer PHY Layer Hard\nPower has been reset.\nReset\nThe informs the that the\nPHY Layer PHY Layer\nis complete.\n7\nThe enables the communications\nUSB Default Operation\nchannel for transmission and reception.\nVCONN\nThe power supply is reset to . and\nPolicy Engine Protocol Layer\nis turned on.\n8\nThe informs the that the\nProtocol Layer PHY Layer Hard\npower supply has been reset.\nReset PHY Layer PHY Layer\nThe informs the that the\nis complete. The enables the\n9\ncommunications channel for transmission and\nreception.\nPolicy Engine Protocol Layer\nThe reset is complete and protocol communication can restart.\nSource_CapabilitiesMessage\ndirects the to send a\n10 that represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n11 PHY Layer CRC PHY Layer Source_CapabilitiesMessage\n.\nSource_CapabilitiesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n12\n. Starts . and checks the to verify the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 529\nTable8.57 Steps for Source initiated Hard Reset\nStep Source Sink\nPHY Layer CRC\nSource_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nstores the of the incoming\nProtocol Layer\n.\nSource_CapabilitiesMessage Policy\n14 The forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n16 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_CapabilitiesMessage\ninforms the that the\n18 Policy Engine NoResponseTimer\nwas successfully sent.\nSenderResponseTimer\nstops the and starts\nthe .\nUSB Power Delivery communication is re-established.\nPage 530 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.6.2 Sink Initiated Hard Reset\nHard Reset Sink Figure 8.31, \"Sink Initiated Hard Reset\"\nMessage Hard Reset\nThis is an example of a operation when initiated by a . shows\nthe s as they flow across the Fbiugsu arned 8 w.3i1th Sinin tkh eI ndietviaicteesd t Ho aarcdco Rmepsleisth the .\nSource Sink\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Hard Reset\nReset MessageIDCounter, Reset Power Sink\nstored copy of MessageIDand Reset Port Data Role to UFP\nRetryCounter Turn off VCONN\n2: Send Hard Reset\n3: Hard Reset\n4: Hard Reset received\nChannel disabled\nReset MessageIDCounter, stored Channel disabled\ncopy of MessageIDand\nRetryCounter Power Sink Reset\n5: Hard Reset received 6: Power Sink Reset\n7: Hard Reset Complete\nStart NoResponseTimer\nReset Power Supply\nReset Port Data Role to DFP Channel enabled\nTurn off VCONN\nPower Supply Reset\nTurn on VCONN\n8: Power Supply Reset\n9: Hard Reset Complete\nChannel enabled\nHard Reset Complete\n10: Send Capabilities\n11: Capabilities\n12: Capabilities + CRC\nStart CRCReceiveTimer 13: Capabilities\nStore copy of MessageID\n14: Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC Evaluate Capabilities\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Capabilities sent\nStop NoResponseTimer\nStart SenderResponseTimer\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 531\nTable8.58, \"Steps for Sink initiated Hard Reset\"\nFigure 8.31, \"Sink Initiated Hard Reset\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.58 Steps for aSbinovke i.nitiated Hard Reset\nStep Source Sink\nPolicy Engine Protocol Layer\nHard ResetSignaling\nThe directs the to\nPolicy Engine DPM\ngenerate .\nUSB Default Operation Policy Engine\nThe requests the to reset the power\n1 DPM Port Data Role UFP\nsupply to . The\nVCONN\nrequests the to reset the to\nProtocol Layer MessageIDCounter\nand to turn off if this is on.\nMessageID RetryCounter\nresets , stored copy\nProtocol Layer PHY Layer Hard Reset\nof and .\n2 Signaling\nrequests the send\nPHY Layer Hard ResetSignaling PHY Layer Hard ResetSignaling\n.\nPHY Layer PHY Layer\nreceives the and sends the and then\n3 disables the communications channel for disables the communications channel for\nPHY Layer Protocol Layer Hard\ntransmission and reception. transmission and reception.\nReset\ninforms the of the\nProtocol Layer MessageIDCounter\n.\n4 MessageID RetryCounter\nresets , stored copy\nProtocol Layer Policy Engine\nof and .\nHard Reset\nThe Informs the of the\nPolicy Engine NoResponseTimer\n.\nDPM Sink USB Default\nThe starts the and\nOperation Policy Engine DPM\n5 requests the to reset the Power to\nPort Data Role DFP VCONN\n. The requests the to\nreset the to and to turn off if\nSink USB Default Operation\nthis is on.\nPolicy Engine Protocol Layer\nThe Power returns to .\nSink\n6 The informs the that the\nProtocol Layer PHY Layer Hard\nPower has been reset.\nReset\nThe informs the that the\nPHY Layer PHY Layer\nis complete.\n7\nThe enables the communications\nUSB Default Operation\nchannel for transmission and reception.\nVCONN\nThe power supply is reset to and\nPolicy Engine Protocol Layer\nis turned on.\n8\nThe informs the that the\nProtocol Layer PHY Layer Hard\npower supply has been reset.\nReset PHY Layer PHY Layer\nThe informs the that the\nis complete. The enables the\n9\ncommunications channel for transmission and\nreception.\nPolicy Engine Protocol Layer\nThe reset is complete and protocol communication can restart.\nSource_CapabilitiesMessage\ndirects the to send a\n10 that represents the\nProtocol Layer Message PHY\npower supply\u2019s present capabilities.\nLayer\ncreates the and passes to\n11 PHY Layer CRC PHY Layer Source_CapabilitiesMessage\n.\nSource_CapabilitiesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n12\n. Starts . and checks the to verify the .\nPage 532 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.58 Steps for Sink initiated Hard Reset\nStep Source Sink\nPHY Layer CRC\nSource_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n13 Protocol Layer MessageID\nto the .\nMessage\nstores the of the incoming\nProtocol Layer\n.\nSource_CapabilitiesMessage Policy\n14 The forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n16 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_Capabilities Message\ninforms the that the\n18 Policy Engine NoResponseTimer\nwas successfully sent.\nSenderResponseTimer\nstops the and starts\nthe .\nUSB Power Delivery communication is re-established.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 533\n8.3.2.6.3 Source Initiated Hard Reset - Sink Long Reset\nHard Reset Source Sink\nSource Source_CapabilitiesMessage GoodCRC\nMTheisss aisg aen example oFfi gau re 8.32, \"So ouprecrea itnioitnia wtehde rne isneitt -i aStiendk bloyn ag reset\". In this exaMmepslsea tghee is slow responding\nto the reset causing the to send multipHlea rd Reset s before it receives a\nresponse. shows the s as they flow across the\nbus and within the devices to aFcigcoumrep 8li.s3h2 t hSeo urce initia.ted reset - Sink long reset\nSource Sink\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Hard Reset\n2: Send Hard Reset\nStart NoResponseTimer 3: Hard Reset\nWait tPSHardReset 4: Hard Reset received\nReset Power Supply 5: Hard Reset received\nReset Port Data Role to DFP Channel disabled\nTurn off VCONN Channel disabled Reset Power Sink\nReset Port Data Role to UFP\nTurn off VCONN\nPower Supply Reset\nTurn on VCONN\n6: Power Supply Reset\nReset MessageIDCounter, stored\ncopy of MessageIDand\nRetryCounter\n7: Hard Reset Complete\nChannel enabled\n8: Send Capabilities\n9: Capabilities\n10: Capabilities + CRC\nRun SourceCapabilityTimer Power Sink Reset\nSend Capabilities messages\nuntil GoodCRC response is\n11: Power Sink Reset\nreceived.\nReset MessageIDCounter, stored\ncopy of MessageIDand\nRetryCounter\n12: Hard Reset Complete\nChannel enabled\nHard Reset Complete\n13: Send Capabilities\n14: Capabilities\n15: Capabilities + CRC\nStart CRCReceiveTimer 16: Capabilities\nStore copy of MessageID\n17: Capabilities received\n18: GoodCRC\n19: GoodCRC + CRC\n20: GoodCRC Evaluate Capabilities\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n21: Capabilities sent\nStop SourceCapabilitiesTimer\nStop NoResponseTimer\nStart SenderResponseTimer\nPage 534 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.59, \"Steps for Source initiated Hard Reset - Sink long reset\"\nFigure 8.32, \"Source initiated reset - Sink long reset\"\nbelow provides a detailed explanation of what\nhappens at each labeleTda sbtleep8 i.n5 9 Steps for Source initiated Hard Reset - Sink lo nabgo rvees.et\nStep Source Sink\nPolicy Engine Protocol Layer\nHard ResetSignaling\nThe directs the to\nPolicy Engine NoResponseTimer\ngenerate .\nDPM USB\nThe starts the and\nDefault Operation Policy Engine\n1 requests the to reset the power supply to\nDPM Port Data Role DFP\n. The requests the\nVCONN\nto reset the to and to turn off\nProtocol Layer MessageIDCounter\nif this is on.\nMessageID RetryCounter\nresets , stored copy\nProtocol Layer PHY Layer Hard Reset\nof and .\n2 Signaling\nrequests the send\nPHY Layer Hard Reset Signaling PHY Layer Hard ResetSignaling\n.\nPHY Layer PHY Layer\nsends the and then receives the and\n3 disables the communications channel for disables the communications channel for\nPHY Layer Protocol Layer Hard Reset\ntransmission and reception. transmission and reception.\nProtocol Layer MessageIDCounter\ninforms the of the .\nMessageID RetryCounter\n4 resets , stored copy\nProtocol Layer Policy Engine\nof and .\nHard Reset\nThe Informs the of the\nPolicy Engine DPM\n.\nSink USB Default Operation Policy Engine\nThe requests the to reset the Power\n5 DPM Port Data Role UFP\nto . The\nVCONN\nrequests the to reset the to\nUSB Default Operation\nand to turn off if this is on.\nVCONN\nThe power supply is reset to and\nPolicy Engine Protocol Layer\nis turned on.\n6\nThe informs the that the\nProtocol Layer PHY Layer Hard\npower supply has been reset.\nReset\nThe informs the that the\nPHY Layer PHY Layer\nis complete.\n7\nThe enables the communications\nchannel for transmission and reception.\nPolicy Engine Protocol Layer\nThe reset is complete and protocol communication can restart.\nSource_CapabilitiesMessage\ndirects the to send a\nPolicy Engine\nthat represents the\nSourceCapabilityTimer\n8\npSoouwrecre sCuapppalyb\u2019isl iptyrTesimenetr capabilities.\nstarts t G h o e odCRC Message . The\ntimes out one or more times\nProtocol Layer Message PHY\nuntil a response is received.\nLayer\ncreates the and passes to\n9 PHY Layer CRC Note: Source_CapabilitiesMessage\n.\nSource_CapabilitiesMessage CRCReceiveTimer\nappends and sends the not received since\n10 . Starts . chanSninekl is disabled.USB Default Operation\nPolicy Engine Protocol Layer\nThe Power returns to . The\nSink\n11 informs the that the\nPower has been reset.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 535\nTable8.59 Steps for Source initiated Hard Reset - Sink long reset\nStep Source Sink\nProtocol Layer PHY Layer Hard\nReset\nThe informs the that the\nPHY Layer PHY Layer\nis complete.\n12\nThe enables the communications\nchannel for transmission and reception.\nPolicy Engine Protocol Layer\nThe reset is complete and protocol communication can restart.\nSource_CapabilitiesMessage\ndirects the to send a\n13 SourceCapabilityTim er that represents the\npower supply\u2019s present capabilities. Starts the\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n14 PHY Layer CRC PHY Layer Source_CapabilitiesMessage\n.\nSource_CapabilitiesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n15 PHY Layer CRC\n. Starts . and checks the to verify the .\nSource_CapabilitiesMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer MessageID\nto the .\nMessage\nstores the of the incoming\nProtocol Layer\n.\nSource_CapabilitiesMessage Policy\n17 The forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n18 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n19 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n20 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_Capabilities Message\ninforms the that the\nPolicy Engine SourceCapabilityTimer\n21 was successfully sent.\nNoResponseTimer\nSenderRespon ssteoTpism there , stops\nthe and starts the\n.\nUSB Power Delivery communication is re-established.\nPage 536 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.7 Power Role Swap\n8.3.2.7.1 Source Initiated Power Role Swap\n8.3.2.7.1.1 Source Initiated Power Role Swap (Accept)\nPower Role Swap Port\nMessage Source R CC\nThis is an example oNfe ag osuticacteiosnsful operation initiated by Eax plici tw Choincthr aincittially, Saetc tthioen s 8ta.3rt.2 o.2f ,t his\n\"Power N seegqouteiantcioen, i\"s acting as a and therefore has p pulled up on its wire. It does not include any\nsubsequent Power which is required in order to establish an (see\n). Power Role Swap\nThe\uf06cre are PfoRu_rS wdiastpinMcet spshaagsees to the :\n\uf06c A AcceptM essage is sent. PR_SwapMessage\n\uf06c An New S ink in response to the vSafe0V . R PS_RDYMessage\nThe sets its power output to , then asserts d and sends a when this\n\uf06c procNesesw i sS ocuomrcpelete. R vSafe5V PS_RDYMessage\nThe asserts p, then sets its power output to and sends a when it\nFigure 8i.3s 3r,e \"aSduyc ctoes ssufuplp Plyo wpeorw Reorl.e Swap Sequence Initiated by the Source\" Message\nPower Role Swap\nshows the s as they flow across\nthe bus and within the devices to accomplish the sequence.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 537\nFigure 8.33 Successful Power Role Swap Sequence Initiated by the Source\nInitial Source Port Initial Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send PR_Swap\n2:PR_Swap\n3: PR_Swap + CRC\nStart CRCReceiveTimer 4: PR_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: PR_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:PR_Swap sent Evaluate PR_Swap\nStart SenderResponseTimer request\n10: Send Accept\n11: Accept\n12: Accept + CRC\n13: Accept Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nTell Power Supply to stop sourcing power Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nStart PSSourceOffTimer\nPower Supply stops sourcing power Tell Power Sink to stop\nCC -> Rd sinking current\n19: Send PS_RDY\nPort Power Role -> Sink\n20: PS_RDY\n21: PS_RDY + CRC\nStart CRCReceiveTimer 22: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC Port Power Role -> Source\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer Stop PSSourceOffTimer\n27: PS_RDY sent Set Power S C u C p - p > ly R t p o 5V output\nStart PSSourceOnTimer\nPower Supply reaches 5V\noutput\n28: Send PS_RDY\n29: PS_RDY\n30: PS_RDY + CRC\n31: PS_RDY\nStart CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n32: PS_RDY received\n33: GoodCRC\n34: GoodCRC + CRC\nStop PSSourceOnTimer 35: GoodCRC\nTell Power Sink to start\nsinking power Check and increment MessageIDCounter\nReset Protocol Layer Stop CRCReceiveTimer\n36: PS_RDY sent\nReset CapsCounter\nReset Protocol Layer\nStart SwapSourceStartTimer\nNew Power Roles\nPage 538 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.60, \"Steps for a Successful Source Initiated Power Role Swap Sequence\"\nFigure 8.33, \"Successful Power Role Swap Sequence Initiated by\nthe Source\" below provides a detailed\nexplanation of what happens at each labeled step in\naboTvea.ble8.60 Steps for a Successful Source Initiated Power Role Swap Sequence\nStep Initial Source Port Initially Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 PR_SwapMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PR_Swap PHY Layer PR_SwapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC PR_Swap\n. Starts . the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine PR_SwapMessage\nstarts .\nSource\nevaluates the sent by\nPower Role Swap Protocol Layer\nthe and decides that it is able and willing to do the\n10 AcceptMessage\n. It tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Accept\nAccept\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine\nconsumes it.\nSenderResponseTimer\nThe requests its power supply to stop\n14 Protocol Layer GoodCRCMessage\nsupplying power and stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 539\nTable8.60 Steps for a Successful Source Initiated Power Role Swap Sequence\nStep Initial Source Port Initially Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nAcceptMessage Policy\ninforms the that the\n18 Engine PSSourceOffTimer\nwas successfully sent. The\nstarts the and tells the power\nPolicy Engine\nsupply to stop sinking current.\nVBUS Policy Engine\nThe determines its power supply is no\nDPM R CC\nlonger supplying . The requests the\nPolicy Engine Protocol Layer\nto assert the d pull down on the wire. The\nPS_RDYMessage Port Power Role\n19 then directs the to\nMessage Sink Port Partner\ngenerate a , with the\nVBUS\nset to , to tell its that it can\nProtocol Layer Port Power RoleMessage\nbegin to source .\nSink Message PHY Layer\nsets the to\n20 PHY Layer CRC PS_RDY PHY Layer PS_RDYMessage\n, creates the and passes to .\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks the\n21 PHY Layer CRC PS_RDY\n. Starts . to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\nPolicy Engine\n23 information to the that\nPSSourceOffTimer DPM R\nconsumes it. The stops the\n, directs the to apply the p pull\nvSafe5VSource\nup and then starts switching the power supply to\nProtocol Layer GoodCRCMessage\noperation.\nPHY Layer\ngenerates a and\n24 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n25 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPS_RDYMessage Policy Engine\n27 informs the that the\nPSSourceOnTimer\nwas successfully sent.\nPolicy Engine\nstarts .\nProtocol Layer PS_RDY\n, when its power supply is ready to supply\nMessage Port Power RoleMessage Source\n28 power, tells the to form a\nProtocol Layer PS_RDYMessage\n. The is set to .\nPHY Layer\ncreates the and passes\n29\nto .\nPage 540 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.60 Steps for a Successful Source Initiated Power Role Swap Sequence\nStep Initial Source Port Initially Sink Port\nPHY Layer PS_RDYMessage\nPHY Layer CRC PS_RDY\nCRC\nreceives the and compares Message CRCReceiveTimer\nMessage appends a and sends the\n30 the it calculated with the one sent to verify the\nPHY Layer CRC PS_RDY . Starts .\n.\nMessage Protocol Layer\nremoves the and forwards the\n31 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\n32 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n33 PHY Layer CRC GoodCRC\npasses it . PHY Layer GoodCRCMessage\nMessage Policy Engine\nappends a and sends the CRC\nPSSourceOnTimer receives and compares\nMessage\n34 . The stoPprso tthoceo l Layer the it calculated with the one sent to verify the\n, informs the power supply it can\nPHY Lay.er CRC GoodCRC\nnow sink power and resets the .\nMessage Protocol Layer\nremoves the and forwards the\n35 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPS_RDYMessage Policy\ninforms the that the\nEngine CapsCounter Protocol\nwas successfully sent. The\n36 Layer SwapSourceStartTimer\nresets the , resets the\nSource_Capabilities\nand starts the which\nMessage\nmust timeout before sending any\nPower Role Swap Power Role Port Partner Negotiate\ns.\nThe is complete, the s have been reversed and the s are free to for more\npower.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 541\n8.3.2.7.1.2 Source Initiated Power Role Swap (Reject)\nPower Role Swap Port\nMessage Source R CC\nThis is an example of a rejected operation initiated by a which initially, at the start of this\nsequence, is acting as aP ower R aonled Stwhearpefore has p pulled up on its wire.\nThe\uf06cre are PseRv_eSrwaal pphMaesesssa tgoe the :\n\uf06c A RejectM essage is sent. PR_SwapMessage\nFigure 8A.3n4 , \"Rejec ted Powe irn R roelsep Sownaspe tSoe qthueen ce Initiat ed by the. Source\" Message\nshows the s as they flow across\nthe bus and withinF tihgeu rdee v8i.c3e4s .Rejected Power Role Swap Sequence Initiated by the Source\nInitial Source Port Initial Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send PR_Swap\n2:PR_Swap\n3: PR_Swap + CRC\nStart CRCReceiveTimer 4: PR_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: PR_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:PR_Swap sent\nEvaluate PR_Swap\nStart SenderResponseTimer request\n10: Send Reject\n11: Reject\n12: Reject + CRC\n13: Reject Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nTell Power Supply to stop sourcing power Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nPage 542 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.61, \"Steps for a Rejected Source Initiated Power Role Swap Sequence\"\nFigure 8.34, \"Rejected Power Role Swap Sequence Initiated by the Source\"\nbelow provides a detailed explanation\nof what happens at each labeled step in\nabove. Table8.61 Steps for a Rejected Source Initiated Power Role Swap Sequence\nStep Initial Source Port Initially Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 PR_SwapMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PR_Swap PHY Layer PR_SwapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC PR_Swap\n. Starts . the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine PR_SwapMessage\nstarts .\nSource\nevaluates the sent by\nPower Role Swap Protocol Layer\nthe and decides that it is unable and unwilling to\n10 RejectMessage\ndo the . It tells the to\nProtocol Layer Message PHY\nform a .\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Reject\nReject\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 543\nTable8.61 Steps for a Rejected Source Initiated Power Role Swap Sequence\nStep Initial Source Port Initially Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent.\nPage 544 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.7.1.3 Source Initiated Power Role Swap (Wait)\nPower Role Swap Port\nMessage Source R CC\nThis is an example of a operation, with a wait response, initiated by a which initially, at the\nstart of this sequence, isP oawcteinr gR oasle a S wap and therefore has p pulled up on its wire.\nThe\uf06cre are PseRv_eSrwaal pphMaesesssa tgoe the :\n\uf06c A WaitMes sage is sent. PR_SwapMessage\nFigure 8A.3 5, \"Po wer Role iSnw raeps pSoenqusee ntoce t hwei th wait Ini tiated by. the Source\" Message\nshows the s as they flow across\nthe bus and withinF itghue rdee 8vi.c3e5s .Power Role Swap Sequence with wait Initiated by the Source\nInitial Source Port Initial Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send PR_Swap\n2:PR_Swap\n3: PR_Swap + CRC\nStart CRCReceiveTimer 4: PR_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: PR_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:PR_Swap sent\nEvaluate PR_Swap\nStart SenderResponseTimer request\n10: Send Wait\n11: Wait\n12: Wait + CRC\n13: Wait Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nTell Power Supply to stop sourcing power Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 545\nTable8.62, \"Steps for a Source Initiated Power Role Swap with Wait Sequence\"\nFigure 8.35, \"Power Role Swap Sequence with wait Initiated by the Source\"\nbelow provides a detailed explanation\nof what happens at each labeled step in\nabove. Table8.62 Steps for a Source Initiated Power Role Swap with Wait Sequence\nStep Initial Source Port Initially Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 PR_SwapMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PR_Swap PHY Layer PR_SwapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC PR_Swap\n. Starts . the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine PR_SwapMessage\nstarts .\nSource\nevaluates the sent by\nPower Role Swap Protocol\nthe and decides that it is able and willing to do the\n10 Layer WaitMessage\nbut not at this time. It tells the\nProtocol Layer Message PHY\nto form a .\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC WaitMessage\nWait\nreceives the and compares the CRCReceiveTimer\nMessage appends a and sends the .\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer WaitMessage\n13 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nPolicy Engine SenderResponseTimer\ninformation to the that consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 546 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.62 Steps for a Source Initiated Power Role Swap with Wait Sequence\nStep Initial Source Port Initially Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Wait\nand stops .\n18 Message\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 547\n8.3.2.7.2 Sink Initiated Power Role Swap\n8.3.2.7.2.1 Sink Initiated Power Role Swap (Accept)\nPower Role Swap Port\nMessage Sink R CC\nThis is an example oNfe ag osuticacteiosnsful operation initiated by Eax plici tw Choincthr aincittially, Saetc tthioen s 8ta.3rt.2 o.2f ,t his\n\"Power N seegqouteiantcioen, i\"s acting as a and therefore has d pulled down on its wire. It does not include any\nsubsequent Power which is required in order to establish an (see\n). Power Role Swap\nThe\uf06cre are PfoRu_rS wdiastpinMcet spshaagsees to the :\n\uf06c A AcceptM essage is sent. PR_SwapMessage\n\uf06c An New S ink in response to the vSafe0V . R PS_RDYMessage\nThe sets its power output to , then asserts d and sends a when this\n\uf06c procNesesw i sS ocuomrcpelete. R vSafe5V PS_RDYMessage\nThe asserts p, then sets its power output to and sends a when it\nFigure 8i.3s 6r,e \"aSduyc ctoes ssufuplp Ployw peorw Reorl.e Swap Sequence Initiated by the Sink\" Message\nPower Role Swap\nshows the s as they flow across the\nbus and within the devices to accomplish the .\nPage 548 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 8.36 Successful Power Role Swap Sequence Initiated by the Sink\nInitial Sink Port Initial Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send PR_Swap\n2:PR_Swap\n3: PR_Swap + CRC\nStart CRCReceiveTimer 4: PR_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: PR_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:PR_Swap sent\nEvaluate PR_Swap\nStart SenderResponseTimer request\n10: Send Accept\n11: Accept\n12: Accept + CRC\n13: Accept Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nStart PSSourceOffTimer Check and increment MessageIDCounter\nTell Power Sink to stop Stop CRCReceiveTimer\nsinking current\n18: Accept sent\nTell Power Supply to stop sourcing power\nPower Supply stops sourcing power\nCC -> Rd\n19: Send PS_RDY\nPort Power Role -> Sink\n20: PS_RDY\n21: PS_RDY + CRC\n22: PS_RDY\nStart CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC\n25: GoodCRC + CRC\nPort Power Role -> Source 26: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nStop PSSourceOffTimer\nCC -> Rp 27: PS_RDY sent\nSet Power Supply to 5V output\nStart PSSourceOnTimer\nPower Supply reaches 5V\noutput\n28: Send PS_RDY\n29: PS_RDY\n30: PS_RDY + CRC\nStart CRCReceiveTimer 31: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n32: PS_RDY received\n33: GoodCRC\n34: GoodCRC + CRC\n35: GoodCRC Stop PSSourceOnTimer\nCheck and increment MessageIDCounter Tell Power Supply to start\nStop CRCReceiveTimer sinking power\nReset Protocol Layer\n36: PS_RDY sent\nReset CapsCounter\nReset Protocol Layer\nStart SwapSourceStartTimer\nNew Power Roles\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 549\nTable8.63, \"Steps for a Successful Sink Initiated Power Role Swap Sequence\"\nFigure 8.36, \"Successful Power Role Swap Sequence Initiated by the Sink\"\nbelow provides a detailed explanation\nof what happens at each labeled step in\nabove. Table8.63 Steps for a Successful Sink Initiated Power Role Swap Sequence\nStep Initial Sink Port Initial Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 PR_SwapMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PR_Swap PHY Layer PR_SwapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC PR_Swap\n. Starts . the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine PR_SwapMessage\nstarts .\nSink\nevaluates the sent by\nPower Role Swap Protocol Layer\nthe and decides that it is able and willing to do the\n10 AcceptMessage\n. It tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC AcceptMessage\nAccept\nreceives the and compares the CRCReceiveTimer\nMessage appends a and sends the .\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nPSSourceOffTimer\nThe stops the ,\n14 starts the and tells the power supply\nto stop sinking current.\nPage 550 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.63 Steps for a Successful Sink Initiated Power Role Swap Sequence\nStep Initial Sink Port Initial Source Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nAcceptMessage Policy\n18 informs the that the\nEngine\nwas successfully sent. The\nPolicy Engine\ntells the power supply to stop supplying power.\nVBUS Policy Engine\nThe determines its power supply is no\nDPM R CC\nlonger supplying . The requests the\nPolicy Engine Protocol Layer\nto assert the d pull down on the wire. The\nPS_RDYMessage Port Power Role\n19 then directs the to\nMessage Sink Port Partner\ngenerate a , with the\nVBUS\nset to , to tell its that it can\nProtocol Layer Port Power RoleMessage Sink\nbegin to source .\nMessage PHY Layer\nsets the to ,\n20 PHY Layer PS_RDYMessage PHY Layer CRC PS_RDYMessage\ncreates the and passes to .\nCRC Message CRCReceiveTimer\nreceives the and checks the appends and sends the .\n21 PHY Layer CRC PS_RDY\nto verify the . Starts .\nMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\nPolicy Engine\n23 information to the that\nPSSourceOffTimer DPM R\nconsumes it. The stops the\n, directs the to apply the p\nvSafe5VSource\npull up and then starts switching the power supply to\nProtocol Layer GoodCRCMessage\noperation.\nPHY Layer\ngenerates a and\n24 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n25 PHY Layer CRC GoodCRC\n. the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPS_RDYMessage Policy Engine\n27 informs the that the\nPSSourceOnTimer\nwas successfully sent.\nPolicy Engine\nstarts .\nProtocol Layer PS_RDY\n, when its power supply is ready to\nMessage Port Power RoleMessage Source\n28 supply power, tells the to form a\nProtocol Layer PS_RDYMessage\n. The is set to .\nPHY Layer\ncreates the and passes\n29\nto .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 551\nTable8.63 Steps for a Successful Sink Initiated Power Role Swap Sequence\nStep Initial Sink Port Initial Source Port\nPHY Layer PS_RDYMessage\nPHY Layer CRC PS_RDY\nCRC\nMessage CRCReceiveTimer receives the and compares\nappends a and sends the Message\n30 the it calculated with the one sent to verify the\n. Starts . PHY Layer CRC PS_RDY\n.\nMessage Protocol Layer\nremoves the and forwards the\n31 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\n32 Policy Engine\ninformation to the that\nPSSourceOnTimer\nconsumes it. The stops the\n, informs the power supply that it can\nProtocol Layer GoodCRCMessage\nstart consuming power.\nPHY Layer\ngenerates a and\n33 PHY Layer CRC GoodCRC\nPHY Layer GoodCRCMessage passes it .\nMessage Policy Engine\nCRC appends a and sends the\nreceives and compares PSSourceOnTimer\nMessage\n34 the it calculated with the one sent to verify the . The stoPprso tthoceo l Layer\n, informs the power supply it can\nPHY Laye.r CRC GoodCRC\nnow sink power and resets the .\nProtocol Layer\nremoves the and forwards the\n35 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPS_RDYMessage Policy\ninforms the that the\nEngine CapsCounter Protocol\nwas successfully sent. The\n36 Layer SwapSourceStartTimer\nresets the , resets the\nSource_Capabilities\nand starts the which\nMessage\nmust timeout before sending any\nPower Role Swap Power Role Port Partner Negotiate\ns.\nThe is complete, the s have been reversed and the s are free to for more\npower.\nPage 552 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.7.2.2 Sink Initiated Power Role Swap (Reject)\nPower Role Swap Port\nMessage Sink R CC\nThis is an example of a rejected operation initiated by a which initially, at the start of this\nsequence, is acting as aP owe ar nRdo lteh Sewreafopre has d pulled down on its wire.\nThe\uf06cre are PseRv_eSrwaal pphMaesesssa tgoe the :\n\uf06c A RejectMe ssage is sent. PR_SwapMessage\nFigure 8A.3 7, \"Reje cted Pow ienr rReoslpeo Snwsae pt oS ethqeu ence Initia ted by th.e Sink\" Message\nshows the s as they flow across the\nbus and within the dFeigvuicrees .8.37 Rejected Power Role Swap Sequence Initiated by the Sink\nInitial Sink Port Initial Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send PR_Swap\n2:PR_Swap\n3: PR_Swap + CRC\nStart CRCReceiveTimer 4: PR_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: PR_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:PR_Swap sent\nEvaluate PR_Swap\nStart SenderResponseTimer request\n10: Send Reject\n11: Reject\n12: Reject + CRC\n13: Reject Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 553\nTable8.64, \"Steps for a Rejected Sink Initiated Power Role Swap Sequence\"\nFigure 8.37, \"Rejected Power Role Swap Sequence Initiated by the Sink\"\nbelow provides a detailed explanation of\nTable8.64 Steps for a Rejected Sink Initiated Power Role Swap Sequence\nwhat happens at each labeled step in above.\nStep Initial Sink Port Initial Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 PR_SwapMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PR_Swap PHY Layer PR_SwapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC PR_Swap\n. Starts . the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine PR_SwapMessage\nstarts .\nSink\nevaluates the sent by\nPower Role Swap Protocol Layer\nthe and decides that it is unable and unwilling to do\n10 RejectMessage\nthe . It tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Accept\nReject\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 554 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.64 Steps for a Rejected Sink Initiated Power Role Swap Sequence\nStep Initial Sink Port Initial Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 555\n8.3.2.7.2.3 Sink Initiated Power Role Swap (Wait)\nPower Role Swap Port\nMessage Sink R CC\nThis is an example of a operation, responded to with wait, initiated by a which initially, at the\nstart of this sequence, isP oawcteinr gR oasle a S wap and therefore has d pulled down on its wire.\nThe\uf06cre are PseRv_eSrwaal pphMaesesssa tgoe the :\n\uf06c A WaitMes sage is sent. PR_SwapMessage\nFigure 8A.3 8, \"Po wer Role Sinw raeps pSeoqnuseen tcoe t wheit h wait Init iated by t.he Sink\" Message\nshows the s as they flow across the\nbus and within the Fdiegvuicrees 8. .38 Power Role Swap Sequence with wait Initiated by the Sink\nInitial Sink Port Initial Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send PR_Swap\n2:PR_Swap\n3: PR_Swap + CRC\nStart CRCReceiveTimer 4: PR_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: PR_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:PR_Swap sent\nEvaluate PR_Swap\nStart SenderResponseTimer request\n10: Send Wait\n11: Wait\n12: Wait + CRC\n13: Wait Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nPage 556 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.65, \"Steps for a Sink Initiated Power Role Swap with Wait Sequence\"\nFigure 8.38, \"Power Role Swap Sequence with wait Initiated by the Sink\"\nbelow provides a detailed explanation\nof what happens at each labeled step in\nabove. Table8.65 Steps for a Sink Initiated Power Role Swap with Wait Sequence\nStep Initial Sink Port Initial Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 PR_SwapMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PR_Swap PHY Layer PR_SwapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC PR_Swap\n. Starts . the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine PR_SwapMessage\nstarts .\nSink\nevaluates the sent by\nPower Role Swap Protocol\nthe and decides that it is able and willing to do the\n10 Layer WaitMessage\nbut not at this time. It tells the\nProtocol Layer Message PHY\nto form a .\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC WaitMessage\nWait\nreceives the and compares the CRCReceiveTimer\nMessage appends a and sends the .\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer WaitMessage\n13 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nPolicy Engine SenderResponseTimer\ninformation to the that consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 557\nTable8.65 Steps for a Sink Initiated Power Role Swap with Wait Sequence\nStep Initial Sink Port Initial Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC Wait\nMessage receives and compares the\nappends a and sends the Message\n16 it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Wait\nand stops .\n18 Message\ninforms the that the\nwas successfully sent\nPage 558 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.8 Fast Role Swap\nFast Role Swap Port Source\nR CC vSafe5V\nThis is an example oNf eag soutciacetisosnful operation initiated by a Exp tlhicaitt iCso innittriaacllty a Secti aonnd 8 t.3h.e2r.2e,f ore\nh\"Paosw e p r p Nuellgeodt uiapt ioonn \"its wire and which has lost power and needs to get quickly. It does not include any\nsubsequent Power which is required in order to establish an (see\n). Fast Role SwapNegotiation\nThe\uf06cre are seIvneirtaial ld Siostuirnccet phases to the : vSafe0V\nFast Role Swap Request CC\nThe stops driving its power output which starts transitioning to and send the\n\uf06c Initial Sink on the wire; these could ocNceuwr iSno euirtcheer order oRr simultaneously. New Sink\nR\nThe stops sinking power. At this point the still has d asserted and the\n\uf06c stillF hRa_sS wpa apsMseerstseadg.e New Source tFRSwapInit\n\uf06c An AcceptM essage is sent by thNee w Sink within FR_Sw aopf dMeetesscatigneg the Fast Swap signal.\n\uf06c An New S ink is Rsent by the PS_RD iYnM reesspsaognese to the . VBUS\nvSafe5V\nThe asserts d and sends a indicating that the voltage on is at or below\n\uf06c New. Source R PS_RDYMessage Source\nvSafe5V\nThe asserts p and sends a indicating that it is acting as a and is sup-\nNote: plying New Sour.ce VBUS VBUS vSafe5V\nVBUS vSafe5V tSrcFRSwap Fast Role Swap Request VBUS\nThe canv sStaarfet 5aVpplying when is at or below (max) but will start driving\nto no later than after detecting both the and that\nFigure 8.39h,a \"sS durcocepspsefudl bFealsotw R ole Swap (Smeqiune).nce\" Message\nFast Role Swap\nshows the s as they flow across the bus and within the\ndevices to accomplish the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 559\nFigure 8.39 Successful Fast Role Swap Sequence\nInitial Sink Port Initial Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\nFast Swap signal\n(CC driven to Gnd through Tell Power Supply to Stop sourcing power and\nrFRSwapTx or switch to Sink operation\nrFRSwapCableTx) Signal Fast Swap on the CC Wire\nFast Role Swap signal detected on CC Wire\nTell Power Supply to stop sinking current.\n1: Send FR_Swap\n2:FR_Swap\n3: FR_Swap + CRC\nStart CRCReceiveTimer 4: FR_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n6: GoodCRC 5: FR_Swap received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:FR_Swap sent\nEvaluate FR_Swap request\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\n13: Accept Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received 15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer Check and increment MessageIDCounter\nStart PSSourceOffTimer Stop CRCReceiveTimer\n18: Accept sent\nPower Supply acting as a Sink and\nVBUSat or below vSafe5V\nCC -> Rd\n19: Send PS_RDY\nPort Power Role -> Sink\n20: PS_RDY\n21: PS_RDY + CRC\n22: PS_RDY\nStart CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received 24: GoodCRC\n25: GoodCRC + CRC\nPort Power Role -> Source 26: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: PS_RDY sent\nStart PSSourceOnTimer\nvSafe5V is being sourced by the new Source\nStop PSSourceOffTimer\nCC -> Rp\n28: Send PS_RDY\n29: PS_RDY\n30: PS_RDY + CRC\nStart CRCReceiveTimer 31: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n33: GoodCRC 32: PS_RDY received\n34: GoodCRC + CRC\n35: GoodCRC\nCheck an S d t o in p c C re R m C e R n e t c M ei e v s e s T a i g m e e ID r Counter S R to e p s P et S P S r o o u to rc c e o O l L n a T y im er er\n36: PS_RDY sent\nReset CapsCounter\nReset Protocol Layer\nStart SwapSourceStartTimer\nNew Power Roles\nPage 560 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.66, \"Steps for a Successful Fast Role Swap Sequence\"\nFigure 8.39, \"Successful Fast Role Swap Sequence\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.66 Steps for a Successful Fast Role Sawboavpe S.equence\nStep Initial Sink Port Initial Source Port\nPort Port Power Role Sink R Port Port Power Role Source R\nCC CC\nThe has set to with the d The has set to and the p\nDPM CC DPM\npull down on its wire. pull up on its wire.\nSink\nThe detects Fast Swap on the wire and tells the The tells the Power Supply to stop sourcing power\nPolicy Engine Protocol Layer DPM CC CC\n1 power supply to stop sinking current. and switch to operation.\nFR_SwapMessage tFRSwapInit rFRSwapTx\nThe directs the to send an The tF sRiSgwnaalps TFaxst Swap on the wire by driving\nwithin of detecting the to ground with a resistance of less than for\nProtocol Layer Message PHY\nFast Swap signal. at least .\nLayer\ncreates the and passes to\n2 PHY Layer CRC FR_Swap PHY Layer FR_SwapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC PR_Swap\n. Starts . the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer FR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nFR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine PR_SwapMessage\nstarts .\nSink\nevaluates the sent by\nPower Role Swap Protocol Layer\nthe and decides that it is able and willing to do the\n10 AcceptMessage\n. It tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC AcceptMessage\nAccept\nreceives the and compares the CRCReceiveTimer\nMessage appends a and sends the .\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PR_Swap\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nPSSourceOffTimer\nThe stops the ,\n14\nstarts the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 561\nTable8.66 Steps for a Successful Fast Role Swap Sequence\nStep Initial Sink Port Initial Source Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpHasYs eLsa yite r .CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 AcceptMessage\ninforms the that the\nPolicy Engine\nwas successfully sent.\nVBUS Sink Policy\nThe determines its power supply is no\nEngine DPM R\nlonger supplying and is acting as a . The\nCC Policy Engine Protocol\nrequests the to assert the d pull down on\nLayer PS_RDYMessage Port\n19 the wire. The then directs the\nPower RoleMessage Sink Port Partner\nto generate a , with the\nVBUS\nset to , to tell its\nProtocol Layer Port Power RoleMessage Sink\nthat it can begin to source .\nMessage PHY Layer\nsets the to ,\n20 PHY Layer PS_RDYMessage PHY Layer CRC PS_RDYMessage\ncreates the and passes to .\nCRC Message CRCReceiveTimer\nreceives the and checks appends and sends the .\n21 PHY Layer CRC PS_RDY\nthe to verify the . Starts .\nMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\nMessage Policy Engine\n23 The forwards the received\nPolicy Engine\ninformation to the that\nPSSourceOffTimer\nconsumes it. The stops the\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\ngenerates a and\n24 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n25 PHY Layer CRC GoodCRC\n. the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPS_RDYMessage Policy Engine\n27 informs the that the\nPSSourceOnTimer\nwas successfully sent.\nstarts .\nPage 562 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.66 Steps for a Successful Fast Role Swap Sequence\nStep Initial Sink Port Initial Source Port\nPolicy Engine DPM R\nThe directs the to apply the p pull\nuNpo.te:\nPS_RDY Message New Source\nAt somvSea pfoei5nVt (either beforet Sorrc aFfRteSrw raepceiving\nthe Fast Ro)l eth Sew ap Request has ap-\n28 pVl B i U e S d no later thvanSa fe5V after\ndetecting the and that\nPolicy Engi nheas dropped below .\nProtocol Layer PS_RDY\n, when its power supply is ready to\nMessage Port Power RoleMessage Source\nsupply power, tells the to form a\nProtocol Layer PS_RDYMessage\n. The is set to .\nPHY Layer\ncreates the and passes\n29 PHY Layer PS_RDYMessage\ntPoH Y Layer . CRC PS_RDY\nCRC\nMessage CRCReceiveTimer receives the and compares\nappends a and sends the Message\n30 the it calculated with the one sent to verify the\n. Starts . PHY Layer CRC PS_RDY\n.\nMessage Protocol Layer\nremoves the and forwards the\n31 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\nMessage Policy Engine\n32 The forwards the received\nPolicy Engine\ninformation to the that\nPSSourceOnTimer\nconsumes it. The stops the\nProtocol Layer GoodCRCMessage\n.\nPHY Layer\ngenerates a and\n33 PHY Layer GoodCRCMessage\npPHasYs eLsa iyte r . CRC GoodCRC\nCRC\nreceives and compares Message Policy Engine Protocol Layer\nMessage appends a and sends the\n34 the it calculated with the one sent to verify the\nPHY Layer CRC . The resets the .\n.\nGoodCRC Protocol Layer\nremoves the and forwards the\n35 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nPS_RDYMessage Policy\ninforms the that the\nEngine CapsCounter Protocol\nwas successfully sent. The\n36 Layer SwapSourceStartTimer\nresets the , resets the\nSource_Capabilities\nand starts the which\nMessage\nmust timeout before sending any\nFast Role Swap Power Role Port Partner Negotiate\ns.\nThe is complete, the s have been reversed and the s are free to for more\npower.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 563\n8.3.2.9 Data Role Swap\n8.3.2.9.1 Data Role Swap, Initiated by UFP Operating as Sink\n8.3.2.9.1.1 Data Role Swap, Initiated by UFP Operating as Sink (Accept)\nFigure 8.40, \"Data Role Swap, UFP operating as Sink initiates\" Port\nUFP Device Sink R Port DFP Host Source R\nData Role Swap UFP shoPwosr ta nP aerxtanmerple sequence between a , which is\niSnoiutiraclely a Sin (k ) and aR R ( d asserted), and a which isD iantitai aRlolyle a ( D) FaPndH ao st (U p F PassDeervteicde).\nA is initiated by the . During the process the s maintain their operation as either a\nor a (power anFdig upr/e 8d .r4e0m Daiant aco Rnostlean Stw) baupt, eUxFcPh aonpgeer ating as Ssi bnekt wineietina tes ( ) and ( ).\nInitial UFP Sink Port Initial DFP Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Dat C a C R = o l R e d = ( U Si F n P k ) (Device) Port D C a C ta = R R o p le ( S = o D u F rc P e ) (Host)\n1: Send Dr_Swap\n2:Dr_Swap\n3: Dr_Swap + CRC\nStart CRCReceiveTimer 4: Dr_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC Evaluate Dr_Swap request\nCC = Rp (Source)\nCheck and increment MessageIDCounter Port Data Role = DFP (Host)\nStop CRCReceiveTimer\n9:Dr_Swap sent\nStart SenderResponseTimer\nCC = Rd (Sink) 10: Send Accept\nPort Data Role = UFP (Device) 11: Accept\n12: Accept + CRC\n13: Accept Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nPort Da C ta C R = o R le d - ( > S D in F k P ) (Host) Port Da C ta C R = o R le p - ( > S o U u F r P c e ( ) Device)\nNew Host/Device Roles\nPage 564 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.67, \"Steps for Data Role Swap, UFP operating as Sink initiates\"\nFigure 8.40, \"Data Role Swap, UFP operating as Sink initiates\"\nbelow provides a detailed explanation of what\nhappens at each labeTleadb lsete8p.6 in7 Steps for Data Role Swap, UFP operating as Sink initiate sabove.\nStep Initial UFP Sink Port Initial DFP Source Port\nPort UFP Device Sink R\nPort Data Role UFP Policy Port DFP Host Source R\nstarts as a ( ) operating as a with d\nEngine Protocol Layer DR_Swap Port Data Role DFP\nasserted and set to . The starts as a ( ) operating as with p\n1 Message\ndirects the to send a asserted and set to .\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and\n2 PHY Layer CRC DR_Swap PHY Layer DR_SwapMessage\npasses to .\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer Accept\ndecides that it is able and willing to do the\n10 Message\n. It tells the to form an\nProtocol Layer AcceptMessage\n.\nPHY Layer\ncreates the and passes\n11 PHY Layer AcceptMessage PHY Layer CRC Accept\nto .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends a and sends the\n12 Protocol Layer MessageID\nthe to verify the . . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 565\nTable8.67 Steps for Data Role Swap, UFP operating as Sink initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPHY Layer CRC\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nPolicy Engine Data Role verifies and increments the\nProtocol Layer Policy Engine\nUFP Device DFP Host and stops .\nThe requests that is changed AcceptMessage\nData Role DFP Host informs the that the\nfrom ( ) to ( ). Policy Engine Data Role\nPort Data Role DFP Sink was successfully sent.\n18 The Power Delivery is now a ( ), UFP Device Port Data Role\nR The requests that the is\nwith set to , still operating as a UFP Source R\nchanged to ( ), with set to\n( d asserted).\nand continues supplying power as a ( p\nData Role Swap Data Role\nasserted).\nThe is complete; the s have been reversed while maintaining the direction of power flow.\nPage 566 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.9.1.2 Data Role Swap, Initiated by UFP Operating as Sink (Reject)\nFigure 8.41, \"Rejected Data Role Swap, UFP operating as Sink initiates\" Port\nUFP Device Sink R Port DFP Host Source R\nData Role Swap UFP showPs oarnt ePxaarmtnpelre sequence between a ,\nwhich is iniStoiaulrlyc ea S (ink ) and a R (R d asserted), and a which is initially aD ata R (ole ) and a ( p\nasserted). A is initiated by the . During the process the s maintain their operation\nas either a orF ai gure (8p.o4w1 eRre ajnecdt edp/ Dda trae mRoailne cSownaspta, nUtF) Pan odp tehrea etixncgh aansg Sei nokf initiatess is rejected.\nInitial UFP Sink Port Initial DFP Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Dat C a C R = o l R e d = ( U Si F n P k ) (Device) Port D C a C ta = R R o p le ( S = o D u F rc P e ) (Host)\n1: Send Dr_Swap\n2:Dr_Swap\n3: Dr_Swap + CRC\nStart CRCReceiveTimer 4: Dr_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC Evaluate Dr_Swap request\nCC = Rp (Source)\nCheck and increment MessageIDCounter Port Data Role = DFP (Host)\nStop CRCReceiveTimer\n9:Dr_Swap sent\nStart SenderResponseTimer\nCC = Rd (Sink) 10: Send Reject\nPort Data Role = UFP (Device) 11: Reject\n12: Reject + CRC\n13: Reject Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nPort Dat C a C R o = l e R - d > ( S U i F n P k) (Device) Port D C a C ta = R R o p le ( S -> o u D r F c P e ) (Host)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 567\nTable8.68, \"Steps for Rejected Data Role Swap, UFP operating as Sink initiates\"\nFigure 8.41, \"Rejected Data Role Swap, UFP operating as Sink\ninitiates\" below provides a detailed\nexplanation of what happens at each labeled step in\naboveT. able8.68 Steps for Rejected Data Role Swap, UFP operating as Sink initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPort UFP Device Sink R\nPort Data Role UFP Policy Port DFP Host Source R\nstarts as a ( ) operating as a with d\nEngine Protocol Layer DR_Swap Port Data Role DFP\nasserted and set to . The starts as a ( ) operating as with p\n1 Message\ndirects the to send a asserted and set to .\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and\n2 PHY Layer CRC DR_Swap PHY Layer DR_SwapMessage\npasses to .\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData\nevaluates the and\nRole Swap Protocol Layer Reject\ndecides that it is unable and unwilling to do the\n10 Message\n. It tells the to form a\nProtocol Layer Reject Message\n.\nPHY Layer\ncreates the and passes\n11 PHY Layer RejectMessage PHY Layer CRC Reject\nto .\nCRC Message Message CRCReceiveTimer\nreceives the and checks the appends a and sends the\n12 Protocol Layer MessageID\nto verify the . . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 568 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.68 Steps for Rejected Data Role Swap, UFP operating as Sink initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC\n.\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 569\n8.3.2.9.1.3 Data Role Swap, Initiated by UFP Operating as Sink (Wait)\nFigure 8.42, \"Data Role Swap with Wait, UFP operating as Sink initiates\" Port\nUFP Device Sink R Port DFP Host Source R\nData Role Swap UFP showPso arnt ePxaarmtnperle sequence between a ,\nwhich is iniStoiaulrlyc ea S (ink ) and a R (R d asserted), and a which is initially Da ata R (ole ) and a ( p\nasserted). A is initiated by the . During the process the s maintain their operation\nas either a or a (power and p/ d remain constant) and the exchange of s is delayed with a\nwait. Figure 8.42 Data Role Swap with Wait, UFP operating as Sink initiates\nInitial UFP Sink Port Initial DFP Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Dat C a C R = o l R e d = ( U Si F n P k ) (Device) Port D C a C ta = R R o p le ( S = o D u F rc P e ) (Host)\n1: Send Dr_Swap\n2:Dr_Swap\n3: Dr_Swap + CRC\nStart CRCReceiveTimer 4: Dr_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC Evaluate Dr_Swap request\nCC = Rp (Source)\nCheck and increment MessageIDCounter Port Data Role = DFP (Host)\nStop CRCReceiveTimer\n9:Dr_Swap sent\nStart SenderResponseTimer\nCC = Rd (Sink) 10: Send Wait\nPort Data Role = UFP (Device) 11: Wait\n12: Wait + CRC\n13: Wait Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nPort Dat C a C R o = l e R - d > ( S U i F n P k) (Device) Port D C a C ta = R R o p le ( S -> o u D r F c P e ) (Host)\nPage 570 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.69, \"Steps for Data Role Swap with Wait, UFP operating as Sink initiates\"\nFigure 8.42, \"Data Role Swap with Wait, UFP operating as Sink\ninitiates\" below provides a detailed\nexplanation of what happens at each labeled step in\naboveT.able8.69 Steps for Data Role Swap with Wait, UFP operating as Sink initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPort UFP Device Sink R\nPort Data Role UFP Policy Port DFP Host Source R\nstarts as a ( ) operating as a with d\nEngine Protocol Layer DR_Swap Port Data Role DFP\nasserted and set to . The starts as a ( ) operating as with p\n1 Message\ndirects the to send a asserted and set to .\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and\n2 PHY Layer CRC DR_Swap PHY Layer DR_SwapMessage\npasses to .\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer\ndecides that it is able and willing to do the\n10 WaitMessage\nbut not at this time. It tells the\nProtocol Layer WaitMessage\nto form a .\nPHY Layer\ncreates the and passes to\n11 PHY Layer WaitMessage PHY Layer CRC WaitMessage\n.\nCRC Message CRCReceiveTimer\nreceives the and checks the appends a and sends the .\n12 Protocol Layer MessageID\nto verify the . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Wait\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 571\nTable8.69 Steps for Data Role Swap with Wait, UFP operating as Sink initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC\n.\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 WaitMessage\ninforms the that the\nwas successfully sent.\nPage 572 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.9.2 Data Role Swap, Initiated by UFP Operating as Source\n8.3.2.9.2.1 Data Role Swap, Initiated by UFP Operating as Source (Accept)\nFigure 8.43, \"Data Role Swap, UFP operating as Source initiates\" Port\nUFP Device Source R Port DFP Host Sink R\nData Role Swap UFP shows an exPaomrpt lPea sretqnuerence between a , which\nis initially aS ourc e( Si)n aknd a (R p aRsserted), and a which is initiaDllya taa Role ( ) and Da FP H (os d t\nUasFsPertDeedv)i.c Ae is initiated by the . During the process the s maintain their operation\nas either a or a (power and p/ d remain constant) but exchange s between ( ) and\n( ). Figure 8.43 Data Role Swap, UFP operating as Source initiates\nInitial UFP Source Port Initially DFP Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role = UFP (Device) Port Data Role = DFP (Host)\n1: Send Dr_Swap\n2:Dr_Swap\n3: Dr_Swap + CRC\nStart CRCReceiveTimer 4: Dr_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nEvaluate Dr_Swap request\nStop CRCReceiveTimer\nCC = Rd (Sink)\n9:Dr_Swap sent Port Data Role = DFP (Host)\nStart SenderResponseTimer\nCC = Rp (Source) 10: Send Accept\nPort Data Role = UFP (Device) 11: Accept\n12: Accept + CRC\n13: Accept Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role -> DFP (Host) Port Data Role -> UFP (Device)\nNew Host/Device Roles\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 573\nTable8.70, \"Steps for Data Role Swap, UFP operating as Source initiates\"\nFigure 8.43, \"Data Role Swap, UFP operating as Source initiates\"\nbelow provides a detailed explanation of\nwhat happens at eaTcahb lalebe8l.e7d0 s tSetpe pins for Data Role Swap, UFP operating as Source initiates above.\nStep Initial UFP Source Port Initial DFP Sink Port\nPort UFP Device Source\nR Port Data Role UFP Policy Port DFP Host Sink R\nstarts as a ( ) operating as with\nEngine Protocol Layer DR_Swap Port Data Role DFP\np asserted and set to . The starts as a ( ) operating as a with d\n1 Message\ndirects the to send a asserted and set to .\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and\n2 PHY Layer CRC DR_Swap PHY Layer DR_SwapMessage\npasses to .\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer Accept\ndecides that it is able and willing to do the\n10 Message\n. It tells the to form an\nProtocol Layer AcceptMessage\n.\nPHY Layer\ncreates the and passes\n11 PHY Layer AcceptMessage PHY Layer CRC Accept\nto .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends a and sends the\n12 Protocol Layer MessageID\nthe to verify the . . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte r . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nPage 574 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.70 Steps for Data Role Swap, UFP operating as Source initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPHY Layer CRC\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nPolicy Engine Data Role MessageIDCounter CRCReceiveTimer\nverifies and increments the\nUFP Device DFP Host Protocol Layer Policy Engine\nThe requests that is changed and stops .\nData Role DFP Host AcceptMessage Policy\nfrom ( ) to ( ). informs the that the\nPort Data Role DFP Engine Data Role UFP\n18 The Power D So e u li r v c e e ry R is now a ( ), and Device Po w rt a s D s a u t c a c R es o s l f e ully sen U t. F T P he\nset to and continues supplying reques S ts in t k ha R t the is changed to\npower as a ( p asserted). ( ), with set to and still\nData Role Swap Data Role operating as a ( p asserted).\nThe is complete; the s have been reversed while maintaining the direction of power flow.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 575\n8.3.2.9.2.2 Data Role Swap, Initiated by UFP Operating as Source (Reject)\nFigure 8.44, \"Rejected Data Role Swap, UFP operating as Source initiates\"\nPort UFP Device Source R Port DFP Host Sink\nR Data Role Swap UFP showsP aonr te Pxaamrtnpeler sequence between a\n, which is initiallyS ao urce ( Sin)k and a (R p aRsserted), and a which is initially a Da (ta Ro)l eand a\n( d asserted). A is initiated by the . During the process the s maintain their\noperation as either a or a (power and p/ d remain constant) and the exchange of s is\nrejected. Figure 8.44 Rejected Data Role Swap, UFP operating as Source initiates\nInitial UFP Source Port Initially DFP Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role = UFP (Device) Port Data Role = DFP (Host)\n1: Send Dr_Swap\n2:Dr_Swap\n3: Dr_Swap + CRC\nStart CRCReceiveTimer 4: Dr_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nEvaluate Dr_Swap request\nStop CRCReceiveTimer\nCC = Rd (Sink)\n9:Dr_Swap sent Port Data Role = DFP (Host)\nStart SenderResponseTimer\nCC = Rp (Source) 10: Send Reject\nPort Data Role = UFP (Device) 11: Reject\n12: Reject + CRC\n13: Reject Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role -> UFP (Device) Port Data Role -> DFP (Host)\nPage 576 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.71, \"Steps for Rejected Data Role Swap, UFP operating as Source initiates\"\nFigure 8.44, \"Rejected Data Role Swap, UFP operating as Source\ninitiates\" below provides a detailed\nexplanation of what happens at each labeled step in\nabovTea. ble8.71 Steps for Rejected Data Role Swap, UFP operating as Source initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPort UFP Device Source\nR Port Data Role UFP Policy Port DFP Host Sink R\nstarts as a ( ) operating as with\nEngine Protocol Layer DR_Swap Port Data Role DFP\np asserted and set to . The starts as a ( ) operating as a with d\n1 Message\ndirects the to send a asserted and set to .\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and\n2 PHY Layer CRC DR_Swap PHY Layer DR_SwapMessage\npasses to .\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData\nevaluates the and\nRole Swap Protocol Layer Reject\ndecides that it is unable and unwilling to do the\n10 Message\n. It tells the to form a\nProtocol Layer RejectMessage\n.\nPHY Layer\ncreates the and passes\n11 PHY Layer RejectMessage PHY Layer CRC Reject\nto .\nCRC Message Message CRCReceiveTimer\nreceives the and checks the appends a and sends the\n12 Protocol Layer MessageID\nto verify the . . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 577\nTable8.71 Steps for Rejected Data Role Swap, UFP operating as Source initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC\n.\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent.\nPage 578 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.9.2.3 Data Role Swap, Initiated by UFP Operating as Source (Wait)\nFigure 8.45, \"Data Role Swap with Wait, UFP operating as Source initiates\"\nPort UFP Device Source R Port DFP Host Sink\nR Data Role Swap UFP showPso arnt Peaxratmneprle sequence between a\n, which is initiallyS oa urce ( Sink) and a R ( p R asserted), and a which is initially a Data ( Role) and a\n( d asserted). A is initiated by the . During the process the s maintain their\noperation as either a or a (power and p/ d remain constant) and the exchange of s is delayed\nwith a wait. Figure 8.45 Data Role Swap with Wait, UFP operating as Source initiates\nInitial UFP Source Port Initially DFP Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role = UFP (Device) Port Data Role = DFP (Host)\n1: Send Dr_Swap\n2:Dr_Swap\n3: Dr_Swap + CRC\nStart CRCReceiveTimer 4: Dr_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nEvaluate Dr_Swap request\nStop CRCReceiveTimer\nCC = Rd (Sink)\n9:Dr_Swap sent Port Data Role = DFP (Host)\nStart SenderResponseTimer\nCC = Rp (Source) 10: Send Wait\nPort Data Role = UFP (Device) 11: Wait\n12: Wait + CRC\n13: Wait Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role -> UFP (Device) Port Data Role -> DFP (Host)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 579\nTable8.72, \"Steps for Data Role Swap with Wait, UFP operating as Source initiates\"\nFigure 8.45, \"Data Role Swap with Wait, UFP operating as Source\ninitiates\" below provides a detailed\nexplanation of what happens at each labeled step in\nabovTea.ble8.72 Steps for Data Role Swap with Wait, UFP operating as Source initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPort UFP Device Source\nR Port Data Role UFP Policy Port DFP Host Sink R\nstarts as a ( ) operating as with\nEngine Protocol Layer DR_Swap Port Data Role DFP\np asserted and set to . The starts as a ( ) operating as a with d\n1 Message\ndirects the to send a asserted and set to .\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and\n2 PHY Layer CRC DR_Swap PHY Layer DR_SwapMessage\npasses to .\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer\ndecides that it is able and willing to do the\n10 WaitMessage\nbut not at this time. It tells the to\nProtocol Layer WaitMessage\nform a .\nPHY Layer\ncreates the and passes to\n11 PHY Layer WaitMessage PHY Layer CRC WaitMessage\n.\nCRC Message CRCReceiveTimer\nreceives the and checks the appends a and sends the .\n12 Protocol Layer MessageID\nto verify the . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Wait\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 580 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.72 Steps for Data Role Swap with Wait, UFP operating as Source initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC\n.\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 WaitMessage\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 581\n8.3.2.9.3 Data Role Swap, Initiated by DFP Operating as Source\n8.3.2.9.3.1 Data Role Swap, Initiated by DFP Operating as Source (Accept)\nFigure 8.46, \"Data Role Swap, DFP operating as Source initiates\" Port\nUFP Device Sink R Port DFP Source R\nData Role Swap DFP Psohrotw Psa artnn eexrample sequence between a , which\niSso iunricteially aS ink ( ) anRd a R ( d asserted), and a whicDha itsa i Rnoitlieally a aDnFdP a Host ( p U aFsPserDteedvi)c. eA\nis initiated by the . During the process the s maintain their operation as either a\nor a (power aFnigdu rpe/ 8.d4 r6e mDaaitna cRoonlset aSnwt)a bpu, tD eFxPc hoapnegrea ting as Sos ubrectew ieneint iates ( ) and ( ).\nInitial UFP Sink Port Initial DFP Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Dat C a C R = o l R e d = ( U Si F n P k ) (Device) Port D C a C ta = R R o p le ( S = o D u F rc P e ) (Host)\n1: Send Dr_Swap\n2: Dr_Swap\n3: Dr_Swap + CRC\n4: Dr_Swap Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received 6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nEvaluate Dr_Swap request\nCC = Rd (Sink) Check and increment MessageIDCounter\nPort Data Role =UFP (Device) Stop CRCReceiveTimer\n9: Dr_Swap sent\nStart SenderResponseTimer\n10: Send Accept CC = Rp (Source)\n11:Accept Port Data Role = DFP (Host)\n12: Accept + CRC\nStart CRCReceiveTimer 13: Accept\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18:Accept sent\nCC = Rd(Sink) CC = Rp(Source)\nPort Data Role -> DFP (Host) Port Data Role -> UFP (Device)\nNew Host/Device Roles\nPage 582 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.73, \"Steps for Data Role Swap, DFP operating as Source initiates\"\nFigure 8.46, \"Data Role Swap, DFP operating as Source initiates\"\nbelow provides a detailed explanation of\nwhat happens at eaTcahb lalebe8l.e7d3 s tSetpe pins for Data Role Swap, DFP operating as Source initiates above.\nStep Initial UFP Sink Port Initial DFP Source Port\nPort DFP Host Source R\nPort UFP Device Sink R Port Data Role DFP Policy\nstarts as a ( ) operating as with p\nPort Data Role UFP Engine Protocol Layer DR_Swap\nstarts as a ( ) operating as a with d asserted and set to . The\n1 Message\nasserted and set to . directs the to send a\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and passes\n2 PHY Layer DR_SwapMessage PHY Layer CRC DR_Swap\nto .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends and sends the\n3 PHY Layer CRC DR_Swap\nthe to verify the . . Starts .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n7 PHY Layer CRC GoodCRC\n. the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer Accept\ndecides that it is able and willing to do the\n10 Message\n. It tells the to form an\nProtocol Layer AcceptMessage\n.\nPHY Layer\ncreates the and passes\n11 PHY Layer CRC Accept PHY Layer AcceptMessage\nto .\nMessage CRCReceiveTimer CRC Message\nappends a and sends the receives the and checks the\n12 Protocol Layer MessageID\n. Starts . to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nreceives and compares Message\nMessage appends a and sends the\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 583\nTable8.73 Steps for Data Role Swap, DFP operating as Source initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer Policy Engine Data Role\nProtocol Layer verifies and P in o c l r i e c m y E en n t g s i t n h e e DFP Host UFP Device\nand stops . The requests that is changed\nAcceptMessage Policy Data Role UFP Device\ninforms the that the from ( ) to ( ).\nEngine Data Role DFP Port Data Role UFP\n18 Host Por t w D a a s t s a u R c o ce le ssfully s D e F n P t. The The Power S D o e u li r v c e e ry R is now a ( ),\nSink R requests that the is changed to with set to and continues supplying\n( ), with set to , still operating as power as a ( p asserted).\nData Roal e Sw a(pd asserted). Data Role\nThe is complete; the s have been reversed while maintaining the direction of power flow.\nPage 584 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.9.3.2 Data Role Swap, Initiated by DFP Operating as Source (Reject)\nFigure 8.47, \"Rejected Data Role Swap, DFP operating as Source initiates\"\nPort UFP Device Sink R Port DFP Source R\nData Role Swap DFP shPoowrst aPna retxnaemr ple sequence between a\n, whichS iosu irncietially aS ink ( ) anRd a R ( d asserted), and a which is iniDtiaatlaly R ao le and a ( p\nasserted). A is initiated by the . During the process the s maintain their operation\nas either a oFri ga ure 8 (.p4o7w Reerj eacntde dp D/adta r eRmolaein S cwoanps,t aDnFtP) aonpde trhaet ienxgc haasn Sgoeu orfc e initiatess is rejected.\nInitial UFP Sink Port Initial DFP Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Dat C a C R = o l R e d = ( U Si F n P k ) (Device) Port D C a C ta = R R o p le ( S = o D u F rc P e ) (Host)\n1: Send Dr_Swap\n2: Dr_Swap\n3: Dr_Swap + CRC\n4: Dr_Swap Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received 6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nEvaluate Dr_Swap request\nCC = Rd (Sink) Check and increment MessageIDCounter\nPort Data Role =UFP (Device) Stop CRCReceiveTimer\n9: Dr_Swap sent\nStart SenderResponseTimer\n10: Send Reject CC = Rp (Source)\n11:Reject Port Data Role = DFP (Host)\n12: Reject + CRC\nStart CRCReceiveTimer 13: Reject\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18:Reject sent\nCC = Rd(Sink) CC = Rp(Source)\nPort Data Role -> UFP (Device) Port Data Role -> DFP (Host)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 585\nTable8.74, \"Steps for Rejected Data Role Swap, DFP operating as Source initiates\"\nFigure 8.47, \"Rejected Data Role Swap, DFP operating as Source\ninitiates\" below provides a detailed\nexplanation of what happens at each labeled step in\nabovTea.ble8.74 Steps for Rejected Data Role Swap, DFP operating as Source initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPort DFP Host Source R\nPort UFP Device Sink R Port Data Role DFP Policy\nstarts as a ( ) operating as with p\nPort Data Role UFP Engine Protocol Layer DR_Swap\nstarts as a ( ) operating as a with d asserted and set to . The\n1 Message\nasserted and set to . directs the to send a\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and passes\n2 PHY Layer DR_SwapMessage PHY Layer CRC DR_Swap\nto .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends and sends the\n3 PHY Layer CRC DR_Swap\nthe to verify the . . Starts .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n7 PHY Layer CRC GoodCRC\n. the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData\nevaluates the and\nRole Swap Protocol Layer Reject\ndecides that it is unable and unwilling to do the\n10 Message\n. It tells the to form an\nProtocol Layer RejectMessage\n.\nPHY Layer\ncreates the and passes to\n11 PHY Layer CRC RejectMessage PHY Layer RejectMessage\n.\nCRCReceiveTimer CRC Message\nappends a and sends the . receives the and checks the\n12 Protocol Layer MessageID\nStarts . to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 586 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.74 Steps for Rejected Data Role Swap, DFP operating as Source initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nreceives and compares Message\nMessage appends a and sends the\n16 the it calculated with the one sent to verify the\nPHY Layer CRC GoodCRC .\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 587\n8.3.2.9.3.3 Data Role Swap, Initiated by DFP Operating as Source (Wait)\nFigure 8.48, \"Data Role Swap with Wait, DFP operating as Source initiates\"\nPort UFP Device Sink R Port DFP Source R\nData Role Swap DFP sPhoorwt sP aanrt nexerample sequence between a\n, whichS iosu irncietially aS ink ( ) anRd a R ( d asserted), and a which is iniDtiaatlaly R ao le and a ( p\nasserted). A is initiated by the . During the process the s maintain their operation\nas either a oFrig au re 8 .(4p8o wDeart aa nRdo lep /Swda rpe mwaitinh cWonasitt,a DntF)P a ondp ethraet einxcgh aasn Sgeo uorf ce initiatess is delayed by wait.\nInitial UFP Sink Port Initial DFP Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Dat C a C R = o l R e d = ( U Si F n P k ) (Device) Port D C a C ta = R R o p le ( S = o D u F rc P e ) (Host)\n1: Send Dr_Swap\n2: Dr_Swap\n3: Dr_Swap + CRC\n4: Dr_Swap Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received 6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nEvaluate Dr_Swap request\nCC = Rd (Sink) Check and increment MessageIDCounter\nPort Data Role =UFP (Device) Stop CRCReceiveTimer\n9: Dr_Swap sent\nStart SenderResponseTimer\n10: Send Wait CC = Rp (Source)\n11:Wait Port Data Role = DFP (Host)\n12: Wait + CRC\nStart CRCReceiveTimer 13: Wait\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18:Wait sent\nCC = Rd(Sink) CC = Rp(Source)\nPort Data Role -> UFP (Device) Port Data Role -> DFP (Host)\nPage 588 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.75, \"Steps for Data Role Swap with Wait, DFP operating as Source initiates\"\nFigure 8.48, \"Data Role Swap with Wait, DFP operating as\nSource initiates\" below provides a detailed\nexplanation of what happens at each labeled step in\nTab albeo8v.e7.5 Steps for Data Role Swap with Wait, DFP operating as Source initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPort DFP Host Source R\nPort UFP Device Sink R Port Data Role DFP Policy\nstarts as a ( ) operating as with p\nPort Data Role UFP Engine Protocol Layer DR_Swap\nstarts as a ( ) operating as a with d asserted and set to . The\n1 Message\nasserted and set to . directs the to send a\nProtocol Layer DR_SwapMessage\n.\nPHY Layer\ncreates the and passes\n2 PHY Layer DR_SwapMessage PHY Layer CRC DR_Swap\nto .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends and sends the\n3 PHY Layer CRC\nthe to verify the . . Starts .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n7 PHY Layer CRC GoodCRC\n. the to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy Engine\n9 informs the that the\nSenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer\ndecides that it is able and willing to do the\n10 WaitMessage\nbut not at this time. It tells the to\nProtocol Layer WaitMessage\nform an .\nPHY Layer\ncreates the and passes to\n11 PHY Layer CRC WaitMessage PHY Layer WaitMessage\n.\nCRCReceiveTimer CRC Message\nappends a and sends the . receives the and checks the\n12 Protocol Layer MessageID\nStarts . to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer WaitMessage\n13 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nPolicy Engine SenderResponseTimer\ninformation to the that consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nreceives and compares Message\nMessage appends a and sends the\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 589\nTable8.75 Steps for Data Role Swap with Wait, DFP operating as Source initiates\nStep Initial UFP Sink Port Initial DFP Source Port\nPHY Layer CRC\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Wait\nand stops .\n18 Message\ninforms the that the\nwas successfully sent.\nPage 590 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.9.4 Data Role Swap, Initiated by DFP Operating as Sink\n8.3.2.9.4.1 Data Role Swap, Initiated by DFP Operating as Sink (Accept)\nFigure 8.49, \"Data Role Swap, DFP operating as Sink initiates\" Port\nUFP Device Source R Port DFP Host Sink R\nData Role Swap DFP shoPwosr ta nP aerxtanmerple sequence between a , which is\niSnoiutiraclely a Sin (k ) and aR R ( p asserted), and a whichD iast ian Ritoialelly a ( DFP) anHdo sat (U d F PassDeervteicde).\nA is initiated by the . During the process the s maintain their operation as either a\nor a (power anFdig upr/e 8d .r4e9m Daiant aco Rnosltea nStw) baupt, eDxFcPh aonpgeer ating as Ssi bnekt wineietnia tes ( ) and ( ).\nInitial UFP Source Port Initial DFP Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Da C t C a R = o R le p ( = S U ou F r P c e (D ) evice) Port Da C ta C R = o R le d = (S D in F k P ) (Host)\n1: Send Dr_Swap\n2: Dr_Swap\n3: Dr_Swap + CRC\n4: Dr_Swap Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received 6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nEvaluate Dr_Swap request\nCC = Rp(Source) Check and increment MessageIDCounter\nPort Data Role = UFP (Device) Stop CRCReceiveTimer\n9: Dr_Swap sent\nStart SenderResponseTimer\n10: Send Accept CC = Rd(Sink)\n11:Accept Port Data Role = DFP (Host)\n12: Accept + CRC\nStart CRCReceiveTimer 13: Accept\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18:Accept sent\nCC = Rp (Source) CC = Rd (Sink)\nPort Data Role -> DFP (Host) Port Data Role -> UFP (Device)\nNew Host/Device Roles\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 591\nTable8.76, \"Steps for Data Role Swap, DFP operating as Sink initiates\"\nFigure 8.49, \"Data Role Swap, DFP operating as Sink initiates\"\nbelow provides a detailed explanation of what\nhappens at each labeTleadb lsete8p.7 in6 Steps for Data Role Swap, DFP operating as Sink initiate sabove.\nStep Initial UFP Source Port Initial DFP Sink Port\nPort DFP Host Sink R\nPort UFP Device Source Port Data Role DFP Policy\nstarts as a ( ) operating as a with d\nR Port Data Role UFP Engine Protocol Layer DR_Swap\nstarts as a ( ) operating as with asserted and set to . The\n1 Message\np asserted and set to . directs the to send a\nProtocol Layer DR_Swap Message\n.\nPHY Layer\ncreates the and\n2 PHY Layer DR_SwapMessage PHY Layer CRC DR_Swap\npasses to .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends and sends the\n3 PHY Layer CRC\nthe to verify the . . Starts .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n7 PHY Layer CRC\n. the to verify the .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer Accept\ndecides that it is able and willing to do the\n10 Message\n. It tells the to form an\nProtocol Layer AcceptMessage\n.\nPHY Layer\ncreates the and passes\n11 PHY Layer CRC Accept PHY Layer AcceptMessage\nto .\nMessage CRCReceiveTimer CRC Message\nappends a and sends the receives the and checks the\n12 Protocol Layer MessageID\n. Starts . to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nreceives and compares Message\nMessage appends a and sends the\n16 the it calculated with the one sent to verify the\n.\n.\nPage 592 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.76 Steps for Data Role Swap, DFP operating as Sink initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPHY Layer CRC\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer Policy Engine Data Role\nverifies and increments the\nProtocol Layer Policy Engine DFP Host UFP Device\nand stops . The requests that is changed\nAcceptMessage Policy Data Role UFP Device\ninforms the that the from ( ) to ( ).\nEngine Data Role DFP Port Data Role UFP Sink\n18 Host Por t w D a a s t s a u c R c o e l s e sfully se D n F t P . The T R he Power Delivery is now a ( ),\nrequests that S th o e u rce R is changed to with set to , still operating as a\n( ), with set to and continues ( d asserted).\nData Rosluep Spwlyaipng power as a Dat (a Rpo alseserted).\nThe is complete; the s have been reversed while maintaining the direction of power flow.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 593\n8.3.2.9.4.2 Data Role Swap, Initiated by DFP Operating as Sink (Reject)\nFigure 8.50, \"Rejected Data Role Swap, DFP operating as Sink initiates\" Port\nUFP Device Source R Port DFP Host Sink R\nData Role Swap DFP showPs oarnt ePxaarmtnpelre sequence between a ,\nwhich is iniStoiaulrlyc ea S (ink ) and a R R ( p asserted), and a which is initialDlya at a Rol (e ) and a ( d\nasserted). A is initiated by the . During the process the s maintain their operation\nas either a orF ai gure (8p.o5w0 eRre ajencdt edp/ Dda trae mRoailne cSownaspta, nDtF) Pan odp tehrea etixncgh aansg Sei nokf initiatess is rejected.\nInitial UFP Source Port Initial DFP Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Da C t C a R = o R le p ( = S U ou F r P c e (D ) evice) Port Da C ta C R = o R le d = (S D in F k P ) (Host)\n1: Send Dr_Swap\n2: Dr_Swap\n3: Dr_Swap + CRC\n4: Dr_Swap Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received 6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nEvaluate Dr_Swap request\nCC = Rp (Source) Check and increment MessageIDCounter\nPort Data Role = UFP (Device) Stop CRCReceiveTimer\n9: Dr_Swap sent\nStart SenderResponseTimer\n10: Send Reject CC = Rd (Sink)\n11:Reject Port Data Role = DFP (Host)\n12: Reject + CRC\nStart CRCReceiveTimer 13: Reject\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18:Reject sent\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role -> UFP (Device) Port Data Role -> DFP (Host)\nPage 594 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.77, \"Steps for Rejected Data Role Swap, DFP operating as Sink initiates\"\nFigure 8.50, \"Rejected Data Role Swap, DFP operating as Sink\ninitiates\" below provides a detailed\nexplanation of what happens at each labeled step in\naboveT.able8.77 Steps for Rejected Data Role Swap, DFP operating as Sink initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPort DFP Host Sink R\nPort UFP Device Source Port Data Role DFP Policy\nstarts as a ( ) operating as a with d\nR Port Data Role UFP Engine Protocol Layer DR_Swap\nstarts as a ( ) operating as with asserted and set to . The\n1 Message\np asserted and set to . directs the to send a\nProtocol Layer DR_Swap Message\n.\nPHY Layer\ncreates the and\n2 PHY Layer DR_SwapMessage PHY Layer CRC DR_Swap\npasses to .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends and sends the\n3 PHY Layer CRC\nthe to verify the . . Starts .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n7 PHY Layer CRC\n. the to verify the .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData\nevaluates the and\nRole Swap Protocol Layer Reject\ndecides that it is unable and unwilling to do the\n10 Message\n. It tells the to form an\nProtocol Layer RejectMessage\n.\nPHY Layer\ncreates the and passes\n11 PHY Layer CRC Reject PHY Layer RejectMessage\nto .\nMessage CRCReceiveTimer CRC Message\nappends a and sends the receives the and checks the\n12 Protocol Layer MessageID\n. Starts . to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 595\nTable8.77 Steps for Rejected Data Role Swap, DFP operating as Sink initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nreceives and compares Message\nMessage appends a and sends the\n16 the it calculated with the one sent to verify the\nPHY Layer CRC .\n.\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent.\nPage 596 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.9.4.3 Data Role Swap, Initiated by DFP Operating as Sink (Wait)\nFigure 8.51, \"Data Role Swap with Wait, DFP operating as Sink initiates\" Port\nUFP Device Source R Port DFP Host Sink R\nData Role Swap DFP showPso arnt ePxaarmtnperle sequence between a ,\nwhich is iniStoiaulrlyc ea S (ink ) and a R R ( p asserted), and a which is initialDlya at a Rol (e ) and a ( d\nasserted). A is initiated by the . During the process the s maintain their operation\nas either a or a (power and p/ d remain constant) and the exchange of s is delayed with a\nwait. Figure 8.51 Data Role Swap with Wait, DFP operating as Sink initiates\nInitial UFP Source Port Initial DFP Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Da C t C a R = o R le p ( = S U ou F r P c e (D ) evice) Port Da C ta C R = o R le d = (S D in F k P ) (Host)\n1: Send Dr_Swap\n2: Dr_Swap\n3: Dr_Swap + CRC\n4: Dr_Swap Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Dr_Swap received 6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nEvaluate Dr_Swap request\nCC = Rp (Source) Check and increment MessageIDCounter\nPort Data Role = UFP (Device) Stop CRCReceiveTimer\n9: Dr_Swap sent\nStart SenderResponseTimer\n10: Send Wait CC = Rd (Sink)\n11:Wait Port Data Role = DFP (Host)\n12: Wait + CRC\nStart CRCReceiveTimer 13: Wait\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC Stop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18:Wait sent\nCC = Rp(Source) CC = Rd(Sink)\nPort Data Role -> UFP (Device) Port Data Role -> DFP (Host)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 597\nTable8.78, \"Steps for Data Role Swap with Wait, DFP operating as Sink initiates\"\nFigure 8.51, \"Data Role Swap with Wait, DFP operating as Sink\ninitiates\" below provides a detailed\nexplanation of what happens at each labeled step in\naboveT.able8.78 Steps for Data Role Swap with Wait, DFP operating as Sink initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPort DFP Host Sink R\nPort UFP Device Source Port Data Role DFP Policy\nstarts as a ( ) operating as a with d\nR Port Data Role UFP Engine Protocol Layer DR_Swap\nstarts as a ( ) operating as with asserted and set to . The\n1 Message\np asserted and set to . directs the to send a\nProtocol Layer DR_Swap Message\n.\nPHY Layer\ncreates the and\n2 PHY Layer DR_SwapMessage PHY Layer CRC DR_Swap\npasses to .\nCRC Message Message CRCReceiveTimer\nreceives the and checks appends and sends the\n3 PHY Layer CRC\nthe to verify the . . Starts .\nDR_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer DR_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends and sends the receives the and checks\n7 PHY Layer CRC\n. the to verify the .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDR_SwapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DR_SwapMessage\nstarts .\nData Role\nevaluates the and\nSwap Protocol Layer\ndecides that it is able and willing to do the\n10 WaitMessage\nbut not at this time. It tells the to\nProtocol Layer WaitMessage\nform a .\nPHY Layer\ncreates the and passes to\n11 PHY Layer CRC Wait PHY Layer WaitMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends a and sends the receives the and checks the\n12 Protocol Layer MessageID\n. Starts . to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 598 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.78 Steps for Data Role Swap with Wait, DFP operating as Sink initiates\nStep Initial UFP Source Port Initial DFP Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nreceives and compares Message\nMessage appends a and sends the\n16 the it calculated with the one sent to verify the\nPHY Layer CRC .\n.\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 WaitMessage\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 599\n8.3.2.10 VCONN Swap\n8.3.2.10.1 VCONN Source Swap, initiated by VCONN Source\n8.3.2.10.1.1 VCONN Source Swap, initiated by VCONN Source (Accept)\nFigure 8.52, \"Successful VCONN Source Swap, initiated by VCONN Source\"\nVCONN Source Port Partner VCONN Port Partner Power Role\nSource Sink Source Sink shows an example sequence where the\nVCONN Source and tells its to supply . During the process the s, keep their\nas or , maintain their operation as either a or a (power remains constant) but exchange the\nrole. Figure 8.52 Successful VCONN Source Swap, initiated by VCONN Source\nInitially VCONNSource Port Initially VCONNoff\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nVCONN Source VCONN off\n1: Send VCONN_Swap\n2:VCONN_Swap\n3: VCONN_Swap + CRC\nStart CRCReceiveTimer 4: VCONN_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: VCONN_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:VCONN_Swap sent Evaluate VCONN_Swap\nStart SenderResponseTimer request\n10: Send Accept\n11: Accept\n12: Accept + CRC\n13: Accept Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nStart VCONNOnTimer Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nTell power supply to\nstart supplying VCONN\nVconn is on\n19: Send PS_RDY\n20: PS_RDY\n21: PS_RDY + CRC\n22: PS_RDY\nStart CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC\n25: GoodCRC + CRC\nStop VCONNOnTimer 26: GoodCRC\nTell power supply to turn off VCONN\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: PS_RDY sent\nVCONN is off\nVCONN has been swapped\nPage 600 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.79, \"Steps for Source to Sink VCONN Source Swap\"\nFigure 8.52, \"Successful VCONN Source Swap, initiated by VCONN Source\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.79 Steps for Source to Sink VCONN Source Swap above.\nStep Initially VCONN Source Initially VCONN off\nVCONN Source Policy Engine Protocol\nVCONN\nLayer VCONN_SwapMessage\nThe \u2019s directs the\n1 Protoc\nt\no\no\nl\ns\nL\ne\na\nn\ny\nd\ne r\na\nVC ONN_Swa\n.\npMessage is off.\nPHY Layer\ncreates the and\n2 P\npa\nH\ns\nY\nse\nL\ns\na\nt\ny\no\ne r\n.\nCRC VCONN_Swap PHY Layer VCONN_SwapMessage\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nVCONN_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer VCONN_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVCONN_SwapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nstarts .\nPolicy Engine VCONN_SwapMessage\nSource\nevaluates the sent\nVCONN Swap Protocol Layer\nby the and decides that it is able and willing to do\n10 AcceptMessage\nthe . It tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer AcceptMessage\nPHY L.ayer CRC Accept\nCRC\nreceives the and compares Message CRCReceiveTimer\nMessage appends a and sends the\n12 the it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nVCONNOnTimer\nThe stops the\n14 Protocol Layer GoodCRCMessage\nand starts the .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 601\nTable8.79 Steps for Source to Sink VCONN Source Swap\nStep Initially VCONN Source Initially VCONN off\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nAcceptMessage Policy\n18 informs the that the\nEngine DPM VCONN\nwas successfully sent. The\nDPM Policy Engine\nasks the to turn on .\nVCONN Policy Engine\nThe informs the that its power\nProtocol Layer PS_RDYMessage\nsupply is supplying . The directs\n19 Source VCONN\nthe to generate a to tell\nProtocol Layer PS_RDYMessage\nthe it can turn off .\nPHY Layer\ncreates the and passes\n20 PHY Layer PS_RDYMessage\ntPoH Y Layer . CRC PS_RDY\nCRC\nreceives the and compares Message CRCReceiveTimer\nMessage appends a and sends the\n21 the it calculated with the one sent to verify the\nPHY Layer CRC PS_RDY . Starts .\n.\nMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\n23 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n24 PHY Layer CRC GoodCRC\npasses it . PHY Layer GoodCRCMessage\nMessage Policy Engine VCONNOnTimer\nappends a and sends the CRC Message\nVCONN receives and compares the\n25 . The stops the ,\nPHY i Lt caaylecurlated with theC RonCe sent to verify theG oodCRC.\nand tells the power supply to stop sourcing .\nMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nVCONN verifies and increments the\nProtocol Layer Policy Engine\nand stops .\n27 is off. PS_RDYMessage\ninforms the that the\nPort Partner VCONN Source was successfully sent.\nThe s have swapped role.\nPage 602 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.10.1.2 VCONN Source Swap, initiated by VCONN Source (Reject)\nFigure 8.53, \"Rejected VCONN Source Swap, initiated by VCONN Source\" VCONN\nSource Port Partner VCONN Port Partner\nPower Role Source Sink So usrhcoews anS einxkample sequence where the\nand tells its VCONN Source to supply and is rejected. During the process the s, keep their\nas or , maintain their operation as either a or a (power remains constant) and\ndon't exchange the Figure 8.53 Rroeljee.cted VCONN Source Swap, initiated by VCONN Source\nInitially VCONNSource Port Initially VCONNoff\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nVCONN Source VCONN off\n1: Send VCONN_Swap\n2:VCONN_Swap\n3: VCONN_Swap + CRC\nStart CRCReceiveTimer 4: VCONN_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: VCONN_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:VCONN_Swap sent Evaluate VCONN_Swap\nStart SenderResponseTimer request\n10: Send Reject\n11: Reject\n12: Reject + CRC\n13: Reject Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 603\nTable8.80, \"Steps for Rejected VCONN Source Swap\"\nFigure 8.53, \"Rejected VCONN Source Swap, initiated by VCONN Source\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.80 Steps for Rejected VCONN Source Swap above.\nStep Initially VCONN Source Initially VCONN off\nVCONN Source Policy Engine Protocol\nVCONN\nLayer VCONN_SwapMessage\nThe \u2019s directs the\n1 Protoc\nt\no\no\nl\ns\nL\ne\na\nn\ny\nd\ne r\na\nVC ONN_Swa\n.\npMessage is off.\nPHY Layer\ncreates the and\n2 P\np\nH\nas\nY\ns e\nL\ns\na y\nto\ne r CR\n.\nC VCONN_Swap PHY Layer VCONN_SwapMessage\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nVCONN_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer VCONN_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVCONN_SwapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nstarts .\nPolicy Engine VCONN_SwapMessage\nSource\nevaluates the sent\nVCONN Swap Protocol Layer\nby the and decides that it is unable and unwilling\n10 RejectMessage\nto do the . It tells the to form\nProtocol Layer Message PHY\nan .\nLayer\ncreates the and passes to\n11 PHY Layer RejectMessage\nPHY L.ayer CRC RejectMessage\nCRC\nreceives the and compares CRCReceiveTimer\nMessage appends a and sends the .\n12 the it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nVCONNOnTimer\nThe stops the\n14 Protocol Layer GoodCRCMessage\nand starts the .\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16\n. it calculated with the one sent to verify the .\nPage 604 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.80 Steps for Rejected VCONN Source Swap\nStep Initially VCONN Source Initially VCONN off\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 605\n8.3.2.10.1.3 VCONN Source Swap, initiated by VCONN Source (Wait)\nFigure 8.54, \"VCONN Source Swap with Wait, initiated by VCONN Source\" VCONN\nSource Port Partner VCONN Port Partner\nPower Role Source Sink Sou srhcoews anS einxkample sequence where the\nand tells its VCONN Sourc teo supply and is told to wait. During the process the s, keep their\nas or , maintain their operation as either a or a (power remains constant) and\ndon't exchange the Figure 8.54 VroClOeN.N Source Swap with Wait, initiated by VCONN Source\nInitially VCONNSource Port Initially VCONNoff\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nVCONN Source VCONN off\n1: Send VCONN_Swap\n2:VCONN_Swap\n3: VCONN_Swap + CRC\nStart CRCReceiveTimer 4: VCONN_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: VCONN_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:VCONN_Swap sent Evaluate VCONN_Swap\nStart SenderResponseTimer request\n10: Send Wait\n11: Wait\n12: Wait + CRC\n13: Wait Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nPage 606 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.81, \"Steps for VCONN Source Swap with Wait\"\nFigure 8.54, \"VCONN Source Swap with Wait, initiated by VCONN Source\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.81 Steps for VCONN Source Swap with Wait above.\nStep Initially VCONN Source Initially VCONN off\nVCONN Source Policy Engine Protocol\nVCONN\nLayer VCONN_SwapMessage\nThe \u2019s directs the\n1 Protoc\nt\no\no\nl\ns\nL\ne\na\nn\ny\nd\ne r\na\nVC ONN_Swa\n.\npMessage is off.\nPHY Layer\ncreates the and\n2 P\np\nH\nas\nY\ns e\nL\ns\na y\nto\ne r CR\n.\nC VCONN_Swap PHY Layer VCONN_SwapMessage\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nVCONN_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer VCONN_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVCONN_SwapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nstarts .\nPolicy Engine VCONN_SwapMessage\nSource\nevaluates the sent\nVCONN Swap Protocol\nby the and decides that it is able and willing to do\n10 Layer WaitMessage\nthe but not at this time. It tells the\nProtocol Layer Message PHY\nto form an .\nLayer\ncreates the and passes to\n11 PHY Layer WaitMessage PHY Layer CRC WaitMessage\n.\nCRC Message CRCReceiveTimer\nreceives the and compares the appends a and sends the .\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer WaitMessage\n13 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nPolicy Engine SenderResponseTimer\ninformation to the that consumes it.\nVCONNOnTimer\nThe stops the\n14 Protocol Layer GoodCRCMessage\nand starts the .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte r . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 607\nTable8.81 Steps for VCONN Source Swap with Wait\nStep Initially VCONN Source Initially VCONN off\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Wait\nand stops .\n18 Message\ninforms the that the\nwas successfully sent\nPage 608 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.10.2 VCONN Source Swap, initiated by non-VCONN Source\n8.3.2.10.2.1 VCONN Source Swap, initiated by non-VCONN Source (Accept)\nFigure 8.55, \"VCONN Source Swap, initiated by non-VCONN Source\" Port\nVCONN VCONN Swap Port Partner Power Role\nSource Sink Source sShionwks an example where the which is not\nVin\nC\ni\nO\nti\nN\na\nN\nll yS osuurpcpelying and requests a . During the process the s, keep their\nas or , maintain their operation as either a or a (power remains constant) but exchange the\n. Figure 8.55 VCONN Source Swap, initiated by non-VCONN Source\nInitially VCONNoff Initially VCONNSource Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nVCONN Off VCONN Source\n1: Send VCONN_Swap\n2:VCONN_Swap\n3: VCONN_Swap + CRC\nStart CRCReceiveTimer 4: VCONN_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: VCONN_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:VCONN_Swap sent Evaluate VCONN_Swap\nStart SenderResponseTimer request\n10: Send Accept\n11: Accept\n12: Accept + CRC\n13: Accept Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Accept received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nTell power supply to start Check and increment MessageIDCounter\nsupplying VCONN Stop CRCReceiveTimer\n18: Accept sent\nStart VCONNOnTimer\nVconn is on\n19: Send PS_RDY\n20: PS_RDY\n21: PS_RDY + CRC\nStart CRCReceiveTimer 22: PS_RDY\nCheck MessageID against local copy\nStore copy of MessageID\n23: PS_RDY received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC Stop VCONNOnTimer\nTell power supply to turn off VCONN\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: PS_RDY sent\nVCONN is off\nSource is supplying VCONN\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 609\nTable8.82, \"Steps for VCONN Source Swap, Initiated by non-VCONN Source\"\nFigure 8.55, \"VCONN Source Swap, initiated by non-VCONN Source\"\nbelow provides a detailed explanation of\nwhat happens at eaTcahb llaeb8el.8ed2 s Stetepp ins for VCONN Source Swap, Initiated by non-VCONN Source above.\nStep Initially VCONN off Initially VCONN Source\nSource VCONN Policy Engine\nProtocol Layer VCONN_Swap Sink VCONN Source\nThe starts with off. The\nMessage\n1 directs the to send a The starts as the .\nProtocol\n.\nLayer VCONN_SwapMessage\nPHY Layer\ncreates the and\n2 P\npa\nH\ns\nY\nse\nL\ns\na\nt\ny\no\ne r C\n.\nRC VCONN_Swap PHY Layer VCONN_SwapMessage\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nVCONN_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer VCONN_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVCONN_SwapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nstarts .\nPolicy Engine VCONN_SwapMessage\nSource\nevaluates the sent\nVCONN Swap Protocol Layer\nby the and decides that it is able and willing to do\n10 AcceptMessage\nthe . It tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer AcceptMessage\nPHY La.yer CRC AcceptMessage\nCRC\nreceives the and compares CRCReceiveTimer\nMessage appends a and sends the .\n12 the it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Accept\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nPolicy Engine DPM VCONN\nThe stops the .\n14 Protocol Layer GoodCRCMessage\nThe tells the to turn on .\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16\n. it calculated with the one sent to verify the .\nPage 610 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.82 Steps for VCONN Source Swap, Initiated by non-VCONN Source\nStep Initially VCONN off Initially VCONN Source\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nAcceptMessage\n18 informs the that the\nPolicy Engine VCONNOnTimer\nwas successfully sent.\nDPM Policy Engine\nThe starts the .\nVCONN Policy Engine\nThe tells the that its power supply\nProtocol Layer PS_RDYMessage\nis supplying . The directs the\n19 Sink VCONN\nto generate a to tell the\nProtocol Layer PS_RDYMessage\nit can turn off .\nPHY Layer\ncreates the and passes\n20 PHY Layer PS_RDYMessage\nPtoH Y Layer . CRC PS_RDY\nCRC\nMessage CRCReceiveTimer receives the and compares\nappends a and sends the Message\n21 the it calculated with the one sent to verify the\n. Starts . PHY Layer CRC PS_RDY\n.\nMessage Protocol Layer\nremoves the and forwards the\n22 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PS_RDY\nand then stores a copy of the new value.\n23 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n24 PHY Layer GoodCRCMessage P\npa\nH\ns\nY\nse\nL\ns\na\nit\ny er\n.\nCRC GoodCRC\nCRC Message Policy Engine VCONNOnTimer\nreceives and compares appends a and sends the\nMessage VCONN\n25 the it calculated with the one sent to verify the . The stops the ,\nPHY Laye . r CRC GoodCRC and tells the power supply to stop sourcing .\nMessage Protocol Layer\nremoves the and forwards the\n26 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the VCONN\nProtocol Layer Policy Engine\nand stops .\n27 PS_RDYMessage is off.\ninforms the that the\nwas successPfuolrlyt Pseanrttn.er VCONN Source\nThe s have swapped role.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 611\n8.3.2.10.2.2 VCONN Source Swap, initiated by non-VCONN Source (Reject)\nFigure 8.56, \"Rejected VCONN Source Swap, initiated by non-VCONN Source\" Port\nVCONN VCONN Swap Port Partner\nPower Role Source Sink showSosu arnce examSpilnek where the which\nis not initially supplying andV C r O eq NN u eSsotus rac e which is rejected. During the process the s,\nkeep their as or , maintain their operation as either a or a (power remains\nconstant) and don'Ft iegxucrhea n8g.5e6 t hRee jected VCONN. Source Swap, initiated by non-VCONN Source\nInitially VCONNoff Initially VCONNSource Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nVCONN Off VCONN Source\n1: Send VCONN_Swap\n2:VCONN_Swap\n3: VCONN_Swap + CRC\nStart CRCReceiveTimer 4: VCONN_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: VCONN_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:VCONN_Swap sent Evaluate VCONN_Swap\nStart SenderResponseTimer request\n10: Send Reject\n11: Reject\n12: Reject + CRC\n13: Reject Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Reject received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nPage 612 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.83, \"Steps for Rejected VCONN Source Swap, Initiated by non-VCONN Source\"\nFigure 8.56, \"Rejected VCONN Source Swap, initiated by non-\nVCONN Source\" below provides a detailed\nexplanation of what happens at each labeled step in\nT aabbolvee8..83 Steps for Rejected VCONN Source Swap, Initiated by non-VCONN Source\nStep Initially VCONN off Initially VCONN Source\nSource VCONN Policy Engine\nProtocol Layer VCONN_Swap Sink VCONN Source\nThe starts with off. The\nMessage\n1 directs the to send a The starts as the .\nProtocol\n.\nLayer VCONN_SwapMessage\nPHY Layer\ncreates the and\n2 P\np\nH\nas\nY\ns e\nL\ns\na y\nto\ne r CR\n.\nC VCONN_Swap PHY Layer VCONN_SwapMessage\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nVCONN_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer VCONN_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVCONN_SwapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nstarts .\nPolicy Engine VCONN_SwapMessage\nSource\nevaluates the sent\nVCONN Swap Protocol Layer\nby the and decides that it is unable and unwilling\n10 RejectMessage\nto do the . It tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer RejectMessage\nPHY La.yer CRC RejectMessage\nCRC\nreceives the and compares CRCReceiveTimer\nMessage appends a and sends the .\n12 the it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Reject\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nPolicy Engine DPM VCONN\nThe stops the .\n14 Protocol Layer GoodCRCMessage\nThe tells the to turn on .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 613\nTable8.83 Steps for Rejected VCONN Source Swap, Initiated by non-VCONN Source\nStep Initially VCONN off Initially VCONN Source\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nwas successfully sent.\nPage 614 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.10.2.3 VCONN Source Swap (Wait)\nFigure 8.57, \"VCONN Source Swap with Wait\" Port VCONN Swap\nPort Partner Power Role Source Sink\nSource Sink shows an example where the requests aV CONN Source which is\ndelayed with a wait. During the process the s, keep their as or , maintain their\noperation as either a or a Fig (uproew 8e.r5 7re VmCaOiNnNs cSoonusrtcaen tS)w aanpd wdoitnh't Wexacihtange the .\nInitially VCONNoff Initially VCONNSource Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nVCONN Off VCONN Source\n1: Send VCONN_Swap\n2:VCONN_Swap\n3: VCONN_Swap + CRC\nStart CRCReceiveTimer 4: VCONN_Swap\nCheck MessageID against local copy\nStore copy of MessageID\n5: VCONN_Swap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9:VCONN_Swap sent Evaluate VCONN_Swap\nStart SenderResponseTimer request\n10: Send Wait\n11: Wait\n12: Wait + CRC\n13: Wait Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Wait received\n15: GoodCRC\n16: GoodCRC + CRC\nStop SenderResponseTimer 17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 615\nTable8.84, \"Steps for VCONN Source Swap with Wait\"\nFigure 8.57, \"VCONN Source Swap with Wait\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.84 Steps for VCONN aSboouvrec.e Swap with Wait\nStep Initially VCONN off Initially VCONN Source\nSource VCONN Policy Engine\nProtocol Layer VCONN_Swap Sink VCONN Source\nThe starts with off. The\nMessage\n1 directs the to send a The starts as the .\nProtocol\n.\nLayer VCONN_SwapMessage\nPHY Layer\ncreates the and\n2 P\npa\nH\ns\nY\nse\nL\ns\na\nt\ny\no\ne r C\n.\nRC VCONN_Swap PHY Layer VCONN_SwapMessage\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nVCONN_SwapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer VCONN_Swap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVCONN_SwapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nstarts .\nPolicy Engine VCONN_SwapMessage\nSource\nevaluates the sent\nVCONN Swap Protocol\nby the and decides that it is able and willing to do\n10 Layer WaitMessage\nthe but not at this time. It tells the\nProtocol Layer Message PHY\nto form a .\nLayer\ncreates the and passes to\n11 PHY Layer WaitMessage PHY Layer CRC WaitMessage\n.\nCRC Message CRCReceiveTimer\nreceives the and compares the appends a and sends the .\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer WaitMessage\n13 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nPolicy Engine SenderResponseTimer\ninformation to the that consumes it.\nPolicy Engine DPM VCONN\nThe stops the .\n14 Protocol Layer GoodCRCMessage\nThe tells the to turn on .\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nPage 616 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.84 Steps for VCONN Source Swap with Wait\nStep Initially VCONN off Initially VCONN Source\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Wait\nand stops .\n18 Message\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 617\n8.3.2.11 Additional Capabilities, Status and Information\n8.3.2.11.1 Alert\n8.3.2.11.1.1 Source sends Alert to a Sink\nFigure 8.58, \"Source Alert to Sink\" Source Sink Source\nSink Source\nSe schtioown s8 .a3n.2 e.1x1am.2,p \"lSet saetuqus\"ence between a and a where the alerts\nthe that there has been a status change. This AMS will be followed by getting the status to determine\nfurther details of the alert (see Figure 8.58 Sour)c.e Alert to Sink\nSink Port Source Port\n: Sink Policy Engine : Protocol : PHY : PHY : Protocol : Source Policy Engine\n1: Send Alert\n2: Alert\n3: Alert + CRC\n4: Alert Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Alert received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Alert sent\nPage 618 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.85, \"Steps for Source Alert to Sink\"\nFigure 8.58, \"Source Alert to Sink\"\nbelow provides a detailed explanation of what happens at each labeled\nstep in Table a8b.o8v5e .Steps for Source Alert to Sink\nStep Sink Source\nDPM Source Policy\nEngine Protocol Layer Alert\nThe indicates a alert condition. The\nMessage\n1 tells the to form an\nProtocol Layer AlertMessage\n.\nPHY Layer\ncreates the and passes to\n2 PHY Layer AlertMessage PHY Layer CRC AlertMessage\n.\nCRC Message CRCReceiveTimer\nreceives the and compares the appends a and sends the .\n3 Protocol Layer MessageID\nit calculated with the one sent to verify the . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Alert\n4 and then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\nPolicy Engine DPM\nto the that consumes it.\nProtocol Layer GoodCRCMessage\n5 The informs the .\nPHY Layer\ngenerates a and\n6 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n7 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Alert\nand stops .\n9 Message\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 619\n8.3.2.11.1.2 Sink sends Alert to a Source\nFigure 8.59, \"Sink Alert to Source\" Source Sink Sink\nSource Sink\nSe csthioonw 8s. 3a.n2 .e1x1a.2m, p\"Sleta steuqsu\"ence between a and a where the alerts\nthe that there has been a status change. This AMS will be followed by getting the status to determine\nfurther details of the alert (see Figure 8.59 Sink) A. lert to Source\nSource Port Sink Port\n: Source Policy Engine : Protocol : PHY : PHY : Protocol : Sink Policy Engine\n1: Send Alert\n2: Alert\n3: Alert + CRC\n4: Alert Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Alert received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Alert sent\nPage 620 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.86, \"Steps for Sink Alert to Source\"\nFigure 8.59, \"Sink Alert to Source\"\nbelow provides a detailed explanation of what happens at each labeled\nstep in Table a8b.o8v6e .Steps for Sink Alert to Source\nStep Source Sink\nDPM Sink Policy\nEngine Protocol Layer Alert\nThe indicates a alert condition. The\nMessage\n1 tells the to form an\nProtocol Layer AlertMessage\n.\nPHY Layer\ncreates the and passes to\n2 PHY Layer AlertMessage PHY Layer CRC AlertMessage\n.\nCRC Message CRCReceiveTimer\nreceives the and compares the appends a and sends the .\n3 Protocol Layer MessageID\nit calculated with the one sent to verify the . Starts .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Alert\n4 and then stores a copy of the new value.\nMessage Policy Engine\nThe forwards the received\nPolicy Engine DPM\nto the that consumes it.\nProtocol Layer GoodCRCMessage\n5 The informs the .\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n7 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Alert\nand stops .\n9 Message\ninforms the that the\nwas successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 621\n8.3.2.11.2 Status\n8.3.2.11.2.1 Sink Gets Source Status\nFigure 8.60, \"Sink Gets Source Status\" Source Sink Sink\nSection 8.3.2.11.2, \"Status\" Sink\nshows an example sequence between a and a where, after the\nhas received an alert (see ) that there has been a status change, the gets more details\non the change. Figure 8.60 Sink Gets Source Status\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Status\n2:Get_Status\n3: Get_Status + CRC\nStart CRCReceiveTimer 4: Get_Status\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Status received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Source Status\n9:Get_Status sent Information from DPM\nStart SenderResponseTimer\n10: Send Status\n11: Status\n12: Status + CRC\n13: Status Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Status received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Status sent\nPage 622 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.87, \"Steps for a Sink getting Source Status Sequence\"\nFigure 8.60, \"Sink Gets Source Status\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.87 Steps for a Sink getti nabgo Svoeu.rce Status Sequence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 Get_StatusMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Status PHY Layer Get_StatusMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nGet_StatusMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Status\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_StatusMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nrequests the for the present\nPolicy Engine Protocol Layer\nstatus which is provided.\n10 StatusMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Status\nStatus\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Status\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 623\nTable8.87 Steps for a Sink getting Source Status Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 StatusMessage\ninforms the that the\nSource Sink was successfully sent.\nThe has informed the of its present status.\nPage 624 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.2.2 Source Gets Sink Status\nFigure 8.61, \"Source Gets Sink Status\" Source Sink\nSource Section 8.3.2.11.2, \"Status\" Source\nshows an example sequence between a and a where, after the\nhas received an alert (see ) that there has been a status change, the gets\nmore details on the change. Figure 8.61 Source Gets Sink Status\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Status\n2:Get_Status\n3: Get_Status + CRC\nStart CRCReceiveTimer 4: Get_Status\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Status received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Sink Status\n9:Get_Status sent Information from DPM\nStart SenderResponseTimer\n10: Send Status\n11: Status\n12: Status + CRC\n13: Status Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Status received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Status sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 625\nTable8.88, \"Steps for a Source getting Sink Status Sequence\"\nFigure 8.61, \"Source Gets Sink Status\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.88 Steps for a Source ge attbionvge S.ink Status Sequence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 Get_StatusMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Status PHY Layer Get_StatusMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nGet_StatusMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Status\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_StatusMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nrequests the for the present\nPolicy Engine Protocol Layer\nstatus which is provided.\n10 StatusMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC StatusMessage\nStatus\nreceives the and compares the CRCReceiveTimer\nMessage appends a and sends the .\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Status\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 626 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.88 Steps for a Source getting Sink Status Sequence\nStep Source Port Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 StatusMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of its present status.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 627\n8.3.2.11.2.3 VCONN Source Gets Cable Plug Status\nFigure 8.62, \"VCONN Source Gets Cable Plug Status\" VCONN Source Cable\nPlug VCONN Source Section 8.3.2.11.2, \"Status\"\nVCONN Source shows an example sequence between a and a\nwhere, after the has received an alert (see ) that there has been a\nstatus change, the F gigeutsr em 8o.r6e2 d VetCaOiNlsN o Sno tuhrec ceh Ganetgse .C able Plug Status\nVCONNSource Port Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Get_Status\n2:Get_Status\n3: Get_Status + CRC\nStart CRCReceiveTimer 4: Get_Status\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Status received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Status Information\n9:Get_Status sent from DPM\nStart SenderResponseTimer\n10: Send Status\n11: Status\n12: Status + CRC\n13: Status Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Status received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Status sent\nPage 628 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.89, \"Steps for a VCONN Source getting Cable Plug Status Sequence\"\nFigure 8.62, \"VCONN Source Gets Cable Plug Status\"\nbelow provides a detailed explanation of\nwhat happens at eaTcahb llaeb8el.8ed9 s Stetpep ins for a VCONN Source getting Cable Plug Status Se qabuoevnec.e\nStep VCONN Source Port Cable Plug\nPolicy Engine Protocol Layer\nGet_StatusMessage\ndirects the to send a\n1 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Status PHY Layer Get_StatusMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and checks\n3 PHY Layer CRC\n. Starts . the to verify the .\nGet_StatusMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Status\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_StatusMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nrequests the for the present\nPolicy Engine Protocol Layer\nstatus which is provided.\n10 StatusMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Status\nStatus\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Status\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 629\nTable8.89 Steps for a VCONN Source getting Cable Plug Status Sequence\nStep VCONN Source Port Cable Plug\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 StatusMessage\ninforms the that the\nCable Plug VCONN Source was successfully sent.\nThe has informed the of its present status.\nPage 630 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.2.4 Sink Gets Source PPS Status\nFigure 8.63, \"Sink Gets Source PPS Status\" Source Sink\nSink Section 8.3.2.11.2, \"Status\" Sink\nshows an example sequence between a and a where, after the\nhas received an alert (see ) that there has been a PPS status change, the gets\nmore details on the change. Figure 8.63 Sink Gets Source PPS Status\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_PPS_Status\n2:Get_PPS_Status\n3: Get_PPS_Status + CRC\nStart CRCReceiveTimer 4: Get_PPS_Status\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_PPS_Status received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Source PPS Status\n9:Get_PPS_Status sent Information from DPM\nStart SenderResponseTimer\n10: Send PPS_Status\n11: PPS_Status\n12: PPS_Status + CRC\n13: PPS_Status Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: PPS_Status received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: PPS_Status sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 631\nTable8.90, \"Steps for a Sink getting Source PPS status Sequence\"\nFigure 8.63, \"Sink Gets Source PPS Status\"\nbelow provides a detailed explanation of what\nhappens at each labeledT satbelpe i8n. 90 Steps for a Sink getting Source PPS satbaotvues. Sequence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 Get_PPS_StatusMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_PPS_Status PHY Layer Get_PPS_StatusMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_StatusMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_PPS_StatusMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_PPS_StatusMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nrequests the for the present\nPolicy Engine Protocol Layer\nstatus which is provided.\n10 PPS_StatusMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC PPS_Status\nPPS_Status\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer PPS_Status\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 632 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.90 Steps for a Sink getting Source PPS status Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 PPS_StatusMessage\ninforms the that the\nSource Sink was successfully sent.\nThe has informed the of its present PPS status.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 633\n8.3.2.11.3 Source/Sink Capabilities\n8.3.2.11.3.1 SPR\n8.3.2.11.3.1.1 Sink Gets Source Capabilities\nFigure 8.64, \"Sink Gets Source's Capabilities\" Source Sink Sink\nSource Capabilities\nshows an example sequence between a and a when the\ngets the . Figure 8.64 Sink Gets Source's Capabilities\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Source_Cap\n2:Get_Source_Cap\n3: Get_Source_Cap + CRC\nStart CRCReceiveTimer 4: Get_Source_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Source_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Source capability\n9:Get_Source_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send Source_Capabilities\n11: Source_Capabilities\n12: Source_Capabilities + CRC\n13: Source_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Source_Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Capabilities sent\nPage 634 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.91, \"Steps for a Sink getting Source Capabilities Sequence\"\nFigure 8.64, \"Sink Gets Source's Capabilities\"\nbelow provides a detailed explanation of what\nhappens at each labeleTda sbtelep 8in.9 1 Steps for a Sink getting Source Capabil aitbieosv eS.equence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 Get_Source_CapMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Source_Cap PHY Layer Get_Source_CapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Source_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Source_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Source_CapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nCapabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 Source_CapabilitiesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Source_CapabilitiesMessage CRCReceiveTimer\nSource_CapabilitiesMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Source_CapabilitiesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 635\nTable8.91 Steps for a Sink getting Source Capabilities Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Source_CapabilitiesMessage\ninforms the that the\nSource Sink was successfully sent.\nThe has informed the of its capabilities.\nPage 636 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.3.1.2 Dual-Role Source Gets Source Capabilities from a Dual-Role Sink\nFigure 8.65, \"Dual-Role Source Gets Dual-Role Sink's Capabilities as a Source\"\nDual-Role PowerSource Dual-Role PowerSink Source Sink Capabilities Source\nshows an example sequence between\na Fi gure 8 .a6n5d D au al-Role Source Gets wDhueanl- Rthoel e Sink' sg eCtasp tahbe ilities as a Sourc aes a .\nDual-Role Source Port Dual-Role Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Source_Cap\n2:Get_Source_Cap\n3: Get_Source_Cap + CRC\nStart CRCReceiveTimer 4: Get_Source_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Source_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Source capability\n9:Get_Source_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send Source_Capabilities\n11: Source_Capabilities\n12: Source_Capabilities + CRC\n13: Source_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Source_Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Capabilities sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 637\nTable8.92, \"Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as a Source Sequence\"\nFigure 8.65, \"Dual-Role Source Gets Dual-Role Sink's\nCapabilities as a Source\" below provides\na detailed explanation of what happens at each labeled step in\nTable8.92 Steps fo arb ao Dveu.al-Role Source getting Dual-Role Sink's capabilities as a Source Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 Get_Source_CapMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Source_CapMessage\n.\nGet_Source_CapMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Source_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Source_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Source_CapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nCapabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 Source_CapabilitiesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Source_Capabilities Message CRCReceiveTimer\nSource_CapabilitiesMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Source_CapabilitiesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 638 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.92 Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as a Source Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Source_CapabilitiesMessage\ninforms the that the\nDual-Role PowerSink Dual-Role PowerSource was successfully sent.\nThe has informed the of its capabilities.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 639\n8.3.2.11.3.1.3 Source Gets Sink Capabilities\nFigure 8.66, \"Source Gets Sink's Capabilities\" Source Sink\nSource Sink Capabilities\nshows an example sequence between a and a when the\ngets the . Figure 8.66 Source Gets Sink's Capabilities\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Sink_Cap\n2:Get_Sink_Cap\n3: Get_Sink_Cap + CRC\nStart CRCReceiveTimer 4: Get_Sink_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Sink_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Sink capability\n9:Get_Sink_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send Sink_Capabilities\n11: Sink_Capabilities\n12: Sink_Capabilities + CRC\n13: Sink_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Sink_Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Sink_Capabilities sent\nPage 640 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.93, \"Steps for a Source getting Sink Capabilities Sequence\"\nFigure 8.66, \"Source Gets Sink's Capabilities\"\nbelow provides a detailed explanation of what\nhappens at each labeleTda sbtelep 8in.9 3 Steps for a Source getting Sink Capabil aitbieosv eS.equence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 Get_Sink_CapMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Sink_Cap PHY Layer Get_Sink_CapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Sink_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Sink_Cap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Sink_CapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Sink\nstarts .\nCapabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 Sink_CapabilitiesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Sink_CapabilitiesMessage CRCReceiveTimer\nSink_CapabilitiesMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Sink_CapabilitiesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16\n. it calculated with the one sent to verify the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 641\nTable8.93 Steps for a Source getting Sink Capabilities Sequence\nStep Source Port Sink Port\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Sink_CapabilitiesMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of its capabilities.\nPage 642 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.3.1.4 Dual-Role Sink Get Sink Capabilities from a Dual-Role Source\nFigure 8.67, \"Dual-Role Sink Gets Dual-Role Source's Capabilities as a Sink\"\nDual-Role PowerSource Dual-Role PowerSink Dual-Role PowerSink Dual-Role PowerSource\nCapabilities Sink shows an example sequence between a\nand a when the gets the\nas a Fig.u re 8.67 Dual-Role Sink Gets Dual-Role Source's Capabilities as a Sink\nDual-Role Sink Port Dual-Role Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Sink_Cap\n2:Get_Sink_Cap\n3: Get_Sink_Cap + CRC\nStart CRCReceiveTimer 4: Get_Sink_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Sink_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Sink capability\n9:Get_Sink_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send Sink_Capabilities\n11: Sink_Capabilities\n12: Sink_Capabilities + CRC\n13: Sink_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Sink_Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Sink_Capabilities sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 643\nTable8.94, \"Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence\"\nFigure 8.67, \"Dual-Role Sink Gets Dual-Role Source's\nCapabilities as a Sink\" below provides a\ndetailed explanation of what happens at each labeled step in\nTable8.94 Ste pabs ofover .a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence\nStep Dual-Role Sink Port Dual-Role Source Port\nPort Port Power Role Dual-Role Power\nSink R CC Port Port Power Role Dual-Role Power\nThe has set to\nPolic w y i E th n t g h i e n e d pull down P o r n o t i o ts c ol L w ay ir e e r . T So h u e r ce has R se C t C to\n1 Get_Sink_CapMessage\ndirects the to send a and the p pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Sink_Cap PHY Layer Get_Sink_CapMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Sink_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Sink_Cap\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Sink_CapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Dual-\nstarts .\nRole PowerSource Capabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 Sink_CapabilitiesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC\nreceives the and compares the Sink_CapabilitiesMessage CRCReceiveTimer\nSink_CapabilitiesMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Sink_Capabilities Message Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 644 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.94 Steps for a Dual-Role Sink getting Dual-Role Source capabilities as a Sink Sequence\nStep Dual-Role Sink Port Dual-Role Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Sink_Capabilities Message\ninforms the that the\nDual-Role PowerSource Dual-Role PowerSink Capabi lwitiaess succeSsinsfkully sent.\nThe has informed the of its as a .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 645\n8.3.2.11.3.2 EPR\n8.3.2.11.3.2.1 Sink Gets EPR Source Capabilities\nFigure 8.68, \"Sink Gets Source's EPR Capabilities\" Source Sink\nSink Source EPR Capabilities\nshows an example sequence between a and a when\nthe gets the 's Figure 8.6. 8 Sink Gets Source's EPR Capabilities\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send EPR_Get_EPR_Source_Cap\n2:EPR_Get_EPR_Source_Cap\n3: EPR_Get_EPR_Source_Cap + CRC\nStart CRCReceiveTimer 4: EPR_Get_EPR_Source_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Get_EPR_Source_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter Get EPR Source capability\nStop CRCReceiveTimer Information from DPM\n9:EPR_Get_EPR_Source_Cap sent\nStart SenderResponseTimer\n11: EPR_Source_Capabilities 10: Send EPR_Source_Capabilities\n12: EPR_Source_Capabilities + CRC\n13: EPR_Source_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_Source_Capabilities received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Source_Capabilities sent\nPage 646 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.95, \"Steps for a Sink getting EPR Source Capabilities Sequence\"\nFigure 8.68, \"Sink Gets Source's EPR Capabilities\"\nbelow provides a detailed explanation of\nwhat happens at eacTha lbalbee8le.d9 5st eSpte inp s for a Sink getting EPR Source Capabilities Se aqbuoevnec.e\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 EPR_Get_Source_CapMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer EPR_Get_Source_CapMessage\nEPR_Get_Source_CapMessage\nappends and sends the CRC Message\nCRCReceiveTimer receives the\n3 . Starts\naPnHdY cLhaeycekrs the to veCrRifCy the .\n.\nEPR_Get_Source_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 EPR_Get_Source_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Get_Source_CapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM\nstarts .\nSource Capabilities\nrequests the for the present EPR\nPolicy Engine Protocol Layer\nwhich are provided.\n10 EPR_Source_CapabilitiesMessage\nThe tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nEPR_Source_Capabilities Message\nreceives the and compares the appends a and sends the\nEPR_Source_CapabilitiesMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 EPR_Source_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 647\nTable8.95 Steps for a Sink getting EPR Source Capabilities Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Source_CapabilitiesMessage\ninforms the that the\nSource Sink EPR Capabilities was successfully sent.\nThe has informed the of its .\nPage 648 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.3.2.2 Dual-Role Source Gets Source Capabilities from a Dual-Role EPR\nSink\nFigure 8.69, \"Dual-Role Source Gets Dual-Role Sink's Capabilities as an EPR Source\"\nDual-Role PowerSource Dual-Role PowerSink Source Sink Capabilities EPR\nSource shows an example sequence\nbetween a and a when the gets the as an\n. Figure 8.69 Dual-Role Source Gets Dual-Role Sink's Capabilities as an EPR Source\nDual-Role Source Port Dual-Role Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send EPR_Get_EPR_Source_Cap\n2:EPR_Get_EPR_Source_Cap\n3: EPR_Get_EPR_Source_Cap + CRC\nStart CRCReceiveTimer 4: EPR_Get_EPR_Source_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Get_EPR_Source_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet EPR Source capability\n9:EPR_Get_EPR_Source_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send EPR_Source_Capabilities\n11: EPR_Source_Capabilities\n13: EPR_Source_Capabilities 12: EPR_Source_Capabilities + CRC\nStart CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_Source_Capabilities received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Source_Capabilities sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 649\nTable8.96, \"Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as an EPR Source Sequence\"\nFigure 8.69, \"Dual-Role Source Gets Dual-\nRole Sink's Capabilities as an EPR Source\" below\nprovides a detailed explanation of what happens at each labeled step in\nTable8.96 Steps for a Dual-Role Sour aceb ogveet.ting Dual-Role Sink's capabilities as an EPR Source Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 EPR_Get_Source_CapMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer EPR_Get_Source_CapMessage\nEPR_Get_Source_CapMessage\nappends and sends the CRC Message\nCRCReceiveTimer receives the\n3 . Starts\naPnHdY c Lhaecykesr the to verCiRfyC the .\n.\nEPR_Get_Source_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 EPR_Get_Source_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Get_Source_CapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nCapabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 EPR_Source_CapabilitiesMessage\nThe tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nEPR_Source_Capabilities Message\nreceives the and compares the appends a and sends the\nEPR_Source_CapabilitiesMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 EPR_Source_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 650 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.96 Steps for a Dual-Role Source getting Dual-Role Sink's capabilities as an EPR Source Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Source_CapabilitiesMessage\n18 informs the that the\nwas successfully\nDual-Role PowerSink Dual-Rosleen Pto.werSource EPR Capabilities\nThe has informed the of its .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 651\n8.3.2.11.3.2.3 Source Gets Sink EPR Capabilities\nFigure 8.70, \"Source Gets Sink's EPR Capabilities\" Source Sink\nSource Sink EPR Capabilities\nshows an example sequence between a and a when\nthe gets the 's Figure 8.7. 0 Source Gets Sink's EPR Capabilities\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send EPR_Get_EPR_Sink_Cap\n2:EPR_Get_EPR_Sink_Cap\n3: EPR_Get_EPR_Sink_Cap + CRC\nStart CRCReceiveTimer 4: EPR_Get_EPR_Sink_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Get_EPR_Sink_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter Get EPR Sink capability\nStop CRCReceiveTimer Information from DPM\n9:EPR_Get_EPR_Sink_Cap sent\nStart SenderResponseTimer\n11: EPR_Sink_Capabilities 10: Send EPR_Sink_Capabilities\n12: EPR_Sink_Capabilities + CRC\n13: EPR_Sink_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_Sink_Capabilities received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Sink_Capabilities sent\nPage 652 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.97, \"Steps for a Source getting Sink EPR Capabilities Sequence\"\nFigure 8.70, \"Source Gets Sink's EPR Capabilities\"\nbelow provides a detailed explanation of\nwhat happens at eacTha lbalbee8le.d9 7st eSpte inp s for a Source getting Sink EPR Capabilities Se aqbuoevnec.e\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 EPR_Get_Sink_CapMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer EPR_Get_Sink_CapMessage\n.\nEPR_Get_Sink_CapMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nEPR_Get_Sink_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 EPR_Get_Sink_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Get_Sink_CapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Sink\nstarts .\nCapabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 EPR_Sink_CapabilitiesMessage\nThe tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nEPR_Sink_CapabilitiesMessage\nreceives the and compares the appends a and sends the\nEPR_Sink_CapabilitiesMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 EPR_Sink_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 653\nTable8.97 Steps for a Source getting Sink EPR Capabilities Sequence\nStep Source Port Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 EPR_Sink_CapabilitiesMessage\ninforms the that the\nSink Source EPR Capabilities was successfully sent.\nThe has informed the of its .\nPage 654 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.3.2.4 Dual-Role Sink Get Sink EPR Capabilities from a Dual-Role\nSource\nFigure 8.71, \"Dual-Role Sink Gets Dual-Role Source's Capabilities as an EPR Sink\"\nDual-Role PowerSource Dual-Role PowerSink Dual-Role PowerSink Dual-Role\nPowerSource Capabilities Sink shows an example sequence\nbetween a and a when the gets the\nFigure 8.71 a sD au al-R.o le Sink Gets Dual-Role Source's Capabilities as an EPR Sink\nDual-Role Sink Port Dual-Role Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send EPR_Get_EPR_Sink_Cap\n2:EPR_Get_EPR_Sink_Cap\n3: EPR_Get_EPR_Sink_Cap + CRC\nStart CRCReceiveTimer 4: EPR_Get_EPR_Sink_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: EPR_Get_EPR_Sink_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet EPR Sink capability\n9:EPR_Get_EPR_Sink_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send EPR_Sink_Capabilities\n11: EPR_Sink_Capabilities\n13: EPR_Sink_Capabilities 12: EPR_Sink_Capabilities + CRC\nStart CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: EPR_Sink_Capabilities received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: EPR_Sink_Capabilities sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 655\nTable8.98, \"Steps for a Dual-Role Sink getting Dual-Role Source Capabilities as an EPR Sink Sequence\"\nFigure 8.71, \"Dual-Role Sink Gets Dual-Role\nSource's Capabilities as an EPR Sink\" below\nprovides a detailed explanation of what happens at each labeled step in\nTable8.98 Steps for a Dual-Rol aeb Soivnek. getting Dual-Role Source Capabilities as an EPR Sink Sequence\nStep Dual-Role Sink Port Dual-Role Source Port\nPort Port Power Role Dual-Role Power\nSink R CC Port Port Power Role Dual-Role Power\nThe has set to\nPolic w y i E th n t g h i e n e d pull down P o r n o t i o ts c ol L w ay ir e e r . T So h u e r ce has R se C t C to\n1 EPR_Get_Sink_CapMessage\ndirects the to send a and the p pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer EPR_Get_Sink_CapMessage\n.\nEPR_Get_Sink_CapMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nEPR_Get_Sink_Cap Message Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 EPR_Get_Sink_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEPR_Get_Sink_CapMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Dual-\nstarts .\nRole PowerSource Capabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 EPR_Sink_CapabilitiesMessage\nThe tells the to form an\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nEPR_Sink_Capabilities Message\nreceives the and compares the appends a and sends the\nEPR_Sink_CapabilitiesMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 EPR_Sink_Capabilities Message\nThe forwards the received\nPolicy Engine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 656 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.98 Steps for a Dual-Role Sink getting Dual-Role Source Capabilities as an EPR Sink Sequence\nStep Dual-Role Sink Port Dual-Role Source Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 EPR_Sink_CapabilitiesMessage\ninforms the that the\nDual-Role PowerSource Dual-Role PowerSink Capabi lities waEsP sRu cSciensksfully sent.\nThe has informed the of its as an .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 657\n8.3.2.11.4 Extended Capabilities\n8.3.2.11.4.1 Sink Gets Source Extended Capabilities\nFigure 8.72, \"Sink Gets Source's Extended Capabilities\" Source Sink\nSink Source Extended Capabilities\nshows an example sequence between a and a\nwhen the gets the F'isg ure 8.72 Sink Gets S.o urce's Extended Capabilities\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Source_Cap_Extended\n2:Get_Source_Cap_Extended\n3: Get_Source_Cap_Extended + CRC\nStart CRCReceiveTimer 4: Get_Source_Cap_Extended\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Source_Cap_Extended\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer Get extended Source\n9:Get_Source_Cap_Extended sent capability Information\nfrom DPM\nStart SenderResponseTimer\n10: Send Source_Capabilities_Extended\n12: Source_Capabilities_Extended 11: Source_Capabilities_Extended\n+ CRC\n13: Source_Capabilities_Extended Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Source_Capabilities_Extended\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Capabilities_Extended sent\nPage 658 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.99, \"Steps for a Sink getting Source Extended Capabilities Sequence\"\nFigure 8.72, \"Sink Gets Source's Extended Capabilities\"\nbelow provides a detailed explanation\nof what happens Tata ebalech8 l.a9b9e lSetde sptse pfo irn a Sink getting Source Extended Capabilities Sequen acbeove.\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 Get_Source_Cap_ExtendedMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Source_Cap_Extended\nGet_Source_Cap_ExtendedMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Laye arnd checks the CRC to verify the .\n.\nGet_Source_Cap_ExtendedMessage Protocol\nremoves the and forwards the\nLayer\n4 to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Source_Cap_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Source_Cap_ExtendedMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully\nPolicy Engine DPM Source\nsent. starts .\nExtended Capabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 Source_Capabilities_ExtendedMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nSource_Capabilities_Extended Message\nreceives the and compares the appends a and sends the\nSource_Capabilities_ExtendedMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Source_Capabilities_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to\nPolicy Engine SenderResponseTimer\nthe that consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 659\nTable8.99 Steps for a Sink getting Source Extended Capabilities Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_Capabilities_ExtendedMessage\n18 informs the that the\nwas\nSource Sink sucEcxetsesnfudelldy Cseanpta.bilities\nThe has informed the of its .\nPage 660 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.4.2 Dual-Role Source Gets Source Capabilities Extended from a Dual-\nRole Sink\nFigure 8.73, \"Dual-Role Source Gets Dual-Role Sink's Extended Capabilities\"\nSource Sink Dual-Role PowerSource Dual-Role PowerSink Extended Capabilities\nSource shows an example sequence between a\nand a when the gets the 's as a\n. Figure 8.73 Dual-Role Source Gets Dual-Role Sink's Extended Capabilities\nDual-Role Source Port Dual-Role Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Source_Cap_Extended\n2:Get_Source_Cap_Extended\n3: Get_Source_Cap_Extended + CRC\nStart CRCReceiveTimer 4: Get_Source_Cap_Extended\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Source_Cap_Extended\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer Get extended Source\n9:Get_Source_Cap_Extended sent capability Information\nfrom DPM\nStart SenderResponseTimer\n10: Send Source_Capabilities_Extended\n12: Source_Capabilities_Extended 11: Source_Capabilities_Extended\n+ CRC\n13: Source_Capabilities_Extended Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Source_Capabilities_Extended\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Capabilities_Extended sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 661\nTable8.100, \"Steps for a Dual-Role Source getting Dual-Role Sink Extended Capabilities Sequence\"\nFigure 8.73, \"Dual-Role Source Gets Dual-Role Sink's\nExtended Capabilities\" below provides a\ndetailed explanation of what happens at each labeled step in\nTable8.100 Step asb ofovre .a Dual-Role Source getting Dual-Role Sink Extended Capabilities Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 Get_Source_Cap_ExtendedMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Source_Cap_Extended\nGet_Source_Cap_ExtendedMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nGet_Source_Cap_ExtendedMessage Protocol\nremoves the and forwards the\nLayer\n4 to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Source_Cap_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Source_Cap_ExtendedMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully\nPolicy Engine DPM Extended\nsent. starts .\nCapabilities Source\nrequests the for the\nPolicy Engine Protocol Layer\nas a which are provided.\n10 Source_Capabilities_ExtendedMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nSource_Capabilities_Extended Message\nreceives the and compares the appends a and sends the\nSource_Capabilities_ExtendedMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Source_Capabilities_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to\nPolicy Engine SenderResponseTimer\nthe that consumes it.\n14 The stops the .\nPage 662 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.100 Steps for a Dual-Role Source getting Dual-Role Sink Extended Capabilities Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSource_Capabilities_ExtendedMessage\n18 informs the that the\nwas\nDual-Role PowerSink Dual-Role PowersuScocuerscsefully seEnxtt.ended Capabilities Source\nThe has informed the of its as a .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 663\n8.3.2.11.4.3 Source Gets Sink Extended Capabilities\nFigure 8.74, \"Source Gets Sink's Extended Capabilities\" Source Sink\nSource Sink Extended Capabilities\nshows an example sequence between a and a\nwhen the gets the F'isg ure 8.74 Source Get.s Sink's Extended Capabilities\nSink Port\nSource Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Sink_Cap_Extended\n2:Get_Sink_Cap_Extended\n3: Get_Sink_Cap_Extended + CRC\nStart CRCReceiveTimer 4: Get_Sink_Cap_Extended\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Sink_Cap_Extended\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer Get extended Sink\n9:Get_Sink_Cap_Extended sent capability Information\nfrom DPM\nStart SenderResponseTimer\n10: Send Sink_Capabilities_Extended\n12: Sink_Capabilities_Extended 11: Sink_Capabilities_Extended\n+ CRC\n13: Sink_Capabilities_Extended Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Sink_Capabilities_Extended\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Sink_Capabilities_Extended sent\nPage 664 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.101, \"Steps for a Source getting Sink Extended Capabilities Sequence\"\nFigure 8.74, \"Source Gets Sink's Extended Capabilities\"\nbelow provides a detailed explanation\nof what happensT aatb elaec8h .l1a0b1e l eSdte sptesp f oinr a Source getting Sink Extended Capabilities Seque anbcoeve.\nStep Sink Port Source Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 Get_Sink_Cap_ExtendedMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Sink_Cap_Extended\nGet_Source_Cap_ExtendedMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nGet_Sink_Cap_ExtendedMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Sink_Cap_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Sink_Cap_ExtendedMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Sink\nstarts .\nExtended Capabilities\nrequests the for the present\nPolicy Engine Protocol Layer\nwhich are provided.\n10 Sink_Capabilities_ExtendedMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nSink_Capabilities_ExtendedMessage\nreceives the and compares the appends a and sends the\nSink_Capabilities_ExtendedMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Sink_Capabilities_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to\nPolicy Engine SenderResponseTimer\nthe that consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 665\nTable8.101 Steps for a Source getting Sink Extended Capabilities Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSink_Capabilities_ExtendedMessage\n18 informs the that the\nwas successfully\nSink Source senEtx.tended Capabilities\nThe has informed the of its .\nPage 666 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.4.4 Dual-Role Sink Gets Sink Capabilities Extended from a Dual-Role\nSource\nFigure 8.75, \"Dual-Role Sink Gets Dual-Role Source's Extended Capabilities\"\nSource Sink Dual-Role PowerSink Dual-Role PowerSource Extended Capabilities Sink\nshows an example sequence between a\nand a Fwighuenre t h8e.7 5 Dual-Role Sin k Ge gtest Ds tuhael -Role Source's E xtende'sd Capabilities as a .\nDual-Role Sink Port Dual-Role Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Sink_Cap_Extended\n2:Get_Sink_Cap_Extended\n3: Get_Sink_Cap_Extended + CRC\nStart CRCReceiveTimer 4: Get_Sink_Cap_Extended\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Sink_Cap_Extended\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer Get extended Sink\n9:Get_Sink_Cap_Extended sent capability Information\nfrom DPM\nStart SenderResponseTimer\n10: Send Sink_Capabilities_Extended\n12: Sink_Capabilities_Extended 11: Sink_Capabilities_Extended\n+ CRC\n13: Sink_Capabilities_Extended Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Sink_Capabilities_Extended\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Sink_Capabilities_Extended sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 667\nTable8.102, \"Steps for a Dual-Role Sink getting Dual-Role Source Extended Capabilities Sequence\"\nFigure 8.75, \"Dual-Role Sink Gets Dual-Role Source's\nExtended Capabilities\" below provides a\ndetailed explanation of what happens at each labeled step in\nTable8.102 Step asb ofovre .a Dual-Role Sink getting Dual-Role Source Extended Capabilities Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 Get_Sink_Cap_ExtendedMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Sink_Cap_Extended\nGet_Sink_Cap_ExtendedMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nGet_Sink_Cap_ExtendedMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Sink_Cap_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Sink_Cap_ExtendedMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Extended\nstarts .\nCapabilities Sink\nrequests the for the\nPolicy Engine Protocol Layer\nas a which are provided.\n10 Sink_Capabilities_ExtendedMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nSink_Capabilities_Extended Message\nreceives the and compares the appends a and sends the\nSink_Capabilities_ExtendedMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Sink_Capabilities_ExtendedMessage\nThe forwards the received\nPolicy Engine\ninformation to\nPolicy Engine SenderResponseTimer\nthe that consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 668 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.102 Steps for a Dual-Role Sink getting Dual-Role Source Extended Capabilities Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nSink_Capabilities_ExtendedMessage\n18 informs the that the\nwas successfully\nDual-Role PowerSource Dual-Role Poswenetr.Sink Extended Capabilities Sink\nThe has informed the of its as a .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 669\n8.3.2.11.5 Battery Capabilities and Status\n8.3.2.11.5.1 Sink Gets Battery Capabilities\nFigure 8.76, \"Sink Gets Source's Battery Capabilities\" Source Sink\nSink Source Battery Battery\nshows an example sequence between a and a when\nthe gets the 's Figu craep a8b.7il6it iSeisn fko rG ae tgsi vSeonu rce's Ba. ttery Capabilities\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Battery_Cap\n2:Get_Battery_Cap\n3: Get_Battery_Cap + CRC\nStart CRCReceiveTimer 4: Get_Battery_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Battery_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Battery capability\n9:Get_Battery_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send Battery_Capabilities\n11: Battery_Capabilities\n12: Battery_Capabilities + CRC\n13: Battery_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Battery_Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Battery_Capabilities sent\nPage 670 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.103, \"Steps for a Sink getting Source Battery capabilities Sequence\"\nFigure 8.76, \"Sink Gets Source's Battery Capabilities\"\nbelow provides a detailed explanation of\nwhat happens at eTaacbhl ela8be.1le0d3 s tSetpe pins for a Sink getting Source Battery capabilities Seq aubeonvcee.\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nGet_Battery_CapMessage The has set to and the p\n1 directs the to send a\nBattery pull up on its wire.\ncontaining the number of the\nProtocol Layer Message PHY\nfor which capabilities are being requested.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Battery_CapMessage\n.\nGet_Battery_CapMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Battery_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Battery_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Battery_CapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nBattery Battery\nrequests the for the present\ncapabilities, for the requested number,\nPolicy Engine Protocol Layer\n10 which are provided.\nBattery_CapabilitiesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC\nreceives the and compares the Battery_CapabilitiesMessage CRCReceiveTimer\nBattery_CapabilitiesMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Battery_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 671\nTable8.103 Steps for a Sink getting Source Battery capabilities Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Battery_CapabilitiesMessage\ninforms the that the\nSource Sink Battery B awttaesr syuccessfully sent.\nThe has informed the of the capabilities for the requested .\nPage 672 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.5.2 Source Gets Battery Capabilities\nFigure 8.77, \"Source Gets Sink's Battery Capabilities\" Source Sink\nSource Sink Battery Battery\nshows an example sequence between a and a when\nthe gets the 's Figu craep a8b.7il7it iSeosu forcr ea Ggeivtesn S ink's Ba. ttery Capabilities\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Battery_Cap\n2:Get_Battery_Cap\n3: Get_Battery_Cap + CRC\nStart CRCReceiveTimer 4: Get_Battery_Cap\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Battery_Cap received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Battery capability\n9:Get_Battery_Cap sent Information from DPM\nStart SenderResponseTimer\n10: Send Battery_Capabilities\n11: Battery_Capabilities\n12: Battery_Capabilities + CRC\n13: Battery_Capabilities Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Battery_Capabilities received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Battery_Capabilities sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 673\nTable8.104, \"Steps for a Source getting Sink Battery capabilities Sequence\"\nFigure 8.77, \"Source Gets Sink's Battery Capabilities\"\nbelow provides a detailed explanation of\nwhat happens at eTaacbhl ela8be.1le0d4 s tSetpe pins for a Source getting Sink Battery capabilities Seq aubeonvcee.\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nGet_Battery_CapMessage The has set to with the d pull\n1 directs the to send a\nBattery down on its wire.\ncontaining the number of the\nProtocol Layer Message PHY\nfor which capabilities are being requested.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Battery_CapMessage\n.\nGet_Battery_CapMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Battery_CapMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Battery_CapMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Battery_CapMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nBattery Battery\nrequests the for the present\ncapabilities, for the requested number,\nPolicy Engine Protocol Layer\n10 which are provided.\nBattery_CapabilitiesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC\nreceives the and compares the Battery_CapabilitiesMessage CRCReceiveTimer\nBattery_CapabilitiesMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Battery_CapabilitiesMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 674 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.104 Steps for a Source getting Sink Battery capabilities Sequence\nStep Source Port Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Battery_CapabilitiesMessage\ninforms the that the\nSink Source Battery B awttaesr syuccessfully sent.\nThe has informed the of the capabilities for the requested .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 675\n8.3.2.11.5.3 Sink Gets Battery Status\nFigure 8.78, \"Sink Gets Source's Battery Status\" Source Sink\nSink Source Battery Battery\nshows an example sequence between a and a when the\ngets the 's statFuigs uforre a8 g.7iv8e Sni nk Gets. Source's Battery Status\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Battery_Status\n2:Get_Battery_Status\n3: Get_Battery_Status + CRC\nStart CRCReceiveTimer 4: Get_Battery_Status\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Battery_Status received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Battery status\n9:Get_Battery_Status sent Information from DPM\nStart SenderResponseTimer\n10: Send Battery_Status\n11: Battery_Status\n12: Battery_Status + CRC\n13: Battery_Status Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Battery_Status received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Battery_Status sent\nPage 676 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.105, \"Steps for a Sink getting Source Battery status Sequence\"\nFigure 8.78, \"Sink Gets Source's Battery Status\"\nbelow provides a detailed explanation of what\nhappens at each labeTleadb slete8p. 1in0 5 Steps for a Sink getting Source Battery sta atbuosv See.quence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nGet_Battery_StatusMessage The has set to and the p\n1 directs the to send a\nBattery pull up on its wire.\ncontaining the number of\nProtocol Layer Message PHY\nthe for which status is being requested.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Battery_StatusMessage\n.\nGet_Battery_StatusMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nGet_Battery_StatusMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Battery_StatusMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Battery_StatusMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nBattery Battery\nrequests the for the present\nstatus, for the requested number, which\nPolicy Engine Protocol Layer\n10 are provided.\nBattery_StatusMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Battery_Status\nreceives the and compares the Message CRCReceiveTimer\nBattery_StatusMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Battery_StatusMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 677\nTable8.105 Steps for a Sink getting Source Battery status Sequence\nStep Sink Port Source Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Battery_StatusMessage\ninforms the that the\nSource Sink Battery wBaas tstuercycessfully sent.\nThe has informed the of the status for the requested .\nPage 678 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.5.4 Source Gets Battery Status\nFigure 8.79, \"Source Gets Sink's Battery Status\" Source Sink\nSource Sink Battery Battery\nshows an example sequence between a and a when the\ngets the 's statFuisg fuorre a 8 g.i7v9e nS ource G. ets Sink's Battery Status\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Battery_Status\n2:Get_Battery_Status\n3: Get_Battery_Status + CRC\nStart CRCReceiveTimer 4: Get_Battery_Status\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Battery_Status received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Battery status\n9:Get_Battery_Status sent Information from DPM\nStart SenderResponseTimer\n10: Send Battery_Status\n11: Battery_Status\n12: Battery_Status + CRC\n13: Battery_Status Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Battery_Status received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Battery_Status sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 679\nTable8.106, \"Steps for a Source getting Sink Battery status Sequence\"\nFigure 8.79, \"Source Gets Sink's Battery Status\"\nbelow provides a detailed explanation of what\nhappens at each labeTleadb slete8p. 1in0 6 Steps for a Source getting Sink Battery sta atbuosv See.quence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nGet_Battery_StatusMessage The has set to with the d pull\n1 directs the to send a\nBattery down on its wire.\ncontaining the number of\nProtocol Layer Message PHY\nthe for which status is being requested.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Battery_StatusMessage\n.\nGet_Battery_StatusMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nGet_Battery_StatusMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Battery_StatusMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Battery_StatusMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nBattery Battery\nrequests the for the present\nstatus, for the requested number, which\nPolicy Engine Protocol Layer\n10 are provided.\nBattery_StatusMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Battery_Status\nreceives the and compares the Message CRCReceiveTimer\nBattery_StatusMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Battery_StatusMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 680 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.106 Steps for a Source getting Sink Battery status Sequence\nStep Source Port Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Battery_StatusMessage\ninforms the that the\nSink Source Battery wBaas tstuercycessfully sent.\nThe has informed the of the status for the requested .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 681\n8.3.2.11.6 Manufacturer Information\n8.3.2.11.6.1 Source Gets Port Manufacturer Information from a Sink\nFigure 8.80, \"Source Gets Sink's Port Manufacturer Information\" Source\nSink Source Sink Port\nshows an example sequence between a and\na when the gFeitgsu trhee 8.80' sS oMuarncuef aGcetutsr eSri ninkf'osr Pmoartti oMna fnoru ftahcet urer. Information\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Manufacturer_Info\n2:Get_Manufacturer_Info\n3: Get_Manufacturer_Info + CRC\nStart CRCReceiveTimer 4: Get_Manufacturer_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Manufacturer_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Manufacturer\n9:Get_Manufacturer_Info sent Information from DPM\nStart SenderResponseTimer\n10: Send Manufacturer_Info\n12: Manufacturer_Info 11: Manufacturer_Info\n+ CRC\n13: Manufacturer_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Manufacturer_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Manufacturer_Info sent\nPage 682 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.107, \"Steps for a Source getting Sink's Port Manufacturer Information Sequence\"\nFigure 8.80, \"Source Gets Sink's Port Manufacturer Information\"\nbelow provides a detailed\nexplanation of what happens at each labeled step in\nabove. Table8.107 Steps for a Source getting Sink's Port Manufacturer Information Sequence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nGet_Manufacturer_InfoMessage The has set to with the d pull\n1 directs the to send a\nPort down on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Manufacturer_InfoMessage\nGet_Manufacturer_InfoMessage\nappends and sends the CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPanHdY c Lhaecykesr the to verCiRfyC the .\n.\nGet_Manufacturer_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Manufacturer_InfoMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Manufacturer_InfoMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Manufacturer_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Manufacturer_InfoMessage CRCReceiveTimer\nManufacturer_InfoMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Manufacturer_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\n14 The stops the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 683\nTable8.107 Steps for a Source getting Sink's Port Manufacturer Information Sequence\nStep Source Port Sink Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpHasYs eLsa yite r .CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Manufacturer_InfoMessage\ninforms the that the\nSink Source Pwoarst successfully sent.\nThe has informed the of the manufacturer information for the .\nPage 684 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.6.2 Sink Gets Port Manufacturer Information from a Source\nFigure 8.81, \"Sink Gets Source's Port Manufacturer Information\" Source\nSink Source Sink Port\nshows an example sequence between a and\na when the gFeitgsu trhee 8.81' sS iMnakn Guefatcst Suoreurr icnef'osr Pmoartti oMna fnoru ftahcet urer. Information\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Manufacturer_Info\n2:Get_Manufacturer_Info\n3: Get_Manufacturer_Info + CRC\nStart CRCReceiveTimer 4: Get_Manufacturer_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Manufacturer_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Manufacturer\n9:Get_Manufacturer_Info sent Information from DPM\nStart SenderResponseTimer\n10: Send Manufacturer_Info\n12: Manufacturer_Info 11: Manufacturer_Info\n+ CRC\n13: Manufacturer_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Manufacturer_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Manufacturer_Info sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 685\nTable8.108, \"Steps for a Source getting Sink's Port Manufacturer Information Sequence\"\nFigure 8.81, \"Sink Gets Source's Port Manufacturer Information\"\nbelow provides a detailed\nexplanation of what happens at each labeled step in\nabove. Table8.108 Steps for a Source getting Sink's Port Manufacturer Information Sequence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nGet_Manufacturer_InfoMessage The has set to and the p\n1 directs the to send a\nPort pull up on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Manufacturer_InfoMessage\nGet_Manufacturer_InfoMessage\nappends and sends the CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPanHdY c Lhaecykesr the to verCiRfyC the .\n.\nGet_Manufacturer_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Manufacturer_InfoMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Manufacturer_Info Message\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Manufacturer_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Manufacturer_InfoMessage CRCReceiveTimer\nManufacturer_InfoMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Manufacturer_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\n14 The stops the .\nPage 686 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.108 Steps for a Source getting Sink's Port Manufacturer Information Sequence\nStep Sink Port Source Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Manufacturer_InfoMessage\ninforms the that the\nSink Source Pwoarst successfully sent.\nThe has informed the of the manufacturer information for the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 687\n8.3.2.11.6.3 Source Gets Battery Manufacturer Information from a Sink\nFigure 8.82, \"Source Gets Sink's Battery Manufacturer Information\" Source\nSink Source Sink\nshows an example sequence between a\nand a when the Figur gee 8ts. 8th2e S ourc'se M Gaentsu fSaicntkur'se rB iantftoerrmy aMtiaonnu fofarc otnuer eorf Iitnsf oBramtteartiieosn.\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Manufacturer_Info\n2:Get_Manufacturer_Info\n3: Get_Manufacturer_Info + CRC\nStart CRCReceiveTimer 4: Get_Manufacturer_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Manufacturer_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Manufacturer\n9:Get_Manufacturer_Info sent Information from DPM\nStart SenderResponseTimer\n10: Send Manufacturer_Info\n12: Manufacturer_Info 11: Manufacturer_Info\n+ CRC\n13: Manufacturer_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Manufacturer_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Manufacturer_Info sent\nPage 688 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.109, \"Steps for a Source getting Sink's Battery Manufacturer Information Sequence\"\nFigure 8.82, \"Source Gets Sink's Battery Manufacturer\nInformation\" below provides a\ndetailed explanation of what happens at each labeled step in\nTabl aeb8o.v1e0.9 Steps for a Source getting Sink's Battery Manufacturer Information Sequence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nGet_Manufacturer_InfoMessage The has set to with the d pull\n1 directs the to send a\nBattery Battery down on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation for a given .\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Manufacturer_Info\nGet_Manufacturer_InfoMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nGet_Manufacturer_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Manufacturer_InfoMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Manufacturer_Info Message\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Battery\nstarts .\nBattery\nrequests the for the \u2019s\nmanufacturer information for a given which is\nPolicy Engine Protocol Layer\n10 provided.\nManufacturer_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Manufacturer_InfoMessage CRCReceiveTimer\nManufacturer_InfoMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Manufacturer_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\n14 The stops the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 689\nTable8.109 Steps for a Source getting Sink's Battery Manufacturer Information Sequence\nStep Source Port Sink Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Manufacturer_InfoMessage\ninforms the that the\nSink Source wasB sauttcecreyssfully sent.\nThe has informed the of the manufacturer information for the requested .\nPage 690 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.6.4 Sink Gets Battery Manufacturer Information from a Source\nFigure 8.83, \"Sink Gets Source's Battery Manufacturer Information\" Source\nSink Source Sink Port\nshows an example sequence between a\nand a when the Figur gee 8ts. 8th3e S ink 'Gs eMtsa nSuofuarcctuer'se rB iantftoerrmy aMtiaonnu fofarc tthuer er In. formation\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Manufacturer_Info\n2:Get_Manufacturer_Info\n3: Get_Manufacturer_Info + CRC\nStart CRCReceiveTimer 4: Get_Manufacturer_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Manufacturer_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Manufacturer\n9:Get_Manufacturer_Info sent Information from DPM\nStart SenderResponseTimer\n10: Send Manufacturer_Info\n12: Manufacturer_Info 11: Manufacturer_Info\n+ CRC\n13: Manufacturer_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Manufacturer_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Manufacturer_Info sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 691\nTable8.110, \"Steps for a Source getting Sink's Battery Manufacturer Information Sequence\"\nFigure 8.83, \"Sink Gets Source's Battery Manufacturer\nInformation\" below provides a\ndetailed explanation of what happens at each labeled step in\nTabl aeb8o.v1e1.0 Steps for a Source getting Sink's Battery Manufacturer Information Sequence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nGet_Manufacturer_InfoMessage The has set to and the p\n1 directs the to send a\nBattery Battery pull up on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation for a given .\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Manufacturer_Info\nGet_Manufacturer_InfoMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nGet_Manufacturer_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Manufacturer_InfoMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Manufacturer_Info Message\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Battery\nstarts .\nBattery\nrequests the for the \u2019s\nmanufacturer information for a given which is\nPolicy Engine Protocol Layer\n10 provided.\nManufacturer_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Manufacturer_InfoMessage CRCReceiveTimer\nManufacturer_InfoMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Manufacturer_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\n14 The stops the .\nPage 692 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.110 Steps for a Source getting Sink's Battery Manufacturer Information Sequence\nStep Sink Port Source Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte r . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Manufacturer_InfoMessage\ninforms the that the\nSink Source wasB sauttcecreyssfully sent.\nThe has informed the of the manufacturer information for the requested .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 693\n8.3.2.11.6.5 VCONN Source Gets Manufacturer Information from a Cable Plug\nFigure 8.84, \"VCONN Source Gets Cable Plug's Manufacturer Information\"\nVCONN Source Source Sink Cable Plug VCONN Source Cable Plug\nshows an example sequence between a\n( or ) and a when the gets the 's Manufacturer\ninformation. Figure 8.84 VCONN Source Gets Cable Plug's Manufacturer Information\nVCONNSource Port Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Get_Manufacturer_Info\n2:Get_Manufacturer_Info\n3: Get_Manufacturer_Info + CRC\nStart CRCReceiveTimer 4: Get_Manufacturer_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Manufacturer_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Manufacturer\n9:Get_Manufacturer_Info sent Information from DPM\nStart SenderResponseTimer\n10: Send Manufacturer_Info\n12: Manufacturer_Info 11: Manufacturer_Info\n+ CRC\n13: Manufacturer_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Manufacturer_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Manufacturer_Info sent\nPage 694 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.111, \"Steps for a VCONN Source getting Sink's Port Manufacturer Information Sequence\"\nFigure 8.84, \"VCONN Source Gets Cable Plug's\nManufacturer Information\" below provides a\ndetailed explanation of what happens at each labeled step in\nTable8.111 Steps f aobro av Ve.CONN Source getting Sink's Port Manufacturer Information Sequence\nStep VCONN Source Cable Plug\nPort VCONN Source\nPolicy Engine Protocol Layer\nThe is currently acting as the .\nGet_Manufacturer_InfoMessage\ndirects the to send a\n1 Port\nwith a request for\nProtocol Layer Message PHY\ninformation.\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Get_Manufacturer_Info\nGet_Manufacturer_InfoMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Laye arnd checks the CRC to verify the .\n.\nGet_Manufacturer_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Manufacturer_InfoMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Manufacturer_Info Message\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Cable Plug\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Manufacturer_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC\nreceives the and compares the Manufacturer_InfoMessage CRCReceiveTimer\nManufacturer_InfoMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Manufacturer_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 695\nTable8.111 Steps for a VCONN Source getting Sink's Port Manufacturer Information Sequence\nStep VCONN Source Cable Plug\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Manufacturer_InfoMessage\ninforms the that the\nCable Plug Source was successfully sent.\nThe has informed the of its manufacturer information.\nPage 696 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.7 Country Codes\n8.3.2.11.7.1 8.3.2.12.7.1Source Gets Country Codes from a Sink\nFigure 8.85, \"Source Gets Sink's Country Codes\" Source Sink\nSource Sink\nshows an example sequence between a and a when the\ngets the 's Country CodFeigsu. re 8.85 Source Gets Sink's Country Codes\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Country_Codes\n2:Get_Country_Codes\n3: Get_Country_Codes + CRC\nStart CRCReceiveTimer 4: Get_Country_Codes\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Codes\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Country Codes\n9:Get_Country_Codes sent Information from DPM\nStart SenderResponseTimer\n10: Send Country_Codes\n12: Country_Codes 11: Country_Codes\n+ CRC\n13: Country_Codes Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Codes\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Codes sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 697\nTable8.112, \"Steps for a Source getting Country Codes Sequence\"\nFigure 8.85, \"Source Gets Sink's Country Codes\"\nbelow provides a detailed explanation of what\nhappens at each labeledT asbtelpe i8n. 112 Steps for a Source getting Country Code asb Soevqe.uence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nGet_Country_CodesMessage Port The has set to with the d pull\n1 directs the to send a\ndown on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Country_CodesMessage\n.\nGet_Country_CodesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Country_Codes Message Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Country_CodesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Country_Codes Message\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Country_CodesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Country_Codes Message CRCReceiveTimer\nCountry_Codes Message appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Country_CodesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 698 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.112 Steps for a Source getting Country Codes Sequence\nStep Source Port Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Country_CodesMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of the country codes.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 699\n8.3.2.11.7.2 Sink Gets Country Codes from a Source\nFigure 8.86, \"Sink Gets Source's Country Codes\" Source Sink\nSource Sink\nshows an example sequence between a and a when the\ngets the 's country codFeisg.u re 8.86 Sink Gets Source's Country Codes\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Country_Codes\n2:Get_Country_Codes\n3: Get_Country_Codes + CRC\nStart CRCReceiveTimer 4: Get_Country_Codes\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Codes\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet country codes\n9:Get_Country_Codes sent Information from DPM\nStart SenderResponseTimer\n10: Send Country_Codes\n12: Country_Codes 11: Country_Codes\n+ CRC\n13: Country_Codes Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Codes\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Codes sent\nPage 700 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.113, \"Steps for a Source getting Sink's Country Codes Sequence\"\nFigure 8.86, \"Sink Gets Source's Country Codes\"\nbelow provides a detailed explanation of\nwhat happens at eaTcha blalbee8le.1d1 s3te pSt ienp s for a Source getting Sink's Country Codes aSbeoqvuee.nce\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nGet_Country_CodesMessage Port The has set to and the p\n1 directs the to send a\npull up on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Country_CodesMessage\n.\nGet_Country_CodesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Country_CodesMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Country_Codes Message Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Country_Codes Message\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Country_CodesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Country_CodesMessage CRCReceiveTimer\nCountry_CodesMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Country_CodesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 701\nTable8.113 Steps for a Source getting Sink's Country Codes Sequence\nStep Sink Port Source Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Country_CodesMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of the country codes.\nPage 702 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.7.3 VCONN Source Gets Country Codes from a Cable Plug\nFigure 8.87, \"VCONN Source Gets Cable Plug's Country Codes\" VCONN Source\nSource Sink Cable Plug VCONN Source Cable Plug\nshows an example sequence between a\n( or ) and a Figure w 8h.8e7n VthCeO NN Source Ge tgse tCsa tbhlee Plug's Cou'sn Ctoryu nCtordy eCsodes.\nVCONNSource Port Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Get_Country_Codes\n2:Get_Country_Codes\n3: Get_Country_Codes + CRC\nStart CRCReceiveTimer 4: Get_Country_Codes\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Codes\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet country codes from\n9:Get_Country_Codes sent DPM\nStart SenderResponseTimer\n10: Send Country_Codes\n12: Country_Codes 11: Country_Codes\n+ CRC\n13: Country_Codes Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Codes\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Codes sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 703\nTable8.114, \"Steps for a VCONN Source getting Sink's Country Codes Sequence\"\nFigure 8.87, \"VCONN Source Gets Cable Plug's Country Codes\"\nbelow provides a detailed explanation\nof what happensT aatb eleac8h. 1la1b4e l eSdte sptse pfo inr a VCONN Source getting Sink's Country Codes Sequence above.\nStep VCONN Source Cable Plug\nPort VCONN Source\nPolicy Engine Protocol Layer\nThe is currently acting as the .\nGet_Country_CodesMessage Port\ndirects the to send a\n1\nwith a request for\nProtocol Layer Message PHY\ninformation.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Country_CodesMessage\n.\nGet_Country_CodesMessage CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC\n. Starts . and checks the to verify the .\nGet_Country_CodesMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Country_CodesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Country_CodesMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Cable Plug\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Country_CodesMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Country_Codes\nreceives the and compares the Message CRCReceiveTimer\nCountry_Codes Message appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Country_CodesMessage Policy\nThe forwards the received\nEngine\ninformation to the\nPolicy Engine SenderResponseTimer\nthat consumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 704 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.114 Steps for a VCONN Source getting Sink's Country Codes Sequence\nStep VCONN Source Cable Plug\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Country_CodesMessage\ninforms the that the\nCable Plug Source was successfully sent.\nThe has informed the of its country codes.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 705\n8.3.2.11.8 Country Information\n8.3.2.11.8.1 Source Gets Country Information from a Sink\nFigure 8.88, \"Source Gets Sink's Country Information\" Source Sink\nSource Sink\nshows an example sequence between a and a when\nthe gets the 's counFtirgyu irnefo 8r.m88at Sioonu. rce Gets Sink's Country Information\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Country_Info\n2:Get_Country_Info\n3: Get_Country_Info + CRC\nStart CRCReceiveTimer 4: Get_Country_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Country Information\n9:Get_Country_Info sent from DPM\nStart SenderResponseTimer\n10: Send Country_Info\n12: Country_Info 11: Country_Info\n+ CRC\n13: Country_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Info sent\nPage 706 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.115, \"Steps for a Source getting Country Information Sequence\"\nFigure 8.88, \"Source Gets Sink's Country Information\"\nbelow provides a detailed explanation of\nwhat happens at eaTcha blalbee8le.1d1 s5te pS tienp s for a Source getting Country Information Seque anbcoeve.\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nGet_Country_InfoMessage Port The has set to with the d pull\n1 directs the to send a\ndown on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation for a specific Country Code.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Country_InfoMessage\n.\nGet_Country_InfoMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Country_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Country_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Country_InfoMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Country_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Country_Info\nreceives the and compares the Message CRCReceiveTimer\nCountry_Info Message appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Country_Info\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 707\nTable8.115 Steps for a Source getting Country Information Sequence\nStep Source Port Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Country_InfoMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of the country information.\nPage 708 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.8.2 Sink Gets Country Information from a Source\nFigure 8.89, \"Sink Gets Source's Country Information\" Source Sink\nSource Sink\nshows an example sequence between a and a when\nthe gets the 's counFtirgyu croed 8es.8. 9 Sink Gets Source's Country Information\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Country_Info\n2:Get_Country_Info\n3: Get_Country_Info + CRC\nStart CRCReceiveTimer 4: Get_Country_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet country information\n9:Get_Country_Info sent from DPM\nStart SenderResponseTimer\n10: Send Country_Info\n12: Country_Info 11: Country_Info\n+ CRC\n13: Country_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Info sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 709\nTable8.116, \"Steps for a Source getting Sink's Country Information Sequence\"\nFigure 8.89, \"Sink Gets Source's Country Information\"\nbelow provides a detailed explanation\nof what happensT aatb eleac8h. 1la1b6e l eSdte sptesp fo inr a Source getting Sink's Country Information Sequ aebnocvee.\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nGet_Country_InfoMessage Port The has set to and the p\n1 directs the to send a\npull up on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation for a specific country code.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Country_InfoMessage\n.\nGet_Country_InfoMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Country_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Country_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Country_InfoMessage\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Country_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Country_Info\nreceives the and compares the Message CRCReceiveTimer\nCountry_InfoMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Country_Info\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 710 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.116 Steps for a Source getting Sink's Country Information Sequence\nStep Sink Port Source Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Country_InfoMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of the country information.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 711\n8.3.2.11.8.3 VCONN Source Gets Country Information from a Cable Plug\nFigure 8.90, \"VCONN Source Gets Cable Plug's Country Information\" VCONN\nSource Source Sink Cable Plug VCONN Source Cable Plug\nshows an example sequence between a\n( or ) Faingdu rae 8.90 VCON wNh Seonu trhcee Gets Cable P lguegts's t Cheo untry Info'rsm coautinotnry information.\nVCONNSource Port Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Get_Country_Info\n2:Get_Country_Info\n3: Get_Country_Info + CRC\nStart CRCReceiveTimer 4: Get_Country_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Country Information\n9:Get_Country_Info sent from DPM\nStart SenderResponseTimer\n10: Send Country_Info\n12: Country_Info 11: Country_Info\n+ CRC\n13: Country_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Info sent\nPage 712 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.117, \"Steps for a VCONN Source getting Sink's Country Information Sequence\"\nFigure 8.90, \"VCONN Source Gets Cable Plug's Country\nInformation\" below provides a detailed\nexplanation of what happens at each labeled step in\nT aabbolvee8..117 Steps for a VCONN Source getting Sink's Country Information Sequence\nStep VCONN Source Cable Plug\nPort VCONN Source\nPolicy Engine Protocol Layer\nThe is currently acting as the .\nGet_Country_InfoMessage Port\ndirects the to send a\n1\nwith a request for\nProtocol Layer Message PHY\ninformation for a specific country code.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Country_InfoMessage\n.\nGet_Country_InfoMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Country_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Country_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Country_Info Message\n9 informs the that the\nPolicy Engine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Cable Plug\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 Country_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC Country_Info\nreceives the and compares the Message CRCReceiveTimer\nCountry_Info Message appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Country_Info\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 713\nTable8.117 Steps for a VCONN Source getting Sink's Country Information Sequence\nStep VCONN Source Cable Plug\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Country_InfoMessage\ninforms the that the\nCable Plug Source was successfully sent.\nThe has informed the of its country information.\nPage 714 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.9 Revision Information\n8.3.2.11.9.1 Source Gets Revision Information from a Sink\nFigure 8.91, \"Source Gets Sink's Revision Information\" Source Sink\nSource Sink\nshows an example sequence between a and a when\nthe gets the 's ReviFsiigounr ien f8o.r9m1a Stoiounr.c e Gets Sink's Revision Information\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Revision\n2:Get_Revision\n3: Get_Revision + CRC\nStart CRCReceiveTimer 4: Get_Revision\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Revision\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Country Information\n9:Get_Revision sent from DPM\nStart SenderResponseTimer\n10: Send Revision\n12: Revision 11: Revision\n+ CRC\n13: Revision Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Revision\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Revision sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 715\nTable8.118, \"Steps for a Source getting Revision Information Sequence\"\nFigure 8.91, \"Source Gets Sink's Revision Information\"\nbelow provides a detailed explanation of\nwhat happens at eaTcha blalebe8l.e1d1 s8t e Spt ienp s for a Source getting Revision Information Seque anbcoeve.\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nGet_RevisionMessage Port The has set to with the d pull\n1 directs the to send a\ndown on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation for a specific Revision Code.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Revision PHY Layer Get_RevisionMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_RevisionMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Revision\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Revision Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 RevisionMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Revision\nreceives the and compares the Message CRCReceiveTimer\nRevision_InfoMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Revision\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 716 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.118 Steps for a Source getting Revision Information Sequence\nStep Source Port Sink Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RevisionMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of the Revision information.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 717\n8.3.2.11.9.2 Sink Gets Revision Information from a Source\nFigure 8.92, \"Sink Gets Source's Revision Information\" Source Sink\nSource Sink\nshows an example sequence between a and a when\nthe gets the 's ReviFsiigounr ceo 8de.9s2. Sink Gets Source's Revision Information\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Country_Info\n2:Get_Country_Info\n3: Get_Country_Info + CRC\nStart CRCReceiveTimer 4: Get_Country_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet country information\n9:Get_Country_Info sent from DPM\nStart SenderResponseTimer\n10: Send Country_Info\n12: Country_Info 11: Country_Info\n+ CRC\n13: Country_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Info sent\nPage 718 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.119, \"Steps for a Source getting Sink's Revision Information Sequence\"\nFigure 8.92, \"Sink Gets Source's Revision Information\"\nbelow provides a detailed explanation\nof what happenTs aatb eleac8h.1 la1b9e lSetde sptse pfo irn a Source getting Sink's Revision Information Sequ aebnocvee.\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nGet_RevisionMessage Port The has set to and the p\n1 directs the to send a\npull up on its wire.\nwith a request for\nProtocol Layer Message PHY\ninformation for a specific Revision code.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Revision PHY Layer Get_RevisionMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_RevisionMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Revision\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Revision Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Port\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 RevisionMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY La.yer CRC Revision\nreceives the and compares the Message CRCReceiveTimer\nRevision_Info Message appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Revision\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 719\nTable8.119 Steps for a Source getting Sink's Revision Information Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RevisionMessage\ninforms the that the\nSink Source was successfully sent.\nThe has informed the of the Revision information.\nPage 720 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.9.3 VCONN Source Gets Revision Information from a Cable Plug\nFigure 8.93, \"VCONN Source Gets Cable Plug's Revision Information\" VCONN\nSource Source Sink Cable Plug VCONN Source Cable Plug\nshows an example sequence between a\n( or )F aingud rae 8.93 VCON wN hSeonu rthcee Gets Cable P lguegt'ss tRheev ision Info'rsm Reavtiiosinon information.\nVCONNSource Port Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Get_Country_Info\n2:Get_Country_Info\n3: Get_Country_Info + CRC\nStart CRCReceiveTimer 4: Get_Country_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Country_Info\n6: GoodCRC received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Country Information\n9:Get_Country_Info sent from DPM\nStart SenderResponseTimer\n10: Send Country_Info\n12: Country_Info 11: Country_Info\n+ CRC\n13: Country_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Country_Info\nreceived\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Country_Info sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 721\nTable8.120, \"Steps for a VCONN Source getting Sink's Revision Information Sequence\"\nFigure 8.93, \"VCONN Source Gets Cable Plug's Revision\nInformation\" below provides a detailed\nexplanation of what happens at each labeled step in\nT aabbolvee8..120 Steps for a VCONN Source getting Sink's Revision Information Sequence\nStep VCONN Source Cable Plug\nPort VCONN Source\nPolicy Engine Protocol Layer\nThe is currently acting as the .\nGet_RevisionMessage Port\ndirects the to send a\n1\nwith a request for\nProtocol Layer Message PHY\ninformation for a specific Revision code.\nLayer\ncreates the and passes to\n2 PHY Layer CRC Get_Revision PHY Layer Get_RevisionMessage\n.\nMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_RevisionMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Get_Revision\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_RevisionMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Cable Plug\nstarts .\nrequests the for the \u2019s\nPolicy Engine Protocol Layer\nmanufacturer information which is provided.\n10 RevisionMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Revision\nRevision\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Revision\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 722 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.120 Steps for a VCONN Source getting Sink's Revision Information Sequence\nStep VCONN Source Cable Plug\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RevisionMessage\ninforms the that the\nCable Plug Source was successfully sent.\nThe has informed the of its Revision information.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 723\n8.3.2.11.10 Source Information\n8.3.2.11.10.1 Sink Gets Source Information\nFigure 8.94, \"Sink Gets Source's Information\" Source Sink Sink\nSource\nshows an example sequence between a and a when the\ngets the 's information. Figure 8.94 Sink Gets Source's Information\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Get_Source_Info\n2:Get_Source_Info\n3: Get_Source_Info + CRC\nStart CRCReceiveTimer 4: Get_Source_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Source_Info received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Source capability\n9:Get_Source_Info sent Information from DPM\nStart SenderResponseTimer\n10: Send Source_Info\n11: Source_Info\n12: Source_Info + CRC\n13: Source_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Source_Info received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Info sent\nPage 724 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.121, \"Steps for a Sink getting Source Information Sequence\"\nFigure 8.94, \"Sink Gets Source's Information\"\nbelow provides a detailed explanation of what\nhappens at each labelTeda bstleep8 i.1n 21 Steps for a Sink getting Source Inform aatbioovne S.equence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC Port Port Power Role Source R\nThe has set to with the d\nPolicy Engine Protocol Layer CC\npull down on its wire. The has set to and the p\n1 Get_Source_InfoMessage\ndirects the to send a pull up on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Source_InfoMessage\n.\nGet_Source_InfoMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Source_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Source_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Source_InfoMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nrequests the for the present\nPolicy Engine Protocol Layer\ninformation which is provided.\n10 Source_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Source_Info\nSource_Info\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Source_Info\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 725\nTable8.121 Steps for a Sink getting Source Information Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Source_InfoMessage\ninforms the that the\nSource Sink was successfully sent.\nThe has provided the with its information.\nPage 726 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.11.10.2 Dual-Role Source Gets Source Information from a Dual-Role Sink\nFigure 8.95, \"Dual-Role Source Gets Dual-Role Sink's Information as a Source\"\nDual-Role PowerSource Dual-Role PowerSink Source Sink Source\nshows an example sequence between\na Fi gure 8 a.9n5d Da ual-Role Source Gets w Dhueanl -tRhoel e Sink 'gse Itnsf tohrem atio'sn I ansfo ar mSoautirocne as a .\nDual-Role Source Port Dual-Role Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Get_Source_Info\n2:Get_Source_Info\n3: Get_Source_Info + CRC\nStart CRCReceiveTimer 4: Get_Source_Info\nCheck MessageID against local copy\nStore copy of MessageID\n5: Get_Source_Info received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet Source capability\n9:Get_Source_Info sent Information from DPM\nStart SenderResponseTimer\n10: Send Source_Info\n11: Source_Info\n12: Source_Info + CRC\n13: Source_Info Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Source_Info received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Source_Info sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 727\nTable8.122, \"Steps for a Dual-Role Source getting Dual-Role Sink's Information as a Source Sequence\"\nFigure 8.95, \"Dual-Role Source Gets Dual-\nRole Sink's Information as a Source\" below\nprovides a detailed explanation of what happens at each labeled step in\nTable8.122 Steps for a Dual-R aobleo vSeo.urce getting Dual-Role Sink's Information as a Source Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPort Port Power Role Source R\nCC Port Port Power Role Sink R\nThe has set to and the p\nPolicy Engine Protocol Layer CC\npull up on its wire. The has set to with the d pull\n1 Get_Source_InfoMessage\ndirects the to send a down on its wire.\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Get_Source_InfoMessage\n.\nGet_Source_InfoMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nGet_Source_InfoMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Get_Source_InfoMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nGet_Source_InfoMessage Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine DPM Source\nstarts .\nrequests the for the present\nPolicy Engine Protocol Layer\ninformation which is provided.\n10 Source_InfoMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC Source_Info\nSource_Info\nreceives the and compares the Message CRCReceiveTimer\nMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Source_Info\nand then stores a copy of the new value.\n13 Message Policy Engine\nThe forwards the received\ninformation to the that\nPolicy Engine SenderResponseTimer\nconsumes it.\nProtocol Layer GoodCRCMessage\n14 The stops the .\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 728 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.122 Steps for a Dual-Role Source getting Dual-Role Sink's Information as a Source Sequence\nStep Dual-Role Source Port Dual-Role Sink Port\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 Source_InfoMessage\ninforms the that the\nDual-Role PowerSink Dual-Role PowerSo urce was successfully sent.\nThe has provided the with its information.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 729\n8.3.2.12 Security\n8.3.2.12.1 Source requests security exchange with Sink\nFigure 8.96, \"Source requests security exchange with Sink\"\nSource Sink\nshows an example sequence for a security exchange\nbetween a and a F.i gure 8.96 Source requests security exchange with Sink\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Security_Request\n2:Security_Request\n3: Security_Request + CRC\nStart CRCReceiveTimer 4: Security_Request\nCheck MessageID against local copy\nStore copy of MessageID\n5: Security_Request received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet security response\n9:Security_Request sent from DPM\n10: Send Security_Response\n11: Security_Response\n12: Security_Response + CRC\n13: Security_Response Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Security_Response received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Security_Response sent\nPage 730 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.123, \"Steps for a Source requesting a security exchange with a Sink Sequence\"\nFigure 8.96, \"Source requests security exchange with Sink\"\nbelow provides a detailed\nexplanation of what happens at each labeled step in\nabove. Table8.123 Steps for a Source requesting a security exchange with a Sink Sequence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nSecurity_RequestMessage Payload The has set to with the d pull\n1 directs the to send a\nDPM down on its wire.\nusing a supplied by\nProtocol Layer Message PHY\nthe .\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Security_RequestMessage\n.\nSecurity_RequestMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nSecurity_RequestMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Security_RequestMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n9 Security_RequestMessage\ninforms the that the\nPolicy Engine DPM\nwas successfully sent.\nrequests the for the response to the\nPolicy Engine Protocol Layer\nsecurity request which is provided.\n10 Security_ResponseMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Security_ResponseMessage CRCReceiveTimer\nSecurity_ResponseMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Security_ResponseMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n14 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n15\n. it calculated with the one sent to verify the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 731\nTable8.123 Steps for a Source requesting a security exchange with a Sink Sequence\nStep Source Port Sink Port\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n17 Security_ResponseMessage\ninforms the that the\nwas successfully sent.\nThe security exchange is complete.\nPage 732 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.12.2 Sink requests security exchange with Source\nFigure 8.97, \"Sink requests security exchange with Source\"\nSink Source\nshows an example sequence for a security exchange\nbetween a and a F.i gure 8.97 Sink requests security exchange with Source\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Security_Request\n2:Security_Request\n3: Security_Request + CRC\nStart CRCReceiveTimer 4: Security_Request\nCheck MessageID against local copy\nStore copy of MessageID\n5: Security_Request received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet security response\n9:Security_Request sent from DPM\n10: Send Security_Response\n11: Security_Response\n12: Security_Response + CRC\n13: Security_Response Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Security_Response received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Security_Response sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 733\nTable8.124, \"Steps for a Sink requesting a security exchange with a Source Sequence\"\nFigure 8.97, \"Sink requests security exchange with Source\"\nbelow provides a detailed\nexplanation of what happens at each labeled step in\nabove. Table8.124 Steps for a Sink requesting a security exchange with a Source Sequence\nStep Sink Port Source Port\nPort Port Power Role R\nCC\nThe has set to Sink with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nSecurity_RequestMessage Payload The has set to and the p\n1 directs the to send a\nDPM pull up on its wire.\nusing a supplied by\nProtocol Layer Message PHY\nthe .\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Security_RequestMessage\n.\nSecurity_RequestMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nSecurity_RequestMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Security_RequestMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n9 Security_RequestMessage\ninforms the that the\nPolicy Engine DPM\nwas successfully sent.\nrequests the for the response to the\nPolicy Engine Protocol Layer\nsecurity request which is provided.\n10 Security_ResponseMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Security_Response Message CRCReceiveTimer\nSecurity_ResponseMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Security_ResponseMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n14\npasses it .\nPage 734 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.124 Steps for a Sink requesting a security exchange with a Source Sequence\nStep Sink Port Source Port\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n15 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n17 Security_ResponseMessage\ninforms the that the\nwas successfully sent.\nThe security exchange is complete.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 735\n8.3.2.12.3 VCONN Source requests security exchange with Cable Plug\nFigure 8.98, \"VCONN Source requests security exchange with Cable Plug\"\nVCONN Source Cable Plug\nshows an example sequence for a security\nexchange between aF igure 8.98 VC aOnNdN a S ource req.u ests security exchange with Cable Plug\nVconn Source Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Security_Request\n2:Security_Request\n3: Security_Request + CRC\nStart CRCReceiveTimer 4: Security_Request\nCheck MessageID against local copy\nStore copy of MessageID\n5: Security_Request received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet security response\n9:Security_Request sent from DPM\n10: Send Security_Response\n11: Security_Response\n12: Security_Response + CRC\n13: Security_Response Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Security_Response received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Security_Response sent\nPage 736 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.125, \"Steps for a VCONN Source requesting a security exchange with a Cable Plug Sequence\"\nFigure 8.98, \"VCONN Source requests security exchange\nwith Cable Plug\" below provides a\ndetailed explanation of what happens at each labeled step in\nTable8.12 5a b Sotveep.s for a VCONN Source requesting a security exchange with a Cable Plug Sequence\nStep VCONN Source Cable Plug\nPolicy Engine Protocol Layer\nSecurity_RequestMessage Payload\ndirects the to send a\nDPM\n1 using a supplied by\nProtocol Layer Message PHY\nthe .\nLayer\ncreates the and passes to\n2 PHY Layer CRC PHY Layer Security_RequestMessage\n.\nSecurity_RequestMessage CRCReceiveTimer CRC Message\nappends and sends the receives the and\n3 PHY Layer CRC\n. Starts . checks the to verify the .\nSecurity_RequestMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Security_RequestMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n9 Security_RequestMessage\ninforms the that the\nPolicy Engine DPM\nwas successfully sent.\nrequests the for the response to the\nPolicy Engine Protocol Layer\nsecurity request which is provided.\n10 Security_ResponseMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC\nPHY L.ayer CRC\nreceives the and compares the Security_Response Message CRCReceiveTimer\nSecurity_ResponseMessage appends a and sends the\n12 it calculated with the one sent to verify the\nProtocol Layer MessageID . Starts .\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Security_ResponseMessage Policy\nThe forwards the received\nEngine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n14 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n15 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 737\nTable8.125 Steps for a VCONN Source requesting a security exchange with a Cable Plug Sequence\nStep VCONN Source Cable Plug\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n17 Security_ResponseMessage\ninforms the that the\nwas successfully sent.\nThe security exchange is complete.\nPage 738 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.13 Firmware Update\n8.3.2.13.1 Source requests firmware update exchange with Sink\nFigure 8.99, \"Source requests firmware update exchange with Sink\"\nSource Sink\nshows an example sequence for a firmware\nupdate exchange betwFeiegnu rae 8.99 Saonudr ac e req. uests firmware update exchange with Sink\nSource Port Sink Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Source Port Power Role = Sink\nCC = Rp CC = Rd\n1: Send Firmware_Update_Request\n2:Firmware_Update_Request\nStart CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request\nCheck MessageID against local copy\nStore copy of MessageID\n6: GoodCRC 5: Firmware_Update_Request received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet firmware update\n9:Firmware_Update_Request sent response from DPM\n10: Send Firmware_Update_Response\n11: Firmware_Update_Response\n12: Firmware_Update_Response + CRC Start CRCReceiveTimer\n13: Firmware_Update_Response\nCheck MessageID against local copy\nStore copy of MessageID\n14: Firmware_Update_Response received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Firmware_Update_Response sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 739\nTable8.126, \"Steps for a Source requesting a firmware update exchange with a Sink Sequence\"\nFigure 8.99, \"Source requests firmware update\nexchange with Sink\" below provides a\ndetailed explanation of what happens at each labeled step in\nTable8.126 aSbtoevpes. for a Source requesting a firmware update exchange with a Sink Sequence\nStep Source Port Sink Port\nPort Port Power Role Source R\nCC\nThe has set to and the p Port Port Power Role Sink R\nPolicy Engine Protocol Layer\npull up on its wire. CC\nFirmware_Update_RequestMessage Payload The has set to with the d pull\n1 directs the to send a\nDPM down on its wire.\nusing a\nProtocol Layer Message PHY\nsupplied by the .\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Firmware_Update_Request\nFirmware_Update_RequestMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nFirmware_Update_RequestMessage Protocol\nremoves the and forwards the\nLayer\n4 to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Firmware_Update_RequestMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nFirmware_Update_RequestMessage\n9 informs the that the\nwas successfully\nPolicy Engine DPM\nsent.\nrequests the for the response to the\nPolicy Engine Protocol Layer\nfirmware update request which is provided.\n10 Firmware_Update_ResponseMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nFirmware_Update_ResponseMessage\nreceives the and compares the appends a and sends the\nFirmware_Update_ResponseMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Firmware_Update_ResponseMessage\nThe forwards the received\nPolicy Engine\ninformation to\nthe that consumes it.\nPage 740 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.126 Steps for a Source requesting a firmware update exchange with a Sink Sequence\nStep Source Port Sink Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n14 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n15 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nFirmware_Update_ResponseMessage\n17 informs the that the\nwas successfully\nsent.\nThe firmware update exchange is complete.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 741\n8.3.2.13.2 Sink requests firmware update exchange with Source\nFigure 8.100, \"Sink requests firmware update exchange with Source\"\nSink Source\nshows an example sequence for a firmware\nupdate exchange betwFiegeunr ae 8.10 a0n Sdi na k requ. ests firmware update exchange with Source\nSink Port Source Port\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nPort Power Role = Sink Port Power Role = Source\nCC = Rd CC = Rp\n1: Send Firmware_Update_Request\n2:Firmware_Update_Request\nStart CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request\nCheck MessageID against local copy\nStore copy of MessageID\n6: GoodCRC 5: Firmware_Update_Request received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet firmware update\n9:Firmware_Update_Request sent response from DPM\n10: Send Firmware_Update_Response\n11: Firmware_Update_Response\n12: Firmware_Update_Response + CRC Start CRCReceiveTimer\n13: Firmware_Update_Response\nCheck MessageID against local copy\nStore copy of MessageID\n14: Firmware_Update_Response received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Firmware_Update_Response sent\nPage 742 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.127, \"Steps for a Sink requesting a firmware update exchange with a Source Sequence\"\nFigure 8.100, \"Sink requests firmware update exchange\nwith Source\" below provides a\ndetailed explanation of what happens at each labeled step in\nTable a8b.o1v2e7. Steps for a Sink requesting a firmware update exchange with a Source Sequence\nStep Sink Port Source Port\nPort Port Power Role Sink R\nCC\nThe has set to with the d Port Port Power Role Source R\nPolicy Engine Protocol Layer\npull down on its wire. CC\nFirmware_Update_RequestMessage Payload The has set to and the p\n1 directs the to send a\nDPM pull up on its wire.\nusing a\nProtocol Layer Message PHY\nsupplied by the .\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Firmware_Update_Request\nFirmware_Update_RequestMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nFirmware_Update_RequestMessage Protocol\nremoves the and forwards the\nLayer\n4 to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Firmware_Update_RequestMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nFirmware_Update_RequestMessage\n9 informs the that the\nwas successfully\nPolicy Engine DPM\nsent.\nrequests the for the response to the\nPolicy Engine Protocol Layer\nfirmware update request which is provided.\n10 Firmware_Update_ResponseMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nFirmware_Update_ResponseMessage\nreceives the and compares the appends a and sends the\nFirmware_Update_ResponseMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Firmware_Update_ResponseMessage\nThe forwards the received\nPolicy Engine\ninformation to\nthe that consumes it.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 743\nTable8.127 Steps for a Sink requesting a firmware update exchange with a Source Sequence\nStep Sink Port Source Port\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n14 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n15 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nFirmware_Update_ResponseMessage\n17 informs the that the\nwas successfully\nsent.\nThe firmware update exchange is complete.\nPage 744 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.13.3 VCONN Source requests firmware update exchange with Cable\nPlug\nFigure 8.101, \"VCONN Source requests firmware update exchange with Cable Plug\"\nVCONN Source Cable Plug\nshows an example sequence for a\nfirmware updaFtieg euxrceh 8a.n1g0e1 b VetCwONeeNn S oa urce request sa nfidr ma ware upda. te exchange with Cable Plug\nVCONNSource Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Firmware_Update_Request\n2:Firmware_Update_Request\nStart CRCReceiveTimer 3: Firmware_Update_Request + CRC 4: Firmware_Update_Request\nCheck MessageID against local copy\nStore copy of MessageID\n6: GoodCRC 5: Firmware_Update_Request received\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\nGet firmware update\n9:Firmware_Update_Request sent response from DPM\n10: Send Firmware_Update_Response\n11: Firmware_Update_Response\n12: Firmware_Update_Response + CRC Start CRCReceiveTimer\n13: Firmware_Update_Response\nCheck MessageID against local copy\nStore copy of MessageID\n14: Firmware_Update_Response received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Firmware_Update_Response sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 745\nTable8.128, \"Steps for a VCONN Source requesting a firmware update exchange with a Cable Plug Sequence\"\nFigure 8.101, \"VCONN Source requests\nfirmware update exchange with Cable Plug\" below\nprovides a detailed explanation of what happens at each labeled step in\nTable8.128 Steps for a VCONN Source req aubeosvtei.ng a firmware update exchange with a Cable Plug Sequence\nStep VCONN Source Cable Plug\nPolicy Engine Protocol Layer\nFirmware_Update_RequestMessage Payload\ndirects the to send a\nDPM\n1 using a\nProtocol Layer Message PHY\nsupplied by the .\nLayer\ncreates the and passes to\n2 PHY Layer CRC\n. PHY Layer Firmware_Update_Request\nFirmware_Update_RequestMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nFirmware_Update_RequestMessage Protocol\nremoves the and forwards the\nLayer\n4 to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Firmware_Update_RequestMessage\nThe forwards the received\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nFirmware_Update_RequestMessage\n9 informs the that the\nwas successfully\nPolicy Engine DPM\nsent.\nrequests the for the response to the\nPolicy Engine Protocol Layer\nfirmware update request which is provided.\n10 Firmware_Update_ResponseMessage\nThe tells the to form a\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC\n.\nFirmware_Update_ResponseMessage\nreceives the and compares the appends a and sends the\nFirmware_Update_ResponseMessage CRCReceiveTimer\n12 it calculated with the one sent to verify the . Starts\nProtocol Layer MessageID\n. .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Firmware_Update_ResponseMessage\nThe forwards the received\nPolicy Engine\ninformation to\nProtocol Layer GoodCRCMessage\nthe that consumes it.\nPHY Layer\ngenerates a and\n14\npasses it .\nPage 746 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.128 Steps for a VCONN Source requesting a firmware update exchange with a Cable Plug Sequence\nStep VCONN Source Cable Plug\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n15 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nFirmware_Update_ResponseMessage\n17 informs the that the\nwas successfully\nsent.\nThe firmware update exchange is complete.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 747\n8.3.2.14 Structured VDM\n8.3.2.14.1 Discover Identity\n8.3.2.14.1.1 Initiator to Responder Discover Identity (ACK)\nFigure 8.102, \"Initiator to Responder Discover Identity (ACK)\" Initiator\nResponder Port Partner Explicit Contract Initiator\nResponder shows an example sequence between an and\n, where both s are in an and the discovers identity information\nfrom the . Figure 8.102 Initiator to Responder Discover Identity (ACK)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover Identity\n2: Discover Identity\n3: Discover Identity + CRC\nStart CRCReceiveTimer 4: Discover Identity\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover Identity received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover Identity sent\nStart VDMResponseTimer Request Identity information from\nDevice Policy Manager\n10: Send Discover Identity ACK\n11: Discover Identity ACK\n12: Discover Identity ACK + CRC\n13: Discover Identity ACK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover Identity ACK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer Check and increment MessageIDCounter\nDPM evaluates Identity Stop CRCReceiveTimer\ninformation\n18: Discover Identity ACK sent\nPage 748 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.129, \"Steps for Initiator to UFP Discover Identity (ACK)\"\nFigure 8.102, \"Initiator to Responder Discover Identity (ACK)\"\nbelow provides a detailed explanation of what\nhappens at each labeledT satbeple in8 .129 Steps for Initiator to UFP Discover Identity (ACK) above.\nStep Initiator Responder\nInitiator Explicit Contract Policy\nEngine Protocol Layer Discover Responder Explicit Contract\nThe has an . The\nIdentityCommand\n1 directs the to send a The has an .\nProtocol Layer Discover IdentityCommand\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover PHY Layer Discover IdentityCommand\nrequest and passes to .\nIdentityCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nIdentityCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 IdentityCommand Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover IdentityCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover IdentityCommandACK\n10 the . The tells the to\nProtocol Layer Discover IdentityCommand\nform a response.\nACK PHY Layer\ncreates the\n11 PHY Layer Discover IdentityCommand PHY Layer CRC Discover\nresponse and passes to .\nACK CRC IdentityCommandACK\nreceives the appends a and sends the\nMessage CRCReceiveTimer\n12 response and compares the it calculated with response. Starts\nProtocol Layer MessageID\nthe one sent to verify the . .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 IdentityCommandACK\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 749\nTable8.129 Steps for Initiator to UFP Discover Identity (ACK)\nStep Initiator Responder\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover IdentityCommandACK\n18 informs the that the\nresponse was\nsuccessfully sent.\nPage 750 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.14.1.2 Initiator to Responder Discover Identity (NAK)\nFigure 8.103, \"Initiator to Responder Discover Identity (NAK)\" Initiator\nResponder Port Partner Explicit Contract Initiator\nResponder NAK shows an example sequence between an and\n, where both s are in an and the attempts to discover identity\ninformation from the Figure 8 b.u1t0 r3e cIneiivtieast ao r to R.esponder Discover Identity (NAK)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover Identity\n2: Discover Identity\n3: Discover Identity + CRC\nStart CRCReceiveTimer 4: Discover Identity\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover Identity received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover Identity sent\nStart VDMResponseTimer Request Identity information from\nDevice Policy Manager\n10: Send Discover Identity NAK\n11: Discover Identity NAK\n12: Discover Identity NAK + CRC\n13: Discover Identity NAK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover Identity NAK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Discover Identity NAK sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 751\nTable8.130, \"Steps for Initiator to UFP Discover Identity (NAK)\"\nFigure 8.103, \"Initiator to Responder Discover Identity (NAK)\"\nbelow provides a detailed explanation of what\nhappens at each labeledT satbeple in8 .130 Steps for Initiator to UFP Discover Identity (NAK) above.\nStep Initiator Responder\nInitiator Explicit Contract Policy\nEngine Protocol Layer Discover Responder Explicit Contract\nThe has an . The\nIdentityCommand\n1 directs the to send a The has an .\nProtocol Layer Discover IdentityCommand\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover PHY Layer Discover IdentityCommand\nrequest and passes to .\nIdentityCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nIdentityCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 IdentityCommand Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover IdentityCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover IdentityCommandNAK\n10 the . The tells the to\nProtocol Layer Discover IdentityCommand\nform a response.\nNAK PHY Layer\ncreates the\n11 PHY Layer Discover IdentityCommand PHY Layer CRC Discover\nresponse and passes to .\nNAK CRC IdentityCommandNAK\nreceives the appends a and sends the\nMessage CRCReceiveTimer\n12 response and compares the it calculated with response. Starts\nProtocol Layer MessageID\nthe one sent to verify the . .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 IdentityCommandNAK\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 752 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.130 Steps for Initiator to UFP Discover Identity (NAK)\nStep Initiator Responder\nPHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover IdentityCommandNAK\n18 informs the that the\nresponse was\nsuccessfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 753\n8.3.2.14.1.3 Initiator to Responder Discover Identity (BUSY)\nFigure 8.104, \"Initiator to Responder Discover Identity (BUSY)\" Initiator\nResponder Port Partner Explicit Contract Initiator\nResponder BUSY shows an example sequence between an\nand , where both s are in an and the attempts to discover identity\ninformation from the Figure 8 b.1u0t 4re Icneiitvieast oar to Re.sponder Discover Identity (BUSY)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover Identity\n2: Discover Identity\n3: Discover Identity + CRC\nStart CRCReceiveTimer 4: Discover Identity\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover Identity received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover Identity sent\nStart VDMResponseTimer Request Identity information from\nDevice Policy Manager\n10: Send Discover Identity BUSY\n11: Discover Identity BUSY\n12: Discover Identity BUSY + CRC\n13: Discover Identity BUSY Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover Identity BUSY received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Discover Identity BUSY sent\nPage 754 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.131, \"Steps for Initiator to UFP Discover Identity (BUSY)\"\nFigure 8.104, \"Initiator to Responder Discover Identity (BUSY)\"\nbelow provides a detailed explanation of what\nhappens at each labeledT astbelpe i8n. 131 Steps for Initiator to UFP Discover Identity (BUSY) above.\nStep Initiator Responder\nInitiator Explicit Contract Policy\nEngine Protocol Layer Discover Responder Explicit Contract\nThe has an . The\nIdentityCommand\n1 directs the to send a The has an .\nProtocol Layer Discover IdentityCommand\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover PHY Layer Discover IdentityCommand\nrequest and passes to .\nIdentityCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nIdentityCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 IdentityCommand Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover IdentityCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover IdentityCommandBUSY\n10 the . The tells the to\nProtocol Layer Discover IdentityCommand\nform a response.\nBUSY PHY Layer\ncreates the\n11 PHY Layer Discover IdentityCommand PHY Layer CRC Discover\nresponse and passes to .\nBUSY CRC IdentityCommandBUSY\nreceives the appends a and sends the\nMessage CRCReceiveTimer\n12 response and compares the it calculated with response. Starts\nProtocol Layer MessageID\nthe one sent to verify the . .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 IdentityCommandBUSY\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 755\nTable8.131 Steps for Initiator to UFP Discover Identity (BUSY)\nStep Initiator Responder\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover IdentityCommandNAK\n18 informs the that the\nresponse was\nsuccessfully sent.\nPage 756 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.14.2 Discover SVIDs\n8.3.2.14.2.1 Initiator to Responder Discover SVIDs (ACK)\nFigure 8.105, \"Initiator to Responder Discover SVIDs (ACK)\" Initiator\nResponder Port Partner Explicit Contract Initiator SVID\nResponder shows an example sequence between an and\n, where both s are in an and the discovers information from\nthe . Figure 8.105 Initiator to Responder Discover SVIDs (ACK)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover_SVIDs\n2: Discover_SVIDs\n3: Discover_SVIDs + CRC\nStart CRCReceiveTimer 4: Discover_SVIDs\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover_SVIDs received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover_SVIDs sent\nStart VDMResponseTimer Request SVIDs from Device Policy\nManager\n10: Send Discover_SVIDs ACK\n11: Discover_SVIDs ACK\n12: Discover_SVIDs ACK + CRC\n13: Discover_SVIDs ACK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover_SVIDs ACK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer Check and increment MessageIDCounter\nDPM evaluates SVIDs Stop CRCReceiveTimer\ninformation\n18: Discover_SVIDs ACK sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 757\nTable8.132, \"Steps for DFP to UFP Discover SVIDs (ACK)\"\nFigure 8.105, \"Initiator to Responder Discover SVIDs (ACK)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.132 Steps for DFP to UFP Discover SVID sa (bAoCveK.)\nStep Initiator Responder\nInitiator Explicit Contract Policy\nEngine Protocol Layer Discover Responder Explicit Contract\nThe has an . The\nSVIDsCommand\n1 directs the to send a The has an .\nProtocol Layer Discover SVIDsCommand\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover SVIDs PHY Layer Discover SVIDsCommand\nrequest and passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nSVIDsCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 SVIDs Command Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover SVIDsCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover SVIDsCommandACK\n10 the . The tells the to\nProtocol Layer Discover SVIDsCommand\nform a response.\nACK PHY Layer\ncreates the\n11 PHY Layer Discover SVIDsCommandACK\nPHY Lreasypeornse and pasCsReCs to .Discover SVIDs\nCRC\nreceives the CommandACK CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with the\nProtocol Layer MessageID response. Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 SVIDsCommandACK\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 758 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.132 Steps for DFP to UFP Discover SVIDs (ACK)\nStep Initiator Responder\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover SVIDsCommandACK\n18 informs the that the\nresponse was\nsuccessfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 759\n8.3.2.14.2.2 Initiator to Responder Discover SVIDs (NAK)\nFigure 8.106, \"Initiator to Responder Discover SVIDs (NAK)\" Initiator\nResponder Port Partner Explicit Contract Initiator SVID\nResponder NAK shows an example sequence between an and\n, where both s are in an and the attempts to discover\ninformation from the Figure b 8u.1t 0re6c eInivietisa at or to. Responder Discover SVIDs (NAK)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover_SVIDs\n2: Discover_SVIDs\n3: Discover_SVIDs + CRC\nStart CRCReceiveTimer 4: Discover_SVIDs\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover_SVIDs received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover_SVIDs sent\nStart VDMResponseTimer Request SVIDs from Device Policy\nManager\n10: Send Discover_SVIDs NAK\n11: Discover_SVIDs NAK\n12: Discover_SVIDs NAK + CRC\n13: Discover_SVIDs NAK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover_SVIDs NAK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer Check and increment MessageIDCounter\nDPM evaluates SVIDs Stop CRCReceiveTimer\ninformation\n18: Discover_SVIDs NAK sent\nPage 760 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.133, \"Steps for DFP to UFP Discover SVIDs (NAK)\"\nFigure 8.106, \"Initiator to Responder Discover SVIDs (NAK)\"\nbelow provides a detailed explanation of what happens at\nTable8.133 Steps for DFP to UFP Discover SVIDs (NAK)\neach labeled step in above.\nStep Initiator Responder\nInitiator Explicit Contract Policy\nEngine Protocol Layer Discover Responder Explicit Contract\nThe has an . The\nSVIDsCommand\n1 directs the to send a The has an .\nProtocol Layer Discover SVIDsCommand\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover SVIDs PHY Layer Discover SVIDsCommand\nrequest and passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nSVIDsCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 SVIDs Command Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover SVIDsCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover SVIDsCommandNAK\n10 the . The tells the to\nProtocol Layer Discover SVIDsCommand\nform a response.\nNAK PHY Layer\ncreates the\n11 PHY Layer Discover SVIDsCommandNAK\nPHY Lraeysepronse and paCssReCs to D.iscover SVIDs\nCRC\nreceives the CommandNAK CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with the\nProtocol Layer MessageID response. Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 SVIDsCommandNAK\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16\n. it calculated with the one sent to verify the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 761\nTable8.133 Steps for DFP to UFP Discover SVIDs (NAK)\nStep Initiator Responder\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover SVIDsCommandNAK\n18 informs the that the\nresponse was\nsuccessfully sent.\nPage 762 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.14.2.3 Initiator to Responder Discover SVIDs (BUSY)\nFigure 8.107, \"Initiator to Responder Discover SVIDs (BUSY)\" Initiator\nResponder Port Partner Explicit Contract Initiator SVID\nResponder BUSY shows an example sequence between an and\n, where both s are in an and the attempts to discover\ninformation from the Figure b8u.1t0 r7ec Ieniviteisa tao r to R.esponder Discover SVIDs (BUSY)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover_SVIDs\n2: Discover_SVIDs\n3: Discover_SVIDs + CRC\nStart CRCReceiveTimer 4: Discover_SVIDs\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover_SVIDs received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover_SVIDs sent\nStart VDMResponseTimer Request SVIDs from Device Policy\nManager\n10: Send Discover_SVIDs BUSY\n11: Discover_SVIDs BUSY\n12: Discover_SVIDs BUSY + CRC\n13: Discover_SVIDs BUSY Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover_SVIDs BUSY received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer Check and increment MessageIDCounter\nDPM evaluates SVIDs Stop CRCReceiveTimer\ninformation\n18: Discover_SVIDs BUSY sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 763\nTable8.134, \"Steps for DFP to UFP Discover SVIDs (BUSY)\"\nFigure 8.107, \"Initiator to Responder Discover SVIDs (BUSY)\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.134 Steps for DFP to UFP Discover SVIDs (BU aSbYo)ve.\nStep Initiator Responder\nInitiator Explicit Contract Policy\nEngine Protocol Layer Discover Responder Explicit Contract\nThe has an . The\nSVIDsCommand\n1 directs the to send a The has an .\nProtocol Layer Discover SVIDsCommand\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover SVIDs PHY Layer Discover SVIDsCommand\nrequest and passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nSVIDsCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 SVIDs Command Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover SVIDsCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover SVIDsCommandBUSY\n10 the . The tells the to\nProtocol Layer Discover SVIDsCommand\nform a response.\nBUSY PHY Layer\ncreates the\n11 PHY Layer Discover SVIDsCommandBUSY\nPHY L areysepronse and pCasRsCes to D.iscover SVIDs\nCRC\nreceives the CommandBUSY CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with the\nProtocol Layer MessageID response. Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 SVIDsCommandBUSY\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 764 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.134 Steps for DFP to UFP Discover SVIDs (BUSY)\nStep Initiator Responder\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover SVIDsCommandBUSY\n18 informs the that the\nresponse was\nsuccessfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 765\n8.3.2.14.3 Discover Modes\n8.3.2.14.3.1 Initiator to Responder Discover Modes (ACK)\nFigure 8.108, \"Initiator to Responder Discover Modes (ACK)\" Initiator\nResponder Port Partner Explicit Contract Initiator\nResponder shows an example sequence between an and\n, where both s are in an and the discovers Mode information from\nthe . Figure 8.108 Initiator to Responder Discover Modes (ACK)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover_Modes\n2: Discover_Modes\n3: Discover_Modes + CRC\nStart CRCReceiveTimer 4: Discover_Modes\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover_Modes received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover_Modes sent\nStart VDMResponseTimer Request Modes information from\nDevice Policy Manager\n10: Send Discover_Modes ACK\n11: Discover_Modes ACK\n12: Discover_Modes ACK + CRC\n13: Discover_Modes ACK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover_Modes ACK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer Check and increment MessageIDCounter\nDPM evaluates Modes Stop CRCReceiveTimer\ninformation\n18: Discover_Modes ACK sent\nPage 766 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.135, \"Steps for DFP to UFP Discover Modes (ACK)\"\nFigure 8.108, \"Initiator to Responder Discover Modes (ACK)\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.135 Steps for DFP to UFP Discover Modes (A. CK)\nStep DFP UFP\nDFP Explicit Contract Policy Engine\nProtocol Layer Discover Modes UFP Explicit Contract\nThe has an . The\nCommand\n1 directs the to send a The has an .\nProtocol Layer Discover Modes Command\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover PHY Layer Discover ModesCommand\nrequest and passes to .\nModesCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nModesCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 Modes Command Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover ModesCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover ModesCommandACK\n10 the . The tells the to\nProtocol Layer Discover Modes Command\nform a response.\nACK PHY Layer\ncreates the\n11 PHY Layer Discover ModesCommandACK PHY r L e a sp ye o r nse and pass C e R s C to . Discover\nCRC ModesCommandACK\nreceives the appends a and sends the\nMessage CRCReceiveTimer\n12 response and compares the it calculated with the response. Starts\nProtocol Layer MessageID\none sent to verify the . .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 ModesCommandACK\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 767\nTable8.135 Steps for DFP to UFP Discover Modes (ACK)\nStep DFP UFP\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover ModesCommandACK\n18 informs the that the\nresponse was\nsuccessfully sent.\nPage 768 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.14.3.2 Initiator to Responder Discover Modes (NAK)\nFigure 8.109, \"Initiator to Responder Discover Modes (NAK)\" Initiator\nResponder Port Partner Explicit Contract Initiator\nResponder NAK shows an example sequence between an and\n, where both s are in an and the attempts to discover Mode\ninformation from the Figure b8u.1t 0re9c Ieniviteisa tao r to .Responder Discover Modes (NAK)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover_Modes\n2: Discover_Modes\n3: Discover_Modes + CRC\nStart CRCReceiveTimer 4: Discover_Modes\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover_Modes received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover_Modes sent\nStart VDMResponseTimer Request Modes information from\nDevice Policy Manager\n10: Send Discover_Modes NAK\n11: Discover_Modes NAK\n12: Discover_Modes NAK + CRC\n13: Discover_Modes NAK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover_Modes NAK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer Check and increment MessageIDCounter\nDPM evaluates Modes Stop CRCReceiveTimer\ninformation\n18: Discover_Modes NAK sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 769\nTable8.136, \"Steps for DFP to UFP Discover Modes (NAK)\"\nFigure 8.109, \"Initiator to Responder Discover Modes (NAK)\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.136 Steps for DFP to UFP Discover Modes (N.AK)\nStep DFP UFP\nDFP Explicit Contract Policy Engine\nProtocol Layer Discover Modes UFP Explicit Contract\nThe has an . The\nCommand\n1 directs the to send a The has an .\nProtocol Layer Discover Modes Command\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover PHY Layer Discover ModesCommand\nrequest and passes to .\nModesCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 PHY Layer CRC Discover\nrequest. Starts . request and checks the to verify the .\nModesCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 Modes Command Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover ModesCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover ModesCommandNAK\n10 the . The tells the to\nProtocol Layer Discover Modes Command\nform a response.\nNAK PHY Layer\ncreates the\n11 PHY Layer Discover ModesCommand\nPHY L raeysepronse and paCsRseCs to D.iscover Modes\nNAK CRC\nreceives the CommandNAK CRCReceiveTimer.\nMessage appends a and sends the\n12 response and compares the it calculated with\nProtocol Layer MessageID response. Starts\nthe one sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 ModesCommandNAK\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nPage 770 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.136 Steps for DFP to UFP Discover Modes (NAK)\nStep DFP UFP\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover ModesCommandNAK\n18 informs the that the\nresponse was\nsuccessfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 771\n8.3.2.14.3.3 Initiator to Responder Discover Modes (BUSY)\nFigure 8.110, \"Initiator to Responder Discover Modes (BUSY)\" Initiator\nResponder Port Partner Explicit Contract Initiator\nResponder BUSY shows an example sequence between an and\n, where both s are in an and the attempts to discover Mode\ninformation from the Figure 8b.u1t1 r0e cIeniivteiast ao r to R.esponder Discover Modes (BUSY)\nInitiator Responder\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\nExplicit PD Contract Explicit PD Contract\n1: Send Discover_Modes\n2: Discover_Modes\n3: Discover_Modes + CRC\nStart CRCReceiveTimer 4: Discover_Modes\nCheck MessageID against local copy\nStore copy of MessageID\n5: Discover_Modes received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Discover_Modes sent\nStart VDMResponseTimer Request Modes information from\nDevice Policy Manager\n10: Send Discover_Modes BUSY\n11: Discover_Modes BUSY\n12: Discover_Modes BUSY + CRC\n13: Discover_Modes BUSY Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Discover_Modes BUSY received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMResponseTimer Check and increment MessageIDCounter\nDPM evaluates Modes Stop CRCReceiveTimer\ninformation\n18: Discover_Modes BUSY sent\nPage 772 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.137, \"Steps for DFP to UFP Discover Modes (BUSY)\"\nFigure 8.110, \"Initiator to Responder Discover Modes (BUSY)\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.137 Steps for DFP to UFP Discover Modes (BU.SY)\nStep DFP UFP\nDFP Explicit Contract Policy Engine\nProtocol Layer Discover Modes UFP Explicit Contract\nThe has an . The\nCommand\n1 directs the to send a The has an .\nProtocol Layer Discover Modes Command\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Discover Modes PHY Layer Discover ModesCommand\nrequest and passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the\n3 request. Starts . r P e H q Y u e L s a t y a e n r d checks the CRC to verify the Dis . cover\nModesCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n5 Modes Command Policy\nThe forwards the received\nEngine\nrequest information to the\nProtocol Layer GoodCRCMessage\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover ModesCommand\ninforms the that the\n9\nrequest was successfully\nPolicy Engine VDMResponseTimer\nsent.\nPolicy Engine\nstarts the .\nDPM Policy Engine Protocol Layer\nrequests the identity information from\nDiscover ModesCommandNAK\n10 the . The tells the to\nProtocol Layer Discover Modes Command\nform a response.\nNAK PHY Layer\ncreates the\n11 PHY Layer Discover ModesCommand\nPHY L raeysepronse and paCsRsCes to D.iscover Modes\nNAK CRC\nreceives the CommandNAK CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with\nProtocol Layer MessageID response. Starts .\nthe one sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Discover\nand then stores a copy of the new value.\n13 ModesCommandNAK\nThe forwards the received\nPolicy Engine\nresponse information to the\nPolicy Engine VDMResponseTimer\nthat consumes it.\nDPM\nThe stops the and\n14 passed the Identity information to the for\nProtocol Layer GoodCRCMessage\nevaluation.\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 773\nTable8.137 Steps for DFP to UFP Discover Modes (BUSY)\nStep DFP UFP\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nDiscover ModesCommandNAK\n18 informs the that the\nresponse was\nsuccessfully sent.\nPage 774 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.14.4 Enter/Exit Mode\n8.3.2.14.4.1 DFP to UFP Enter Mode\nFigure 8.111, \"DFP to UFP Enter Mode\" DFP UFP\nDFP SVID\nshows an example sequence between a and a that occurs after the\nhas discovered supported s Fanigdu Mreo 8d.e1s1 a1t wDhFPic hto p UoiFnPt iEt nsteelerc Mtso adned enters a Mode.\nDFP UFP\n: DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine\nUSB Operation USB Operation\nSupported SVIDS/Modes discovered\nEnter USB Safe State\n37: Send Enter Mode\n38: Enter Mode\n39: Enter Mode + CRC\nStart CRCReceiveTimer 40: Enter Mode\nCheck MessageID against local copy\nStore copy of MessageID\n41: Enter Mode received\n42: GoodCRC\n43: GoodCRC + CRC\n44: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n45: Enter Mode sent\nStart VDMModeEntryTimer Evaluate Enter Mode request\nEnter New Mode\n46: Send Enter Mode ACK\n47: Enter Mode ACK\n48: Enter Mode ACK + CRC\n49: Enter Mode ACK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n50: Enter Mode ACK received\n51: GoodCRC\n52: GoodCRC + CRC\n53: GoodCRC\nStop VDMModeEntryTimer\nEnter New Mode Check and increment MessageIDCounter\nStop CRCReceiveTimer\n54: Enter Mode ACK sent\nNew Mode Entered\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 775\nTable8.138, \"Steps for DFP to UFP Enter Mode\"\nFigure 8.111, \"DFP to UFP Enter Mode\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.138 Steps f oarb oDvFeP. to UFP Enter Mode\nStep DFP UFP\nDFP Explicit Contract\nDFP SVID\nThe has an\nDiscover SVIDsCommand\nThe has discovered the supported S using the\nDiscover ModesCommand\nrequest and the supported UFP Explicit Contract\nDFP USB Safe State DPM\nModes using the request\n1 Policy Engine The has an .\nThe goes to . The requests the\nPolicy Engine Protocol Layer\nto enter a Mode.\nEnter ModeCommand\nThe directs the to send an\nProtocol Layer Enter ModeCommand\nrequest.\nPHY Layer\ncreates the\n2 PHY Layer CRC Enter Mode PHY Layer Enter ModeCommand\nrequest and passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the request\n3 PHY Layer CRC Enter\nrequest. Starts . and checks the to verify the .\nModeCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter Mode\nand then stores a copy of the new value.\n5 Command Policy Engine\nThe forwards the received\nrequest information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter ModeCommand\n9 informs the that the\nPolicy Engine VDMModeEntryTimer\nrequest was successfully sent.\nPolicy Engine DPM\nstarts the .\nPolicy Engine Protocol Layer\nrequests the to enter the new\nEnter ModeCommandACK\n10 Mode. The tells the to\nProtocol Layer Enter ModeCommandACK\nform an response.\nPHY Layer\ncreates the\n11 PHY Layer Enter ModeCommandACK\nPreHspYo Lnasyee arnd passes toC RC . Enter Mode\nCRC\nreceives the CommandACK CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with the\nProtocol Layer MessageID response. Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter Mode\nand then stores a copy of the new value.\n13 CommandACK Policy\nThe forwards the received\nEngine\nresponse information to the\nPolicy Engine VDMModeEntryTimer\nthat consumes it.\nDPM\nThe stops the\n14\nand requests the to enter the new Mode.\nPage 776 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.138 Steps for DFP to UFP Enter Mode\nStep DFP UFP\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Enter\nand stops .\n18 ModeCommandACK\ninforms the that the\nDFP UFP response was successfully sent.\nand are operating in the new Mode\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 777\n8.3.2.14.4.2 DFP to UFP Exit Mode\nFigure 8.112, \"DFP to UFP Exit Mode\" DFP UFP DFP\nUFP Active Mode\nshows an example sequence between a and a , where the\ncommands the to exit the only Figure 8..112 DFP to UFP Exit Mode\nDFP UFP\n: DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine\nIn Mode In Mode\nEnter USB Safe State\n1: Send Exit Mode\n2: Exit Mode\n3: Exit Mode + CRC\nStart CRCReceiveTimer 4: Exit Mode\nCheck MessageID against local copy\nStore copy of MessageID\n5: Exit Mode received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Exit Mode sent\nStart VDMModeExitTimer Evaluate Exit Mode request\nEnter USB Operation\n10: Send Exit Mode ACK\n11: Exit Mode ACK\n12: Exit Mode ACK + CRC\n13: Exit Mode ACK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Exit Mode ACK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMModeExitTimer\nEnter USB Operation Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Exit Mode ACK sent\nUSB operation\nPage 778 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.139, \"Steps for DFP to UFP Exit Mode\"\nFigure 8.112, \"DFP to UFP Exit Mode\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.139 Step sa bfoorv eD.FP to UFP Exit Mode\nStep DFP UFP\nDFP USB Safe State\nPolicy Engine Protocol Layer UFP\nThe is in a Mode and then enters .\nExit ModeCommand\n1 The directs the to send an The is in a Mode.\nProtocol Layer Exit ModeCommand\nrequest.\nPHY Layer\ncreates the request\n2 PHY Layer CRC Exit Mode PHY Layer Exit ModeCommand\nand passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the request\n3 PHY Layer CRC Exit\nrequest. Starts . and checks the to verify the .\nModeCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Exit Mode\nand then stores a copy of the new value.\n5 Command Policy Engine\nThe forwards the received\nrequest information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Exit\nand stops .\nModeCommand\n9 informs the that the\nPolicy Engine VDMModeExitTimer\nrequest was successfully sent.\nPolicy Engine DPM\nstarts the .\nPolicy Engine Protocol Layer\nrequests the to enter USB\nExit ModeCommandACK\n10 operation. The tells the to\nProtocol Layer Exit ModeCommandACK\nform an response.\nPHY Layer\ncreates the\n11 PHY Layer Exit ModeCommandACK\nPreHspYo Lnasyee arnd passes toC RC . Exit Mode\nCRC\nreceives the CommandACK CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with the\nProtocol Layer MessageID response. Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Exit Mode\nand then stores a copy of the new value.\n13 CommandACK Policy\nThe forwards the received\nEngine\nresponse information to the\nPolicy Engine VDMModeExitTimer\nthat consumes it.\nDPM\nThe stops the and\n14 Protocol Layer GoodCRCMessage\nrequests the to enter USB Operation.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte r .CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n.\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 779\nTable8.139 Steps for DFP to UFP Exit Mode\nStep DFP UFP\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Exit\nand stops .\n18 ModeCommandACK\ninforms the that the\nDFP UFP response was successfully sent.\nBoth and are in USB Operation\nPage 780 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.14.4.3 DFP to Cable Plug Enter Mode\nFigure 8.113, \"DFP to Cable Plug Enter Mode\" DFP Cable Plug\nDFP SVID\nshows an example sequence between a and a that\noccurs after the has discovereFdig suurpep 8or.1te1d3 DFPs t aon Cda Mbloed Pelsu agt Ewnhtiecrh Mpooidnet it selects and enters a Mode.\nDFP Cable Plug\n: DFP Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine\nUSB Mode USB Mode\nSupported SVIDs/Modes Discovered\nEnter USB Safe Mode\nWait tCableMessage before\ntransmission\n19: Send Enter Mode\n20: Enter Mode\n21: Enter Mode + CRC\nStart CRCReceiveTimer 22: Enter Mode\nCheck MessageID against local copy\nStore copy of MessageID\n23: Enter Mode received\n24: GoodCRC\n25: GoodCRC + CRC\n26: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n27: Enter Mode sent\nEvaluate Enter Mode request\nStart VDMModeEntryTimer Enter New Mode\nWait tCableMessage before transmission\n10: Send Enter Mode ACK\n11: Enter Mode ACK\n12: Enter Mode ACK + CRC\n13: Enter Mode ACK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Enter Mode ACK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMModeEntryTimer\nEnter New Mode Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Enter Mode ACK sent\nNew Mode Entered\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 781\nTable8.140, \"Steps for DFP to Cable Plug Enter Mode\"\nFigure 8.113, \"DFP to Cable Plug Enter Mode\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.140 Steps for DFP to Cabl ea bPolvueg. Enter Mode\nStep DFP Cable Plug\nDFP Explicit Contract\nDFP SVID\nThe has an\nDiscover SVIDsCommand\nThe has discovered the supported S using the\nDiscover ModesCommand\nrequest and the supported\nDFP USB Safe State DPM\nModes using the request\nPolicy Engine\n1 The goes to . The requests the\ntCableMessage GoodCRCMessage\nto enter a Mode.\nPolicy Engine Protocol Layer\nafter the last was\nEnter ModeCommand\nsent the directs the to\nProtocol Layer Enter ModeCommand\nsend an request.\nPHY Layer\ncreates the\n2 PHY Layer CRC Enter Mode PHY Layer Enter ModeCommand\nrequest and passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the request\n3 PHY Layer CRC Enter\nrequest. Starts . and checks the to verify the .\nModeCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter Mode\nand then stores a copy of the new value.\n5 Command Policy Engine\nThe forwards the received\nrequest information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC GoodCRC\nthe to verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter ModeCommand\n9 informs the that the\nPolicy Engine VDMModeEntryTimer\nrequest was successfully sent.\nPolicy Engine DPM\nstarts the .\ntCableMessage GoodCRCMessage\nrequests the to enter the new\nPolicy Engine Protocol Layer\nMode. after the was\n10 Enter ModeCommandACK\nsent the tells the to form\nProtocol Layer Enter ModeCommandACK\nan response.\nPHY Layer\ncreates the\n11 PHY Layer Enter ModeCommandACK\nrPeHspYo Lnasye earnd passes toC RC . Enter Mode\nCRC\nreceives the CommandACK CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with the\nProtocol Layer MessageID response. Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter Mode\nand then stores a copy of the new value.\n13 CommandACK Policy\nThe forwards the received\nEngine\nresponse information to the\nthat consumes it.\nPage 782 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.140 Steps for DFP to Cable Plug Enter Mode\nStep DFP Cable Plug\nPolicy Engine VDMModeEntryTimer\nDPM\nThe stops the\n14 Protocol Layer GoodCRCMessage\nand requests the to enter the new Mode.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Enter\nand stops .\n18 ModeCommandACK\ninforms the that the\nDFP Cable Plug response was successfully sent.\nand are operating in the new Mode\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 783\n8.3.2.14.4.4 DFP to Cable Plug Exit Mode\nFigure 8.114, \"DFP to Cable Plug Exit Mode\" USB Type-C DFP Cable\nPlug DFP Cable Plug Active Mode \u00ae\nshows an example sequence between a and a\n, where the commands theF igure 8.11 4to D eFxiPt taon Cable Plug E.xit Mode\nDFP Cable Plug\n: DFP Policy Engine : Protocol : PHY : PHY : Protocol : Cable Plug Policy Engine\nIn Mode In Mode\nEnter USB Safe State\n1: Send Exit Mode\n2: Exit Mode\n3: Exit Mode + CRC\nStart CRCReceiveTimer 4: Exit Mode\nCheck MessageID against local copy\nStore copy of MessageID\n5: Exit Mode received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Exit Mode sent\nEvaluate Exit Mode request\nStart VDMModeExitTimer Enter USB Operation\nWait tCableMessage before transmission\n10: Send Exit Mode ACK\n11: Exit Mode ACK\n12: Exit Mode ACK + CRC\n13: Exit Mode ACK Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n14: Exit Mode ACK received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nStop VDMModeExitTimer\nEnter USB Operation Check and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Exit Mode ACK sent\nUSB operation\nPage 784 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.141, \"Steps for DFP to Cable Plug Exit Mode\"\nFigure 8.114, \"DFP to Cable Plug Exit Mode\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.141 Steps for DFP taob oCvaeb.le Plug Exit Mode\nStep DFP Cable Plug\nDFP USB Safe State\nPolicy Engine Protocol Layer Cable Plug\nThe is in a Mode and then enters .\nExit ModeCommand\n1 The directs the to send an The is in a Mode.\nProtocol Layer Exit ModeCommand\nrequest.\nPHY Layer\ncreates the request\n2 PHY Layer CRC Exit Mode PHY Layer Exit ModeCommand\nand passes to .\nCommand CRCReceiveTimer CRC Message\nappends and sends the receives the request\n3 PHY Layer CRC Exit\nrequest. Starts . and checks the to verify the .\nModeCommand Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nrequest to the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Exit Mode\nand then stores a copy of the new value.\n5 Command Policy Engine\nThe forwards the received\nrequest information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Exit\nand stops .\nModeCommand\n9 informs the that the\nPolicy Engine VDMModeExitTimer\nrequest was successfully sent.\nPolicy Engine DPM\nstarts the .\ntCableMessage GoodCRCMessage\nrequests the to enter USB\nPolicy Engine Protocol Layer\noperation. after the\n10 Exit ModeCommandACK\nwas sent the tells the to\nProtocol Layer Exit ModeCommandACK\nform an response.\nPHY Layer\ncreates the\n11 PHY Layer Exit ModeCommandACK\nPreHspYo Lnasyee arnd passes toC RC . Exit Mode\nCRC\nreceives the CommandACK CRCReceiveTimer\nMessage appends a and sends the\n12 response and compares the it calculated with the\nProtocol Layer MessageID response. Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Exit Mode\nand then stores a copy of the new value.\n13 CommandACK Policy\nThe forwards the received\nEngine\nresponse information to the\nPolicy Engine VDMModeExitTimer\nthat consumes it.\nDPM\nThe stops the and\n14 Protocol Layer GoodCRCMessage\nrequests the to enter USB Operation.\nPHY Layer\ngenerates a and\n15\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 785\nTable8.141 Steps for DFP to Cable Plug Exit Mode\nStep DFP Cable Plug\nPHY Layer GoodCRCMessage\nPHY Layer CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Exit\nand stops .\n18 ModeCommandACK\ninforms the that the\nDFP Cable Plug response was successfully sent.\nBoth and are in USB Operation\nPage 786 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.14.4.5 Initiator to Responder Attention\nFigure 8.115, \"Initiator to Responder Attention\" Initiator Responder\nInitiator Responder\nshows an example sequence between an and a ,\nwhere the requests atteFnitgiounr efr 8o.m11 t5h eI nitiator to. Responder Attention\nResponder Initiator\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Attention\n2: Attention\n3: Attention + CRC\n4: Attention Start CRCReceiveTimer\nCheck MessageID against local copy\nStore copy of MessageID\n5: Attention received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Attention sent\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 787\nTable8.142, \"Steps for Initiator to Responder Attention\"\nFigure 8.115, \"Initiator to Responder Attention\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.142 Steps for Initiator to Res apboonvdee.r Attention\nStep Responder Initiator\nDPM Policy Engine\nProtocol Layer AttentionCommand\nThe requests attention. The tells\n1 the to form an\nProtocol Layer AttentionCommand\nrequest.\nPHY Layer\ncreates the request\n2 PHY Layer AttentionCommand\nPanHdY p Laassyeesr to CRC. Attention\nCRC\nreceives the request Command CRCReceiveTimer\nMessage appends a and sends the\n3 and compares the it calculated with the one sent to\nProtocol Layer MessageID request. Starts .\nverify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Attention\nand then stores a copy of the new value.\n4 Command Policy Engine\nThe forwards the received\nrequest information to the\nPolicy Engine DPM\nthat consumes it.\nProtocol Layer GoodCRCMessage\n5 The informs the\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n7 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n9 AttentionCommand\ninforms the that the\nrequest was successfully sent.\nPage 788 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.15 Built in Self-Test (BIST)\n8.3.2.15.1 BIST Carrier Mode\nBIST Carrier Mode Tester UUT UUT\nTester\nThe following is an example of a test between a and a . When the is connected to\ntFhigeu re 8.11 t6h,e \" BseISqTu eCnacrer ibere lMowod ies Teexsetc\"uted. Message\nshows the s as they flow across the bus and within the devices. This\ntest enables the measurement of power supply noise and frequency drift.\n1) CToesntneerction is eBsItSaTblMishesesda ganed stableB.IST Carrier ModeBIST Data Object\n2) UUT sends a GoodCR CwMithe sas age .\n3) UUT answers with a Test Pa ttern .\n4) starts sending the .\n5) Operator does the mtBeIaSsTuCreomnteMnotsd.e\n6) TSheect tieosnt 5e.n9d.1s, \"aBftIeSrT Carrier Mode\" . Section 6.4.3.1, \"BIST Carrier Mode\"\nSee also Figur aen 8d. 116 BIST Carrier Mode Test .\nTester UUT\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send BIST(Carrier Mode)\n2: BIST(Carrier Mode)\n3: BIST(Carrier Mode) + CRC\nStart CRCReceiveTimer 4: BIST(Carrier Mode)\nCheck MessageID against\nlocal copy\nStore copy of MessageID\n5: BIST(Carrier Mode) received\nGo to BIST Carrier Mode\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n10: Go to BIST Carrier Mode\n9: BIST(Carrier Mode) sent 11: Go to BIST Carrier Mode\nEnter BIST Carrier Mode mode\n12: Send Test Pattern\n13: Send Test Pattern\n14: Test Pattern\nEnd of Test (after tBISTContMode)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 789\nTable8.143, \"Steps for BIST Carrier Mode Test\"\nFigure 8.116, \"BIST Carrier Mode Test\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.143 Steps f oarb oBvISe.T Carrier Mode Test\nStep Tester UUT\nPolicy Engine Protocol Layer\nBISTMessage BIST Data Object\nThe directs the to\nBIST Carrier Mode UUT BIST Carrier\ngenerate a , with a of\n1 Mode\n, to put the into\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC BISTMessage PHY Layer BISTMessage\n.\nCRCReceiveTimer CRC Message\nappends and sends the . receives the and checks the\n3 PHY Layer CRC BIST\nStarts . to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer BISTMessage\n5 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nProtocol Layer GoodCRCMessage\ninformation to the that consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine BIST\nand stops .\n9 Message\ninforms the that the\nPolicy Engine Protocol Layer BIST\nwas successfully sent.\nCarrier Mode Policy Engine BIST Carrier\ntells to go into\nMode\n10 . The goes to\nProtocol Layer PHY Layer BIST Carrier\n.\nMode\ntells to go into\n11 UUT BIST Carrier Mode\n.\nPolicy Engine Protocol Layer\nenters .\nTest Pattern\nThe directs the to start\n12 Protocol Layer PHY Layer Test\ngeneration of the .\nPattern\ndirects the to generate the\n13 PHY Layer Test Pattern PHY Layer Test Pattern\n.\n14 receives the The UUT exit ss tBrIeSaTm C.arrier Modeafter tBISTC goennteMraotdees a continuous stream.\n.\nPage 790 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.15.2 BIST Test Data Mode\nBIST Test Data Mode Tester UUT UUT\nTester\nThe following is an example of a test between a and a . When the is connected\ntFoig tuhree 8.117, t\"hBeI SsTe qTueesnt cDea btae lToewst i\"s executed. Message\nshows the s as they flow across the bus and within the devices.\n1) CToesntneerction is eBsItSaTblMishesesda ganed stableB.IST Test DataBIST Data Object\n2) UUT sends a GoodCR CwMithe sas age .\n3) answers with a .\n4) Steps 2and 3 are reHpeaartde dR eanseyt nSuigmnbaelirn ogf times.\n5) TSheect tieosnt 5e.n9d.2s, \"aBftIeSrT Test Data M ode\" Sise cistisoune d6..4.3.2, \"BIST Test Data Mode\"\nSee also and .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 791\nFigure 8.117 BIST Test Data Test\nTester UUT\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send BIST(Test Data)\n2: BIST(Test Data)\n3: BIST(Test Data) + CRC\nStart CRCReceiveTimer 4: BIST(Test Data)\nCheck MessageID against\nlocal copy\nStore copy of MessageID\n5: BIST(Test Data) received\nGo to BIST Test Data mode\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: BIST(Test Data) sent\nEnter BIST Test Data mode\n10: Send BIST(Test Data)\n11: BIST(Test Data)\n12: BIST(Test Data) + CRC\nStart CRCReceiveTimer 13: BIST(Test Data)\nCheck MessageID against\nlocal copy\nStore copy of MessageID\n14: BIST(Test Data) received\n15: GoodCRC\n16: GoodCRC + CRC\n17: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: BIST(Test Data) sent\nEnd of Test (Hard Reset)\nPage 792 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.144, \"Steps for BIST Test Data Test\"\nFigure 8.117, \"BIST Test Data Test\"\nbelow provides a detailed explanation of what happens at each labeled\nstep in Table8 a.1b4o4ve S.teps for BIST Test Data Test\nStep Tester UUT\nPolicy Engine Protocol Layer\nBISTMessage BIST Data Object\nThe directs the to\nBIST Test Data UUT BIST Test Data\ngenerate a , with a of\n1 Mode\n, to put the into\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC BISTMessage PHY Layer BISTMessage CRC\n.\nCRCReceiveTimer Message\nappends and sends the . receives the and checks the\n3 PHY Layer CRC BIST\nStarts . to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer BISTMessage\nand then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nPolicy Engine BIST Test Data Mode\n5 information to the that consumes it.\nMessage GoodCRC\nThe goes into Mode\nMessage Message Section\nwhere it sends no further s except for\n6.4.3.2, \"BIST Test Data Mode\"\ns in response to received s (see\nProtocol Layer GoodCRCMessage\n).\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC GoodCRC\nverify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine BIST\nand stops .\n9 Message\ninforms the that the\nUUT BIST Test Data Mode\nwas successfully sent.\nPolicy Engine Protocol Layer\nenters .\nBISTMessage BIST Data Object\nThe directs the to\nBIST Test Data UUT BIST Test Data\ngenerate a , with a of\n10 Mode\n, to put the into\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer CRC BISTMessage PHY Layer BISTMessage CRC\n.\nCRCReceiveTimer Message\nappends and sends the . receives the and checks the\n12 PHY Layer CRC BIST\nStarts . to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n13\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 793\nTable8.144 Steps for BIST Test Data Test\nStep Tester UUT\nProtocol Layer MessageID\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer BISTMessage\nand then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nPolicy Engine BIST Test Data Mode\n14 information to the that consumes it.\nMessage GoodCRC\nThe goes into Mode\nMessage Message Section\nwhere it sends no further s except for\n6.4.3.2, \"BIST Test Data Mode\"\ns in response to received s (see\nProtocol Layer GoodCRCMessage\n).\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n16 PHY Layer CRC\nverify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n17 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine BIST\nand stops .\n18 Message\ninforms the that the\nwas successfully sent.\nRepeat steps 10-18 any numUbUerT of timBesIST Test Data Mode Hard Reset\nThe exits after a\nPage 794 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.15.3 BIST Shared Capacity Test Mode\nBIST Shared Capacity Test Mode Tester UUT UUT\nTester\nThe following is an example of a test between a and a . When the\niFsi gcuornen 8e.c1t1e8d, t\"oB tIhSTe Share Ctahpe asceiqtyu eMnocdee b Teelostw\" is executedM. essage\nUUT Source\nPort shows the s as they flow across the bus and within the\ndevices. This test places the in a compliance test mode where the maximum capability is always offered\non every , regardless of the availability of shared power i.e., all shared power management is disabled.\n1) CToesntneerction is eBsItSaTblMishesesda ganed stableB.IST Shared Test Mode EntryBIST Data Object\n2) UUT sends a GoodCR CwMithe sas age .\n3) UUT answerBsI wSTit Shh aa red Capac ity Test M.ode\n4) enters .\n5) OTepsetreartor does BthISe TmMeaesssuargeements. BIST Shared Test Mode ExitBIST Data Object\n6) UUT sends a GoodCR CwMithe sas age .\n7) UUT answBerIsS Tw Sithha are d Capacit y Test Mo.de\n8) Sect ieoxni t5s. 9.1, \"BIST Carrier Mode\" Sec.tion 6.4.3.3, \"BIST Shared Capacity Test Mode\"\nSee also Figure 8 .a1n1d8 BIST Share Capacity Mode Test .\nTester UUT\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send BIST(Shared Capacity Test Mode Entry)\n2: BIST(Shared Capacity Test Mode Entry)\nStart CRCReceiveTimer 3: BIST(Shared Capacity Test Mode Entry) + CRC 4: BIST(Shared Capacity Test Mode Entry)\nCheck MessageID against\nlocal copy\nStore copy of MessageID\n5: BIST(Shared Capacity Test Mode Entry) received\nGo to BIST Shared Capacity\nTest Mode\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n10: Go to BIST Shared Capacity Test Mode\n9: BIST(Shared Capacity Test Mode) sent 11: Go to BIST Shared Capacity Test Mode\nEnter BIST Shared Capacity Test Mode mode\nTester Performs Tests\n12: Send BIST(Shared Capacity Test Mode Exit)\n13: BIST(Shared Capacity Test Mode Exit)\nStart CRCReceiveTimer 14: BIST(Shared Capacity Test Mode Exit) + CRC 15: BIST(Shared Capacity Test Mode Exit)\nCheck MessageID against\nlocal copy\nStore copy of MessageID\n16: BIST(Shared Capacity Test Mode Exit) received\nGo to BIST Shared Capacity\nTest Mode\n17: GoodCRC\n18: GoodCRC + CRC\n19: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n21: Exit BIST Shared Capacity Test Mode\n20: BIST(Shared Capacity Test Mode) sent 22: Exit BIST Shared Capacity Test Mode\nEXit BIST Shared Capacity Test Mode mode\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 795\nTable8.145, \"Steps for BIST Shared Capacity Test Mode Test\"\nFigure 8.118, \"BIST Share Capacity Mode Test\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.145 Steps for BIST Shared Capac iatbyo Tvee.st Mode Test\nStep Tester UUT\nPolicy Engine Protocol Layer\nBISTMessage BIST Data Object\nThe directs the to\nBIST Shared Test Mode Entry UUT BIST\ngenerate a , with a of\n1 Shared Capacity Test Mode\n, to put the into\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n2 PHY Layer CRC BISTMessage PHY Layer BISTMessage CRC\n.\nCRCReceiveTimer Message\nappends and sends the . receives the and checks the\n3 PHY Layer CRC BIST\nStarts . to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer BISTMessage\n5 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\nProtocol Layer GoodCRCMessage\ninformation to the that consumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY LayerPHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine BIST\nand stops .\n9 Message\ninforms the that the\nPolicy Engine Protocol Layer BIST\nwas successfully sent.\nShared Capacity Test Mode Policy Engine\ntells to go into\nBIST Shared Capacity Test Mode\n10 . The goes to\nProtocol Layer PHY Layer BIST Shared\n.\nCapacity Test Mode\ntells to go into\n11 UUT BIST Shared Capacity Test Mode Tester\n.\nPolicy Engine Protocol Layer\nenters . performs tests.\nBISTMessage BIST Data Object\nThe directs the to\nBIST Shared Test Mode Exit UUT BIST\ngenerate a , with a of\n12 Shared Capacity Test Mode\n, to take the out of\nProtocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n13 PHY Layer CRC BISTMessage PHY Layer BISTMessage\n.\nCRCReceiveTimer CRC Message\nappends and sends the . receives the and checks the\n14 PHY Layer CRC BIST\nStarts . to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n15 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer BISTMessage\n16 and then stores a copy of the new value.\nPolicy Engine\nThe forwards the received\ninformation to the that consumes it.\nPage 796 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.145 Steps for BIST Shared Capacity Test Mode Test\nStep Tester UUT\nProtocol Layer GoodCRCMessage\nPHY Layer\ngenerates a and\n17 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n18 PHY Layer CRC\nverify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n19 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine BIST\nand stops .\n20 Message\ninforms the that the\nPolicy Engine Protocol Layer BIST Shared\nwas successfully sent.\nCapacity Test Mode Policy Engine BIST\ntells to exit\nShared Capacity Test Mode\n21 . The exits to\nProtocol Layer PHY Layer BIST Shared\n.\nCapacity Test Mode\ntells to exit\n22\nUUT BIST Shared Capacity Test Mode .\nexits .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 797\n8.3.2.16 Enter USB\n8.3.2.16.1 UFP Entering USB4 Mode\n8.3.2.16.1.1 UFP Entering USB4 Mode (Accept)\nDFP [USB4] Valid\nUFP Figure 8.119, \"UFP Entering USB4 Mode (Accept)\" Message\nThis is an example of an Enter USB operation where the requests mode when this is a mode of\noperation for the . shows the s as they flow across the\nbus and within the devices to acFciogmurpeli s8h.1 t1h9e EUnFtPe rE UnSteBr pinrog cUeSssB.4 Mode (Accept)\nDFP UFP\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Enter_USB (USB4)\n2: Enter_USB (USB4)\n3: Enter_USB (USB4) + CRC\nStart CRCReceiveTimer 4: Enter_USB (USB4)\n5: Enter_USB (USB4) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Enter_USB (USB4) sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer\n13: Accept\nStore copy of MessageID\n14: Accept received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nUSB4 Mode entered\nPage 798 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.146, \"Steps for UFP USB4 Mode Entry (Accept)\"\nFigure 8.119, \"UFP Entering USB4 Mode (Accept)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.146 Steps for UFP USB4 Mode aEbnotrvye .(Accept)\nStep DFP UFP\nPolicy Engine Protocol Layer\nEnter_USB Message\nThe directs the to\n[USB4]\n1 generate an to request entry to\nProtocol Layer Message PHY\nmode.\nLayer\ncreates the and passes to\n2 PHY Layer Enter_USBMessage\nPHY La.yer CRC Enter_USB\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nEnter_USBMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter_USB\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter_USB Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Accept\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Accept\n.\nMessage Policy Engine\nThe forwards the received\n14 information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 799\nTable8.146 Steps for UFP USB4 Mode Entry (Accept)\nStep DFP UFP\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 AcceptMessage\ninforms the that the\nBoth Port Partners enter [USB4] op eration. was successfully sent.\nPage 800 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.16.1.2 UFP Entering USB4 Mode (Reject)\nDFP [USB4] Invalid\nUFP Figure 8.120, \"UFP Entering USB4 Mode (Reject)\" Message\nThis is an example of an Enter USB operation where the requests mode when this is an mode\nof operation for the . shows the s as they flow across\nthe bus and within the devices tFoi agcucroem 8p.1li2sh0 tUhFe PE nEtnetre UriSnBg p UrSoBce4s sM.ode (Reject)\nDFP UFP\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Enter_USB (USB4)\n2: Enter_USB (USB4)\n3: Enter_USB (USB4) + CRC\nStart CRCReceiveTimer 4: Enter_USB (USB4)\n5: Enter_USB (USB4) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Enter_USB (USB4) sent\nStart SenderResponseTimer\n10: Send Reject\n11: Reject\n12: Reject + CRC\nStart CRCReceiveTimer\n13: Reject\nStore copy of MessageID\n14: Reject received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nUSB4 Mode not entered; USB link is negotiated via legacy mechanisms\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 801\nTable8.147, \"Steps for UFP USB4 Mode Entry (Reject)\"\nFigure 8.120, \"UFP Entering USB4 Mode (Reject)\"\nbelow provides a detailed explanation of what happens at\neach labeled step in Table8.147 Steps for UFP USB4 Mode a Ebnotvrey. (Reject)\nStep DFP UFP\nPolicy Engine Protocol Layer\nEnter_USB Message\nThe directs the to\n[USB4]\n1 generate an to request entry to\nProtocol Layer Message PHY\nmode.\nLayer\ncreates the and passes to\n2 PHY Layer Enter_USBMessage\nPHY La.yer CRC Enter_USB\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nEnter_USBMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter_USB\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter_USB Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Reject\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Reject\n.\nMessage Policy Engine\nThe forwards the received\n14 information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\nPpaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nPage 802 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.147 Steps for UFP USB4 Mode Entry (Reject)\nStep DFP UFP\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nPort Partner [USB4] was successfully sent.\ns do not enter operation.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 803\n8.3.2.16.1.3 UFP Entering USB4 Mode (Wait)\nDFP [USB4]\nUFP Figure 8.121, \"UFP Entering USB4 Mode (Wait)\" Message\nThis is an example of an Enter USB operation where the requests mode when this is not possible for\nthe at this time. shows the s as they flow across the bus\nand within the devices to accompFliigsuh rteh e8 E.1n2t1er U UFSPB E pnrtoecreisnsg. USB4 Mode (Wait)\nDFP UFP\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Enter_USB (USB4)\n2: Enter_USB (USB4)\n3: Enter_USB (USB4) + CRC\nStart CRCReceiveTimer 4: Enter_USB (USB4)\n5: Enter_USB (USB4) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Enter_USB (USB4) sent\nStart SenderResponseTimer\n10: Send Wait\n11: Wait\n12: Wait + CRC\nStart CRCReceiveTimer\n13: Wait\nStore copy of MessageID\n14: Wait received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Wait sent\nUSB4 Mode not entered; USB link is negotiated via legacy mechanisms\nPage 804 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.148, \"Steps for UFP USB4 Mode Entry (Wait)\"\nFigure 8.121, \"UFP Entering USB4 Mode (Wait)\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.148 Steps for UFP USB 4a bMoovde.e Entry (Wait)\nStep DFP UFP\nPolicy Engine Protocol Layer\nEnter_USB Message\nThe directs the to\n[USB4]\n1 generate an to request entry to\nProtocol Layer Message PHY\nmode.\nLayer\ncreates the and passes to\n2 PHY Layer Enter_USBMessage\nPHY L.ayer CRC Enter_USB\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nEnter_USBMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter_USB\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC GoodCRC\nto verify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter_USB Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Wait\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Wait Message\n.\nPolicy Engine\nThe forwards the received\n14 Protocol Layer GoodCRCMessage\ninformation to the that consumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 805\nTable8.148 Steps for UFP USB4 Mode Entry (Wait)\nStep DFP UFP\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Wait\nand stops .\n18 Message\ninforms the that the\nPort Partner [USB4] was successfully sent.\ns do not enter operation.\nPage 806 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.16.2 Cable Plug Entering USB4 Mode\n8.3.2.16.2.1 Cable Plug Entering USB4 Mode (Accept)\nDFP [USB4] Valid\nCable Plug Figure 8.122, \"Cable Plug Entering USB4 Mode (Accept)\" Message\nThis is an example of an Enter USB operation where the requests mode when this is a mode of\noperation for the . shows the s as they\nflow across the bus and withFiing uthree d8e.1vi2c2es C taob alcec Pomlupgl iEsnht tehrei nEgn UteSrB U4S BM pordoec e(Assc.cept)\nDFP Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Enter_USB (USB4)\n2: Enter_USB (USB4)\n3: Enter_USB (USB4) + CRC\nStart CRCReceiveTimer 4: Enter_USB (USB4)\n5: Enter_USB (USB4) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Enter_USB (USB4) sent\nStart SenderResponseTimer\n10: Send Accept\n11: Accept\n12: Accept + CRC\nStart CRCReceiveTimer\n13: Accept\nStore copy of MessageID\n14: Accept received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Accept sent\nUSB4 Mode entered\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 807\nTable8.149, \"Steps for Cable Plug USB4 Mode Entry (Accept)\"\nFigure 8.122, \"Cable Plug Entering USB4 Mode (Accept)\"\nbelow provides a detailed explanation of what\nhappens at each labeled sTtaepb lien 8.149 Steps for Cable Plug USB4 Mode Entry (Accep ta)bove.\nStep DFP Cable Plug\nPolicy Engine Protocol Layer\nEnter_USB Message\nThe directs the to\n[USB4]\n1 generate an to request entry to\nProtocol Layer Message PHY\nmode.\nLayer\ncreates the and passes to\n2 PHY Layer Enter_USBMessage\nPHY L.ayer CRC Enter_USB\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nEnter_USBMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter_USB\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the to appends and sends the\n7 PHY Layer CRC GoodCRC\nverify the . .\nMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter_USB Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Accept\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Accept\n.\nMessage Policy Engine\nThe forwards the received\n14 information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte r . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nPage 808 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.149 Steps for Cable Plug USB4 Mode Entry (Accept)\nStep DFP Cable Plug\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 AcceptMessage\ninforms the that the\nCable Plug enters [USB4] opera tion. was successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 809\n8.3.2.16.2.2 Cable Plug Entering USB4 Mode (Reject)\nDFP [USB4] Invalid\nCable Plug Figure 8.123, \"Cable Plug Entering USB4 Mode (Reject)\" Message\nThis is an example of an Enter USB operation where the requests mode when this is an mode\nof operation for the . shows the s as they\nflow across the bus and withFinig tuhree d 8e.v1i2ce3s C taob alcec oPmlupgl iEsnh ttehrei nEgn tUeSr BU4S BM pordoec e(sRse.ject)\nDFP Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Enter_USB (USB4)\n2: Enter_USB (USB4)\n3: Enter_USB (USB4) + CRC\nStart CRCReceiveTimer 4: Enter_USB (USB4)\n5: Enter_USB (USB4) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Enter_USB (USB4) sent\nStart SenderResponseTimer\n10: Send Reject\n11: Reject\n12: Reject + CRC\nStart CRCReceiveTimer\n13: Reject\nStore copy of MessageID\n14: Reject received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nUSB4 Mode not entered; USB link is negotiated via legacy mechanisms\nPage 810 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.150, \"Steps for Cable Plug USB4 Mode Entry (Reject)\"\nFigure 8.123, \"Cable Plug Entering USB4 Mode (Reject)\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.150 Steps for Cable Plug USB4 Mode Entr ayb (oRveej.ect)\nStep DFP Cable Plug\nPolicy Engine Protocol Layer\nEnter_USB Message\nThe directs the to\n[USB4]\n1 generate an to request entry to\nProtocol Layer Message PHY\nmode.\nLayer\ncreates the and passes to\n2 PHY Layer Enter_USBMessage\nPHY L.ayer CRC Enter_USB\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nEnter_USBMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter_USB\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter_USB Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Reject\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Reject\n.\nMessage Policy Engine\nThe forwards the received\n14 information to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer GoodCRCMessage\npPaHsYs eLsa iyte r . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n16 the it calculated with the one sent to verify the\n. PHY Layer CRC GoodCRC\n.\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 811\nTable8.150 Steps for Cable Plug USB4 Mode Entry (Reject)\nStep DFP Cable Plug\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\n18 RejectMessage\ninforms the that the\nCable Plug does not enter [USB4] o peration. was successfully sent.\nPage 812 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.16.2.3 Cable Plug Entering USB4 Mode (Wait)\nDFP [USB4]\nCable Plug Figure 8.124, \"Cable Plug Entering USB4 Mode (Wait)\" Message\nThis is an example of an Enter USB operation where the requests mode when this is not possible for\nthe at this time. shows the s as they flow\nacross the bus and within theF digeuvricee s8 .t1o2 a4c cCoambpleli sPhlu tgh eE Ennteterrin UgS UB SpBr4oc Mesosd.e (Wait)\nDFP Cable Plug\n: Policy Engine : Protocol : PHY : PHY : Protocol : Policy Engine\n1: Send Enter_USB (USB4)\n2: Enter_USB (USB4)\n3: Enter_USB (USB4) + CRC\nStart CRCReceiveTimer 4: Enter_USB (USB4)\n5: Enter_USB (USB4) received\n6: GoodCRC\n7: GoodCRC + CRC\n8: GoodCRC\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n9: Enter_USB (USB4) sent\nStart SenderResponseTimer\n10: Send Reject\n11: Reject\n12: Reject + CRC\nStart CRCReceiveTimer\n13: Reject\nStore copy of MessageID\n14: Reject received\n15: GoodCRC 16: GoodCRC + CRC\n17: GoodCRC\nStop SenderResponseTimer\nCheck and increment MessageIDCounter\nStop CRCReceiveTimer\n18: Reject sent\nUSB4 Mode not entered; USB link is negotiated via legacy mechanisms\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 813\nTable8.151, \"Steps for Cable Plug USB4 Mode Entry (Wait)\"\nFigure 8.124, \"Cable Plug Entering USB4 Mode (Wait)\"\nbelow provides a detailed explanation of what happens\nat each labeled step in Table8.151 Steps for Cable Plug USB4 Mode En atbryo v(eW. ait)\nStep DFP Cable Plug\nPolicy Engine Protocol Layer\nEnter_USB Message\nThe directs the to\n[USB4]\n1 generate an to request entry to\nProtocol Layer Message PHY\nmode.\nLayer\ncreates the and passes to\n2 PHY Layer Enter_USBMessage\nPHY L.ayer CRC Enter_USB\nCRC\nMessage CRCReceiveTimer receives the and\nappends and sends the Message\n3 compares the it calculated with the one sent to verify\n. Starts . PHY Layer CRC\nthe .\nEnter_USBMessage Protocol Layer\nremoves the and forwards the\n4 Protocol Layer MessageID\nto the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer Enter_USB\nand then stores a copy of the new value.\n5 Message Policy Engine\nThe forwards the received\ninformation to the that\nProtocol Layer GoodCRCMessage\nconsumes it.\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC CRC PHY Layer CRC GoodCRC\npasses it .\nMessage Message\nreceives the and checks the appends and sends the\n7 PHY Layer CRC\nto verify the . .\nGoodCRCMessage Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nEnter_USB Message Policy\n9 informs the that the\nEngine SenderResponseTimer\nwas successfully sent.\nPolicy Engine Protocol Layer Wait\nstarts .\nMessage\ntells the to form an\n10 Protocol Layer Message PHY\n.\nLayer\ncreates the and passes to\n11 PHY Layer Message CRC PHY Layer CRC Message\n.\nMessage CRCReceiveTimer\nreceives the and compares the appends a and sends the . Starts\n12 Protocol Layer MessageID\nit calculated with the one sent to verify the . .\nMessage\nstores the of the incoming\n13 Protocol Layer Wait Message\n.\nPolicy Engine\nThe forwards the received\n14 Protocol Layer GoodCRCMessage\ninformation to the that consumes it.\nPHY Layer\ngenerates a and\n15 PHY Layer CRC GoodCRC PHY Layer GoodCRCMessage\npasses it .\nMessage CRC Message\nappends a and sends the receives and compares the\n16 PHY Layer CRC GoodCRC\n. it calculated with the one sent to verify the .\nMessage Protocol Layer\nremoves the and forwards the\n17\nto the .\nPage 814 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.151 Steps for Cable Plug USB4 Mode Entry (Wait)\nStep DFP Cable Plug\nProtocol Layer\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine Wait\nand stops .\n18 Message\ninforms the that the\nCable Plug does not enter [USB4] ope wraatsio snu.ccessfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 815\n8.3.2.17 Unstructured Vendor Defined Messages\n8.3.2.17.1 Unstructured VDM\nFigure 8.125, \"Unstructured VDM Message Sequence\" Unstructured VDM\nDFP UFP Message UFP\nModal Operation shows an example sequence of an\nTransaction between a and . The figure below shows the s as they flow across the bus after\nEnters into .Figure 8.125 Unstructured VDM Message Sequence\n: DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine\nNew Mode Entered\n20 : Send Unstructured VDM\n21 : Unstructured VDM 22 : Unstructured VDM +\nCRC\nStart CRCReceive Timer 23 : Unstructured VDM\nCheck MessageID against local copy\nStore Copy of MessageID\n23 : Unstructured VDM Received\n24 : GoodCRC\n25 : GoodCRC + CRC\n26 : GoodCRC\nCheck and Increment MessageIDCounter Evaluate Unstructured VDM\nStop CRCReceiveTimer Reply with the application specific\nresponse which can be again a\n27 : Unstructured VDM Sent Unstructured VDM\n10: Send Unstructured VDM\n11: Unstructured VDM\n12 : Unstructured VDM + CRC\n11: Unstructured VDM Start CRCReceive Timer\nCheck MessageID against local copy\nStore Copy of MessageID\n14: Unstructured VDM Received Check and Increment MessageIDCounter\n15: GoodCRC Stop CRCReceiveTimer\n16: GoodCRC + CRC\n17: GoodCRC\n18: Unstructured VDM Sent\nProcess Unstructured VDM as required\nPage 816 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.152, \"Steps for Unstructured VDM Message Sequence\"\nFigure 8.125, \"Unstructured VDM Message Sequence\"\nbelow provides a detailed explanation of what\nhappens at each labeled sTtaebpl ien8 .152 Steps for Unstructured VDM Message Sequ eanboceve.\nStep DFP UFP\nDFP Explicit Contract\nActive Mode UFP Policy Engine UFP Explicit Contract\nThe has an and has entered an\nProtocol Layer Active Mode UFP\nwith the . The directs The has an and has entered an\n1 Vendor_Defined Message\nthe to send an Unstructured with the\nProtocol Layer .\nVendor_Defined Message PHY Layer\ncreates the Unstructured\n2\nand passes to .\nPHY Layer CRC PHY Layer Vendor_Defined\nVendor_Defined Message CRCReceiveTimer Message CRC Message\nappends and sends the Unstructured receives the Unstructured\n3\n. Starts . PHY Lay aenrd checks the CRC to verify the .\nVendor_Defined Message Protocol\nremoves the and forwards the\nLayer\n4 Unstructured to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Vendor_Defined Message Policy\nThe forwards the Unstructured\nEngine\ninformation to the\nProtoco lt Lhaayt ecronsumes it. GoodCRC Message\nPHY Layer\ngenerates a and\n6 PHY Layer GoodCRC Message PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the and checks appends and sends the\n7 PHY Layer CRC\nthe to verify the . .\nGoodCRC Message Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVendor_Defined Message\n9 informs the that the\nUnstructured was\nsuccessfully sent.\nPolicy Engine Protocol Layer\nIn this example the Vendor protocol requires a\nVendor_Defined Message\n10 response. The tells the to\nProtocol Layer\nform an Unstructured .\nVendor_Defined Message PHY Layer\ncreates the Unstructured\n11 PHY Layer Vendor_Defined\nPHY Layer CRC and passes to .\nMessage CRC\nreceives the Unstructured Vendor_Defined Message CRCReceiveTimer\nMessage appends a and sends the Unstructured\n12 and compares the it calculated with the\nProtocol Layer MessageID . Starts .\none sent to verify the .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Vendor_Defined Message Policy\nThe forwards the Unstructured\nEngine\ninformation to the\nProtoco lt Lhaayt ecronsumes it. GoodCRC Message\nPHY Layer\ngenerates a and\n14\npasses it .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 817\nTable8.152 Steps for Unstructured VDM Message Sequence\nStep DFP UFP\nPHY Layer CRC GoodCRC PHY Layer GoodCRC Message\nMessage CRC Message\nappends a and sends the receives and compares the\n15\n. PHY iLt acyaelcrulated with thCeR oCne sent to verify theG oodCRC .\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVendor_Defined Message\n17 informs the that the\nUnstructured was successfully\nsent.\nPage 818 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.2.17.2 VDEM\nFigure 8.126, \"VDEM Message Sequence\" VDEM DFP\nUFP Message UFP Modal Operation\nshows an example sequence of an transaction between a and\n. The figure below shows the Figurse a 8s. 1th2e6y VflDowEM ac Mroessss tahgee b Suesq aufetenrc e Enters into .\n: DFP Policy Engine : Protocol : PHY : PHY : Protocol : UFP Policy Engine\nNew Mode Entered\n20 : Send VDEM\n21 : VDEM 22 : VDEM + CRC\nStart CRCReceive Timer 23 : VDEM\nCheck MessageID against local copy\nStore Copy of MessageID\n23 : VDEM Received\n24 : GoodCRC\n25 : GoodCRC + CRC\n26 : GoodCRC\nCheck and Increment MessageIDCounter\nStop CRCReceiveTimer Evaluate VDEM\nReply with the application specific\nresponse which can be again a VDEM\n27 : VDEM Sent\n10: Send VDEM\n11: VDEM\n12 : VDEM + CRC\n11: VDEM Start CRCReceive Timer\nCheck MessageID against local copy\nStore Copy of MessageID\n14: VDEM Received Check and Increment MessageIDCounter\n15: GoodCRC Stop CRCReceiveTimer\n16: GoodCRC + CRC\n17: GoodCRC\n18: VDEM Sent\nProcess VDEM as required\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 819\nTable8.153, \"Steps for VDEM Message Sequence\"\nFigure 8.126, \"VDEM Message Sequence\"\nbelow provides a detailed explanation of what happens at each\nlabeled step in Table8.153 Steps for VabDoEvMe. Message Sequence\nStep DFP UFP\nDFP Explicit Contract\nActive Mode UFP Policy Engine UFP Explicit Contract\nThe has an and has entered an\nProtocol Layer Vendor_Defined_Extended Active Mode UFP\nwith the . The directs The has an and has entered an\n1 Message\nthe to send a with the\nProtocol Layer Vendor_Defined_Extended\n.\nMessage PHY Layer\ncreates the\n2 PHY Layer CRC\nand passes to . PHY Layer Vendor_Defined_Extended\nVendor_Defined_ExtendedMessage\nappends and sends the Message CRC Message\nCRCReceiveTimer receives the\n3 . Starts\nPHY Lay aenrd checks the CRC to verify the .\n.\nVendor_Defined_ExtendedMessage Protocol\nremoves the and forwards the\nLayer\n4 to the\nProtocol Layer MessageID\n.\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n5 Vendor_Defined_ExtendedMessage\nThe forwards the\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRC Message\nthat consumes it.\nPHY Layer\ngenerates a and\n6 PHY LayerPHY Layer GoodCRC Message PHY Layer CRC GoodCRC\npasses it .\nCRC Message Message\nreceives the appends and sends the\n7 PHY Layer CRC\nand checks the to verify the . .\nGoodCRC Message Protocol Layer\nremoves the and forwards the\n8 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer\nverifies and increments the\nProtocol Layer Policy Engine\nand stops .\nVendor_Defined_ExtendedMessage\n9 informs the that the\nwas successfully\nsent.\nPolicy Engine Protocol Layer\nIn this example the Vendor protocol requires a\nVendor_Defined_ExtendedMessage\n10 response. The tells the to\nProtocol Layer Vendor_Defined_Extended\nform a .\nMessage PHY Layer\ncreates the\n11 PHY Layer Vendor_Defined_Extended PHY Layer CRC\nand passes to .\nMessage CRC Vendor_Defined_ExtendedMessage\nreceives the appends a and sends the\nMessage CRCReceiveTimer\n12 and compares the it calculated with the . Starts\nProtocol Layer MessageID\none sent to verify the . .\nMessage\nchecks the in the incoming\nis different from the previously stored value\nProtocol Layer\nand then stores a copy of the new value.\n13 Vendor_Defined_ExtendedMessage\nThe forwards the\nPolicy Engine\ninformation to the\nProtocol Layer GoodCRC Message\nthat consumes it.\nPHY Layer\ngenerates a and\n14 PHY Layer GoodCRC Message\npPaHsYse Lsa ity er . CRC GoodCRC\nCRC\nMessage receives and compares\nappends a and sends the Message\n15 the it calculated with the one sent to verify the\n.\n.\nPage 820 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.153 Steps for VDEM Message Sequence\nStep DFP UFP\nPHY Layer CRC GoodCRC\nMessage Protocol Layer\nremoves the and forwards the\n16 Protocol Layer\nto the .\nMessageIDCounter CRCReceiveTimer.\nverifies and increments the\nProtocol Layer Policy Engine\nand stops\nVendor_Defined_ExtendedMessage\n17 informs the that the\nwas successfully\nsent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 821\n8.3.3 State Diagrams\n8.3.3.1 Introduction to state diagrams used in Chapter 8\nSection 8.3.3, \"State Diagrams\" Normative Shall\nPolicy Engine\nThe state diagrams defined in are and define the operation of the\nPNoowtee:r Delivery .\nThese state diagrams are not inFtiegnudreed 8 t.o1 r2e7p Olaucetl ain wee ollf wStraittteesn and robust design.\n<Name of State>\nActions on entry:\n\u201cList of actions to carry out on entering the\nstate\u201d\nActions on exit:\n\u201cList of actions to carry out on exiting the\nstate\u201d\nPower (VI) = \u201cPresent power level\u201d\nPD = \u201cattachment status\u201d\nFigure 8.127, \"Outline of States\"\nshows an outline of the states defined in the following sections. At the top there is\nthe name of the state. This is followed by \"Actions on entry\" a list of actions carried out on entering the state. If\nthere are also \"Actions on exit\" a list of actions carried out on exiting the state, then these are listed as well;\nothe\uf06crwise, this box is omitted from the state. At the bottom the stSaotuursc oe fP PoDrt is listed: Sink Port\n\uf06c \u201cPower\" which indicates the preseAnttta ocuhtmpuent tpower for a Attached or iDneptuatc hpeodwer for a .\n\u201cPD\" which indicates the present status either \" \", \" \", or \"unknown\".\nTransitions from one state to another are indicated by arrows with the conditions listed on the arrow. Where there\nare multiple conditions, these are connected using either a logical OR \"|\" or a logical AND \"&\".\nIn some cases, there are transitions which can occur from any state to a particular state. These are indicated by an\narrow which is unconnected to a state at one end, but with the other end (the point) connSeocuterdc et oP othrte finSailn skt aPtoer.t\nFigure 8.128, \"References to states\"\nIn some state diagrams it is necessary to enter or exit from states in other diagrams (e.g., DFP oUr FP\nstate diagrams). indicatSeosu hrcoew P sourtch rSeifnerke Pnocrets are made. The reference is\nindicated with a hatched box. The box contains the name of the state andF wighuerteh 8e.r1 t2h9e, \"sEtaxtaem isp lae of st oarte refe. rIet nhcaes\nwalistoh bceoennd intieocness\"sary to indicate conditional entry to either or Fstigauter ed i8a.1gr3a0m, \"sE. xTahmisp ilse aocfh siteavteed\nrbeyf etrheen ucsee w oift ha tbhuel lseatmede leisntt riny daincda teinxigt \"the preconditions (see example in\n). It is also possible that the entry and return states are the same.\nindicates a state reference where each referenced state corresponds to\neither the entry state or the exit state.\nPage 822 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 8.128 References to states\n<Name of reference state>\n(<DFP | UFP>)\nFigure 8.129 Example of state reference with conditions\nHard Reset:\n\u2022 Consumer or\nConsumer/Provider ->\nPE_SNK_....\n\u2022 Provider/Consumer in\nSource role ->\nPE_SRC_...\nFigure 8.130 Example of state reference with the same entry and exit\n<Name of reference state 1> or\n<Name of reference state 2>\n(<DFP | UFP>)\nTimers are included in many of the states. Timers are initialized (NseotR toes tphoenirs setTairmtinerg condition) and run (timer is\ncounting) in the particular state it is referenced. As soon as the state is exited then the timer is no longer active.\nWhere the timers continue to run outside of the state (such as the ), this is called out in the text.\nTimeSoeuntdse orfR tehsep toimnseerTs iamree rlisted as conditions on Mstaatye transitions.\nSenderResponseTimer\nThe is a speciaFl icgausree, a8s.1 i3t 1, \"Se bned esrtRopesppeodn asenTdi mstearr tPeodl ifcryo mEn oguintes iSdtea tthe eD siatagtreasm in\" which it\nis used. To allow this to be done without ovePro-cliocmy Epnligcianteing the staCtheu dnikaignrga mLasy, etrhe is\ndescribed with its own state diagram ( ). The\ncontrol of this Timer is shared between the and the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 823\nShould\nConditions listed on state transitions will come from one of three sources and, when there is a conflict, be\nservicedM ines tshaeg efollowing order: Policy Engine Protocol Layer Message\nMessage\n1) and related indications passed up to the from the ( sent;\nreceived etc.). Policy Engine\n2) Events triggered within the e.Dg.e, vtiimcee Pro tliimcye Mouatnsa.ger Local Policy\nDevice Policy Manager USB-C Port Control\n3) Information and requests coming from the relating either to , or to\n\u00ae\nNote: other modules which the controls such as power supply and .\nMessage Discarded Message\nPTrhoet ofoclolol Lwaiynegr state Sdeiacgtiroanm 6s.1 a2r.e2 .n3o, \"tP inrotetoncdoeld L taoy ecro vMeers asallg peo Rsescibelpet icoonr\"ner cases that could be\nencountered. For example, where an outgoing AMS is , due to an incoming by the\nMess a(sgeee ) it will be necessary for the\nhigher layers of the system to handle a retry of the that was being initiated, after first handling the\nincoming .\nPage 824 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.1.1 SenderResponseTimer State Diagram\nFigure 8.131, \"SenderResponseTimer Policy Engine State Diagram\" Policy\nEngine Source Port Sink Port\nbelow shows the state diagram for the\nin a F iogru ar e 8.131 S.e Tnhdee froRlleoswpionng sseeTctiimonesr dPeoslcirciyb eE nogpienrea tSiotant ien D eiaacghr oafm the states.\nPower-up | SenderResponseTimer started\nHard Reset | from within Policy Engine State |\nSenderResponseTimer stopped on exit from Policy Engine State | Start_SRT requested from Chunking Layer\nStop_SRT requested from Chunking Layer\nSRT_Running\nSRT_Stopped\nActions on entry:\nActions on entry: Zero SR_Timer\nStop Incrementing SR_Timer1 Start Incrementing SR_Timer1\nSR_Timer1 reached\nmaximum count\nPolicy Engine informed\nSRT_Expired\nActions on entry:\nInform Policy Engine of\nSenderResponseTimer timeout\n1) The SR_Timer is regarded as the mechanism within the SenderResponseTimer state diagram that implements the SenderResponseTimer.\n8.3.3.1.1.1 SRT_Stopped State\nSRT_Stopped Shall SenderResponseTimer\nHard Reset Policy EngineShall\nThe State be the starting state for the either on power up or after a\nPolicy E. Onngi ennetSrhy atoll this state the SRT_Runn ing stop incrementing the SR_Timer.\nThe\uf06c Sende trrRanessiptioonns etoT timhee r State: Policy Engine\n\uf06c When the is starCtehdu nfrkoimng w Liatyheinr a state, or\n8.3.3.1W.1h.e2n a Start_SRT i s S rReqTu_eRstuedn fnroinmg t hSet ate .\nSRT_Running SenderResponseTimer Shall\nOn e\uf06cntry to the State the state machine :\n\uf06c Set the SR_Timer to zero\nSenSdtearrRt eruspnonninsge TSiRm_Teirmer. Shall SRT_Expired\nThe\uf06c state machine transition to the State:\nSenWdehreRne sthpeo nSRse_TTiimmeerr reaches its maxSihmaullm count SRT_Stopped\nThe\uf06c SenderRe ssptaotnes meTaicmhienre transition to the Policy Engine State:\n\uf06c When the is stopCpheudn kbiyn egx Litaiynegr a state, or\nWhen a Stop_SRT is requested from the\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 825\n8.3.3.1.1.3 SRT_Expired State\nSRT_Running SenderResponseTimer Shall Policy Engine\nSenderResponseTimer\nOn entry to the State the state machine Inform of\nPolicy EngineShall timeout SRT_Stopped\nThe\uf06c Policy t Ehenng itnreansition to the state:\nWhen the has been informed.\nPage 826 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.2 Policy Engine Source Port State Diagram\nFigure 8.132, \"Source Port State Diagram\" Policy Engine Source Port\nbelow shows the state diagram for the in a . The\nfollowing sections describe operatioFnig iun reea c8h.1 o3f2 th Seo sutractees P.ort State Diagram\nHard reset signalling received\nStart\nPE_SRC_Transition_to_default\nPE_SRC_Hard_Reset_Received\nA S In t c a i t P t r i i D o t a n I P l = m i P s S z o C e H o p w o n l a a i n e r n c e n r d i d n t e R = / t s c e r E t D t y s x a e e e : p r d f t t l / a T i N n c u i i m o o I t t R t C e ( C e o r 5 s o n V p n t ) o n r o n a e r c s c t e te T d imer A R s R R R u c e e e o p t q s q l i e e p u u o t l t n e e y o l s s s o H t t D c o D D a a F n r l e e P d e v v H a n i i R W c c n t e e e r d s y P P e t : o o u ts l l r i i n c c to y y o v M M ff S a a V a n n f C e a a O 5 g g N V e e N r r v t t i o o a r s v e e S q t a u P fe o e 0 s r V t t p D o a w ta e r Power source at default A R R St c e e a t s s r i e e o t t t n S C P s w a r o a o p n p t s o S C e c o o n o u u t l r r n L y c t a e : e y S r e P ta r E rt _ T S i R m C e _ r S ( t o a n r l t y u a p fter Swap)\nPower = DefauIt (0V or 5V) or Implicit Contract\nPSHar t d im Re e s o e u t t Timer A R In c e f t q o i u o rm n es s t P o D r n o e e t v o x i c c it o e : l P L o a l y ic e y r M Ha a r n d a g R e e r s e to t c tu o r m n p o le n t V e CONN Swap P S r o o u t r o c c e o S l t L a a r y tT er im Re e s r e t t i 4 m | eout PD = Connected/not Connected\nPower = r P i D si n = g n / o fa t l C li o n n g n t e o c d te e d fault (5V) Actions on entry: PE_SRC_Discovery (SourceCapa H b a il r i ( t d y n R T N o e i t o s m p R e e r t e C e r s v o p t i u i o o m n n u t e s s e o e l r y T u > P t im & D n e H C C r a o a t r p n i d m s n R C e e e o c o s u t u e e n t t d t C & 6 e o r & u > n t n 1 C ) apsCount1) |\nInitialize and run SourceCapabilityTimer\nEPR Capa E b P le R & M S o P d H D R e a e M r & v d i o c R R d e e e e q P s & u o e e l t E i s c r P t e y R M q M _ u e R a e s e n s s q t a a u g f g r e e e o s r r m t | e M ce e i s v s e a d g e | received PSHar t d im Re e s o e u t t Timer Power = De P fa D u = lt n ( o 5 t V C ) o o n r n Im ec p te li d cit Contract\nActions P on E _ e S n R tr C y _ : Hard_Reset (So C u a r p ce sC C o ap u a n b te il r i t (cid:148) y n T C im ap e s r C t o im un e t o 1 u ) t & (withou C t a p G a o b o i d li C t R ie C s ) m & e n s o s t a p g r e e s s e e n n d tl i y n g P D fa i C l o u n re n ected6 PE_SRC_Disabled\nGenerate Hard Reset signalling Actions on entry:\nInitialize and start NoResponseTimer Disable Power Delivery\nStart PSHardResetTimer PE_SRC_Send_Capabilities\nIncrement HardResetCounter Power = DefauIt (5V)\nActions on entry: PD =not Connected\nPE_SRC_Wait_New_Capabilities Im Po p w li e c r it = /E D x e p f l a ic u i I t t C ( o 5 n V t ) r o a r c t R In e S q P u R es M t p o r d e e s S e e n n t d so S u o r u c r e c c e a _C p a a p b a il b it i i l e it s i e fr s o M m e s D s e a v g i e ce Policy Manager\nA W c a t i i t o f n o s r o n n e e w n S tr o y u : rce Capabilities9 Source capability PD = Connected/not Connected SenderResponseTimer timeout I I I n n f G c E r o P e o R m d M C en R o t C d C e r a e S p c e s e n C iv d o e u E d n P : t R e _ r S ( o o u p r t c i e o _ n C a a l p )1 abilities Message Hard n R N o e o t s R p e e r t e C sp v o i o u o n n u s t s e e l r y T i > P m D n e H C r a o t r n im d n R e e e o c s t u e e t d t & C 6 o & unt1\nPow P e D r = = C D on ef n a e u c I t t e ( d 5V) Po ( l f i r c o c y m h M a D n a g e n e v a i g c e e r ) \u2022 \u2022 \u2022 s r in e to i s t p e ia t N l H i o z a R e r e d a s n R p d e o s n r e u s t e n C T o S i u e m n n e t d e r e r r a R n e d sp C o a n p s s e C T o i u m n e te r r\nPower = DefauIt (5V) or Implicit/Explicit Contract\nPD = Connected/not Connected\n( n R W o e E a je x it c p t m l m ic e i e s t s s C a s o a g n g e e t s r e s a e n c n t t ) t & | Re E C j x e o p c n l t i t m c r i a t e c C s t s o I a n n g t v e r a a s l c i e d t n 4 & t & In I E n P S R P R M M od o e d E e P R R e _ q R u e e q s u t e M st e s M s e a s g s e a r g e e c r e e iv c e e d iv | ed N p o r R ev e i s o H p u o a s n r ly d s e R P T e D i s m e C t o e C n r o n t u i e m n c t t e e o d u 6 t & &\n> nHardResetCount\nPE_SRC_Capability_Response Request can\u2019t be met | PE_SRC_Negotiate_Capability\nA S S l C a e e o c t n n t n e i d d r t o r n f R W a r s c e o a t o j m i e i n t s c m t t e s h m n t e e i t s l e r P l s s y v a o s : a g w a l e g i e d e i r f i R r f e e r q s e e u q r e u v s e e t s c a t o n c u d a l n d p \u2019 t r b e b e s e e m m n e t e t t fr R o e m q u P e o s w t e m r e R t e l s a e te rv r e A G \u2022 \u2022 \u2022 I m f c e C C C e t t t h o a a t i D o , n n u e b n \u2019 l e s t b d u s v i b e n t i b o e c m k t e n e h m r e m e e P e t e n o s q e t t l i t u i n r c l e y k a y s : t s t M e t f r i o a l f l n r r r a o O e g m p q e e u r P r i e o r a v e w ti a s n e l m u g r a R o C t r u e i e o s r e n r p e r o o v n w f e t s e o i r n r ( k O \u201c C r p e a e q p r u a a t e b i s n il t g i : t y P o M w is e m r c a a tc n h b \u201d e ) ErrorRecovery\nthis information will be passed to Device Policy Manager4\nPower = E D P x e D p f a l = i u c C i I t o t C n (5 o n V n e ) t c r t o a e r c d t I mplicit/ (In SPR Mode & Request Message) | Power = DefauIt ( P 5 D V ) = o C r o I n m n p e l c ic te it d /Explicit Contract\n(In EPR Mode & EPR_Request Message) Request can be met\n(Re E je x c p t l i m ci e t s C s o a n ge tr s a e c n t t & PE_SRC_Transition_Supply\nC W on a t i r t a m ct e s s t s i a ll g v e a s l e id n ) t | Protocol Error A Se c n ti d o n A s c c o e n p e t n m tr e y s : sage (within tReceiverResponse)\nRequest Device Policy Manager to transition Power Supply\nActions on exit:\nSend PS_RDY message\nPower = transition\nPD = Connected\nPower supply ready\nPE_SRC_Ready EPR_Keep_Alive Message PE_SRC_EPR_Keep_Alive\nActions on entry:\n(In SP ( R f r M o S m o o d u D e r c e & e v i G c c a e e p t P _ a S o b o l i i u l c i r y t c y M e c _ a h C n a a n a p g g M e e r e ) s | sage) | A N I I n n c o i i t t t t i i i i o f a a y n l l i i s P z z e e r o o n a a t n n o e d d c n o t r r r l u u y L n n : a y D S e o is r u c r o o c f v e e e P n r P d Id S o C e f o n A m ti M t m y S T T 8 i i m m e e r r 7 10 EPR_Keep_Alive_Ack Sent Send P E ow PR e P _ r K D = e = E e x p C p _ o A l n i l c n i i v e t e c C _ t A o e n c d k tr M ac e t s sage\n(In EPR Mode & EPR_Get_Source_Cap Message) Initialize and run SourceEPRKeepAliveTimer11\nPE_SRC_Get_Sink_Cap\nSo S u o r u c r e c E e P P R P K SC e o e m pA m li T ve im Ti e m r e ti r m ti e m ou eo t u | t A I P f r c t o t h i t o e o n c S s o o l o u L n r a c e y e x e i i r s t : t i h n a it n ia t t h in e g f i a r n st A M M e S s s t a h g e e n i n n o a t n if y A t M h S e fr g o e m t s i D n e k v c ic a e p P ab ol i i l c it y i e M s a r n eq ag u e e r s 1 t 2 A If c S t P io R n M s o o n d e e n ca tr p y a : bilities requested send\nwill follow8 Get_Sink_Cap Message\nIf EPR Mode capabilities requested send\nEPR_Get_Sink_Cap Message\nPower = Explicit Contract Initialize and run SenderResponseTimer\nPD = Connected (SPR Sink Capabilities requested Actions on exit:\n& Sink_Capabilities Message) | Pass sink capabilities/outcome to Device Policy\n(EPR Sink Capabilities requested Manager\n& EPR_Sink_Capabilities Message) |\n(In EPR Mode & Get_Source_Cap Message) | SenderResponseTimer timeout Power = Explicit Contract\n(In SPR Mode & EPR_Get_Source_Cap MessageS)ource capabilities PD = Connected\nmessage sent\nPE_SRC_Give_Source_Cap\nActions on entry:\nGet present Source capabilities from Device Policy Manager\nSend Capabilities message (based on Device Policy Manager response):\n\u2022If Get_Source_Cap Message received send Source_Capabilities Message.\n\u2022In EPR_Get_Source_Cap Message received send EPR_Source_Capabilities Message\nPower = Explicit Contract\nPD = Connected\nCapsCounter Optional SourceShall\nSource_CapabilitiesMessage SourceCapabilityTimer\n1) Implementation of the is . In the case where this is not implemented the continue\nto send Sink Vsa elaidch time the times out.\nSource Capabilities\n2) Since the is required to make a request from the offered capabilities the expected transition is via \"Request\ncan be met\" unless the havNee cghoatinagteedd since the last offer.\nSource Sink Valid\n3) \u201cContract Invalid\" means that the previously H avrodlt aRgeese atnd Current values are no longer included in the\n's new Capabilities. If the fails to make a Request in this case, then Power Delivery operation is no lon-\nger possible and Power Delivery mode is exited with a .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 827\nNew Source tSwapSourceStart\nSource_CapabilitiesMessage\n4) After a Power Swap the is required to wait an additional before sending a\nConnected . This delay is not rPeoqrut iPraedrt wnehren first starting up a system. Port Partner\nConnected Detach\n5) PD is defined as a situation when the s are actively communicating. The s remain PD\nPort Partn earfter a Swap until thCeorne nise cat etrdansitionH taor Dd iRsaesbelted or the connector is able to identify a .\nAttached USB Type-CError Recovery\n6) s are no longer PD after a , but consideration needs to be given as to whether there has\nbeenD ai sPcDo CvoenrnIdeectniotnit ywThiimle ethre Ports have been VCONN S toou prcreevent unnecessary Ca ble Plug .\nGoodCRCMessage Discover IdentityCommand\n7) The is run when this is a and a PD Connection with a needs to be es-\ntabliSsehcetdio in.e 5. .n7o, \" Collision A voidance h\"aSs eycettio bne 6en.6 .r1e6c,e \"iCvoeldli sinio rne Aspvooindsaen tcoe aT imers\" Section 6.10, \"Coll.ision Avoidance\"\n8) See PE_SRC_Wait_New_Capabiliti,e s Device Policy ManagerShould and Source.\nCapabilities Should Source Capabilities Source Capabilities\n9) In the State the either decide to send no further\nor send a different set of . Continuing to send the same set of\ncouldSo ruerscueltP iPnS aC loivmem loTcikm seitruation. Explicit Contract SPR PPSAPDO Sourc-\ne SPR PPS SourcePPSCommTimer\n10) The is only initialized and run when the present is for an .\ns thSaot udroc neEoPt sRuKpepeoprAt liveTime dro not need to implement the Source EPR M.ode\nEPR Mode SourceEPRKeepAliveTimer\n11) The is only initialized and run when the is in ; Sources that do not support\ndo not nSeiendk tCoa ipmapblielimtieesnMt tahye . Source\nEPR Mode\n12) Either SPR or EPR be requested, regardless of whether or not the is currently operating in\n8.3.3S.2PR.1 or . PE_SRC_Startup State\nPE_SRC_StartupShall SourcePolicy Engine Hard Reset\nPolicy EngineShall CapsCounter Protocol Layer\nbe the starting state for a either on power up or after a . On\neNnottrey: to this state the Protocol Lay er reset the Messag eaInDdC roeusentt ethre Mess.ageID Section\n6.12.2.3, \"Protocol Layer Message Reception\"\nResetting the will also reset the and stored (see\nPolicy EngineShall PE_SRC_Send)_.Capabilities\nThe\uf06c Proto ctroal nLsaiytieorn to the PE_SRC_ Ssttaatret:up\nWhen the reset has completed if the state was entered due to the\n\uf06c system firsStw sataprStoinugr ucepS.tartTimer PE_SRC_Startup\nPower Role Swap\nWhen the times out if the state was entered as the result of a\nNote: Shall . PE_SRC_Startup Source_CapabilitiesMessage\nAttached\nSources remain in the state, without sending any s\n8.3.3.2.u2ntil a plug is PE_SR.C_Discovery State\nPE_SRC_Discovery Policy EngineShall SourceCapabilityTimer\nSource_CapabilitiesMessage\nOn entry to the state the initialize and run the in\nordePr otloic tyr iEgnggeirn seeSnhdainllg a PE_SR C_Send_.Capabilities\nThe\uf06c Sourc eCap atrbainlistiytTioimn teor the CapsCounter n sCtaatpes wCohuenn:t\nPoliTcyh eE ngineMayOptionally times oPuEt_ aSnRdC _Disabled \u2264 .\nThe\uf06c Port P artn er go to the Connected state when:\n\uf06c The SourceCsa paraeb niloitty pTriemseenrtly PD\n\uf06c And tChaep sCounter nCapsCount times out\nPoliAcyn Ed ngineShall > PE_SRC_.Disabled\nThe\uf06c Port P artne rgo to the Connec stetadte whSeonu:rce Port Attached\nAttachment\nThe s have not been PD (the remains to a Port it has not\nhad a PD Connection with during this )\nPage 828 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c NoResponseTimer\n\uf06c And the HardResetCounter timneHsa orudtR esetCount\nNote: And the PE_SRC_Disabled > Attached . Policy Engine\nDetached Detach Re-attach\nIn the state the device is assumed to be unresponsive. The\n8.3.3.2.o3perates as if t hPeE d_eSvRiceC i_sS end_Ca upnatilb siulciht iteimse S atsa at e / is detected.\nNote: PE_SRC_Soft_Reset\nThis sPtaEt_eS RcaCn_S been edn_Ctearpeadb friloitmie tshe Policy Engin estSahtae.ll\nDevice Policy Manager Policy EngineShall Protocol Layer Message\nOn entry to the Policy En sgtianteeS thhae ll request the present Port capabilities from\nthe . The then request the to send a capabilities\ncon\uf06ctainingS tohuerscee c_Caappabaibliitliietsie. sThMee ssage So urce requSePsRt: Mode\n\uf06c A EPR_Source_Capab ilitiesMe isfs tahgee S iosu irnc e EPR o Mrode\nPoliAcyn E ngineShall Ca pifs tChoeu nter is in .\nTheG oodCRCMess age then increment the Policy EngineS (hifa ilml plemented).\nIf a \uf06c NoRe sisp roencseeivTeimd, etrhen the :\n\uf06c Stop the HardResetCounte.r CapsCounter\nNote: Reset tHhae rdResetCounterSha allnd to zero. Shall\nHard Reset\nThe only be set to zero in this state and at power up; its value be\n\uf06c maintained during aS enderResp.onseTimer\nSIonuitricaeli_zCea apnadb riluinti ethseM essage . GoodCRCMessage Sink\nRequestMessage tSenderResponse\nOnce a has been received and acknowledged by a , the is\nrequPiroeldic yto E tnhgeinn eseSnhda lal P wE_itShRinC_ Negotiate_Capabi.lity\nThe\uf06c Reques tMess atrgaensition to the Sink Source state when:SPR Mode\n\uf06c A EPR_Re questMe isss raegceeived from the anSdin tkhe S iosu orpceerating in EPR o Mrode\nPoliAcyn E ngineShall is receiPvEe_dS RfrCo_mD itshceo very and the is operating in .\nThe\uf06c Proto col La ytrearnsition to the Message state when: Connected\nMessage\nThe Sinindkic Paoterst that the has not been sent and we are presently not .\nThis is part of the Capabilities sending process whereby successful sending indicates\nPoliccoy nEnnegcitnieonS htoa lal PD . PE_SRC_Hard_Reset\nThe\uf06c Sende rRes ptroannsseiTtiiomne tro the state when: USB Default Operation\nThe times out. In this case a transition back to is\nrequired.\nWh\uf06cen: Port Partner Connected Source Port Attached\nAttachment\nThe s have not been PD (the remains to a Port it has not\n\uf06c had a PDN CooRnensepcotniosne Twiimthe druring this )\n\uf06c And the HardResetCounter timneHsa orudtR esetCount\nPoliAcyn Ed ntghien eShall > .\nThe\uf06c doP Eo_nSeR oCf_ tDhies cfoolvleorwying:\n\uf06c Transition to the PE_SRC_Disabled state.\nTransition to the state.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 829\nNote: Attached Policy EngineShould\nDetached Detach Re-attach\nThat in either case the device is assumed to be unresponsive. The operate\nPolicya Esn igf itnhee Sdheavlicle is Erro urnRteilc souvcehr ytime as a / is detected.\nThe\uf06c Port P artne rgo to the staCtoen wnehcetned: Source Port Attached\nAttachment\nThe s have previously been PD (the remains to a Port it has\n\uf06c had a PDN CooRnensepcotniosne Twiimthe druring this )\n\uf06c And the HardResetCounter timneHsa orudtR.esetCount\n8.3.3.2A.n4d the PE_SRC_N > egotiate_Capa.bility State\nPE_SRC_Negotiate_Capability Policy EngineShall Device Policy Manager\nAttachedSink Device Policy ManagerShall\nOn entry to the state the ask the to\nevaluate the Request from the . The response from the be one of the\nfollo\uf06cwing:\n\uf06c The Request can be met.\n\uf06c The Request cannot be met\nPoliTcyh eE nRgeiqnueeSsht acloluld be met later frPoEm_S tRhCe_ PTorwanesri Rtieosne_rSvuep.ply\nThe\uf06c transition to the state when:\nPoliTcyh eE nRgeiqnueeSsht aclaln be met. PE_SRC_Capability_Response\nThe\uf06c transition to the state when:\n\uf06c The Request cannot be met.\n8.3.3.2O.r5 the Request c aPnE b_eS mReCt _laTterra fnrosmit tihoe nPo_Swuerp Rpelsyer Svet.ate\nPolicy EngineShall PE_SRC_Transition_Supply\nThe be in the state while the power supply is transitioning from one\npower to anothePrE._SRC_Transition_Supply Policy EngineShall Protocol Layer\nAcceptMessage Device Policy Manager Shall\nOn entry to the state, the request the to send an\nand inform the that it transition the power supply to the Requested\npNoowtee:r level.\nIf the pPoEw_eSrR sCu_pTpralyn issi tciuornr_eSnutplyp olyperating atP tohleic rye EqnugeisnteedS hpaolwl er no changeP rwoitlol cboel nLaecyeesrsary.\nPS_RDYMessage\nOn exit from the state the request the to send a\nPoli cy Engine. Shall PE_SRC_Ready\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Policy En sgtiantee when:\nPoliTcyh eE ngineShall informPsE _tShRe C_Hard_Reset that the power supply is ready.\nThe\uf06c Protoco l Error transition to the state when:\n8.3.3.2A. 6 PocEcu_rSsR. C_Ready State\nPE_SRC_Ready SourceShall Negotiation Shall\nSink Device Policy Manager\nIn the state the PD be operating at a stable power with no ongoing . It\nrespond to requPeEst_sS RfrCo_mRe tahde y , eventSso furorcme Sthhea ll Protocol La.yer Atomic Message\nSequence AMS PE_SRC_Ready Protocol Error Soft Reset\nOn enStercyt itoon t 8h.e3 .3.4.1, \"SOP Sour sctea Pteo trht eS oft Rese t and Pnrootitfoyc tohl eE rror State Diag roaf mth\"e end of the\nProtocol L (ayer). If the transitionA iMntSoS hall Not is the result of Message that has not caused a\n(see ) then the notification to the\nof the end of the be sent since there is a to be processed.\nPage 830 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPE_SRC_Ready VCONN Source Cable\nPlug Policy EngineShall\nOn entry to the state if this is a which needs to establish communication with a\n\uf06c, the :DiscoverIdentityTimer GoodCRCMessage Discover\nIdentityMessage\nInitialize and run the (no response yet received to\nP E_SRC_R)e.ady Explicit Contract SPR PPSAPDO Policy Engine\nShall\nOn entry to the state if the current is for an , then the\n\uf06c do the following: SourcePPSCommTimer\nInitializPeE a_nSdR Cru_Rne tahde y Expli.cit Contract EPR Mode Policy EngineShall\nOn entry to the state if the current is for , then the do\nthe \uf06cfollowing: SourceEPRKeepAliveTimer\nInitializeP aEn_dS RruCn_R theae dy Source . AMS Policy EngineShall Protocol\nLayer Message AMS\nOn exit from the , if the is initiating an , then the notify the\nP otlhicayt tEhneg fiinrestS hall in an wiPll Efo_SllRoCw_.Send_Capabilities\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Source Capabilities state when:\n\uf06c ThGee t_Source_CapMessage indicates that Source S PhRav Me ocdheanged or\n\uf06c A EPR_Get_Sourc e_CapMe isss raegceeived, and the S iosu irnc e EPR o Mrode\nPoliAcyn E ngineShall P iEs_ rSeRcCe_iNveedg,o atniadt teh_eC apabili tisy in .\nThe\uf06c Reques tMess atrgaensition to the Source SPR Mode state when:\n\uf06c A EPR_Re questMe isss raegceeived, and the S iosu irnc e EPR o Mrode\nPoliAcyn E ngineShall is receiPvEe_dS,R aCn_dG tehte_S ink_Ca ips in .\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Sink Capabilities state when:\nPoliTcyh eE ngineShall asks fPorE _tShRe C_Hard_Reset .\nThe\uf06c Sourc e transition to tShPeR PPS Source PstPaSteC owmhemnT:imer\n\uf06c The Source is opEerPaRt iMngo daes an Sou arncedE tPhRe KeepAliveTimer Timer times-out or\nPoliTcyh eE ngineS hisa ilnl and thPeE _SRC_EPR_Keep_Alive Timer times-out.\nThe\uf06c EPR_K eepAl itvreanMsietsisoang teo the state when:\nPoliAcyn E ngineShall is recPeEiv_SeRd.C_Give_Source_Cap\nThe\uf06c EPR Mo de tranGseitt_ioSno utorc teh_eC apMessage State when:\n\uf06c In SPR Mode and a EPR_Get_Sourc e_CapMe isss aregceeived or\n8.3.3.2In. 7 and PanE _SRC_Disabled S tate is received.\nPE_SRC_Disabled Source\nHard ResetSignaling\nIn the state the PD supplies default power and is unresponsive to USB Power Delivery\nm8.e3ss.3ag.i2ng.8, but not to PE_SRC _Capab. ility_Response State\nPolicy EngineShall PE_SRC_Capability_Response Sink\nExplicit Contract\nThe enterI nthvea lid Hard Reset state if there is a Request received from the\nthat cannot be met based on the present capabilities. When the present is not within the present\ncapabilities it isP rEeg_SaRrdCe_Hd aasr d_Reset and a Policy E nwgiilnl ebSe htrailglgered. Protocol Layer\nOn entry to the state the request the to send one of the\nfollowing:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 831\n\uf06c RejectMessage Explicit Contract Invalid\n\uf06c WaitM essage - if the request cannot be met or the present W aisi tMessag.eShall Not\nExplicit Contract Invalid\n- if the request could be met later from the Power Reserve. A be\nPolisceyn Etn igf itnhee Sphraesllent PE _iSs RC_Read.y\nThe\uf06c Expl ticriatn Csoitniotrna ctot the state when:\n\uf06c ThReerjee icst aMne ssage and Explicit Contract Valid\n\uf06c A WaitM essage has been sent and the present is still or\nPoliAcy Engi neShall has been sent. PE_SRC_Hard_Reset\nThe\uf06c Expl ticriatn Csoitniotrna ctot the state when:\n\uf06c TherRee ijse acnt Message and Explicit Contract Invalid Sink\nUSB Default Operation\nThe has been sent and the present is (i.e., the had to\nPolirceyq Eunegsitn ae nSehwal vlalue so instead wPeE w_SilRl Cre_Wtuarnit t_oN ew_Capabilities ).\nThe\uf06c Exp ltircaitn Csoitniotrna tcot the state when:\n\uf06c ThReerjee icst nMoe ssage and\n\uf06c A WaitM essage has been sent or\n8.3.3.2A. 9 hPaEs b_SeeRnC s_eHnt.ard_Reset State\nPolicy EngineShall PE_SRC_Hard_Reset\nThe\uf06c Hard Rese t transitionD teov itchee P olicy Manager state from any state when:\n\uf06c EPR Mod reequest Rfreoqmue stMessage or\n\uf06c IEnP R Capable and a SPR Mod e iEs PreRc_eRievqedu eosrtMessage\nPE_SR aCn_dH ianr d_Reset and an Policy Engine Shall is received.\nOn e\uf06cntry to the Ha srtda tRee tsheet Signaling :\n\uf06c request the generatioNn ooRf esponseTim er by the PHY Layer\nNote: initialiNzeo Ranedsp rounns tehTei merShall .\n\uf06c The PSH ardRe csoentTtiinmueer to run in every stateH uanrtdilR ite sise tsCtoopupnetde ror times out.\nPoliicnyi tEianlgizinee aSnhda rluln the PE_SRC_T arnadn sinitciroenm_teon_td tehfae ult .\nThe\uf06c PSHa rdRes tertaTnismiteiorn to the state when:\n8.3.3.2Th.1e 0 PE_SR tCim_Hesa orudt._Reset_Received State\nPolicy EngineShall PE_SRC_Hard_Reset_Received\nThe\uf06c Hard Res etSign taralinnsgition from any state to the state when:\nPE_S RC_Hard_ iRs edseette_cRteecde.ived Policy EngineShall\nOn e\uf06cntry to the PSHardResetTim setarte the :\n\uf06c initialize and run the NoResponseTimer\nNote: initialiNzeo Ranedsp rounns tehTei merShall .\nPolicyT Ehneg ineShall cPoEn_tSinRuCe_ Ttor arunnsi itnio env_etroy_d setafateu ultntil it is stopped or times out.\nThe transition to the state when:\nPage 832 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c PSHardResetTimer\n8.3.3.2Th.1e 1 PE_SR tCim_Tesr oaunt.sition_to_default State\nPE_SRC_Transition_to_default Policy EngineShall\nOn e\uf06cntry to the Device Policy Manager state the S hallH:ard Reset Section 7.1.5,\n\"Response to Hard Resets\"\nindicate to the that the power supply (see\n\uf06c ).\n\uf06c request a resDeetv oicfe t hPeo llioccya Ml haanradgwerare Port Data Role DFP VCONN\nrequest tPhEe _SRC_Transition_to_de ftaou slett the Policy Engi ntoe Shal alnd turn off .\nOn e\uf06cxit from the Device Policy Manager state VthCOeN N :\n\uf06c request theP rotocol Layer Htoa rtudr Rne osent\nPoliicnyf oErnmgi ntheeS hall that thPe E_SRC_Star tius pcomplete.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the state when:\n8.3.3.2Th.1e 2 PE_SRC _inGdeicta_tSesi nthkat_ Cthaep p oSwteart seupply has reached the default level.\nPolicy Engine Device Policy Manager Shall\nAttachedSink\nIn this state the , due to a request from the , request the capabilities from\nthe PE._SRC_Get_Sink_Cap Policy EngineShall Protocol Layer\nGet_Sink_CapMessage Sink Capabilities Policy EngineShall\nOn entry to the state the request the to send a\n\uf06c Get_ Sink_Cap inM oersdsaegr eto retrieve tDheev ice Policy Manag.e Trhe send:\n\uf06c A EPR_Get_Sin k_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRbi Cliatipeasb oirlities\nPoliAcyn E ngineShall S ewnhdeenr Rthees ponseTimer requests .\nThe P E_SRC t_hGeent _sStianrkt _tChae p Policy Engine.Shall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(c EanpgaibnielitSiheas lolr response timeouPtE)_.SRC_Ready\nThe\uf06c Sink C apab itlritaienssition to the Sink _sCtaatpea wbhileitni:esMessage\n\uf06c SPR Sink Capabilities were requested and a EPR_Sink_Capab ilitiesM eisss raegceeived or\n\uf06c EPR SenderResponse wTiemree rrequested and an is received or\n8.3.3.2Th.1e 3 PE_SRC_W timaeist _oNute. w_Capabilities State\nPolicy Engine Negotiate Explicit Contract\nDevice Policy Manager\nIn this state the has been unable to an and is waiting for new Capabilities\nfromP tohliec y EngineShall . PE_SRC_Send_Capabilities\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Source Capabilities state when:\n8.3.3.2Th.1e 4 PE_SRC _inEdPicRat_eKs teheatp _Alive State have changed.\nPE_SRC_EPR_Keep_Alive Policy EngineShall EPR_KeepAlive_AckMessage\nOn ePnotrliyc yto E tnhgei neShall PStEa_tSeR tCh_eR eady send a .\nThe\uf06c EPR_K eepA tlrivaen_sAitcikonM teos sthaeg e state when:\nThe has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 833\n8.3.3.2.15 8.3.3.2.15PE_SRC_Give_Source_Cap State\n\uf06c PE_SRC_Give_Source_Cap Policy EngineShall Device Policy\nManager\nOn entry to the State the request the\nPolicy Engine fSohr athlle current system cParpoatboicloitli eLsa.y er Source CapabilitiesMessage\nThe then request the to send a containing these\ncapabPioliltiiceys E. ngineShall\nThe\uf06c Source_C apab sileintide:sMessage Get_Source_CapMessage\n\uf06c A EPR_Source_Capab ilitiesMe wsshaegne a EPR_Get_S ource_Ca isp rMeceessivaegde or\nPoliAcyn E ngineShall PE_SN wKh_eRne aad y is received.\nThe\uf06c Sourc e Capa tbrailnitsieitsioMne tsosa tghee state when:\nThe has been successfully sent.\nPage 834 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.3 Policy Engine Sink Port State Diagram\nFigure 8.133, \"Sink Port State Diagram\" Policy Engine Sink Port\nbelow shows the state diagram for the in a . The\nfollowing sections describe operationF iingu eraec h8 .o1f3 t3he S sintakt ePso.rt State Diagram\nHard reset signalling received\nStart\nPE_SNK_Transition_to_default\nActions on entry: PE_SNK_Startup\nRequest Device Policy Manager to request power Power Sink\ns R S i e e n t s k e P t t o r a l r o t n c D s a i a t l i t H o a n W R t o o l e d e to fa U u F lt P and turn off VCONN at default A R c e t s i e o t n P s r o o n to e c n o t l r y L : ayer\nEP ( R H M ar w o d S d i R P ( o t e ( h S e u S T & s r H i A D e n r c n a ( t a e e k E C r n _ v E W d o P C s i P c u a R i a R R t e p n i _ i e t S o a P t P C s e o n b o e D a r u T i l t p O l i (cid:148) r i i c r T c m t e y i n i e i n e q m e H M _ s u p r C a e a M e o t a r r n s i s d p e m t t a i R i s a t g f m e i s b r e e o a o o s i e r n l g u e m o i s | e t t t u e ) C 1 n t s o & . o . | u m 7 t n | e t s ) s ) a | ge A In c fo ti r o m n P P s o r w o o e t n o r c e = o x P r l i D i t L s : a i = n y g n e / o r f a t H l C l a i o n rd n g n R t e o e c s d t e e e t d f a c u o l m t ( p 5 l V e ) te Power = P D D e = P f a P C E u r o o I _ t n t S ( o n 0 N c e V o c K l o t e _ L r d a D 5 / y n V i e s o ) r c t o R C o r e o I v m s n e e p n r t l e y ic c i t t e C d ontract\nrequested by Get_Source_caps) Hard Reset complete\nActions on entry:\nPE_SNK_Hard_Reset Wait for VBUS6\nPower = Default (0V or 5V) or Implicit Contract\nActions on entry: PD = Connected/not Connected\nGenerate Hard Reset signalling.\nIncrement HardResetCounter. VBUS6 present3\nPower = DefauIt (5V) or Implicit/Explicit Contract\nPD = Connected/not Connected\nPE_SNK_Wait_for_Capabilities\nActions on entry:\nInitialize and run SinkWaitCapTimer\nSenderR Ti e m sp eo o u n t seTimer Powe P r D = = D C e o fa n u n l e t c (5 te V d ) / o n r o I t m C p o l n ic n it e c C t o e n d tract\n((SPR Mode & Source_Capabilities Message) |\n(EPR Mode & EPR_Source_Capabilities Message received))1\nPE_SNK_Evaluate_Capability\nActions on entry:\nReset HardResetCounter to zero.\nAsk Device Policy Manager to evaluate the options based on supplied\ncapabilities, any Power Reserve that it needs, and respond indicating\nthe selected capability and, Optionally, a \u201cCapability Mismatch\u201d.\nPower = DefauIt (5V) or Implicit/Explicit Contract\nPD = Connected\nDevice Policy Manager Response received no Explicit Contract &\n(Reject message received |\nPE_SNK_Select_Capability Wait message received)\nActions on entry:\nSenderResponseTimer Timeout S \u2022 e R n e d q u R e e s q t u f e ro s m t b p a r s e e s d e n o t n c D a e p v a i b c i e li t P ie o s licy Manager response:\n\u2022 Optionally Indicate that other capabilities would be preferred\n(\u201cCapability Mismatch\u201d)\nInitialize and run SenderResponseTimer\nN S ew in k p R o e w q e u r e r s e t q T u im ire e d r | Power = DefauIt P (5 D V = ) o C r o I n m n p e l c ic t i e t d /Explicit Contract SPR S o S u o r u c r e c _ e C C ( a S a p P p a R a b b i M l i i l t o i i t d e i e e s s M & r e e s q s u a e g s e t ) e | d &\nTimeout | Accept message received Explicit Contract & (EPR MODE &\nSinkPPSPeriodicTimer (Reject message received | EPR Source Capabilities requested &\nTimeout Wait message received) EPR_Source_Capabilities Message)\nPE_SNK_Transition_Sink\nProtocol Error\nActions on entry:\nInitialize and run PSTransitionTimer\nActions on exit:\nRequest Device Policy Manager transitions sink power\nsupply to new power (if required)\nPower = transition\nPD = Connected\nPS_RDY message\nreceived\nPE_SNK_Ready PE_SNK_Get_Source_Cap\n(EP (( R S P M R o M de o d & e E & P R S _ o S u o rc u e r _ c C e a C p a a p b a il b it i i l e it s ie M s e M s e s s a s g a e g ) e | ))1 A I I I I I n n n f n c i i S i t t E t t i i i i i a a a P n o l l l k n R i i i z z z s s e e e M u o a a a o p n n n n d p d d d e e o n r r r r I t n t u u u r s i n n n y t F : i a S t D a h l i i i s e n s z t k c e S R R o i a o n v e n e l k q e d r P u I S r d P e u w e s S n n t a P T t t p e i i h t m r y e s i T o e e S r i d n m 2 i i d n c ( e k o T G r E n i 4 m e P r t e R _ e r S c K 5 e i e n iv e k i p _ n A C g l a i W v p e a M T it i e ) m s e s r a 8 ge7 ge fr t o s m ou D rc e e v i c c a e p P a o b l i i l c i y ti e M s a r n e a q g u e e r st A I G I E In f f P c e S E i t t R t P i P _ i o _ S a R R G n o l i e M s M u z t e r o o _ o c S n d a d e o n e e e _ u C d n c c r a a t a c r p r p e p u y _ a a M n : C b b S e a i i e l s p l i i s n t t M a i i d e e g e e s s e s r r r s R e e a e q q g s u u e p e e o s s n t t e e s d e d T s s i e e m n n e d d r\nPE_SNK_EPR_Keep_Alive\nA S In e c it n t i i a d o l n i E z s P e P o R a n o _ n w K d e e n e r r t e u r p = n y A : E S l x i e v p n e l d i c M e i r t e R s C e s o s a n p g t o e ra n c s t eTimer E S P in R k _ E K P e R ep K A ee li p ve A _ li A v c e k T i M m e e s r s T a i g m e eout A I i f n c t t h t h i e o e n S A s in M o k S n i s w e x i i n l i l t i : f t o ia l t lo in w g . an AMS P t o h w en e P r n D = o = t E i f C x y p o t l n h ic n e i e t P c C r t o o e t d n o t c ra o c l t Layer that the first Message SPR S S o o u u r r c c e e _ C ( C E a a r P p e p R c a a e b b M i i i v l l o e i i t t d d i i e e e ) s s | & M re e q s u s e a s g t e ed & A P Po a ct s li i s c o y S n o s M u o a r n n c e a e P g x c o e i a w t r p : e a P r b D i = l i = E t i x C e p o s l n / i o c n i u e t t c C c t o o e n m d t e ra t c o t Device\nPD = Connected (SPR MODE &\nEP G R e _ t G _S e i t n _ k S _ in C k a _ p C M ap e s M s e a s g s e a | ge S m in e k s c s a a p g a e b s il e it n ie t s EP E R P R S _ o S u o r u c r e c C e r a _ e C p c a a e p b i a v il e b it d i i l ) e i t s | i e r s e q M u e e s s s t a e g d e &\nSenderResponseTimer timeout\nPE_SNK_Give_Sink_Cap\nActions on entry:\nGet present sink capabilities from Device Policy Manager\nSend Capabilities message (based on Device Policy Manager response):\n\u2022 If Get_Sink_Cap Message received send Sink_Capabilities Message.\n\u2022 In EPR_Get_Sink Cap Message received send EPR_Sink_Capabilities Message\nPower = Explicit Contract\nPD = Connected\nSource CapabilitiesMessage PE_SNK_Wait_for_Capabilities PE_SNK_Ready\nPE_SNK_Get_Source_Cap Protocol Error\n1) s received in States other than , or\nSinkRequestTimerS choonusltdit Nuotet a P.ing (Deprecated)Message PE_SNK_Ready\nWaitMessage Ping (Deprecat-\n2) eTdh)e Message be stopped if a is received in the state\nsince it represents the maximum time between requests after a which is not reset by a\nHar.d Reset Source vSafe0V vSafe5V Sink\nVBUS Source Hard Reset\n3) During a the voltage will transition to and then transition to . s need to ensure\nthat present is not indicated until after the has completed the process by detecting both of these\ntransitions.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 835\nDiscoverIdentityTimer VCONN Source Cable Plug\nGoodCRCMessage Discover IdentityCommand\n4) The is run when this is a and a PD Connection with a needs to be es-\ntabliSshinekdP iP.eS. Pneor iodicTim er has yet been received in response to aE xplicit Contract SPR. PPSAPDO\nSink SinkPPSPeriodicTimer\n5) The is only initialized and run when the present is for an .\nSinsk that do noVtP sDupMpaoyrt PPSV dCoO nNoNt need to impleVmBeUnSt the .\n6) A that is a use aFsa as tp Rrooxley Sfowr ap . Sink\n87).3.3T.3o .b1e sent once, an d P oEnly_ SreNquKir_eSd tifa rtup State is supported by the .\nPE_SNK_StartupShall SinkPolicy Engine Hard Reset\nPolicy EngineShall Protocol Layer\nbe the starting state for a either on power up or after a . On\neNnottrey: to this state the Protocol Lay er reset the Message.IDCounter MessageID Section\n6.12.2.3, \"Protocol Layer Message Reception\"\nResetting the will also reset the and stored (see\nPolicy EngineSh)a.ll PE_SNK_Discovery\nO8n.3ce. 3th.3e r.2eset process c oPmEp_leStNesK, t_hDe iscovery S tate transition to the state.\nPE_SNK_Discovery SinkPolicy Engine VBUS\nIn thPeo licy EngineShall state the PE_SNK_Wai wt_afoitrs_ Cfoarp abili ttoie bse present.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the VBUS state when:\n8.3.3.3Th.3e PE_SNK i_nWdicaaitte_sf tohrat_ Cap haabs ibleietnie dse tSetctaetde.\nPE_SNK_Wait_for_Capabilities Policy EngineShall\nSinkWaitCapTimer\nOn entry to the state the initialize and start the\nPolicy EngineSh.all PE_SNK_Evaluate_Capability\nThe\uf06c Sink SP tRr aMnosidteion to thSeo urce_CapabilitiesMessage state when:\n\uf06c The Sink is in EPR Mode and a EPR_Source_Capab ilitiesM eisss raegceeived or\nThSei nkW aisi tiCna pTimer and an Policy Engine H isa rrde cReeisveetd.\n8W.h3e.n3 t.h3e. 4 PE_S tNimKe_s Eovuta, tlhuea te_Capab iwliitlly p eSrtfoartme a .\nPE_SNK_Evaluate_Capability Sink Source_Capabilities\nMessage Source Sink Attached\nSTohuer ce state is first entered when the receives its first\nfrom the . At this point the knows that it is to and communicating with a PD capable\n. PE_SNK_Evaluate_Capability Policy EngineShall Device Policy Manager\nSource Capabilities Local Policy Device Policy ManagerShall\nOPonl iecnyt Eryn gtoin tehe state the request the Device Policy to\neMvaanluaagteer tShhea slulpplied Policy Ebnasgeinde onC apabilities M. Tishme atch indicate to the\nthe new power level required, selected from the present offered capabilities. The\nalso indicate to the a if the offered power does not meet the\ndevicPeo'lsi crye qEunigrienmeeSnhtasl.l PE_SNK_Select_Capability\nThe\uf06c transition to the Device Policy Manager state when:\n8.3.3.3A. r5esponse is re c PeiEve_dS fNroKm_ Stheel ect_Capability St.ate\nPE_SNK_Select_Capability Policy EngineShall Protocol Layer\nMessage Device Policy Manager MessageShall\nOn entry to the state the request the to send a\nresponse , based on the evaluation from the . The be one of the\nfollo\uf06cwing: Source Capabilities\nA Request from the offered .\nPage 836 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Source Capabilities\nCapability Mismatch\nA Request from the offered with an indication that another power level would be\npSrPeRfe rMroedde ( RequestMessageSh ablilt set).\nWhen in EPR Mode a EPR_Re questM essage bSeh saelnlt.\nWhePno ilnic y EngineS hana ll Sende breR seesnpto.nseTimer\nThe Policy Engine Shall initialize and runP tEh_eS NK_Transition_Sink .\nThe\uf06c Accept Mess atrgaensition to the Source state when:\nPoliAcyn E ngineS hall is received froPmE_ SthNeK _Wait_.for_Capabilities\nThe\uf06c Exp ltircaitn Csoitniotrna tcot the state when:\n\uf06c ThReerjee icst nMoe ssage in place anSodurce\n\uf06c A WaitM essage is received from theS ource or\nPoliAcy Engi neShall is received from PthEe_S NK_Re.ady\nThe\uf06c Expl ticriatn Csoitniotrna ctot the state when:\n\uf06c ThReerjee icst aMne ssage in place anSdource\n\uf06c A WaitM essage is received from theS ource or\nPoliAcy Engi neShall is received from PthEe_S NK_Ha.rd_Reset\nThe\uf06c SenderR espo ntrsaenTsiimtioenr to the state when:\n8.3.3.3A. 6 PE_SNK ti_mTeroaunt oscictuiros.n_Sink State\nPE_SNK_Transition_Sink Policy EngineShall PSTransitionTimer\nHard Reset Section 8.3.3.3.8, \"PE_SNK_Hard_Reset State\" Shall Device\nPOonl iecnyt Mrya tnoa tgheer Sink state the initialize and run the\n(timeout will lead to a see and then request the\nNote: to transition the 's power sDupevpilcye t Poo tlhicey n Mewan paogwereSrh leovuelld. Not\nIf there is no power level change the affect any change to the power\nsupply.PE_SNK_Transition_Sink Policy EngineShall Device Policy Manager\nSink\nOn exit from the state the request the to\ntransPiotiloicny tEhneg ineS'sh paollwer supply to the PnEe_wSN pKow_Reera ldeyvel.\nThe\uf06c PS_RDY Messa tgreansition to the Source state when:\nPoliAcy Engine Shall is received froPmE _tShNeK _Hard._Reset\nThe\uf06c Protoco l Error transition to the state when:\n8.3.3.3A. 7 PocEcu_rSsN. K_Ready State\nPE_SNK_Ready SinkShall Negotiation\nShall Source Device Policy Manager\nIn the state the PD be operating at a stable power level with no ongoing . It\nrespond toP Ere_SqNueKs_tRse farodmy the , events from the Policy EngineShoul.d\nOn e\uf06cntry to the Si sntkaRtee qasu tehsetT riemsuelrt of a wait the do the following:\nInitializPeE a_nSdN rKu_nR ethaed y VCO.NN Source Cable\nPlug Policy EngineShall\nOn entry to the state if this is a which needs to establish communication with a\n\uf06c, then the Disc odvoe trhIed efonltloitwyTinimg: er GoodCRCMessage Discover\nIdentityMessage\nInitialize and run the (no response yet received to\n).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 837\nPE_SNK_Ready Explicit Contract SPR PPSAPDO Policy Engine\nShall\nOn entry to the state if the current is for an , then the\n\uf06c do the following: SinkPPSPeriodicTimer\nInitializPe Ea_nSdN rKu_nR tehaed y Sink . Fast Role Swap Policy EngineShall\nOn entry to the state if the supports , then the do the\nfollo\uf06cwing: Get_Sink_CapMessage\nSend a PE_SNK_Rea dy . Atomic Message\nSequence AMS Policy EngineShall Protocol Layer Message AMS\nOn exit from the state, if the transition is as a result of a DPM request to start a new\nPolic y( Engi)n tehSehna tlhle PE_ SnNoKti_fEy vtahleu ate_Capability that the first in an will follow.\nThe\uf06c SPR Mo de traSnosiutriocne _tCoa tphaeb ilitiesMessage state when:\n\uf06c In EPR Mode and a EPR_Source_Capab ilitiesM eisss raegceeived or\nPoliIcny EngineSh aalnld an PE_SNK_Selec t_Capab iilsi tryeceived.\nThe\uf06c transition to the Device Policy Manage srtate when:\n\uf06c A nSienwk Rpeoqwueers lteTvieml iesr requested by the or\n\uf06c A SinkPPSPeriodicTi mtimereout occurs or\nPoliAcy EngineShall timeouPtE o_cScNuKrs_.Give_Sink_Cap\nThe\uf06c Get_Sink_ CapM tersasnasgietion to the state when:\n\uf06c EPR_Get_Sink _CapMes issa greeceived or\nPolicy EngineShall is recPeEiv_SeNd.K_Get_Source_Cap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the staSteo uwrhcee nC:apabilities\nPoliTcyh eE ngineShall requePstEs_ SaNn Ku_pEdPaRte_ Koef ethpe_A rleimveote .\nThe\uf06c SinkE PRKe etrpaAnlsiivteioTnim toe trhe state when:\n8.3.3.3Th.8e PE_SNK_H taimrdeo_uRtse osuett. State\nPolicy EngineShall PE_SNK_Hard_Reset\nThe\uf06c PSTrans itionT tirmanersition to the state from any state when:\n\uf06c (HardResetCounter tinmHeasr oduRt)e saentdCount\n\uf06c (Hard Reset \u2264 Device Policy Man))a |ger\n\uf06c EPR Mod reequest from or\n\uf06dIn EPR_S oanudrce_CapabilitiesMessage EPR (A)PDO\n\uf06d AnS ource_CapabilitiesMessa ge is received with an in object pGoest_itSioounrsc 1e\u2026_C7a opr\nMessage\nA is received that has not been requested using a\nPolicy EngineM.ay PE_SNK_Hard_Reset\nThe\uf06c SinkWait CapT timraenrsition to the state from any state when:\nNote: SinkWaitCap tiTmimese orut HardResetCounter nHardResetCount\nSinkShall Source\nIf the times out and the is greater than the\nNote: HardR aessseutmCoeu thnatet rthe is non-responsive.Detach\nThe is reset on a power cycle or .\nPage 838 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPE_SNK_Hard_Reset Policy EngineShall Hard ResetSignaling\nHardResetCounter\nOn entry to the state the request the generation of\nby thPeo PliHcyY E Lnagyienre aSnhda lilncrement the PE_SNK_Transi.tion_to_default\nThe\uf06c Hard Reset transition to the state when:\n8.3.3.3Th.9e i sP cEom_SpNleKte._Transition_to_default State\nPolicy EngineShall PE_SNK_Transition_to_default\nThe\uf06c Hard Res etSign taralinnsgition from any state to state when:\nHard ResetS ignaling is detected. Policy EngineShall\nPE_SNK_Transition_to_default PE_SNK_Hard_Reset\nWhen is received or transmitted then the transition from any state to\nPE_SNK_Transi.t iTohni_st sot_adteef caaunl talso be entPeorleicdy f Eronmgi ntheeS hall state.\nOn entr\uf06dy to the Device Policy Manage srtate the SinkShall :\n\uf06d indicate to the that the transition to default\n\uf06d request a resDeetv oicfe t hPeo llioccya Ml haanradgwerare Port Data Role UFP\nPolicy ErnegqiuneesSt hthaell PE_SN thKa_tS tthaert up is set to .\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Sink state when:\n8.3.3.3Th.1e 0 PE_SNK i_nGdiicvaete_sS tihnakt t_hCe ap S htaast reeached the default level.\n\uf06c PE_SNK_Give_Sink_Cap Policy EngineShall Device Policy Manager\nPolicy EngineShall Protocol Layer\nSOinn ken_Ctrayp taob tihliet iesMessage state the P olicy ErenqguineestS thhael l\nfor the current system capabilities. The then request the to send a\n\uf06c Sink_Capabilitie sMessag ceontainingG teht_eSsien cka_pCaabpilMitieesss.a Tghee send:\n\uf06c A EPR_Sink_Capab ilitiesMe wsshaegne a EPR_Ge t_Sink_Ca isp rMeceessivaegde or\nPoliAcyn E ngineShall PE _wSNheKn_ Rae ady is received.\nThe\uf06c Sink_ Capab tirlaitniesistiMone stsoa gthee state when:\n8.3.3.3Th.1e 1 PE_S NK_EP hRa_s Kbeeeenp su_cAcelisvsfeully sent.\nPE_SNK_EPR_Keep_Alive Policy EngineShall EPR_KeepAliveMessage\nSenderResponseTimer\nOn entry to the State the send an and\ninitiaPloizliec ya nEdn gruinne tShhea ll PE_S.NK_Ready\nThe\uf06c EPR_Ke epAliv ter_aAncskitiMones tsoa gthee state when:\nPoliAcy EngineShall isP rEe_cSeNivKe_dH.ard_Reset\nThe\uf06c Sende rRes ptroannsseiTtiiomne tro the state when:\n8.3.3.3Th.1e 2 PE_SNK_ Gtimete_s Sooutu. rce_Cap State\n\uf06c PE_SNK_Get_Source_Cap Policy EngineShall Protocol Layer\nSource CapabilitiesMessage Source Capabilities Policy EngineShall\nOn entry to the state the request the to send\na get in order to retrieve the . The\n\uf06c seGnedt:_Source_CapMessage Device Policy Manager\n\uf06c A EPR_Get_Sourc e_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRb iCliatipeasb oilrities\nPoliAcyn E ngineShall Sen dwehreRne sthpeo nseTimer requests .\nThe then start the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 839\nPE_SNK_Get_Source_Cap Policy EngineShall Device Policy Manager\nOn exit from the State the inform the of the\noutcoPmoliec y(c EanpgaibnielitSiheas lolr response timeouPtE)_.SNK_Ready\nThe\uf06c EPR Mo de transSitoiounrc teo C tahpea bilities state when: Source_CapabilitiesMessage\nIn and SPR were requested and a is received\n\uf06c orSPR Mode Source Capabilities EPR_Source_CapabilitiesMessage\nIn and EPR were requested and an is\n\uf06c receiSveendd oerrResponseTimer\nPoliTcyh eE ngineShall timePsE o_uStN.K_Evaluate_Capability\nThe\uf06c SPR Mo de transSitoiounrc teo C tahpea bilities S Sotuartcee w_Chaepna:bilitiesMessage\nIn and SPR were requested and a is received\n\uf06c orEPR Mode Source Capabilities EPR_Source_CapabilitiesMessage\nIn and EPR were requested and an is\nreceived.\nPage 840 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.4 SOP Soft Reset and Protocol Error State Diagrams\n8.3.3.4.1 SOP Source Port Soft Reset and Protocol Error State Diagram\nFigure 8.134, \"SOP Source Port Soft Reset and Protocol Error State Diagram\"\nPolicy Engine Source Port Soft Reset Port Partner SOP\nbelow shows the state diagram for the\nin a when performing a of its i.e., using . The following sections\ndescribe operatioFni ginu reea c8h.1 o3f 4th SeO sPta Steosu.rce Port Soft Reset and Protocol Error State Diagram\nAccept message\nReceived from SOP\nPE_SRC_Send_Capabilities PE_SRC_Ready\nAccept message In Explicit Contract &\nSent to SOP Protocol Error2before first Message\nin AMS sent (no GoodCRC received)\nSenderResponseTimer\nPE_SRC_Soft_Reset Transmission Tr T a i n m sm eo is u s t i | on PE_SRC_Send_Soft_Reset\nA R c e t s i e o t n P s r o o n to e c n o t l r L y a : yer fro E m rr o P r r o in to d c ic o a l t L i a o y n e r PE_SRC_Hard_Reset fro E m rr o P r r o in to d c ic o a l t L i a o y n e r A R Se c e n t s i e d o t n S P s o r f o o t n t R o e e c n s o e t l r t L y m a : y e e s r sage to SOP\nSend Accept message to SOP Initialize and run SenderResponseTimer\nPower = DefauIt/Implicit or Power = DefauIt/Implicit or Explicit Contract\nExplicit Contract PD = Connected\nPD = Connected\nMessage not sent after retries on SOP (no GoodCRC received)1 |\nSoft Reset message Protocol Error2on SOP during AMS |\nReceived on SOP (Not in Explicit Contract &\nProtocol Error2on SOP before first Message\nin AMS sent (no GoodCRC received) |\n(SPR Mode & EPR Mode Entry process fails)3\n1) Excludes the Soft_ResetMessage itself.\n2) An Unrecognized or Unsupported Message received on SOP will result in a Not_SupportedMessage response being generated on SOP(see Section 6.3.16 \u201cNot_Supported Message\u201d).\n3) See Section 6.4.10.1 \u201cProcess to enter EPR Mode\u201dfor the conditions when a Soft_ResetMessage Shallbe sent by the Source during the EPR Mode entry process.\n8.3.3.4.1.1 PE_SRC_Send_Soft_Reset State\nPE_SRC_Send_Soft_Reset Shall\nThe\uf06c Protocol Error SO sPtate be enterePdr fortoomco al nLya ysetarte when: Non-interruptibleAMS Section\n6.8.1, \"Soft Reset and Protocol Error\"\nA on is detected by the during a (see\n\uf06c Message ) or Sink\n\uf06c A has nEoxt pbleiceint Csoennttr aafctter retPrireost otoc otlh Ee rror or SOP AMS\nMessage AMS Message\nGWohoednC nRoCt Mine assna ge and s occurred on during any where the first\nin the has not yet been sent i.e., an unexpected is received instead of the expected\n\uf06c S PR Mode responseE oPrR Mode\nWhen in and the entry process fails.\nThe\uf06c main excSeoputricoens to this PruEl_eS RarCe_ Swehnedn_:C apabilities Source_CapabilitiesMessage\nSOP GoodCRCMessage Source Attached\nTFihgeu re 8.13 2is, \"iSno tuhrec e Port State Diagram\" state, there iPsE a_ SRC_Discovery sending\nfSaeiclutiroen o 8n.3 .3.2. 2(w, \"iPthEo_SuRt Ca_ Discovery State\" ) and the is not presently (as indicated in\n). In this case, the state is entered (see\n\uf06c ). Explicit Contract Negotiated Section 8.3.3.2,\n\"Policy Engine Source Port State Diagram\" Hard ResetSignaling\nWhen the voltage is in transition due to a new being (see\n\uf06c Power Role Swap ). In this case Section w8.3il.l3 b.1e9 g.3e,n \"eProaltiecyd .Engine\nin Source to Sink Power Role Swap State Diagram\" Section 8.3.3.19.4, \"Policy Engine in Sink to Source\nDPouwrienrg R ao le Swap State Dia wgrhaemn\" the power supUpSlyB i Ts yinp et-rCanEsrirtoiorn R (esceoev ery\nand\n\uf06c Data Role Swap ). In this case Port Data Role will be trigSgeectrieodn d6i.r2e.1c.t1ly.6.,\n\"Port Data Role\" USB Type-CError Recovery\nDuring a when there is a mismatch in the field (see\n). In this case will be triggered directly.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 841\nProtocol Error Shall Not Soft Reset Shall\nPE_SRC_Ready Message\nPE_SRC_Readys occurring in the following situations lead to a , but result in a transition\nto the state where the received will be handled as if it had been received in the\n\uf06c stateE:xplicit Contract Protocol Error SOP AMS\nMessage AMS Message\nGWohoednC iRnC aMn essage and s occurred on during any where the first\nin the has not yet been sent i.e., an unexpected is received instead of the expected\nPE _SRC_Sen rdes_Spoofnts_Re.eset Policy EngineShall SOPProtocol Layer\nSoft Reset Shall Soft_ResetMessage Sink SOP\nOSenn ednetrrRy etsop tohne seTimer state the request the to perform a\n, then send a to the on , and initialize and run the\nPolicy EngineShall. PE_SRC_Send_Capabilities\nThe\uf06c Accept Mess atrgaensition to the SOP state when:\nPoliAcyn E ngineS hall has been recePivEe_SdR oCn_ Hard. _Reset\nThe\uf06c SenderR espo ntrsaenTsiimtioenr to the state when:\n\uf06c A Protocol Layer timeout occurs.\n8.3.3.4O.1r .t2he P Ein_dSicRaCte_sS tohfatt_ aR terasnestm Sistsaioten error has occurred.\nPE_SRC_Soft_Reset Shall Soft_ResetMessage SOP\nProtocol Layer\nThe state be entered from any state when a is received on from\nthe PE_.SRC_Soft_Reset Policy EngineShall SOPProtocol Layer Shall\nProtocol Layer AcceptMessage SOP\nOn entry to the state the reset the and then request\nthe Policy EngineS thoa slelnd an PE_S RoCn_ Send. _Capabilities Section 8.3.3.2.3,\n\"PE_SRC_Send_Capabilities State\"\nThe transition to the state (see\n\uf06c AcceptMessage ) when: SOP\nPoliTcyh eE ngineSh all has been senPtE o_nSR C_H.ard_Reset\nThe\uf06c Proto col La ytrearnsition to the state when:\nThe indicates that a transmission error has occurred.\nPage 842 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.4.2 SOP Sink Port Soft Reset and Protocol Error State Diagram\nFigure 8.135, \"Sink Port Soft Reset and Protocol Error Diagram\" Policy Engine\nSink Port Soft Reset Port Partner SOP\nbelow shows the state diagram for the\nin a when performing a of its i.e., using . The following sections describe\noperation in each of theF sitgauterse. 8.135 Sink Port Soft Reset and Protocol Error Diagram\nAccept Message\nReceived on SOP\nPE_SNK_Wait_for_Capabilities PE_SNK_Ready\nAccept Message In Explicit Contract &\nSent to SOP Protocol Error2on SOP before first Message\nin AMS sent (no GoodCRC received)\nSenderResponseTimer\nPE_SNK_Soft_Reset Transmission Tr T a i n m sm eo is u s t i | on PE_SNK_Send_Soft_Reset\nA R Se c e n t s i e d o t n A S s c O c o P e n p P e t r n M o t t r e o y s c : s o a l g L e a t y o e r SOP fro E m rr o P r r o in to d c ic o a l t L i a o y n e r PE_SNK_Hard_Reset fro E m rr o P r r o in to d c ic o a l t L i a o y n e r A R S In e c e i n t s t i i e d o a t n S l S i s o z O f e o t P n a R P n e e r d n s o e t r t r t u o y M c n : o e S l s e L s n a a d y g e e e r r t R o e S s O po P nseTimer\nPower = DefauIt/Implicit or Power = DefauIt/Implicit or Explicit Contract\nExplicit Contract PD = Connected\nPD = Connected\nMessage not sent after retries on SOP (no GoodCRC received)1 |\nSoft Reset Message Protocol Error2on SOP during AMS |\nReceived on SOP (Not in Explicit Contract &\nProtocol Error on SOP before first Message\nin AMS sent (no GoodCRC received) |\n(SPR Mode & EPR Mode Entry process fails)3\n1) Excludes the Soft_ResetMessage itself.\n2) An Unrecognized or Unsupported Message will result in a Not_SupportedMessage response being generated (see Section 6.3.16 \u201cNot_Supported Message\u201d).\n3) See Section 6.4.10.1 \u201cProcess to enter EPR Mode\u201dfor the conditions when a Soft_ResetMessage Shallbe sent by the Sink during the EPR Mode entry process.\n8.3.3.4.2.1 PE_SNK_Send_Soft_Reset State\nPE_SNK_Send_Soft_Reset Shall\nThe\uf06c Protocol Error SO sPtate be enterePdr fortoomco al nLay ysetrate when: AMS Section 6.8.1, \"Soft Reset\nand Protocol Error\"\nA on is detected by the during an (see\n\uf06c Message ) or Sink\n\uf06c A has nEoxt pbleiceint Csoennttr aafctter retPrireost otoc otlh Ee rror or SOP AMS\nMessage AMS Message\nGWohoednC nRoCt Mine assna ge and s occurred on during any where the first\nin the has not yet been sent i.e., an unexpected is received instead of the expected\n\uf06c S PR Mode responseE.PR Mode\nWhen in and the entry process fails.\nThe\uf06c main exceptions to this rule are when: Explicit Contract Negotiated Section 8.3.3.3,\n\"Policy Engine Sink Port State Diagram\" Hard Reset\nWhen the voltage is in transition due to a new being (see\n\uf06c Power Role Swap ). In this case a will Sbeec tgieonne 8r.a3t.3ed.1.9.3, \"Policy Engine\nin Source to Sink Power Role Swap State Diagram\" Section 8.3.3.19.4, \"Policy Engine in Sink to Source\nDPouwrienrg R ao le Swap State Dia wgrhaemn\" the power supplHya irsd i nR tersaentsition (see\nand\n\uf06c Data Role Swap ). IDnF tPhisU cFaPseD aa ta Role will be triggered directUlyS.B Type-CError\nRecovery\nDuring a when the / s are changing. In this case\nNote: Protoco wl Eilrl rboer triggered directly. Shall Not Soft Reset Shall\nPE_SNK_Ready Message\ns PoEcc_SuNrrKin_Rg eina dthye following situations lead to a , but result in a\ntransition to the state where the received will be handled as if it had been\n\uf06c received inE xtphleic it Contract sPtraotteo:col Error SOP AMS\nMessage AMS Message\nGWohoednC iRnC aMn essage and s occurred on during any where the first\nin the has not yet been sent i.e., an unexpected is received instead of the expected\nresponse.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 843\nPE_SNK_Send_Soft_Reset Policy EngineShall SOPProtocol Layer\nSoft Reset Shall Soft_ResetMessage SOP Source\nOSenn ednetrrRy etsop tohne seTimer state the request the to perform a\n, then send a on to the , and initialize and run the\nPolicy EngineShall. PE_SNK_Wait_for_Capabilities\nThe\uf06c Accept Mess atrgaensition to the SOP state when:\nPoliAcyn E ngineS hall has been recePivEe_SdN oKn_ Har.d_Reset\nThe\uf06c SenderR espo ntrsaenTsiimtioenr to the state when:\n\uf06c A Protocol Layer timeout occurs.\n8.3.3.4O.2r .t2he P Ein_dSicNaKte_sS thoaftt _aR treasnesmt Sistsaiotne error has occurred.\nPE_SNK_Soft_Reset Shall Soft_ResetMessage SOP\nProtocol Layer\nThe state be entered from any state when a is received on from\nthe PE_.SNK_Soft_Reset Policy EngineShall SOPProtocol Layer Shall\nProtocol Layer AcceptMessage SOP\nOn entry to the state the reset the and then request\nthe Policy EngineS thoa slelnd an PE_S NoKn _Wa.it_for_Capabilities\nThe\uf06c Accep tMes staragnesition to the SOP state when:\nPoliTcyh eE ngineSh all has been senPtE o_nSN K_H.ard_Reset\nThe\uf06c Proto col La ytrearnsition to the state when:\nThe indicates that a transmission error has occurred.\nPage 844 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.5 Data Reset State Diagrams\n8.3.3.5.1 DFP Data_Reset Message State Diagrams\nFigure 8.136, \"DFP Data_Reset Message State Diagram\" Data_ResetMessage\nDFP\nshows the state diagram for a sent or\nreceived by a . Figure 8.136 DFP Data_Reset Message State Diagram\nProtocol Error\nData_Reset Message\nData Reset request from DPM PE_SRC_Ready or received\nPE_SNK_Ready (DFP)\nSenderResponseTimer Timeout | PE_DDR_Send_Data_Reset PE_DDR_Data_Reset_Received\nProtocol Error\nErrorRecovery Actions on entry: Actions on entry:\nSend Data_Reset Message Inform Device Policy Manager of\nInitialize and start SenderResponseTimer Data_Reset Message\nSend Accept Message\nActions on exit:\nInitialize and start DataResetFailTimer1 Accept Message Received & Actions on exit:\nVCONN Source Initialize and start DataResetFailTimer1\nPower = Explicit Contract\nPD = connected\nPower = Explicit Contract\nVCONNDischargeTimer Timeout | PD = connected\nProtocol Error\nAccept Message Received &\nNot VCONN Source Accept Message Sent &\nNot VCONN Source\nPE_DDR_Wait_for_VCONN_Off\nActions on entry:\nInitialize and start VCONNDischargeTimer\nPower = Explicit Contract\nPD = connected\nPS_RDY Received\nPE_DDR_Perform_Data_Reset\nActions on entry:\nDataResetFailTimer Timeout | Tell Device Policy Manager to perform Data Reset\nProtocol Error\nA S S t e c o n t p i d o D n D a s a t o t a a n R _ R e e x s e e i s t t e : F t a _C il o T m im p e le r te Message Accep V t C O M N e N s S sa o g u e r c S e ent &\nPower = Explicit Contract\nPD = connected\nData Reset process is complete\nPE_SRC_Ready or\nPE_SNK_Ready (DFP)\n1) Note that the DataResetFailTimer Shallcontinue to run in every state until it is stopped or times out.\n8.3.3.5.1.1 PE_DDR_Send_Data_Reset State\nPE_DDR_Send_Data_Reset Shall PE_SRC_Ready PE_SNK_Ready\nDevice Policy Manager\nThe State be entered from the or State when\nrequested by thPe E_DDR_Send_Data_Res.et Policy EngineShall Protocol Layer\nData_ResetMessage SenderResponseTimer\nOn entry to the State the request the to send a\nPE_D aDndR _tSheennd i_nDitaiataliz_Re easnedt start the Policy EngineShall .\nDataResetFailTimer\nOn exit from the State the initialize and start the\nPolicy EngineSha.ll PE_DDR_Perform_Data_Reset\nThe\uf06c Accept Mess atrgaensition to the State when:\n\uf06c An DFP has beVeCnO NrNe cSeoiuvercde and\nPoliTcyh eE ngin eisS phraelslently the PE_DD. R_Wait_For_VCONN_Off\nThe\uf06c Accept Mess atrgaensition to the State when:\nAn has been received and\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 845\n\uf06c DFP VCONN Source\nPoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecover.y\nThe\uf06c SenderR espo ntrsaenTsiimtioenr to when:\n\uf06c A Protocol Error timeout occurs or\n8.3.3.5A.1 .2 oc c PurEs_.DDR_Data_Reset_Received State\nPE_DDR_Data_Reset_Received Shall PE_SRC_Ready PE_SNK_Ready\nData_ResetMessage\nThe State be entered from the or State when a\nPE_D DisR r_eDcaetivae_dR.eset_Received Policy EngineShall Device Policy Manager\nShall AcceptMessage\nOn entry to the State the inform the and\nthen send aPnE _DDR_D ata_Res.et_Received Policy EngineShall\nDataResetFailTimer\nOn exit from the State the initialize and start the\nPolicy EngineSha.ll PE_DDR_Perform_Data_Reset\nThe\uf06c Accept Mess atrgaensition to the State when:\n\uf06c An DFP has beVeCnO NsNe nSto aunrcde\nPoliTcyh eE ngin eisS phraelslently the PE_DD. R_Wait_For_VCONN_Off\nThe\uf06c Accept Mess atrgaensition to the State when:\n\uf06c An DFP has been VseCnONt Nan Sdource\nPoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecover.y\nThe\uf06c Protoco l Error transition to when:\n8.3.3.5A.1 .3 oc c PurEs_.DDR_Wait_For_VCONN_Off State\nPE_DDR_Wait_For_VCONN_Off Policy EngineShall\nVCONNDischargeTimer\nOn entry to the State the initialize and start the\nPolicy EngineShall. PE_DDR_Perform_Data_Reset\nThe\uf06c PS_RDY Messa tgreansition to the State when:\nPoliAcy Engine Shall is receivedE.rrorRecovery\nThe\uf06c VCONN Disch tarargnesiTtiiomne tro when:\n\uf06c ThPer otocol Error has timed out or\n8.3.3.5A.1 .4 oc c PurEs_.DDR_Perform_Data_Reset State\nPE_DDR_Perform_Data_Reset Policy EngineShall Device Policy Manager\nData Reset Section 6.3.14, \"Data_Reset Message\"\nOn entry to the State the request the to\ncomplete the PE_DDR p_Proecrefossr mas_ Ddeaftian_eRde isne t Policy EngineShall . DataResetFailTimer\nData_Reset_CompleteMessage\nOn exit from the State the stop the and\nsendP ao licy EngineShall . PE_SRC_Ready PE_SNK_Ready DFP\nPower Role\nThe transition back to either the or State depending on the 's\n\uf06c when: Data Reset Section 6.3.14, \"Data_Reset Message\"\nPoliTcyh eE nDgPinMe iSnhdaiclaltes that Error Rperococevsesr yis complete (see ).\nThe\uf06c DataR esetF tarailnTsiimtioenr to when:\n\uf06c ThPer otocol Error times out\nA occurs.\nPage 846 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.5.2 UFP Data_Reset Message State Diagrams\nFigure 8.137, \"UFP Data_Reset Message State Diagram\" Data_ResetMessage\nUFP\nshows the state diagram for a sent or\nreceived by a . Figure 8.137 UFP Data_Reset Message State Diagram\nProtocol Error\nData Reset request from DPM PE_SRC_Ready or Data_R re e c s e e i t v M ed essage\nPE_SNK_Ready (UFP)\nSenderRe P s r p o o t n o s c e o T l i E m rr e o r r Timeout | PE_UDR_Send_Data_Reset PE_UDR_Data_Reset_Received\nErrorRecovery A S In e c i n t t i i d o a n D li s z a e o ta n a _ n R e d n e s t r r e u y t n : M S e e s n s d a e g r e ResponseTimer Accept V M C e O s N s N a g S e o u R r e c c e eived & A I S n e c f n t o i d o r m n A s c D c o e e n p v e t ic n M e t r e P y s o : s l a ic g y e Manager of Data_Reset Message\nActions on exit:\nInitialize and run DataResetFailUFPTimer2 Actions on exit:\nInitialize and run DataResetFailUFPTimer2\nPower = Explicit Contract\nPD = connected Power = Explicit Contract\nPD = connected\nAccept Message Received &\nNot VCONN Source PE_UDR_Turn_Off_VCONN\nProtocol Error A Te c l t l i o D n e s v o ic n e e P n o t l r ic y y : Manager to turn off VCONN Accep V t C O M N e N s S sa o g u e r c S e ent &\nPower = Explicit Contract\nPD = connected\nVCONN Off1\nPE_UDR_Send_Ps_Rdy\nProtocol Error Actions on entry:\nSend PS_RDY Message\nPower = Explicit Contract\nPD = connected\nPS_RDY Message Sent\nPE_UDR_Wait_For_Data_Reset_Complete\nActions on entry:\nWait for Data_Reset_Complete Message\nAccept Message Sent &\nDataResetF P a r i o lU to F c P o T l i E m rr e o r r Timeout2| A St c o t p io D n a s t o a n R e e x se it t : FailUFPTimer2 Not VCONN Source\nPower = Explicit Contract\nPD = connected\nData_Reset_Complete Message\nreceived\n1) VCONNShallbe fully discharged see Section 7.1.15 \u201cVconn Power Cycle\u201d.\n2) Note that the DataResetFailUFPTimerShallcontinue to run in every state until it is stopped or times out.\nPE_SRC_Ready or\nPE_SNK_Ready (UFP)\n8.3.3.5.2.1 PE_UDR_Send_Data_Reset State\nPE_UDR_Send_Data_Reset Shall PE_SRC_Ready PE_SNK_Ready\nDevice Policy Manager\nThe State be entered from the or State when\nrequested by thPe E_UDR_Send_Data_Res.et Policy EngineShall Protocol Layer\nData_ResetMessage SenderResponseTimer\nOn entry to the State the request the to send a\nPE_U aDndR _tSheennd i_nDitaiatali_zRe easnedt run the Policy EngineShall .\nDataResetFailUFPTimer\nOn exit from the State the initialize and run the\nPolicy EngineShall . PE_UDR_Turn_Off_VCONN\nThe\uf06c Accept Mess atrgaensition to the State when:\n\uf06c An UFP has beVeCnO NrNe cSeoiuvrecde and\nPoliTcyh eE ngin eisS phraelslently the PE_UD. R_Wait_For_Data_Reset_Complete\nThe\uf06c Accept Mess atrgaensition to the State when:\n\uf06c An UFP has been VreCcOeNiNv eSdo uarncde\nPoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecove.ry\nThe transition to when:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 847\n\uf06c SenderResponseTimer\n\uf06c ThPer otocol Error has timed out or\n8.3.3.5A.2 .2 oc c PurEs_.UDR_Data_Reset_Received State\nPE_UDR_Data_Reset_Received Shall PE_SRC_Ready PE_SNK_Ready\nData_ResetMessage\nThe State be entered from either the or State\nwhen a PE_U DR_Dat ais_ Rreecseeitv_Rede.ceived Policy EngineShall Device Policy Manager\nShall AcceptMessage\nOn entry to the State the inform the and\nthen send aPnE _UDR_D ata_Res.et_Received Policy EngineShall\nDataResetFailUFPTimer\nOn exit from the State the initialize and run the\nPolicy EngineShall . PE_UDR_Turn_Off_VCONN\nThe\uf06c Accept Mess atrgaensition to the State when:\n\uf06c An UFP has beVeCnO NsNe nSto aunrcde\nPoliTcyh eE ngin eisS phraelslently the PE_UD. R_Wait_For_Data_Reset_Complete\nThe\uf06c Accept Mess atrgaensition to the State when:\n\uf06c An UFP has been VseCnONt Na nSdource\nPoliTcyh eE ngin eisS nhoatl lpresently the ErrorRecove.ry\nThe\uf06c Protoco l Error transition to when:\n8.3.3.5A.2 .3 oc c PurEs_.UDR_Turn_Off_VCONN State\nPE_UDR_Turn_Off_VCONN Policy EngineShall Device Policy Manager\nVCONN\nOn entry to the State the request the to turn off\nPo.licy EngineShall PE_UDR_Send_Ps_Rdy\nThe\uf06c transitioVnC OtoN Nthe VCO NSNtate when: [USB Type-C 2.4]\nPoliTcyh eE nDgPinMe iSnhdaiclaltes that E rhraosr bReeecno vtuerrnyed off ( below vRaReconnect see ).\nThe\uf06c Protoco l Error transition to when:\n8.3.3.5A.2 .4 oc c PurEs_.UDR_Send_Ps_Rdy State\nPE_UDR_Send_Ps_Rdy Policy EngineShall PS_RDYMessage\nOn ePnotrliyc yto E tnhgei neShall StaPtEe_ tUhDe R_Wait_For_D ata_R seesnedt_ aC omplete .\nThe\uf06c PS_RD YMe stsraagnesition to the State when:\nPoliTcyh eE ngineSh all has beeEnr sreonrtR.ecovery\nThe\uf06c Protoco l Error transition to when:\n8.3.3.5A.2 .5 oc c PurEs_.UDR_Wait_For_Data_Reset_Complete State\nPE_UDR_Wait_For_Data_Reset_Complete Policy EngineShall\nData_Reset_CompleteMessage\nOn entry to the State the wait for the\nPE_UD R_Wait_.For_Data_Reset_Complete Policy EngineShall\nDataResetFailUFPTimer\nOn exit from the State the stop the\nPolicy EngineShall . PE_SRC_Ready PE_SNK_Ready UFP\nPower Role\nThe transition back to either the or State depending on the 's\nwhen:\nPage 848 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Data_Reset_CompleteMessage\nPoliTcyh eE ngineShall ErrorR iesc roevceeriyved.\nThe\uf06c DataR esetF tarailnUsFitPioTnim toe r when:\n\uf06c ThPer otocol Error times out or\nA occurs.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 849\n8.3.3.6 Not Supported Message State Diagrams\n8.3.3.6.1 Source Port Not Supported Message State Diagram\nFigure 8.138, \"Source Port Not Supported Message State Diagram\" Not_Supported\nMessage Source Port\nshows the state diagram for a\nsent or receiveFdig buyr ea 8.138 Sour.ce Port Not Supported Message State Diagram\nPE_SRC_Chunk_Received\nChunkingNotSupportedTimer\ntimeout Actions on entry:\nStart ChunkingNotSupportedTimer\nPower = Explicit Contract\nPD = connected\nProtocol Error1&\nChunk from\na multi-Chunk Message2\nProtocol Error1&\nnot a Chunk from\nPE_SRC_Send_Not_Supported a multi-Chunk Message Not_Sup r p ec o e r i t v e e d d M 1 essage PE_SRC_Not_Supported_Received\nActions on entry: PE_SRC_Ready Actions on entry:\nSend Not_Supported Message Not_Supported Inform Device Policy Manager of Not_Supported Message\nMessage sent DPM informed\nPower = Explicit Contract\nPD = connected Power = Explicit Contract\nPD = connected\n1) Transition as a result of an unsupported Message being received in the PE_SRC_Readystate directly\n(see also Section 8.3.3.4.1 \u201cSOP Source Port Soft Reset and Protocol Error State Diagram\u201d).\n2) Transition can only occur where a manufacturer has opted not to implement a Chunking state machine (see Section 6.12.2.1 \u201cProtocol Layer Chunking\u201d)\nand is communicating with a system which is attempting to send it Chunks.\n8.3.3.6.1.1 PE_SRC_Send_Not_Supported State\nPE_SRC_Send_Not_Supported Shall PE_SRC_Ready\nProtocol Error AMS Unsupported Message\nTPhEe_S RC_Ready state bCe heunntekred from thCeh unkMessage state eSitehcetiro ans 6 t.h12e .r2e.1s,u \"lPt rooft ao col\nLayer Chunkin gr\"eceiveSde cdtuiornin 8g. 3a.n3 .i4n.1te, r\"rSuOpPt iSbolue rce P oorrt a Sso aft r Reessueltt oafn adn P rotocol Error State Di abgerianmg r\"eceived in the\nstate directly except for the first in a multi- (see also\nP Ean_SdR C_Send_Not_Supported PE_SRC_Ready Policy Engine)S.hall\nProtocol Layer Not_SupportedMessage\nOn entry to the state (from the state) the request\nthe Policy EngineS thoa slelnd a . PE_SRC_Ready Figure 8.132, \"Source Port State\nDiagram\"\nThe transition back to the previous state ( see\n\uf06c ) wNhoetn_:SupportedMessage\n8.3.3.6T.1he.2 PE_SRC h_Naso bte_eSnu spupccoersstfeudlly_R seencte. ived State\nPE_SRC_Not_Supported_Received Shall PE_SRC_Ready Not_Supported\nMessage\nThe state be entered from the state when a\nis receiPvEed_S.RC_Not_Supported_Received Policy EngineShall Device Policy Manager\nOn ePnotrliyc yto E tnhgei neShall state the PE_SRC_Re ady inFfoigrmur eth 8e.1 32, \"Source Port State .\nDiagram\"\nThe transition back to the previous state ( see\n\uf06c ) wDheevni:ce Policy Manager\n8.3.3.6T.1he.3 PE_SR hCa_sC bheeunn iknf_oRrmeceed.ived State\nPE_SRC_Chunk_Received Shall PE_SRC_Ready Unsupported\nMessage PE_SRC_Ready Message Chunk ChunkMessage\nThe Section 6.12.2.1, \"Pro tsotacotel Layer bCeh uennkteinrge\"d fromS etchteio n 8.3.3.4.1, \"SOP s tSaotuer acse aP orerts uSlotf ot fR aense t and Protocol\nError Sta btee iDniga rgercaemiv\"ed in the state directly where the is a in a multi-\n(see also and\n).\nPage 850 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPE_SRC_Chunk_Received PE_SRC_Ready Policy EngineShall\nChunkingNotSupportedTimer\nOn entry to the state (from the state) the initialize and\nrun tPhoel icy EngineShall PE._SRC_Send_Not_Supported\nThe\uf06c Chun kingN tortaSnuspitpioonrt teod Timer when:\nThe has timed out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 851\n8.3.3.6.2 Sink Port Not Supported Message State Diagram\nFigure 8.139, \"Sink Port Not Supported Message State Diagram\" Not_Supported\nMessage Sink Port\nshows the state diagram for a\nsent or receivedF ibgyu are 8.139 S.ink Port Not Supported Message State Diagram\nPE_SNK_Chunk_Received\nChunkingNotSupportedTimer\ntimeout Actions on entry:\nStart ChunkingNotSupportedTimer\nPower = Explicit Contract\nPD = connected\nProtocol Error1&\nChunk from\na multi-Chunk Message2\nProtocol Error1&\nnot a Chunk from\nPE_SNK_Send_Not_Supported a multi-Chunk Message Not_Sup r p ec o e r i t v e e d d M 1 essage PE_SNK_Not_Supported_Received\nActions on entry: PE_SNK_Ready Actions on entry:\nSend Not_Supported Message Not_Supported Inform Device Policy Manager of Not_Supported Message\nMessage sent DPM informed\nPower = Explicit Contract\nPD = connected Power = Explicit Contract\nPD = connected\n1) Transition as a result of an unsupported Message being received in the PE_SNK_Readystate directly\n(see also Section 8.3.3.4.2 \u201cSOP Sink Port Soft Reset and Protocol Error State Diagram\u201d).\n2) Transition can only occur where a manufacturer has opted not to implement a Chunking state machine (see Section 6.12.2.1 \u201cProtocol Layer Chunking\u201d)\nand is communicating with a system which is attempting to send it Chunks.\n8.3.3.6.2.1 PE_SNK_Send_Not_Supported State\nPE_SNK_Send_Not_Supported Shall PE_SNK_Ready\nProtocol Error AMS Unsupported Message\nTPhEe_S NK_Ready state beC ehnutnekred from theC hunkMessage state eitSheecrt iaosn t h6e.1 r2e.2s.u1l,t of a\n\"Protocol Laye rr eCcheuivnekdin dgu\"ring aSnec itniotenr 8ru.3p.3ti.b4l.1e, \"SOP o Sro ausr ac er ePsourltt Soof fatn R eset and Protocol Erro br eSitnagt er eDcieaigvreadm in\" the\nstate directly except for the first in a multi- (see also\nPE_SNK_Se nadn_dN ot_Supported PE_SNK_Ready Policy EngineShall ).\nProtocol Layer Not_SupportedMessage\nOn entry to the state (from the state) the request\nthe Policy EngineS thoa slelnd a . PE_SNK_Ready Figure 8.133, \"Sink Port State\nDiagram\"\nThe transition back to the previous state ( see\n\uf06c ) wNhoetn_:SupportedMessage\n8.3.3.6T.2he.2 PE_SNK h_aNs obte_eSnu spucpcoesrstfeuldly_ Rseenct.eived State\nPE_SNK_Not_Supported_Received Shall PE_SNK_Ready\nNot_SupportedMessage\nThe state be entered from the state when a\nPE_SNK_ Niso rte_Scueipvpeodr.ted_Received Policy EngineShall Device Policy Manager\nOn ePnotrliyc yto E tnhgei neShall state the PE_SNK_Re ady inFfoigrmur eth 8e.1 33, \"Sink Port State .\nDiagram\"\nThe transition back to the previous state ( see\n\uf06c ) wDheevni:ce Policy Manager\n8.3.3.6T.2he.3 PE_SN hKas_ Cbeheunn inkf_oRrmeecde.ived State\nPE_SNK_Chunk_Received Shall PE_SNK_Ready Unsupported\nMessage PE_SNK_Ready Message Chunk ChunkMessage\nThe Section 6.12.2.1, \"Pro tsotcaotel L ayer Cbheu ennktienrge\"d fromSe tchteio n 8.3.3.4.1, \"SOP s Stoatuer caes Pao rrets Suoltft o Rf easne t and Protocol\nError Sta btee iDniga rgercaemiv\"ed in the state directly where the is a in a multi-\n(see also and\nPE_SN)K._Chunk_Received PE_SNK_Ready Policy EngineShall\nChunkingNotSupportedTimer\nOn entry to the state (from the state) the initialize and\nrun tPhoel icy EngineShall PE._SNK_Send_Not_Supported\nThe transition to when:\nPage 852 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c ChunkingNotSupportedTimer\nThe has timed out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 853\n8.3.3.7 Alert State Diagrams\n8.3.3.7.1 Source Port Source Alert State Diagram\nFigure 8.140, \"Source Port Source Alert State Diagram\" AlertMessage\nSource Port\nshows the state diagram for an sent by a\n. Figure 8.140 Source Port Source Alert State Diagram\nPE_SRC_Send_Source_Alert\nDPM indicates Source\nActions on entry: PE_SRC_Ready\nalert condition\nSend Alert Message\nPower = Explicit Contract\nPD = connected\nAlert\nSenderResponseTimer\nMessage sent\nTimeout\nPE_SRC_Wait_for_Get_Status\nActions on entry: Get_Status PE_Give_Status\nInitialize and run SenderResponseTimer Message received\nPower = Explicit Contract\nPD = Connected\n8.3.3.7.1.1 PE_SRC_Send_Source_Alert State\nPE_SRC_Send_Source_Alert Shall PE_SRC_Ready Device Policy\nManager Source\nThe state be entered from the state when the\nindicaPteEs_ SthRaCt_ Stheenrde_ Siso au rce_Ale arltert conditPioonli ctoy Ebne grienpeoSrhteadll. Protocol Layer Alert\nMessage\nOn entry to the state the request the to send an\nPolic.y EngineShall PE_SRC_Wait_for_Get_Status\nThe\uf06c Alert Messa tgreansition to the State when:\n8.3.3.7T.1he.2 h PasE b_eSeRnC s_uWcceasistf_uflolyr s_eGnet.t_Status State\nPE_SRC_Wait_for_Get_Status Policy EngineShall\nSenderResponseTimer\nOn entry to the State the initialize and run the\nPolicy EngineShall. PE_Give_Status Figure 8.151, \"Give Status State Diagram\"\nThe transition back to the State (see )\nwhe\uf06cn: Get_StatusMessage\nPoliAcy EngineSha ll is received.PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\"\nThe\uf06c Sende rRes ptroannsseiTtiiomne brack to (see ) when:\nThe times out.\nPage 854 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.7.2 Sink Port Source Alert State Diagram\nFigure 8.141, \"Sink Port Source Alert State Diagram\" AlertMessage\nSink Port\nshows the state diagram for an received by a\n. Figure 8.141 Sink Port Source Alert State Diagram\nPE_SRC_Send_Source_Alert\nDPM indicates Source\nActions on entry: PE_SRC_Ready\nalert condition\nSend Alert Message\nPower = Explicit Contract\nPD = connected\nAlert\nSenderResponseTimer\nMessage sent\nTimeout\nPE_SRC_Wait_for_Get_Status\nActions on entry: Get_Status PE_Give_Status\nInitialize and run SenderResponseTimer Message received\nPower = Explicit Contract\nPD = Connected\n8.3.3.7.2.1 PE_SNK_Source_Alert_Received State\nPE_SNK_Source_Alert_Received Shall PE_SNK_Ready AlertMessage\nThe state be entered from the state when an\nis received. PE_SNK_Source_Alert_Received Policy EngineShall Device Policy Manager\nSource\nOn entry to the state the inform the of\nthe dPeotlaiiclys Eonf gthinee Shall alert. PE_Get_Status Figure 8.150, \"Get Status State Diagram\"\nThe\uf06c transition to the State (see ) when:\nPoliTcyh eE nDgPinMe rSehqaulelsts status. PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the State (see )\nwhe\uf06cn:\nThe DPM does not request status.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 855\n8.3.3.7.3 Sink Port Sink Alert State Diagram\nFigure 8.142, \"Sink Port Sink Alert State Diagram\" AlertMessage Sink Port\nFigure 8.142 Sink s hPoowrts Sthinek s tAalteer dti aSgtaratem D foiarg arna m sent by a .\nPE_SNK_Send_Sink_Alert\nDPM indicates Sink\nActions on entry: alert condition PE_SNK_Ready\nSend Alert Message\nPower = Explicit Contract\nPD = connected\nAlert\nSenderResponseTimer\nMessage sent\nTimeout\nPE_SNK_Wait_for_Get_Status\nActions on entry: Get_Status PE_Give_Status\nInitialize and run SenderResponseTimer Message received\nPower = Explicit Contract\nPD = Connected\n8.3.3.7.3.1 PE_SNK_Send_Sink_Alert State\nPE_SNK_Send_Sink_Alert Shall PE_SNK_Ready Device Policy Manager\nSource\nThe state be entered from the state when the\nindicates that thPeEre_S iNs Ka _Send_S ainlekr_tA cloenrdtition to beP orelipcoy rEtnedgi.neShall Protocol Layer Alert\nMessage\nOn entry to the state the request the to send an\nPolic.y EngineShall PE_SNK_Wait_for_Get_Status\nThe\uf06c Alert Messa tgreansition to the State when:\n8.3.3.7T.3he.2 h PasE b_eSeNnK su_cWceasistfu_flloyr s_eGnte.t_Status State\nPE_SNK_Wait_for_Get_Status Policy EngineShall\nSenderResponseTimer\nOn entry to the State the initialize and run the\nPolicy EngineShall. PE_Give_Status Figure 8.151, \"Give Status State Diagram\"\nThe transition back to the State (see )\nwhe\uf06cn: Get_StatusMessage\nPoliAcy EngineSha ll is received. PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe\uf06c Sende rRes ptroannsseiTtiiomne brack to the (see ) when:\nThe times out.\nPage 856 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.7.4 Source Port Sink Alert State Diagram\nFigure 8.143, \"Source Port Sink Alert State Diagram\" AlertMessage\nSource Port\nshows the state diagram for an received by a\n. Figure 8.143 Source Port Sink Alert State Diagram\nSink Alert Message\nPE_SRC_Sink_Alert_Received received\nActions on entry: PE_SRC_Ready\nInform DPM of the detail of the alert DPM does not\nrequest status\nPower = Explicit Contract\nPD = connected\nDPM Requests Status\nPE_Get_Status\n8.3.3.7.4.1 PE_SRC_Sink_Alert_Received State\nPE_SRC_Sink_Alert_Received Shall PE_SRC_Ready AlertMessage\nThe state be entered from the state when an is\nreceived. PE_SRC_Sink_Alert_Received Policy EngineShall Device Policy Manager\nSource\nOn entry to the state the inform the of the\ndetaPilos loicf yt hEen gineSh aallelrt. PE_Get_Status Figure 8.150, \"Get Status State Diagram\"\nThe\uf06c transition to the State (see ) when:\nPoliTcyh Ee nDgPinMe rSehqaulelsts status. PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\"\nThe\uf06c transition back to the (see ) when:\nThe DPM does not request status.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 857\n8.3.3.8 Source/Sink Capabilities Extended State Diagrams\n8.3.3.8.1 Sink Port Get Source Capabilities Extended State Diagram\nFigure 8.144, \"Sink Port Get Source Capabilities Extended State Diagram\" Sink\nDevice Policy Manager Port Partner Source Capabilities\nSection 6.5.1, \"Source_Capabilities_Extended Message\" shows the state diagram for a on\nreceiving a request from the to get the 's extended . See also\nFigure 8.144 Sink Port Get Sourc.e Capabilities Extended State Diagram\nget extended source capabilities\nrequest PE_SNK_Get_Source_Cap_Ext\nfrom Device Policy Manager\nActions on entry:\nPE_SNK_Ready\nSend Get_Source_Cap_Extended Message\nInitialize and run SenderResponseTimer\nSource_Capabilities_Extended\nMessage received | Actions on exit:\nSenderResponseTimer Pass source extended capabilities/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.8.1.1 PE_SNK_Get_Source_Cap_Ext State\nPolicy EngineShall PE_SNK_Get_Source_Cap_Ext PE_SNK_Ready\nSource Capabilities Device Policy Manager\nThe transition to the state, from the state, due to\na request to get PthEe_S rNemK_oGteet e_Sxoteunrdceed_C ap_Ext Po flricoym E tnhgein eShall Get_Sou. rce_Cap_Extended\nMessage SenderResponseTimer\nOn entry to the state the send a\nand initPiaEli_zSeN aKn_dG erut_nS othuer ce_Cap_Ext Poli.cy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(c EanpgaibnielitSiheas lolr response timeout). PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_Capabilities_ExtendedMessage\n\uf06c A SenderResponseTimer is received\nOr times out.\nPage 858 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.8.2 Source Give Source Capabilities Extended State Diagram\nFigure 8.145, \"Source Give Source Capabilities Extended State Diagram\" Source\nGet_Source_Cap_ExtendedMessage Section 6.5.1, \"Source_Capabilities_Extended Message\"\nshows the state diagram for a on\nreceiving a Figure 8.145 Sour ce Give S. oSeuer caels Coa pabilities Extended State Diagram .\nGet_Source_Cap_Extended Message\nreceived PE_SRC_Give_Source_Cap_Ext\nPE_SRC_Ready\nActions on entry:\nGet present extended source capabilities from Device Policy Manager\nSource_Capabilities_Extended Send Source_Capabilities_Extended Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.8.2.1 PE_SRC_Give_Source_Cap_Ext State\nPolicy EngineShall PE_SRC_Give_Source_Cap_Ext PE_SRC_Ready\nGet_Source_Cap_ExtendedMessage\nThe transition to the state, from the state, when\na PE_SRC_Give _Source_ Cisa pre_cEexitved. Policy EngineShall Source\nCapabilities Device Policy Manager Source_Capabilities_ExtendedMessage\nOn entry to the state the request the present extended\nfrom the and then send a based on\ntheseP oclaipcya bEinligtiinese.Shall PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_Capabilities_ExtendedMessage\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 859\n8.3.3.8.3 Source Port Get Sink Capabilities Extended State Diagram\nFigure 8.146, \"Source Port Get Sink Capabilities Extended State Diagram\" Source\nDevice Policy Manager Port Partner Sink Capabilities\nSection 6.5.13, \"Sink_Capabilities_Extended Message\" shows the state diagram for a on\nreceiving a request from the to get the 's extended . See also\nFigure 8.146 Source Port Get Si.nk Capabilities Extended State Diagram\nget extended Sink capabilities\nrequest PE_SRC_Get_Sink_Cap_Ext\nfrom Device Policy Manager\nPE_SRC_Ready Actions on entry:\nSend Get_Sink_Cap_Extended Message\nInitialize and run SenderResponseTimer\nSink_Capabilities_Extended\nMessage received | Actions on exit:\nSenderResponseTimer Pass sink extended capabilities/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.8.3.1 PE_SRC_Get_Sink_Cap_Ext State\nPolicy EngineShall PE_SRC_Get_Sink_Cap_Ext PE_SRC_Ready\nSource Capabilities Device Policy Manager\nThe transition to the state, from the state, due to a\nrequest to get tPhEe _rSeRmCo_Gtee et_xStiennkd_eCda p_Ext Polic fyr Eomng tinhee Shall Get_Sink_C. ap_ExtendedMessage\nSenderResponseTimer\nOn entry to the state the send a and\ninitialize and runP tEh_eS RC_Get_Sink_Cap_Ext . Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcPomoliec y(c EanpgaibnieliStiheas lolr response timeout). PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Sink_Capabilities_ExtendedMessage\n\uf06c A SenderResponseTimer is received\nOr times out.\nPage 860 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.8.4 Sink Give Sink Capabilities Extended State Diagram\nFigure 8.147, \"Sink Give Sink Capabilities Extended State Diagram\" Source\nGet_Sink_Cap_ExtendedMessage Section 6.5.13, \"Sink_Capabilities_Extended Message\"\nshows the state diagram for a on receiving\na Figu re 8.147. S Seien kal sGoi ve Sink Capabilities Extended State Diagram .\nGet_Sink_Cap_Extended Message\nreceived PE_SNK_Give_Sink_Cap_Ext\nPE_SNK_Ready\nActions on entry:\nGet present extended Sink capabilities from Device Policy Manager\nSink_Capabilities_Extended Send Sink_Capabilities_Extended Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.8.4.1 PE_SNK_Give_Sink_Cap_Ext State\nPolicy EngineShall PE_SNK_Give_Sink_Cap_Ext PE_SNK_Ready\nGet_Sink_Cap_ExtendedMessage\nThe transition to the state, from the state, when a\nPE_SNK_ Give_Sink i_sC raepce_Eivxetd. Policy EngineShall Source\nCapabilities Device Policy Manager Sink_Capabilities_ExtendedMessage\nOn entry to the state the request the present extended\nfrom the and then send a based on these\ncapaPboilliitciye sE.ngineShall PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Sink_Capabilities_ExtendedMessage\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 861\n8.3.3.9 Source Information State Diagrams\n8.3.3.9.1 Sink Port Get Source Information State Diagram\nFigure 8.148, \"Sink Port Get Source Information State Diagram\" Sink\nDevice Policy Manager Port Partner Source Section 6.3.23,\n\"Get_Source_Info Message\" Section 6.4.11, \"Source_Info Mess sahgoew\"s the state diagram for a on receiving a\nrequest from the to get the 's information. See also\nFig aunrde 8.148 Sink Port Get Source Inform.ation State Diagram\nget source information request\nfrom Device Policy Manager PE_SNK_Get_Source_Info\nActions on entry:\nPE_SNK_Ready Send Get_Source_Info Message\nInitialize and run SenderResponseTimer\nSource_Info\nMessage received | Actions on exit:\nSenderResponseTimer Pass source information/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.9.1.1 PE_SNK_Get_Source_Info State\nPolicy EngineShall PE_SNK_Get_Source_Info PE_SNK_Ready\nSource Device Policy Manager\nThe transition to the state, from the state, due to a\nrequest to get thPeE r_eSmNKot_eG et_Sour icnef_oIrnmfoation fromP tohleic y EngineShall G. et_Source_InfoMessage\nSenderResponseTimer\nOn entry to the state the send a and\ninitialize and runP tEh_eS NK_Get_Source_Info . Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(i EnfnogrimneaStihoanl olr response timeout). PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_InfoMessage\n\uf06c A SenderResp onseTim ise rreceived\nOr times out.\nPage 862 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.9.2 Source Give Source Information State Diagram\nFigure 8.149, \"Source Give Source Information State Diagram\" Source\nGet_Source_InfoMessage Section 6.3.23, \"Get_Source_Info Message\" Section 6.4.11, \"Source_Info\nMessage\" shows the state diagram for a on receiving a\n. See also and\n. Figure 8.149 Source Give Source Information State Diagram\nGet_Source_Info Message\nreceived PE_SRC_Give_Source_Info\nPE_SRC_Ready\nActions on entry:\nGet present source information from Device Policy Manager\nSend Source_Info Message (based on Device Policy Manager response)\nSource_Info Message sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.9.2.1 PE_SRC_Give_Source_Info State\nPolicy EngineShall PE_SRC_Give_Source_Info PE_SRC_Ready\nGet_Source_InfoMessage\nThe transition to the state, from the state, when a\nP E_SRC_G iivse r_eScoeuivrecde_. Info Policy EngineShall Source\nDevice Policy Manager Source_InfoMessage\nOn entry to the state the request the present information\nfromP tohliec y EngineShall and then sendP aE _SRC_Ready baFsigeudr oen 8 .t1h3is2 ,i n\"Sfoorumrcaet Pioonr.t State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_InfoMessage\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 863\n8.3.3.10 Status State Diagrams\n8.3.3.10.1 Get Status State Diagram\nFigure 8.150, \"Get Status State Diagram\" Device\nPolicy Manager Port Partner Cable Plug Section 6.5.2, \"Status Message\"\nshows the state diagram for a Port on receiving a request from the\nto get the Fi gour re 8.150 G'est S Statatutus.s S Setea atels Do iagram .\nget status request\nPE_Get_Status\nfrom Device Policy Manager\nActions on entry:\nPE_SNK_Ready,\nSend Get_Status Message\nPE_SRC_Ready Initialize and run SenderResponseTimer\nStatus\nMessage received | Actions on exit:\nSenderResponseTimer Pass Source status/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.10.1.1 PE_Get_Status State\nPolicy EngineShall PE_Get_Status PE_SRC_Ready PE_SNK_Ready\nPort Partner Cable Plug Device Policy Manager\nThe transition to the state, from the or States, due\nto a request to gPeEt _tGhee t_Status or Policy En'gs isnteatSuhsa flrlom the Get_StatusMessage .\nSenderResponseTimer\nOn entry to the state the send a and initialize and run the\nPE_Get._Status Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the outcome\n(statPuosl oicry r EenspgionnesSeh taimlleout). PE_SRC_Ready PE_SNK_Ready Figure\n8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the or States as appropriate (see\n\uf06c StatusMessage or ) when:\n\uf06c A Sende rRespon isse rTeicmeievred\nOr times out.\nPage 864 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.10.2 Give Status State Diagram\nFigure 8.151, \"Give Status State Diagram\" Source Get_StatusMessage\nSection 6.5.2, \"Status Message\"\nshows the state diagram for a on receiving a .\nSee also Fig.ure 8.151 Give Status State Diagram\nGet_Status Message\nreceived PE_Give_Status\nPE_SRC_Ready,\nActions on entry:\nPE_SNK_Ready, Get present Status from Device Policy Manager\nPE_CBL_Ready Status Send Status Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.10.2.1 PE_Give_Status State\nPolicy EngineShall PE_Give_Status PE_SRC_Ready PE_SNK_Ready\nPE_CBL_Ready Get_StatusMessage\nThe transition to the state, from the , or\nSPtEa_tGesiv, we_hSetant au s P olicy Eng iisn reeScheiavleld. Source Device\nPolicy Manager StatusMessage\nOn entry to the state the request the present status from the\nPolicy Engin aenSdh tahleln send a PE b_aSsReCd_ Roena tdhyesPe Ec_aSpNaKbi_lRiteieasd.y PE_CBL_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure\nT8.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to the , or States as\nappropriate (see , and\n\uf06c StatusMessage ) when:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 865\n8.3.3.10.3 Sink Port Get Source PPS Status State Diagram\nFigure 8.152, \"Sink Port Get Source PPS Status State Diagram\" Sink\nDevice Policy Manager Port Partner Source\nSection 6.5.10, \"PPS_Status Message\" shows the state diagram for a on receiving a\nrequest from the to get the 's status when operating as a PPS. See also\nFigure 8.15.2 Sink Port Get Source PPS Status State Diagram\nget PPS status request\nfrom Device Policy Manager PE_SNK_Get_PPS_Status\nActions on entry:\nPE_SNK_Ready\nSend Get_PPS_Status Message\nInitialize and run SenderResponseTimer\nPPS_Status\nMessage received | Actions on exit:\nSenderResponseTimer Pass Source status/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.10.3.1 PE_SNK_Get_PPS_Status State\nPolicy EngineShall PE_SNK_Get_PPS_Status PE_SNK_Ready\nSource Device Policy Manager\nThe transition to the state, from the state, due to a\nrequest to get thPeE _rSeNmKo_tGe et_PPS_ PStPaSt ustsatus from Pthoeli cy EngineShall G. et_PPS_StatusMessage\nSenderResponseTimer\nOn entry to the state the send a and initialize\nand run the PE_SNK_Get_PPS_St.atus Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(s Etantguisn eorS hreaslplonse timeout). PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: PPS_StatusMessage\n\uf06c A SenderRes ponseTi mise rreceived\nOr times out.\nPage 866 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.10.4 Source Give Source PPS Status State Diagram\nFigure 8.153, \"Source Give Source PPS Status State Diagram\" Source\nGet_PPS_StatusMessage Section 6.5.10, \"PPS_Status Message\"\nshows the state diagram for a on receiving a\n. SFeigeu arlseo 8 .153 Source Give Source PPS Statu.s State Diagram\nGet_PPS_Status Message\nreceived PE_SRC_Give_PPS_Status\nPE_SRC_Ready\nActions on entry:\nGet present Source PPS status from Device Policy Manager\nPPS_Status Send PPS_Status Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.10.4.1 PE_SRC_Give_PPS_Status State\nPolicy EngineShall PE_SRC_Give_PPS_Status PE_SRC_Ready\nGet_PPS_StatusMessage\nThe transition to the state, from the state, when a\nP E_SRC_G iisv ree_PcePiSv_eSdt.a tus Policy EngineShall Source\nDevice Policy Manager PPS_StatusMessage\nOn entry to the state the request the present PPS status from\nthe Policy EngineShall and then send a PE_SRC_R eady based oFni gthueres e8 c.1a3p2a,b \"iSloituiersc.e Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: PPS_StatusMessage\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 867\n8.3.3.11 Battery Capabilities State Diagrams\n8.3.3.11.1 Get Battery Capabilities State Diagram\nFigure 8.154, \"Get Battery Capabilities State Diagram\" Source Sink\nDevice Policy Manager Port Partner Battery Battery\nSection 6.5.5, \"Battery_Capabilities Message\" shows the state diagram for a or on receiving a\nrequest from the to get the 's capabilities for a specified . See also\nFigure 8.154 G.et Battery Capabilities State Diagram\nget Battery capabilities\nrequest PE_Get_Battery_Cap\nfrom Device Policy Manager\nActions on entry:\nPE_SRC_Ready or\nSend Get_Battery_Cap Message\nPE_SNK_Ready Initialize and run SenderResponseTimer\nBattery_Capabilities\nMessage received | Actions on exit:\nSenderResponseTimer Pass Battery capabilities/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.11.1.1 PE_Get_Battery_Cap State\nPolicy EngineShall PE_Get_Battery_Cap PE_SRC_Ready\nPE_SNK_Ready Battery Battery Device\nPTohleic y Manager transition to the state, from either the or\nstate, due to a request to get the remote capabilities, for a specified , from the\n.P E_Get_Battery_Cap Policy EngineShall Get_Battery_CapMessage\nSenderResponseTimer\nOn entry to the state the send a and initialize\nand run the PE_Get_Battery_Cap. Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the outcome\n(capPaboilliictyie Esn ogri nreesSphoanlsle timeout). PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Battery_CapabilitiesMessage and ) when:\n\uf06c A SenderResponseTim er is received\nOr times out.\nPage 868 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.11.2 Give Battery Capabilities State Diagram\nFigure 8.155, \"Give Battery Capabilities State Diagram\" Source Sink\nGet_Battery_CapMessage Section 6.5.5, \"Battery_Capabilities Message\"\nshows the state diagram for a or on receiving a\n. SeFei gaulsroe 8.155 Give Battery Capabilities State Dia.gram\nGet_Battery_Cap Message\nreceived PE_Give_Battery_Cap\nPE_SRC_Ready or\nActions on entry:\nPE_SNK_Ready Get present Battery capabilities from Device Policy Manager\nBattery_Capabilities Send Battery_Capabilities Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.11.2.1 PE_Give_Battery_Cap State\nPolicy EngineShall PE_Give_Battery_Cap PE_SRC_Ready\nPE_SNK_Ready Get_Battery_CapMessage\nThe transition to the state, from either the or\nPstEa_tGei, vweh_Beant at ery_Cap Policy En gisi nreecSehiavelld. Battery\nBattery Device Policy Manager Battery_CapabilitiesMessage\nOn entry to the state the request the present capabilities, for the\nrequested , from the and then send a based on these\ncapaPboilliitciye sE.ngineShall PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Battery_CapabilitiesMessag eand ) when:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 869\n8.3.3.12 Battery Status State Diagrams\n8.3.3.12.1 Get Battery Status State Diagram\nFigure 8.156, \"Get Battery Status State Diagram\" Source Sink\nDevice Policy Manager Port Partner Battery Battery Section 6.5.4,\n\"Get_Battery_Status Message\" shows the state diagram for a or on receiving a request\nfrom the to get the 's status for a specified . See also\n. Figure 8.156 Get Battery Status State Diagram\nget Battery status\nrequest PE_Get_Battery_Status\nfrom Device Policy Manager\nActions on entry:\nPE_SRC_Ready or\nSend Get_Battery_Status Message\nPE_SNK_Ready Initialize and run SenderResponseTimer\nBattery_Status\nMessage received | Actions on exit:\nSenderResponseTimer Pass Battery status/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.12.1.1 PE_Get_Battery_Status State\nPolicy EngineShall PE_Get_Battery_Status PE_SRC_Ready\nPE_SNK_Ready Battery Battery Device\nTPohleic y Manager transition to the state, from either the or\nstate, due to a request to get the remote status, for a specified , from the\n.P E_Get_Battery_Status Policy EngineShall Get_Battery_StatusMessage\nSenderResponseTimer\nOn entry to the state the send a and\ninitialize and runP tEh_eG et_Battery_Status . Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(s Etantguisn eorS hreaslplonse timeout). PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Battery_StatusMessage and ) when:\n\uf06c A SenderRespon seTimer is received\nOr times out.\nPage 870 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.12.2 Give Battery Status State Diagram\nFigure 8.157, \"Give Battery Status State Diagram\" Source Sink\nGet_Battery_StatusMessage Section 6.5.4, \"Get_Battery_Status Message\"\nshows the state diagram for a or on receiving a\n. SeFei aglusroe 8.157 Give Battery Status State Diagram.\nGet_Battery_Status Message\nreceived PE_Give_Battery_Status\nPE_SRC_Ready or\nActions on entry:\nPE_SNK_Ready Get present Battery status from Device Policy Manager\nBattery_Status Send Battery_Status Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.12.2.1 PE_Give_Battery_Status State\nPolicy EngineShall PE_Give_Battery_Status PE_SRC_Ready\nPE_SNK_Ready Get_Battery_StatusMessage\nThe transition to the state, from either the or\nPstEa_tGe,i vweh_Bena tat ery_Status Policy En igsi nreecSehivaeldl. Battery\nBattery Device Policy Manager Battery_StatusMessage\nOn entry to the state the request the present status, for the\nrequPeostliecdy Engine,S fhraomll the anPdE _tShRenC _sReenadd ay PE_SNK_Rea dy based on this status.\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Battery_StatusMessage and ) when:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 871\n8.3.3.13 Manufacturer Information State Diagrams\n8.3.3.13.1 Get Manufacturer Information State Diagram\nFigure 8.158, \"Get Manufacturer Information State Diagram\" Source Sink\nDevice Policy Manager Port Partner Cable Plug\nSection 6.5.6, \"Get_Manufacturer_Info M sehsosawgse t\"he state diagram for a or on\nreceiving a request from the to get the or 's Manufacturer\nInformation. See also Figure 8.158 Get Manufacturer Informat.ion State Diagram\nget manufacturer information\nrequest PE_Get_Manfacturer_Info\nfrom Device Policy Manager\nPE_SRC_Ready or Actions on entry:\nSend Get_Manfacturer_Info Message\nPE_SNK_Ready Initialize and run SenderResponseTimer\nManufacturer_Info\nMessage received | Actions on exit:\nSenderResponseTimer Pass Manufacturer Information/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.13.1.1 PE_Get_Manufacturer_Info State\nPolicy EngineShall PE_Get_Manufacturer_Info PE_SRC_Ready\nPE_SNK_Ready Device Policy Manager\nThe transition to the state, from either the or\nPstEa_tGe,e dt_uMe aton au fraecqtuuersetr t_oI ngfeot the remotPeo Mlicayn EunfagcitnuereSrh IanllformatioGne ftr_oMma nthuef acturer_InfoMessage.\nSenderResponseTimer\nOn entry to the state the send a\nand initialize andP rEu_nG etht_eM anufacturer_Info . Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(i EnfnogrimneaStihoanl olr response timeout). PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Manufacturer_InfoMessage and ) when:\n\uf06c A SenderResponseTi mer is received\nOr times out.\nPage 872 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.13.2 Give Manufacturer Information State Diagram\nFigure 8.159, \"Give Manufacturer Information State Diagram\" Source Sink Cable\nPlug Get_Manufacturer_InfoMessage Section 6.5.6, \"Get_Manufacturer_Info Message\"\nshows the state diagram for a , or\non receiving a Figure 8.159 Give Manufa.c Stueer earls Ion formation State Diagram .\nGet_Manufacturer_Info Message\nreceived PE_Give_Manufacturer_Info\nPE_SRC_Ready,\nActions on entry:\nPE_SNK_Ready or Get present Manufacturer Information from Device Policy Manager\nPE_CBL_Ready Manufacturer_Info Send Manufacturer_Info Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.13.2.1 PE_Give_Manufacturer_Info State\nPolicy EngineShall PE_Give_Manufacturer_Info PE_SRC_Ready\nPE_SNK_Ready PE_CBL_Ready Get_Manufacturer_InfoMessage\nThe transition to the state, from either the ,\nPorE _Give_Manufac tsutarteer,_ wInhfeon a Policy EngineShal l is received.\nDevice Policy Manager Manufacturer_InfoMessage\nOn entry to the state the request the manufacturer information\nfromP tohliec y EngineShall and then send a PE_SRC_Ready PE_SNK_ Rbeaaseddy on PthEi_sC sBtaLt_uRse.ady\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure\n8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the , or state as\nappropriate (see , and\n\uf06c Manufacturer_InfoMe)s swahgeen:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 873\n8.3.3.14 Country Codes and Information State Diagrams\n8.3.3.14.1 Get Country Codes State Diagram\nFigure 8.160, \"Get Country Codes State Diagram\" Source Sink\nDevice Policy Manager Port Partner Cable Plug Section 6.5.11,\n\"Country_Codes Message\" shows the state diagram for a or on receiving a request\nfrom the to get the or 's Country Codes. See also\n. Figure 8.160 Get Country Codes State Diagram\nget country codes request\nPE_Get_Country_Codes\nfrom Device Policy Manager\nActions on entry:\nPE_SRC_Ready or\nSend Get_Country_Codes Message\nPE_SNK_Ready Initialize and run SenderResponseTimer\nCountry_Codes\nMessage received | Actions on exit:\nSenderResponseTimer Pass Country Codes/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.14.1.1 PE_Get_Country_Codes State\nPolicy EngineShall PE_Get_Country_Codes PE_SRC_Ready\nPE_SNK_Ready Device Policy Manager\nThe transition to the state, from either the or\nPstEa_tGe,e dt_uCeo tuon at rrye_qCuoedset sto get the rPeomlicoyte E CnoguinnetrSyh Caolldes fromG etht_eC ountry_CodesMessage.\nSenderResponseTimer\nOn entry to the state the send a and\ninitialize and runP tEh_eG et_Country_Codes . Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(C EonugnintreyS Choadlels or response timeout). PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Country_CodesMessage and ) when:\n\uf06c A SenderRespon seTimer is received\nOr times out.\nPage 874 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.14.2 Give Country Codes State Diagram\nFigure 8.161, \"Give Country Codes State Diagram\" Source Sink\nGet_Country_CodesMessage Section 6.5.11, \"Country_Codes Message\"\nshows the state diagram for a or on receiving a\n. SeFei gaulsroe 8.161 Give Country Codes State Diag.ram\nGet_Country_Codes Message\nreceived PE_Give_Country_Codes\nPE_SRC_Ready or Actions on entry:\nPE_SNK_Ready Get present Country Codes from Device Policy Manager\nCountry_Codes Send Country_Codes Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.14.2.1 PE_Give_Country_Codes State\nPolicy EngineShall PE_Give_Country_Codes PE_SRC_Ready\nPE_SNK_Ready Get_Country_CodesMessage\nThe transition to the state, from either the or\nPStEa_tGei, vweh_Ceonu an try_Codes Policy En igsi nreecSehivaelld. Device\nPolicy Manager Country_CodesMessage\nOn entry to the state the request the country codes from the\nPolicy Engin aenSdh tahleln send a PE_S cRoCn_tRaeinaidnyg thePsEe_ cSoNdKe_sR.eady\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or State as appropriate (see\n\uf06c Country_CodesMessage and ) when:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 875\n8.3.3.14.3 Get Country Information State Diagram\nFigure 8.162, \"Get Country Information State Diagram\" Source Sink\nDevice Policy Manager Port Partner Cable Plug Section\n6.5.12, \"Country_Info Message\" shows the state diagram for a or on receiving a\nrequest from the to get the or 's Country Information. See also\nFi.gure 8.162 Get Country Information State Diagram\nget country information\nrequest PE_Get_Country_Info\nfrom Device Policy Manager\nActions on entry:\nPE_SRC_Ready or\nSend Get_Country_Info Message\nPE_SNK_Ready Initialize and run SenderResponseTimer\nCountry_Info\nMessage received | Actions on exit:\nSenderResponseTimer Pass Country Information/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.14.3.1 PE_Get_Country_Info State\nPolicy EngineShall PE_Get_Country_Info PE_SRC_Ready\nPE_SNK_Ready Device Policy Manager\nThe transition to the state, from either the or\nPstEa_tGe,e dt_uCeo tuon at rreyq_Iunefsot to get theP roelmicoy tEen MgianneuSfahcatlulrer InfoGrmeta_tMioann furofamct tuhree r_InfoMessage .\nSenderResponseTimer\nOn entry to the state the send a and\ninitialize and runP tEh_eG et_Country_Info . Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcoPmoliec y(c Eonugnitnrey Sinhfaolrlmation or response timeout).PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Country_InfoMessage and ) when:\n\uf06c A SenderRespo nseTim eisr received\nOr times out.\nPage 876 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.14.4 Give Country Information State Diagram\nFigure 8.163, \"Give Country Information State Diagram\" Source Sink\nGet_Country_InfoMessage Section 6.5.12, \"Country_Info Message\"\nshows the state diagram for a or on receiving a\n. SFeieg uarlseo 8 .163 Give Country Information Stat.e Diagram\nGet_Country_Info Message\nreceived PE_Give_Country_Info\nPE_SRC_Ready or\nActions on entry:\nPE_SNK_Ready Get present Country Information from Device Policy Manager\nCountry_Info Send Country_Info Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.14.4.1 PE_Give_Country_Info State\nPolicy EngineShall PE_Give_Country_Info PE_SRC_Ready\nPE_SNK_Ready Get_Country_InfoMessage\nThe transition to the state, from either the or\nPStEa_tGei, vweh_Ceonu an try_Info Policy En igsi nreecSehivaelld.\nDevice Policy Manager Country_InfoMessage\nOn entry to the state the request the country information from the\nPolicy EngineShal alnd then send a P E_SRC_R ceoandtyaininPgE t_hSiNs Kco_Ruenatrdyy information.\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or State as appropriate (see\n\uf06c Country_InfoMessage and ) when:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 877\n8.3.3.15 Revision State Diagrams\n8.3.3.15.1 Get Revision State Diagram\nFigure 8.164, \"Get Revision State Diagram\" Source Sink\nDevice Policy Manager Port Partner Cable Plug Section 6.3.24,\n\"Get_Revision Message\" Section 6.4.12, s\"hRoewvissi tohne M steastsea dgiea\"gram for a or on receiving a request from\nthe to get the or 's Revision Information. See also\nand Figure 8.164 Get Revisio.n State Diagram\nget Revision\nrequest PE_Get_Revision\nfrom Device Policy Manager\nActions on entry:\nPE_SRC_Ready or Send Get_Revision Message\nPE_SNK_Ready Initialize and run SenderResponseTimer\nRevision\nMessage received | Actions on exit:\nSenderResponseTimer Pass Revision Information/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.15.1.1 PE_Get_Revision State\nPolicy EngineShall PE_Get_Revision PE_SRC_Ready PE_SNK_Ready\nDevice Policy Manager\nThe transition to the state, from either the or\nstate, due to a rePqEu_eGsett t_oR egveits tihoen remote RePvoilsiicoyn E InngfoinremSahtaiolnl from thGee t_RevisionMessage .\nSenderResponseTimer\nOn entry to the state the send a and initialize and run\nthe PE_Get_Rev.ision Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the outcome\n(RevPisoiloicny i nEfnogrimneaStihoanl olr response timeout). PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c RevisionMessage and ) when:\n\uf06c A SenderR esponse iTsi rmeecerived\nOr times out.\nPage 878 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.15.2 Give Revision State Diagram\nFigure 8.165, \"Give Revision State Diagram\" Source Sink Cable Plug\nGet_RevisionMessage Section 6.3.24, \"Get_Revision Message\" Section 6.4.12, \"Revision Message\"\nshows the state diagram for a , or on receiving a\n. See also Figure 8.165 Give Revision State aDnidag ram .\nGet_Revision Message\nreceived PE_Give_Revision\nPE_SRC_Ready,\nPE_SNK_Ready or Actions on entry:\nGet present Revision Information from Device Policy Manager\nPE_CBL_Ready Revision Send Revision Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.15.2.1 PE_Give_Revision State\nPolicy EngineShall PE_Give_Revision PE_SRC_Ready PE_SNK_Ready\nPE_CBL_Ready Get_RevisionMessage\nThe transition to the state, from either the , or\nsPtEat_eG,i wveh_eRne vai sion Policy En igsi rneecSehivaeldl. Device\nPolicy Manager RevisionMessage\nOn entry to the state the request the Revision information from the\nPolicy Engin aenSdh tahleln send a baPsEed_S oRnC t_hRiesa idnfyorPmEa_StiNoKn_.Ready PE_CBL_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure\n8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the , or state as\nappropriate (see , and\n\uf06c RevisionMessage ) when:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 879\n8.3.3.16 Enter_USB Message State Diagrams\n8.3.3.16.1 DFP Enter_USB Message State Diagrams\nFigure 8.166, \"DFP Enter_USB Message State Diagram\" Enter_USBMessage\nDFP\nshows the state diagram for an sent by\na . Figure 8.166 DFP Enter_USB Message State Diagram\nPE_DEU_Send_Enter_USB\nEnter USB (USB Mode)\nActions on entry: request from DPM\nSend Enter_USB Message\nInitialize and run SenderResponseTimer\nAccept Message Received | PE_SRC_Ready or\nActions on exit: Reject Message Received |\nPE_SNK_Ready (DFP)\nInform Device Policy Manager of Accept, Wait Message Received |\nWait, Reject or timeout. SenderResponseTimer timeout\nPower = Explicit Contract\nPD = connected\n8.3.3.16.1.1 PE_DEU_Send_Enter_USB State\nPE_DEU_Send_Enter_USB Shall PE_SRC_Ready PE_SNK_Ready\nDevice Policy Manager DFP\nThe State be entered from the or State when\nrequested by thPe E_DEU_Send_Enter_US Band the PorPto ilsi coyp EenragtiinnegS ahsa al l . Protocol Layer\nEnter_USBMessage SenderResponseTimer\nOn entry to the State the request the to send an\nPE_ aDnEdU t_hSeenn din_iEtniatleizre_U aSnBd run the Policy EngineShall . Device Policy Manager\nAcceptMessage RejectMessage SenderResponseTimer\nOn exit from the state the inform the of the\noutcPoomliec:y Engine Shall received, PE_SRC r_eRceeaivdeyd, PE_SNK_Ready timeout. Power\nRole\nThe transition back to the or State depending on the Ports\n\uf06c when:AcceptMessage\n\uf06c AnW aitMe ssage has been received or\n\uf06c A Rejec tMessag ehas been received or\n\uf06c A Sender Rhaess pboenense rTeicmeievred\nThere is a timeout.\nPage 880 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.16.2 UFP or Cable Plug Enter_USB Message State Diagrams\nFigure 8.167, \"UFP Enter_USB Message State Diagram\" Enter_USB\nUFP Cable Plug\nshows the state diagram for an Message received\nby a or . Figure 8.167 UFP Enter_USB Message State Diagram\nPE_UEU_Enter_USB_Received\nEnter_USB Message\nReceived Actions on entry:\nPE_SRC_Ready (UFP), Inform Device Policy Manager of Enter_USB Message\nPE_SNK_Ready (UFP) or Send Accept/Wait/Reject Message based on DPM response\nPE_CBL_Ready Accept/Wait/Reject\nMessage sent\nPower = Explicit Contract\nPD = connected\n8.3.3.16.2.1 PE_UEU_Enter_USB_Received State\nPE_UEU_Enter_USB_Received Shall PE_SRC_Ready PE_SNK_Ready\nPE_CBL_Ready Figure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State\nTDhiaeg ram\" Figure 8.203, \"Cable sRteaatde y State b De ieangtrearmed\" from the Enter_USBMes, sage or\nU sFtaPte as apCparbolper Pialuteg (see ,\nand ) when an is received and the Port is\noperating as a PE_ oUrE iUs _aE nter_USB_R. eceived Policy EngineShall Device Policy Manager\nDevice Policy Manager Enter_USBMessage\nOn ePnotrliyc yto E tnhgei neShall Accept sMtaetses athgee WaitMessa ge inRfoerjemc tthMee ssage . The\nresponds with an indication of whether the is to be accepted or rejected.\nThe Policy Engine Shall send either an PE_SRC_R, ae ady P E_SNK_R oera ad y PE _CBL_Re aads yappropriate.\nThe transition back to the , or state as\napp\uf06cropriate whenA:cceptMessage WaitMessage RejectMessage\nEither an , a or a has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 881\n8.3.3.17 Security State Diagrams\n8.3.3.17.1 Send Security Request State Diagram\nFigure 8.168, \"Send security request State Diagram\" Source Sink\nDevice Policy Manager Section 6.5.8, \"Security Messages\"\nshows the state diagram for a or on receiving a\nrequest from the Figure 8.1 to6 8se Snedn ad sseeccuurritiyty r erqeuqeusets. tS eSeta atles oD iagram .\nSend security request\nPE_Send_Security_Request\nfrom Device Policy Manager\nPE_SRC_Ready or\nPE_SNK_Ready Actions on entry:\nSend Security_Request Message\nSecurity_Request\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.17.1.1 PE_Send_Security_Request State\nPolicy EngineShall PE_Send_Security_Request PE_SRC_Ready\nPE_SNK_Ready Device Policy Manager\nThe transition to the state, from either the or\nPstEa_tSee, nddue_S teoc au rrietqyu_Resetq tuoe ssetnd a securPitoyli rcey qEunegsitn feroShma tlhle Security_Reques.t Message\nOn ePnotrliyc yto E tnhgei neShall state the PE_SRC_Read y P Ese_SnNdK a_ Ready .\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Security_RequestMessage and ) when:\nThe has been sent.\nPage 882 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.17.2 Send Security Response State Diagram\nFigure 8.169, \"Send security response State Diagram\" Source Sink Cable Plug\nSecurity_RequestMessage Section 6.5.8, \"Security Messages\"\nshows the state diagram for a , or on\nreceiving a F igure 8.. 1S6ee9 aSleson d security response State Diagr.am\nSecurity_Request Message\nreceived PE_Send_Security_Response\nPE_SRC_Ready,\nActions on entry:\nPE_SNK_Ready or Get present Security response from Device Policy Manager\nPE_CBL_Ready Security_Response Send Security_Response Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.17.2.1 PE_Send_Security_Response State\nPolicy EngineShall PE_Send_Security_Response PE_SRC_Ready\nPE_SNK_Ready PE_CBL_Ready Security_RequestMessage\nThe transition to the state, from either the ,\nPorE _Send_Security _sRtaetsep, ownhseen a Policy Engin eShall is received.\nDevice Policy Manager Security_ResponseMessage\nOn entry to the state the request the appropriate response from\nthe Policy EngineShall and then send a PE_SRC_R eady PE _bSaNsKed_R oena tdhyis stPaEtu_sC.BL_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure\n8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the , or state as\nappropriate (see , and\n\uf06c Security_ResponseMe)s swagheen:\nThe has been successfully sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 883\n8.3.3.17.3 Security Response Received State Diagram\nFigure 8.170, \"Security response received State Diagram\" Source Sink\nSecurity_ResponseMessage Section 6.5.8, \"Security Messages\"\nshows the state diagram for a or on receiving\na Fig. uSreee 8al.s1o7 0 Security response received S.tate Diagram\nSecurity_Response Message\nreceived PE_Security_Response_Received\nPE_SRC_Ready or Actions on entry:\nPE_SNK_Ready Inform Device Policy Manager of the security response\ndetails.\nDPM informed\nPower = Explicit Contract\nPD = Connected\n8.3.3.17.3.1 PE_Security_Response_Received State\nPolicy EngineShall PE_Security_Response_Received PE_SRC_Ready\nPE_SNK_Ready Security_ResponseMessage\nThe transition to the state, from either the or\nPwEh_eSne cau rity_Response_Rec eived is recePivoelidcy. EngineShall Device Policy Manager\nOn entry to the state the inform the of\nthe dPeotlaiiclys Eonf gthinee sSehcuarlilty response. PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8.203, \"Cable Ready\nTSthaet e Diagram\" transition back to either the or state as appropriate (see\n, and\n\uf06c Dev)i wceh Peonl:icy Manager\nThe has been informed.\nPage 884 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.18 Firmware Update State Diagrams\n8.3.3.18.1 Send Firmware Update Request State Diagram\nFigure 8.171, \"Send firmware update request State Diagram\" Source Sink\nDevice Policy Manager Section 6.5.9,\n\"Firmware Update Messages\" shows the state diagram for a or on\nreceiving a request from the to send a firmware update request. See also\nFigu.re 8.171 Send firmware update request State Diagram\nSend firmware update request\nfrom Device Policy Manager PE_Send_Firmware_Update_Request\nPE_SRC_Ready or\nPE_SNK_Ready Actions on entry:\nSend Firmware_Update_Request Message\nFirmware_Update_Request\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.18.1.1 PE_Send_Firmware_Update_Request State\nPolicy EngineShall PE_Send_Firmware_Update_Request\nPE_SRC_Ready PE_SNK_Ready Device Policy\nTMhaen ager transition to the state, from either the\nor state, due to a request to send a firmware update request from the\n. PE_Send_Firmware_Update_Request Policy EngineShall\nFirmware_Update_RequestMessage\nOn entry to the state the send a\nPolicy EngineShall . PE_SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to either the or state as appropriate (see\n\uf06c Firmware_Update_RequestM aensds age ) when:\nThe has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 885\n8.3.3.18.2 Send Firmware Update Response State Diagram\nFigure 8.172, \"Send firmware update response State Diagram\" Source Sink Cable\nPlug Firmware_Update_RequestMessage Section 6.5.9, \"Firmware Update Messages\"\nshows the state diagram for a , or\non receiving a Figure 8.172 Send firm ware u.p Sdeaet ael sroe sponse State Diagram .\nFirmware_Update_Request\nMessage received PE_Send_Firmware_Update_Response\nPE_SRC_Ready,\nActions on entry:\nPE_SNK_Ready or Get present firmware update response from Device Policy Manager\nPE_CBL_Ready Firmware_Update_Response Send Firmware_Update_Response Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.18.2.1 PE_Send_Firmware_Update_Response State\nPolicy EngineShall PE_Send_Firmware_Update_Response\nPE_SRC_Ready PE_SNK_Ready PE_CBL_Ready Firmware_Update_RequestMessage\nThe transition to the state, from either the\n, PE_Send_Firmw oarr e_Update_Resp sotnastee, when a Policy EngineShall is received.\nDevice Policy Manager Firmware_Update_ResponseMessage\nOn entry to the state the request the appropriate\nresponse from the and then send a based on this\nstatuPso.licy EngineShall PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure\n8T.h2e0 3, \"Cable Read y Stat etr Daniasgitriaomn \"back to either the , or state as\nappropriate (see , and\n\uf06c Firmware_Update_Res)p wohnesne:Message\nThe has been successfully sent.\nPage 886 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.18.3 Firmware Update Response Received State Diagram\nFigure 8.173, \"Firmware update response received State Diagram\" Source Sink\nFirmware_Update_ResponseMessage Section 6.5.9, \"Firmware Update Messages\"\nshows the state diagram for a or on\nreceiving a Figure 8.173 Firm ware up.d Saetee a rlseos ponse received State Diagram .\nFirmware_Update_Response\nMessage received PE_Firmware_Update_Response_Received\nPE_SRC_Ready or\nActions on entry:\nPE_SNK_Ready Inform Device Policy Manager of the firmware update\nresponse details.\nDPM informed\nPower = Explicit Contract\nPD = Connected\n8.3.3.18.3.1 PE_Firmware_Update_Response_Received State\nPolicy EngineShall PE_Firmware_Update_Response_Received\nPE_SRC_Ready PE_SNK_Ready Firmware_Update_ResponseMessage\nThe transition to the state, from either the\noPrE _Firmware_Up dwahteen_R ae sponse_Received Pol icy Engin ies Srhecaellived. Device Policy\nManager\nOn entry to the state the inform the\nPolic yo fE tnhgei ndeeStahialsl lof the firmware update responPsEe_.SRC_Ready PE_SNK_Ready\nFigure 8.132, \"Source Port State Diagram\" Figure 8.133, \"Sink Port State Diagram\" Figure 8.203, \"Cable Ready\nSTthaet e Diagram\" transition back to either the or state as appropriate (see\n, and\n\uf06c Dev)i wceh Peonl:icy Manager\nThe has been informed.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 887\n8.3.3.19 Dual-Role Port State Diagrams\nSource Sink Shall Source SinkPolicy Engine\nShall Power Role Swap PE_SRC_Ready\nDPEu_aSl-NRKo_lRe ePaodrtys that combiSnhea ll and USB fDuenfcatuioltn Oaplietyra tion comHparirsde Reset and state\nmachines. In addition they have the capability to perform a from the or\nstates and retSuhranl lto [USB Typ oen-C a 2 .4]DRP .\n8Th.3e .S3ta.t1e9 D.i1agrams in th iDs sFePct itoon UFP aDppaltya to R eovelrey Swap State D iagr. am\nFigure 8.174, \"DFP to UFP Data Role Swap State Diagram\"\nData Role Swap DFP UFP Shall Hard Reset\nshows the additional state diagram required to perform\na from to operation and the changes that be followed for error and\nhandling. Figure 8.174 DFP to UFP Data Role Swap State Diagram\nDR_Swap message received &\nPE_SRC_Hard_Reset or in Modal Operation\nPE_SNK_Hard_Reset PE_SRC_Ready or\nPE_SNK_Ready\n(DFP)\nData Role Swap required\n(indication from\nMessage sent Device Policy Manager)\nDR_Swap message received & Reject message received |\nnot in Modal Operation Wait message received |\nSenderResponseTimer\ntimeout\nPE_DRS_DFP_UFP_ PE_DRS_DFP_UFP_Evaluate_Swap PE_DRS_DFP_UFP_\nReject_Swap Dat F a u R rt o h l e e r S e w va a l p u a n t o io t n o k | Send_Swap\nA S M e c e n t s i d o s a n R g s e e o j e a n c s t e a o n p r t p r W y ro : a p it r iate required A G re c e q t t i u e o e v n s a s t l u o fr n a o t e m io n n t D r o e y f v : i D c a e t P a o R li o c l y e M Sw an ap ag er A S In e c i n t t i i d o a n S li s w z e o a n p a n e D d n R t r r m u y n : e ssage\nPower = Explicit Contract SenderResponseTimer\nPower = Explicit Contract PD = Connected\nPD = Connected Power = Explicit Contract\nPD = Connected\nData Role Swap ok\nAccept received\nPE_DRS_DFP_UFP_\nAccept_Swap\nActions on entry:\nSend Accept Message\nPower = Explicit Contract\nPD = Connected\nAccept message\nsent\nPE_DRS_DFP_UFP_\nChange_to_UFP\nActions on entry:\nRequest Device Policy Manager to\nchange port to UFP\nPower = Explicit Contract\nPD = Connected\nPort changed to UFP\nPE_SRC_Ready or\nPE_SNK_Ready\n(UFP)\n8.3.3.19.1.1 PE_SRC_Ready or PE_SNK_Ready State\nData Role Swap Shall PE_SRC_Ready PE_SNK_Ready\nThe process start only from either the or state where power\nis staPbolleic.y EngineShall PE_DRS_DFP_UFP_Evaluate_Swap\nThe\uf06c DR_Swa pMes tsraagnesition to the state when:\nA is received and\nPage 888 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c Active Mode Modal Operation\nPoliTcyh eErneg ainree Snhoa ll s (not in PE_SRC_Har).d_Reset PE_SNK_Hard_Reset\nThe\uf06c DR_Swa pMes tsraagnesition to either the or states when:\n\uf06c A is rAeccteivive eMdo adned Modal Operation\nPoliTcyh eErneg ainree Sohnael olr more PEs_ D(RS_DFP_UFP_Sen).d_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when:\n8.3.3.1T9h.e1 .2 PE_DR inSd_iDcaFtePs_ tUhaFtP a_ Evaluate_Sw iasp re Sqtuairteed.\nPE_DRS_DFP_UFP_Evaluate_Swap Policy EngineShall Device Policy Manager\nData Role Swap\nOn entry to the state the ask the\nwhetPhoelirc ay EngineShall can be made. PE_DRS_DFP_UFP_Accept_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when:\nPoliTcyh eE ngineShall indicaPteEs_ DthRaSt_ aD FP_UFP_Reject_ Sisw OaKp.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when:\n\uf06c The inDdaitcaa tReosl eth Sawt aap is not OK.\n8.3.3.1O9r. 1fu.r3ther evaluati o Pn Eof_ tDhRe S_DFP_UFP_A recqcueepstt _isS wneaedpe Sd.tate\nPE_DRS_DFP_UFP_Accept_Swap Policy EngineShall Protocol Layer\nAcceptMessage\nOn entry to the state the request the to send an\nPol icy Engin.eShall PE_DRS_DFP_UFP_Change_to_UFP\nThe\uf06c Accep tMes staragnesition to the state when:\n8.3.3.1T9h.e1 .4 P hEas_ DbeReSn _sDenFtP. _UFP_Change_to_UFP State\nPE_DRS_DFP_UFP_Change_to_UFP Policy EngineShall Device Policy Manager\nDFP UFP\nOn entry to the state the request the\nto chPaonlgicey t Ehneg PinoertS fhroamll a to a . PE_SRC_Ready PE_SNK_Ready\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or U sFtaPte when:\n8.3.3.1T9h.e1 .5 PE_DR inSd_iDcaFtePs_ tUhaFtP th_Se ePnordt _hSaws baepen S cthaatneged to a .\nPE_DRS_DFP_UFP_Send_Swap Policy EngineShall Protocol Layer\nDR_SwapMessage Shall SenderResponseTimer\nOn entry to the state the request the to send a\nPE a_nDdR S_DFP s_tUarFtP t_hSee nd_Swap Policy. EngineShall SenderResponseTimer\nOn ePxoitl ifcryo Emn tghine eShall DFP Sh satallte the P Es_tSoRp Cth_Ree ady PE_SNK_Ready .\nThe continue as a and transition to either the or state\nwhe\uf06cn: RejectMessage\n\uf06c A Wai tMessag eis received.\n\uf06c Or a Sen derResp iosn rseecTeiimveedr.\nPoliOcyr Ethneg ineShall timPEe_sD oRuSt._DFP_UFP_Change_to_UFP\nThe\uf06c Accept Mess atrgaensition to the state when:\n8.3.3.1A9n. 1.6 iPs Ere_cDeiRveSd_.DFP_UFP_Reject_Swap State\nPE_DRS_DFP_UFP_Reject_Swap Policy EngineShall Protocol Layer\nOn entry to the state the request the to send:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 889\n\uf06c RejectMessage Data Role Swap\n\uf06c A WaitM essage if the device is unable to pDearftoar Rmo lae Swap at this time.\nNote: A if further evaluation of theP ort Partner request DisR r_eSqwuiarpedM.essage\nSection 6.3.12.3, \"Wait in response to a DR_Swap Message\"\nIn this case it is expected that one of the s will send a at a later time (see\nPolicy EngineShall DFP Shall ). PE_SRC_Ready PE_SNK_Ready\nThe continue as a and transition to either the or state\nwhe\uf06cn: Reject WaitMessage\nThe or has been sent.\nPage 890 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.2 UFP to DFP Data Role Swap State Diagram\nFigure 8.175, \"UFP to DFP Data Role Swap State Diagram\"\nData Role Swap DRPUFP DFP Shall Hard Reset\nshows the additional state diagram required to perform\na from to operation and the changes that be followed for error and\nhandling. Figure 8.175 UFP to DFP Data Role Swap State Diagram\nDR_Swap Message received &\nPE_SRC_Hard_Reset or in Modal Operation\nPE_SNK_Hard_Reset\nPE_SRC_Ready or\nPE_SNK_Ready\n(UFP)\nReject Message received |\nWait Message received |\nSenderResponseTimer\ntimeout\nDR_Swap Message received & Data Role Swap required\nMessage sent not in Modal Operation (indication from\nDevice Policy Manager)\nPE_DRS_UFP_DFP_ PE_DRS_UFP_DFP_Evaluate_Swap PE_DRS_UFP_DFP_\nReject_Swap Data Role Swap not ok | Send_Swap\nA Se c n ti d o n R s e o je n c t e o n r tr W y: ait Message as Furth r e e r q e u v ir a e lu d ation A G c e t t i e o v n a s l u on at e io n n tr o y f : Data Role Swap A Se c n ti d o n S s w o a n p e D n R t r M y: essage\nappropriate request from Device Policy Manager Initialize and run\nSenderResponseTimer\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected Power = Explicit Contract\nPD = Connected\nData Role Swap ok\nPE_DRS_UFP_DFP_ Accept received\nAccept_Swap\nActions on entry:\nSend Accept Message\nPower = Explicit Contract\nPD = Connected\nAccept Message\nsent\nPE_DRS_UFP_DFP_\nChange_to_DFP\nActions on entry:\nRequest Device Policy Manager to\nchange port to DFP\nPower = Explicit Contract\nPD = Connected\nPort changed to DFP\nPE_SRC_Ready or\nPE_SNK_Ready\n(DFP)\n8.3.3.19.2.1 PE_SRC_Ready or PE_SNK_Ready State\nData Role Swap Shall PE_SRC_Ready PE_SNK_Ready\nThe process start only from the either the or state where\npowePro liisc yst Eanbglei.neShall PE_DRS_UFP_DFP_Evaluate_Swap\nThe\uf06c DR_Swa pMes tsraagnesition to the state when:\n\uf06c A Active M iso dreeceived anMdodal Operation\nThere are no s (not in ).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 891\nPolicy EngineShall PE_SRC_Hard_Reset PE_SNK_Hard_Reset\nThe\uf06c DR_Swa pMes tsraagnesition to either the or states when:\n\uf06c A is rAeccteivive eMdo adned Modal Operation\nPoliTcyh eErneg ainree Sohnael olr more PEs_ D(RS_UFP_DFP_Sen).d_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when:\n8.3.3.1T9h.e2 .2 PE_DR inSd_iUcaFtePs_ tDhaFtP a_ Evaluate_Sw iasp re Sqtuairteed.\nPE_DRS_UFP_DFP_Evaluate_Swap Policy EngineShall Device Policy Manager\nData Role Swap\nOn entry to the state the ask the\nwhetPhoelirc ay EngineShall can be made. PE_DRS_UFP_DFP_Accept_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when:\nPoliTcyh eE ngineShall indicaPteEs_ DthRaSt_ aU FP_DFP_Reject_ Sisw OaKp.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Data Role Swap state when:\n\uf06c The inDdaitcaa tReosl eth Sawt aap is not OK.\n8.3.3.1O9r. 2fu.r3ther evaluati o Pn Eof_ tDhRe S_UFP_DFP_A recqcueepstt _isS wneaedpe Sd.tate\nPE_DRS_UFP_DFP_Accept_Swap Policy EngineShall Protocol Layer\nAcceptMessage\nOn entry to the state the request the to send an\nPol icy Engin.eShall PE_DRS_UFP_DFP_Change_to_DFP\nThe\uf06c Accep tMes staragnesition to the state when:\n8.3.3.1T9h.e2 .4 P hEas_ DbeReSn _sUenFtP. _DFP_Change_to_DFP State\nPE_DRS_UFP_DFP_Change_to_DFP Policy EngineShall Device Policy Manager\nUFP DFP\nOn entry to the state the request the\nto chPaonlgicey t Ehneg PinoertS fhroamll a to a . PE_SRC_Ready PE_SNK_Ready\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or D sFtaPte when:\n8.3.3.1T9h.e2 .5 PE_DR inSd_iUcaFtePs_ tDhaFtP th_Se ePnordt _hSaws baepen S cthaatneged to a .\nPE_DRS_UFP_DFP_Send_Swap Policy EngineShall Protocol Layer\nDR_SwapMessage Shall SenderResponseTimer\nOn entry to the state the request the to send a\nPE a_nDdR S_UFP s_tDarFtP t_hSee nd_Swap Policy. EngineShall SenderResponseTimer\nOn ePxoitl ifcryo mEn tghine eShall UFP Sh satallte the P Es_tSoRp Cth_Ree ady PE_SNK_Ready .\nThe continue as a and transition to either the or state\nwhe\uf06cn: RejectMessage\n\uf06c A Wai tMessag eis received.\n\uf06c Or a Sen derResp iosn rseecTeiimveedr.\nPoliOcyr Ethneg ineShall timPEe_sD oRuSt._UFP_DFP_Change_to_DFP\nThe\uf06c Accept Mess atrgaensition to the state when:\n8.3.3.1A9n. 2.6 iPs Ere_cDeiRveSd_.UFP_DFP_Reject_Swap State\nPE_DRS_UFP_DFP_Reject_Swap Policy EngineShall Protocol Layer\nOn e\uf06cntry tRo etjheec tMessage state the Data Role Swap request the to send:\nA if the device is unable to perform a at this time.\nPage 892 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c WaitMessage Data Role Swap\nNote: A if further evaluation of theP ort Partner request DisR r_eSqwuiarpedM.essage\nSection 6.3.12.3, \"Wait in response to a DR_Swap Message\"\nIn this case it is expected that one of the s will send a at a later time (see\nPolicy EngineShall UFP Shall ). PE_SRC_Ready PE_SNK_Ready\nThe continue as a and transition to the either the or\nstat\uf06ce when: Reject WaitMessage\nThe or has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 893\n8.3.3.19.3 Policy Engine in Source to Sink Power Role Swap State Diagram\nSource Sink Shall Source SinkPolicy Engine\nShall Power Role Swap PE_SRC_Ready\nDShuaalll-Role PortsU tShBa tD ceofmaubltin Oep eration and Har fdu nRcetsieotnality comprise and state\nmachines. In addition, they have the capability to do a from the state and\nFigur er e8t.1u7rn6, t\"oD ual-Role Port in Source oton Sai nk Power Ro.le Swap State Diagram\"\nPower Role Swap Source SinkPower Role Shall\nshows the additional state diagram\nrequired to perform a from to s and the changes that be followed for\nerror handling.Figure 8.176 Dual-Role Port in Source to Sink Power Role Swap State Diagram\nMessage sent\nPE_SRC_Ready\nReject Message received |\nWait Message received |\nPR_Swap Message received Power Role Swap required SenderResponseTimer\n(indication from timeout\nDevice Policy Manager)\nPE_PRS_SRC_SNK_ PE_PRS_SRC_SNK_\nReject_PR_Swap Power Role Swap not ok | Evaluate_Swap\nFurther evaluation\nActions on entry: required Actions on entry: PE_PRS_SRC_SNK_\nSend Reject or Wait Message as Get evaluation of swap request Send_Swap\nappropriate from Device Policy Manager\nActions on entry:\nPower = Explicit Contract Power = Explicit Contract Send PR_Swap Message\nPD = Connected PD = Connected Initialize and run\nSenderResponseTimer\nPower Role Swap ok\nPower = Explicit Contract\nPD = Connected\nPE_PRS_SRC_SNK_\nAccept_Swap\nActions on entry:\nAccept received\nSend Accept Message\nPower = Explicit Contract\nPD = Connected\nAccept Message\nsent\nPE_PRS_SRC_SNK_\nTransition_to_off\nActions on entry:\nTell Device Policy Manager to turn off\npower supply\nPower = Transition to stop sourcing\nPD = Connected\nSource turned off\nPE_PRS_SRC_SNK_\nAssert_Rd\nActions on entry:\nRequest DPM to assert Rd\nPower = Source off\nPD = Connected\nRdasserted\nPSSourceOnTimer Timeout |\nPS_RDY Message not sent after retries (no GoodCRC received)\nPE_PRS_SRC_SNK_\nWait_Source_on\nActions on entry:\nSend PS_RDY Message\nInitialize and run PSSourceOnTimer\nPower = Source off\nPD = Connected\nPS_RDY Message\nreceived\nErrorRecovery PE_SNK_Startup\nPage 894 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.3.1 PE_SRC_Ready State\nPower Role Swap Shall PE_SRC_Ready\nThe Policy EngineSha pllrocess start PoEn_lPy RfrSo_mSR tCh_eS NK_Evaluate_S wstaapte where power is stable.\nThe\uf06c PR_Swa pMes straagnesition to the state when:\nPoliAcy EngineSh all is received.PE_PRS_SRC_SNK_Send_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when:\n8.3.3.1T9h.e3 .2 PE_PR inSd_iScRatCes_ SthNaKt a_ Evaluate_Swa pis Sretqautiered.\nPE_PRS_SRC_SNK_Evaluate_Swap Policy EngineShall Device Policy Manager\nPower Role Swap\nOn entry to the state the ask the\nwhetPhoelirc ay EngineShall can be made.PE_PRS_SRC_SNK_Accept_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when:\nPoliTcyh eE ngineShall indicaPteEs_ PthRaSt_ SaR C_SNK_Reject_Sw isa OpK.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when:\n\uf06c The inPdoiwcaetre Rs otlhea St wa ap is not OK.\n8.3.3.1O9r. 3fu.r3ther evaluati o Pn Eof_ tPhRe S_SRC_SNK_Ac rceeqpuets_tS iws naepe dSetda.te\nPE_PRS_SRC_SNK_Accept_Swap Policy EngineShall Protocol Layer\nAcceptMessage\nOn entry to the state the request the to send an\nPol icy Engin.eShall PE_PRS_SRC_SNK_Transition_to_off\nThe\uf06c Accep tMes staragnesition to the state when:\n8.3.3.1T9h.e3 .4 P hEas_ PbeReSn_ sSeRntC._SNK_Transition_to_off State\nPE_PRS_SRC_SNK_Transition_to_off Policy EngineShall Device Policy Manager\nSource\nOn entry to the state the request the\nto tuPrnol oicfyf tEhneg ineSha.ll PE_PRS_SRC_SNK_Assert_Rd\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Source state when:\n8.3.3.1T9h.e3 .5 PE_PR inSd_iScRatCes_ SthNaKt t_hAe ssert_ Rhads bSeteant eturned off.\nPE_PRS_SRC_SNK_Assert_Rd Policy EngineShall Device Policy Manager\nCC R R\nOn entry to the state the request the to\nchanPgoel itchye E rnegsiisnteoSr haassllerted on the wiPrEe _fProRmS_ SRp Cto_S NdK. _Wait_Source_on\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the R state when:\n8.3.3.1T9h.e3 .6 PE_PR inSd_iScRatCes_ SthNaKt _dW isa aists_eSroteudr.ce_on State\nPE_PRS_SRC_SNK_Wait_Source_on Policy EngineShall Protocol Layer\nPS_RDYMessage Shall PSSourceOnTimer\nOn entry to the state the request the to send\na So aunrdce start theP olicy EngineShall . PSSourceOnTimer\nOn ePxiotl ifcryo mEn tghien eShall off state the PE_SNK_S tartu sptop the .\nThe\uf06c PS_RDY Messa tgreansition to the when: Source\nPoliAcy Engine Shall is received indEircraotrinRge tchoavte trhye remote is now supplying power.\nThe transition to the state when:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 895\n\uf06c PSSourceOnTimer\n\uf06c The PS_RDYMessage times out or GoodCRCMessage\nNote: The Soft Rese tShall N oist not sent after retries (a has not been received).\n8.3.3.19A.3 .7 PE_ bPeR inSi_tSiaRteCd_ iSnN thKis_ Scaesne.d_Swap State\nPE_PRS_SRC_SNK_Send_Swap Policy EngineShall Protocol Layer\nPR_SwapMessage Shall SenderResponseTimer\nOn entry to the state the request the to send a\nP Ea_nPdR S_SRC s_tSaNrtK t_hSee nd_Swap Policy. EngineShall SenderResponseTimer\nOn ePxiotl ifcryo mEn tghien eShall PE_SR Cs_tRateea tdhye stop the .\nThe\uf06c RejectM essag teransition to the state when:\n\uf06c A Wai tMessag eis received.\n\uf06c Or a Sen derResp iosn rseecTeiimveedr.\nPoliOcyr Ethneg ineShall timPEe_sP oRuSt_.SRC_SNK_Transition_to_off\nThe\uf06c Accept Mess atrgaensition to the state when:\n8.3.3.1A9n. 3.8 iPs Ere_cPeiRveSd_.SRC_SNK_Reject_Swap State\nPE_PRS_SRC_SNK_Reject_Swap Policy EngineShall Protocol Layer\nOn e\uf06cntry tRo etjheec tMessage state the Power Ro le Swa rpequest the to send:\n\uf06c A WaitM essage if the device is unable to pPeorwfoerrm R ao le Swap at this time.\nNote: A if further evaluation of theP ort Partner requesPt iRs_ rSewqaupireMde.ssage\nSection 6.3.12.2, \"Wait in response to a PR_Swap Message\"\nIn this case it is expected that one of the s will send a at a later time (see\nPolicy EngineShall PE_SRC_Ready ).\nThe\uf06c Rejec t W tariatnMsietisosnag teo the when:\nThe or has been sent.\nPage 896 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.4 Policy Engine in Sink to Source Power Role Swap State Diagram\nSink Source Shall Sink SourcePolicy Engine\nShall Power Role Swap PE_SNK_Ready\nDShuaalll-Role PortsU tShBa tD ceofmaubltin Oep erat iaonnd Har fdu nRcetsieotnality comprise and state\nmachines. In addition, they have the capability to do a from the state and\nFigur er e8t.1u7rn7, t\"oD ual-role Port in Sink to oSonu ar ce Power Ro.le Swap State Diagram\"\nPower Role Swap Sink SourcePower Role Shall\nshows the additional state diagram\nrequired to perform a from to s and the changes that be followed for\nerror handling.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 897\nFigure 8.177 Dual-role Port in Sink to Source Power Role Swap State Diagram\nMessage sent\nPE_SNK_Ready\nReject Message received |\nPower Role Swap required Wait Message received |\nPR_Swap Message received (indication from SenderResponseTimer\nDevice Policy Manager) timeout\nPE_PRS_SNK_SRC_ PE_PRS_SNK_SRC_\nReject_Swap Power Role Swap not ok | Evaluate_Swap\nFurther evaluation PE_PRS_SNK_SRC_\nActions on entry: required Actions on entry: Send_Swap\nSend Reject or Wait Message Get evaluation of swap request\nas appropriate from Device Policy Manager Actions on entry:\nSend PR_Swap Message\nPower = Explicit Contract Power = Explicit Contract Initialize and run SenderResponseTimer\nPD = Connected PD = Connected\nPower Role Swap ok Power = Explicit Contract\nPD = Connected\nPE_PRS_SNK_SRC_Accept_Swap\nActions on entry:\nSend Accept Message\nDisable Fast Role Swap Receiver if enabled Accept Message\nreceived\nPower = Explicit Contract\nPD = Connected\nAccept Message sent\nPE_PRS_SNK_SRC_\nTransition_to_off\nActions on entry:\nPSSourceOffTimer timeout Initialize and run PSSourceOffTimer\nTell Device Policy Manager to turn off\nPower Sink.\nPower = Transition to stop sinking\nPD = Connected\nPS_RDY Message received\nPE_PRS_SNK_SRC_\nAssert_Rp\nErrorRecovery Actions on entry:\nRequest DPM to assert Rp\nPower = Source off\nPD = Connected\nRpasserted\nPE_PRS_SNK_SRC_\nSource_on\nActions on entry:\nTell Device Policy Manager to turn on\nPS_RDY Message not sent Source\nafter retries (no GoodCRC received)\nActions on exit:\nSend PS_RDY Message\nPower = Transition to source on\nPD = Connected\nVBUS is at vSafe5V\nPE_SRC_Startup\n8.3.3.19.4.1 PE_SNK_Ready State\nPower Role Swap Shall PE_SNK_Ready\nThe Policy EngineSha pllrocess start PoEn_lPy RfrSo_mSN tKh_eS RC_Evaluate_Sw staapte where power is stable.\nThe transition to the state when:\nPage 898 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c PR_SwapMessage\nPoliAcy EngineSh all is received.PE_PRS_SNK_SRC_Send_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when:\n8.3.3.1T9h.e4 .2 PE_PR inSd_iScNatKes_ tShRatC a_ Evaluate_Swa pis Sretqautiered.\nPE_PRS_SNK_SRC_Send_Swap Policy EngineShall Device Policy Manager\nPower Role Swap\nOn entry to the state the ask the whether\na Policy EngineS chaanl lbe made. PE_PRS_SNK_SRC_Accept_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when:\nPoliTcyh eE ngineShall indicaPteEs_ PthRaSt_ SaN K_SRC_Reject_Sw isa OpK.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Power Role Swap state when:\n8.3.3.1T9h.e4 .3 PE_PR inSd_iScNatKes_ tShRatC a_ Accept_Swap Sist anotet OK.\nPE_PRS_SNK_SRC_Accept_Swap Policy EngineShall Protocol Layer\nAcceptMessage Shall Fast Role Swap\nOn entry to the state the request the to send an\nPol icy Engin aenSdh all disable the PE_PRS_SNK r_eScReCiv_Terr aifn tshitisio isn _etnoa_boflefd.\nThe\uf06c Accep tMes staragnesition to the state when:\n8.3.3.1T9h.e4 .4 P hEas_ PbeReSn_ sSeNntK. _SRC_Transition_to_off State\nPE_PRS_SNK_SRC_Transition_to_off Policy EngineShall\nPSSourceOffTimer Device Policy Manager Sink\nOn entry to the state the initialize and run the\nPolicy EngineS haanldl then request the ErrorRecovery to turn off the .\nThe\uf06c PSSou rceO ftfrTainmsietrion to the state when:\nPoliTcyh eE ngineShall times ouPt.E_PRS_SNK_SRC_Assert_Rp\nThe\uf06c PS_RDY Messa tgreansition to the state when:\n8.3.3.1A9 .4.5 i sP rEe_cPeiRveSd_.SNK_SRC_Assert_Rp State\nPE_PRS_SNK_SRC_Assert_Rp Policy EngineShall Device Policy Manager\nCC R R\nOn entry to the state the request the to\nchanPgoel itchye E rnegsiisnteoSr haassllerted on the wiPrEe _fProRmS_ SNd Kto_ SRpC. _Source_on\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the R state when:\n8.3.3.1T9h.e4 .6 PE_PR inSd_iScNatKes_ tShRatC _dS ios uasrsceert_eodn. State\nPE_PRS_SNK_SRC_Source_on Policy EngineShall Device Policy Manager\nSource\nOn entry to the state the request the to turn\non the . PE_PRS_SNK_SRC_Source_on Policy EngineShall PS_RDYMessage\nOn ePxiotl ifcryo mEn tghien eShall PE_SR sCta_Steta trhteu p send a .\nThe\uf06c Sourc e Port tVraBUnSsition vtoS athfee5 V state when:\nPoliTcyh eE ngineShall is at Er.rorRecovery\nThe\uf06c PS_RD YMe stsraagnesition to the G sotoadteC wRCheMne:ssage Soft Reset\nShall Not\nThe is not sent after retries (a has not been received). A\nbe initiated in this case.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 899\n8.3.3.19.4.7 PE_PRS_SNK_SRC_Send_Swap State\nPE_PRS_SNK_SRC_Send_Swap Policy EngineShall Protocol Layer\nPR_SwapMessage Shall SenderResponseTimer\nOn entry to the state the request the to send a\nPolicy EngineS ahnadl l initialize andP Eru_SnN tKh_eR eady .\nThe\uf06c RejectM essag teransition to the state when:\n\uf06c A Wai tMessag eis received.\n\uf06c Or a Sen derResp iosn rseecTeiimveedr.\nPoliOcyr Ethneg ineShall timPEe_sP oRuSt_.SNK_SRC_Transition_to_off\nThe\uf06c Accept Mess atrgaensition to the state when:\n8.3.3.1A9n. 4.8 iPs Ere_cPeiRveSd_.SNK_SRC_Reject_Swap State\nPE_PRS_SNK_SRC_Reject_Swap Policy EngineShall Protocol Layer\nOn e\uf06cntry tRo etjheec tMessage state the Power Ro le Swa rpequest the to send:\n\uf06c A WaitM essage if the device is unable to pPeorwfoerrm R ao le Swap at this time.\nNote: A if further evaluation of theP ort Partner requesPt iRs_ rSewqaupireMde.ssage\nSection 6.3.12.2, \"Wait in response to a PR_Swap Message\"\nIn this case it is expected that one of the s will send a at a later time (see\nPolicy EngineShall PE_SNK_Ready ).\nThe\uf06c Rejec t W tariatnMsietisosnag teo the state when:\nThe or has been sent.\nPage 900 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.5 Policy Engine in Source to Sink Fast Role Swap State Diagram\nSource Sink Shall Source SinkPolicy Engine\nShould Fast Role Swap PE_SRC_Ready\nDShuaalll-Role PortsU tShBa tD ceofmaubltin Oep eration and Har fdu nRcetsieotnality comprise and state\nmachines. In addition, they have the capability to do a from the state and\nFigur er e8t.1u7rn8, t\"oD ual-Role Port in Source o tno aS ink Fast Rol.e Swap State Diagram\"\nFast Role Swap Source SinkPower Role Shall\nshows the additional state diagram\nrequired to perform a from to s and the changes that be followed for\nerror handling.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 901\nFigure 8.178 Dual-Role Port in Source to Sink Fast Role Swap State Diagram\nPE_SRC_Ready\nFR_Swap Message received\nPE_FRS_SRC_SNK_\nEvaluate_Swap\nActions on entry:\nFast Role Swap not signaled Ask Device Policy Manager if Fast\nRole Swap signaled on CC wire\nPower = Implicit Contract\nPD = Connected\nFast Role Swap signaled\nPE_FRS_SRC_SNK_\nAccept_Swap\nActions on entry:\nSend Accept Message\nPower = Implicit Contract\nPD = Connected\nAccept Message\nAccept Message not sent after sent\nretries (no GoodCRC received)\nPE_FRS_SRC_SNK_\nTransition_to_off\nActions on entry:\nPE_SRC_Hard_Reset\nWait for VBUS to reach vSafe5V\nPower = Implicit contract\nPD = Connected\nVBUSat vSafe5V\nPE_FRS_SRC_SNK_\nAssert_Rd\nActions on entry:\nRequest DPM to assert Rd\nPower = Implicit contract\nPD = Connected\nRdasserted\nPE_FRS_SRC_SNK_\nPSSourceOnTimer Timeout | Wait_Source_on\nPS_RDY Message not sent after\nretries (no GoodCRC received) Actions on entry:\nSend PS_RDY Message\nInitialize and run PSSourceOnTimer\nPower = Implicit contract\nPD = Connected\nPS_RDY Message\nreceived\nErrorRecovery PE_SNK_Startup\nPage 902 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.5.1 PE_SRC_Ready State\nFast Role Swap Shall PE_SRC_Ready\nThe Policy EngineS hparlolcess start onPlEy_ fFrRomS_ StRheC _SNK_Evaluate _sStwatae pwhere power is stable.\nThe\uf06c FR_Sw apMe tsrsaangseition to the state when:\n8.3.3.1A9n. 5.2 P Eis_ rFeRceSiv_eSdR.C_SNK_Evaluate_Swap State\nPE_FRS_SRC_SNK_Evaluate_Swap Policy EngineShall Device Policy Manager\nFast Role Swap CC\nOn entry to the state the ask the\nwhetPhoelirc y EngineShall has been signalePdE o_nF RthSe_ SRC w_SiNreK._Accept_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Fast Role Swap state when:\nPoliTcyh eE ngineShall indicaPteEs_ StRhaCt_ Ha ard_Reset has been signaled.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Fast Role S swtaatpe when:\n8.3.3.1T9h.e5 .3 PE_FR inSd_SicRatCes_ SthNaKt a_ Accept_Swap is S ntoatt beeing signaled.\nPE_FRS_SRC_SNK_Accept_Swap Policy EngineShall Protocol Layer\nAcceptMessage\nOn entry to the state the request the to send an\nPol icy Engin.eShall PE_FRS_SRC_SNK_Transition_to_off\nThe\uf06c Accep tMes staragnesition to the state when:\nPoliTcyh eE ngineSh all has been senPtE._SRC_Hard_Reset\nThe\uf06c Accep tMes staragnesition to the GoodC RstCatMe ewsshaegne:\nNote: The Soft Res etShall N iso tnot sent after retries (a has not been received).\n8.3.3.19A.5 .4 PE_ bFeR inSi_tSiaRteCd_ iSnN thKis_ Tcarsaen. sition_to_off State\nPE_FRS_SRC_SNK_Transition_to_off Policy EngineShall VBUS\nvSafe5V\nOn entry to the state the wait until has discharged to\nPolic.y EngineShall PE_FRS_SRC_SNK_Assert_Rd\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the VBUS stavteS awfhe5enV:\n8.3.3.1T9h.e5 .5 PE_FR inSd_SicRatCes_ SthNaKt _Ass hearst d_iRscdh aSrtgaetde to .\nPE_FRS_SRC_SNK_Assert_Rd Policy EngineShall Device Policy Manager\nCC R R\nOn entry to the state the request the to\nchanPgoel itchye E rnegsiisnteoSr haassllerted on the wiPrEe _fFrRomS_ SRp Cto_S NdK._Wait_Source_on\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the R state when:\n8.3.3.1T9h.e5 .6 PE_FR inSd_SicRatCes_ SthNaKt _Wd isa aists_eSroteudr.ce_on State\nPE_FRS_SRC_SNK_Wait_Source_on Policy EngineShall Protocol Layer\nPS_RDYMessage Shall PSSourceOnTimer\nOn entry to the state the request the to send\na So aunrdce start theP olicy EngineShall . PSSourceOnTimer\nOn ePxiotl ifcryo mEn tghien eShall off state the PE_SNK_S tartu sptop the .\nThe\uf06c PS_RDY Messa tgreansition to the Nwehwe nSo:urce R\nPoliAcy Engine Shall is received indEircraotrinRge tchoavte trhye is now applying p.\nThe transition to the state when:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 903\n\uf06c PSSourceOnTimer\n\uf06c The PS_RDYMessage times out or GoodCRCMessage\nNote: The Soft Rese tShall N oist not sent after retries (a has not been received).\nA be initiated in this case.\nPage 904 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.6 Policy Engine in Sink to Source Fast Role Swap State Diagram\nSink Source Shall Sink SourcePolicy Engine\nShould Fast Role Swap PE_SNK_Ready\nDShuaalll-Role PortsU tShBa tD ceofmaubltin Oep erat iaonnd Har fdu nRcetsieotnality comprise and state\nmachines. In addition, they have the capability to do a from the state and\nFigur er e8t.1u7rn9, t\"oD ual-role Port in Sink to oSno uar ce Fast Role. Swap State Diagram\"\nFast Role Swap Sink SourcePower Role Shall\nshows the additional state diagram\nrequired to perform a from to s and the changes that be followed for\nerror handling.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 905\nFigure 8.179 Dual-role Port in Sink to Source Fast Role Swap State Diagram\nFast Swap signal detected on CC Wire\nPE_FRS_SNK_SRC_\nStart_AMS\nActions on entry:\nNotify the Protocol Layer that the first\nMessage in the AMS will follow.\nPower = Implicit Contract\nPD = Connected\nProtocol Layer notified\nPE_FRS_SNK_SRC_\nSenderResponseTimer timeout | Send_Swap\nFR_Swap Message not sent Actions on entry:\nafter retries (no GoodCRC received) Send FR_Swap Message\nInitialize and run\nSenderResponseTimer\nPower = Implicit Contract\nPD = Connected\nAccept Message\nreceived\nPE_FRS_SNK_SRC_\nTransition_to_off\nPSSourceOffTimer timeout Actions on entry:\nInitialize and run PSSourceOffTimer\nPower = Implicit Contract\nPD = Connected\nPS_RDY Message received\nPE_FRS_SNK_SRC_Vbus_Applied\nActions on entry:\nRequest Device Policy Manager to notify\nwhen vSafe5v is being applied by the local\npower source.\nPower = Implicit Contract\nPD = Connected\nNew Source is applying vSafe5V\nPE_FRS_SNK_SRC_\nAssert_Rp\nActions on entry:\nRequest DPM to assert Rp\nPower = Implicit Contract\nPD = Connected\nRpasserted\nPE_FRS_SNK_SRC_\nSource_on\nPS_RDY Message not sent\nafter retries (no GoodCRC received) Actions on entry:\nSend PS_RDY Message\nPower = Transition to source on\nPD = Connected\nPS_RDY Message sent\nErrorRecovery PE_SRC_Startup\nPage 906 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.6.1 PE_FRS_SNK_SRC_Start_AMS State\nPolicy EngineShall PE_FRS_SNK_SRC_Start_AMS\nExplicit Contract\nThe transition to the state from any other state provided there is\nan \uf06c Sink Ca pina bpillaitciee swhen: Initial Source Policy Engine Fast\nRole Swap\nThe received from the by the has at least one of the\n\uf06c bits set. Initial Source\nFast Role Swap Sink Capabilities\nThe system has sufficient reserve power to provide the requested current to the , as\n\uf06c requDesetveicde i nPo tlhicey Manager bits in the Fast Role Swap , and is willing to dedicate it to tChCe Port\nThe PE_FRS_SNK_SRC_S tinadrtic_AatMesS that a Policy Engin seigSnhaall lhas been dePtreocttoecdo ol nL athyeer wire.\nMessage AMS\nOn entry to the state the notify the that the first\nPolic iyn E anng ineS whaillll follow. PE_FRS_SNK_SRC_Send_Swap\nThe\uf06c Proto col La ytrearnsition to the state when:\n8.3.3.1T9h.e6 .2 h PaEs b_FeeRnS n_oStNifiKed_.SRC_Send_Swap State\nPE_FRS_SNK_SRC_Send_Swap Policy EngineShall Protocol Layer\nFR_SwapMessage Shall SenderResponseTimer\nOn entry to the state the request the to send an\nPolicy Engine Sahnadl l initialize andP Eru_FnR tSh_eS NK_SRC_Transition_to_.off\nThe\uf06c Accept Mess atrgaensition to the state when:\nPoliAcyn E ngineS hall is received. ErrorRecovery\nThe\uf06c Sende rRes ptroannsseiTtiiomne tro the state when:\n\uf06c The FR_SwapMessage times out or GoodCRCMessage Soft Reset\nShall Not\nThe is not sent after retries (a has not been received). A\n8.3.3.19.6.3 be initiat e Pd Ein_ FthRisS c_aSsNe.K_SRC_Transition_to_off State\nPE_FRS_SNK_SRC_Transition_to_off Policy EngineShall\nPSSourceOffTimer Device Policy Manager Sink\nOn entry to the state the initialize and run the\nPolicy EngineS haanldl then request the ErrorRecovery to turn off the .\nThe\uf06c PSSou rceO ftfrTainmsietrion to the state when:\nPoliTcyh eE ngineShall times ouPt.E_FRS_SNK_SRC_VBUS_Applied\nThe\uf06c PS_RDY Messa tgreansition to the state when:\n8.3.3.1A9 .6.4 i sP rEe_cFeiRveSd_.SNK_SRC_VBUS_Applied State\nPE_FRS_SNK_SRC_VBUS_Applied Policy Engine Device\nPolicy Manager vSafe5V VBUS Section 5.8.6.3, \"Fast Role Swap\nODnet eecnttiroyn t\"o the state the waits for a notification from the\nthat the local power source has applied to (see\nNote: ).\nThis could have already been applied prior to entering this state or could be applied while waiting in this\nPolicys Etantgei.neShall PE_FRS_SNK_SRC_Assert_Rp\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the vSafe5V state when:\n8.3.3.1T9h.e6 .5 PE_FR inSd_SicNatKes_ SthRaCt _Asser tis_ Rbepin Sgt aaptpelied.\nPE_FRS_SNK_SRC_Assert_Rp Policy EngineShall Device Policy Manager\nCC R R\nOn entry to the state the request the to\nchange the resistor asserted on the wire from d to p.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 907\nPolicy EngineShall PE_FRS_SNK_SRC_Source_on\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the R state when:\n8.3.3.1T9h.e6 .6 PE_FR inSd_SicNatKes_ SthRaCt _Sp oisu arssceer_teodn. State\nPE_FRS_SNK_SRC_Source_on Policy EngineShall Device Policy Manager\nSource\nOn entry to the state the request the to turn\non the . PE_FRS_SNK_SRC_Source_on Policy EngineShall PS_RDYMessage\nOn ePxiotl ifcryo mEn tghien eShall PE_SR sCta_Steta thrteu p send a .\nThe\uf06c PS_RD YMe stsraagnesition to the state when:\nPoliTcyh eE ngineSh all has been seEnrtr.orRecovery\nThe\uf06c PS_RD YMe stsraagnesition to the G sotoadteC wRCheMne:ssage Soft Reset\nShall Not\nThe is not sent after retries (a has not been received). A\nbe initiated in this case.\nPage 908 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.7 Dual-Role (Source Port) Get Source Capabilities State Diagram\nFigure 8.180, \"Dual-Role (Source) Get Source Capabilities diagram\"\nSource Device Policy Manager Port Partner\nSource Capabilities Section , \"A Source Port Shall report its s Chaopwasb tilhitei esst ainte a d sieargireasm of f 3o2r -ab Dit uPaolw-Reorl De adteav ice,\nOprbejescetnst (lyse oep Tearbatlein6g. 7a,s \" Pa ower Da, otan Orebcjeecivt\"in) ga sa p raerqtu oefs at fSrooumr cteh_eC apabilities Message (s etoe Fgeigtu trhee 6.13, \"Examp'lse\nCapabilities Messag. eS weeit ahl s2o P ower Data Objects\"). Power Data Objects are used to convey a Source Port's Capabilities\nto provide power including Dual-Role Power ports presently operating as a Sink.\"\nFigure 8.180 Dual-Role (Source) Get Source Capabiliti.es diagram\nget source capabilities request PE_DR_SRC_Get_Source_Cap\nfrom Device Policy Manager\nActions on entry:\nPE_SRC_Ready If SPR Source Capabilities requested Send Get_Source_Cap Message1\nIf EPR Source Capabilities requested Send EPR_Get_Source_Cap Message1\nInitialize and run SenderResponseTimer\nSPR Souce Capabilities requested & Source_Capabilities Message received |\nEPR Souce Capabilities requested & EPR_Source_Capabilities Message received |\nSenderResponseTimer Timeout\nActions on exit:\nPass source capabilities/outcome to Device Policy Manager\nPower = Explicit Contract\nPD = Connected\n1) Either SPR or EPR Source Capabilities Maybe requested, regardless of whether or not the Source is currently operating in SPR or EPR Mode.\n8.3.3.19.7.1 PE_DR_SRC_Get_Source_Cap State\nPolicy EngineShall PE_DR_SRC_Get_Source_Cap PE_SRC_Ready\nSource Capabilities Device Policy Manager\nThe transition to the state, from the state, due to a\nreq\uf06cuest to get the remotPeE _DR_SRC_Get_Sour cfreo_Cma tphe Policy EngineSh. all Protocol Layer\nSource CapabilitiesMessage Source Capabilities Policy Engine\nSOhna elnltry to the state the request the to\nsend a get in order to retrieve the . The\n\uf06c Get _sSeonudr:ce_CapMessage Device Policy Manager\n\uf06c A EPR_Get_Sourc e_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRb iCliatipeasb oilrities\nPoliAcyn E ngineShall Sen dwehreRne sthpeo nseTimer requests .\nThe P E_DR_ tShReCn_ Gsteatr_tS tohuer ce_Cap Policy E.ngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcPomoliec y(c EanpgaibnieliStiheas lolr response timeout). PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\"\nThe transition back to the State (see )\nwhe\uf06cn: SPR Mode Source Capabilities Source_CapabilitiesMessage\nIn and SPR were requested and a is received\n\uf06c orEPR Mode Source Capabilities EPR_Source_CapabilitiesMessage\nIn and EPR were requested and an is\n\uf06c receiSveendd oerrResponseTimer\nThe times out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 909\n8.3.3.19.8 Dual-Role (Source Port) Give Sink Capabilities State Diagram\nFigure 8.181, \"Dual-Role (Source) Give Sink Capabilities diagram\"\nSource Get_Sink_CapMessage Section , \"A Source Port Shall report\nits Capabilities in a series of 32-bit Power Data Objects (see Table 6s.h7o, \"wPso wtheer sDtaattea dOibajgercatm\") faosr p aa rDtu oafl -aR ole device,\npSoreusrecnet_lCya oppaebrialtiitniegs a Ms aes sage (s, eoen F riegcueriev 6in.1g3 a, \"Example Capa bilities M. Seesesa agleso w ith 2 Power Data Objects\"). Power\nData Objects are used to convey a Source Port's Capabilities to provide power including Dual-Role Power ports\npresently operating as a Sink.\"\nFigure .8.181 Dual-Role (Source) Give Sink Capabilities diagram\nGet_Sink_Cap_Extended Message\nreceived PE_DR_SRC_Give_Sink_Cap_Ext\nPE_SRC_Ready\nActions on entry:\nGet present extended sink capabilities from Device Policy Manager\nSink_Capabilities_Extended Send Sink_Capabilities_Extended Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.8.1 PE_DR_SRC_Give_Sink_Cap State\nPolicy EngineShall PE_DR_SRC_Give_Sink_Cap PE_SRC_Ready\nGet_Sink_CapMessage EPR_Get_Sink_CapMessage\nThe transition to the state, from the state, when a\n\uf06c oPrE _DR_SRC_Give_Sin k_Cap is receiPvoeldic. y EngineShall Device Policy\nManager Policy EngineShall Protocol Layer\nOn entrSyi ntok _tChaep abilitiesMessage state the Pol irceyq Eunegsitn tehSeh all\nfor the current system capabilities. The then request the to\n\uf06c seSnidn ka _CapabilitiesMess age conGteatin_Siningk t_hCeaspe Mcaepsasbagileities. The send:\n\uf06c A EPR_Sink_Capab ilitiesMe wsshaegne a EPR_Ge t_Sink_Ca isp rMeceessivaegde or\nPoliAcyn E ngineShall whPeEn_S aR C_Ready Figure 8 .i1s3 r2e, c\"eSiovuerdc.e Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Sink_CapabilitiesMessage\nThe has been successfully sent.\nPage 910 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.9 Dual-Role (Sink Port) Get Sink Capabilities State Diagram\nFigure 8.182, \"Dual-Role (Sink) Get Sink Capabilities State Diagram\"\nSink Device Policy Manager Port Partner Sink\nCapabilities Section , \"A Source Port Shall report its Capabil isthieosw ins ath see sriteast eo fd 3ia2g-rbaitm P ofowre ar D Duaatla- ROobljee cdtesv (isceee,\npTraebsleen6t.l7y, \"oPpoewraetri nDga atas Oa bject,\" o) na sr epcaeritv oinf ga aS oreuqrucees_Ct afrpoamb itlhitei es Message (see Figure 6to.1 g3e, t\" Ethxea mple Capabil'ist ies\nMessage wit.h S e2e P aolwsoe r Data Objects\"). Power Data Objects are used to convey a Source Port's Capabilities to provide\npower including Dual-Role Power ports presently operating as a Sink.\"\nFigure 8.182 Dual-Role (Sink) Get Sink Capa.bilities State Diagram\nPE_DR_SNK_Get_Sink_Cap\nActions on entry:\nget sink capabilities request\nIf SPR Mode capabilities requested send Get_Sink_Cap Message\nfrom Device Policy Manager1\nPE_SNK_Ready If EPR Mode capabilities requested send EPR_Get_Sink_Cap Message\nInitialize and run SenderResponseTimer\nActions on exit:\n(SPR Sink Capabilities requested Pass sink capabilities/outcome to Device Policy Manager\n& Sink_Capabilities Message) | Request Device Policy Manager to configure Fast Role Swap if supported\n(EPR Sink Capabilities requested\n& EPR_Sink_Capabilities Message) |\nSenderResponseTimer timeout Power = Explicit Contract\nPD = Connected\n1) Either SPR or EPR Sink Capabilities Maybe requested, regardless of whether or not the Sink is currently operating in SPR or EPR Mode.\n8.3.3.19.9.1 PE_DR_SNK_Get_Sink_Cap State\nPolicy EngineShall PE_DR_SNK_Get_Sink_Cap PE_SNK_Ready\nSource Capabilities Device Policy Manager\nThe transition to the state, from the state, due to a\nreq\uf06cuest to get the remotPeE _DR_SNK_Get_Sink _frCoamp the Policy EngineSha. ll Protocol Layer\nGet_Sink_CapMessage Sink Capabilities Policy EngineShall\nOn entry to the state the request the to\n\uf06c seGnedt a_S ink_CapMess age in ordDeerv itcoe r Peotrliiceyv eM tahnea ger . The send:\n\uf06c A EPR_Get_Sin k_CapMe wsshaegne the Device Policy Ma rneaqgueersts SPR caEpPaRbi Cliatipeasb oirlities\nPoliAcyn E ngineShall S ewnhdeenr Rthees ponseTimer requests .\nThe P E_SRC t_hGeent _sStianrkt _tChae p Policy Engine.Shall Device Policy Manager\nFast Role Swap Device Policy Manager\nOn exit from the Fsatastte R tohlee Swap inform thFea st Role Swap required o Uf SthBe T ype-\noCu Ctucorrmeen (tcapabilities or respoSnisnek t Cimapeaobuitl)it. iIef s is supported, request prepare\nor disable 5V source and configure the receiver based on the\nPolicy bEintsg iinne tShhe arlelceived PE_SN.K_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe\uf06c Sink C apab itlritaienssition to the Sink _sCtaatpea (bsieleit iesMessage ) when:\n\uf06c SPR Sink Capabilities were requested and a EPR_Sink_Capab ilitiesM eisss raegceeived or\n\uf06c EPR SenderResponse wTiemree rrequested and an is received or\nThe times out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 911\n8.3.3.19.10 Dual-Role (Sink Port) Give Source Capabilities State Diagram\nFigure 8.182, \"Dual-Role (Sink) Get Sink Capabilities State Diagram\"\nSink Get_Source_CapMessage Section , \"A Source Port Shall report\nits Capabilities in a series of 32-bit Power Data Objects (see Table6. 7s,h \"oPwows tehre D sattaate O dbijaegcrta\")m a fso pra ar tD oufa al- Role device,\npSoreusrecnet_lCya oppaebrailtiitniegs a Ms ae ssage, o(sne ree Fciegiuvrine g6 a.1 3, \"Example Capa bilities M. Seessea agles ow ith 2 Power Data Objects\"). Power\nData Objects are used to convey a Source Port's Capabilities to provide power including Dual-Role Power ports\npresently operating as a Sink.\"\nFigure 8.1.83 Dual-Role (Sink) Give Source Capabilities State Diagram\n(In EPR Mode & Get_Source_Cap Message) | PE_DR_SNK_Give_Source_Cap\n(In SPR Mode & EPR_Get_Source_Cap Message)\nActions on entry:\nPE_SNK_Ready Get present Source capabilities from Device Policy Manager\nSend Capabilities Message (based on Device Policy Manager response):\n\u2022If Get_Source_Cap Message received send Source_Capabilities Message.\nSource capabilities Message sent \u2022In EPR_Get_Source_Cap Message received send EPR_Source_Capabilities Message\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.10.1 PE_DR_SNK_Give_Source_Cap State\nPolicy EngineShall PE_DR_SNK_Give_Source_Cap PE_SNK_Ready\nGet_Source_CapMessage\nThe transition to the state, from the state, when\na \uf06c PE_ DisR r_eScNeiKv_eGdi.v e_Source_Cap Policy EngineShall Device Policy\nManager Policy EngineShall Protocol Layer\nOn entrSyo tuor cteh eC apabilitiesMessage State the request the\nfor the current system capabilities. The then request the to\n\uf06c sendP ao licy EngineShall containing these capabilities.\n\uf06c ThSeo urce_Capabil itiesM seesnsda:ge Get_Source_CapMessage\n\uf06c A EPR_Source_Capab ilitiesMe wsshaegne a EPR_Get_S ource_Ca isp rMeceessivaegde or\nPoliAcyn E ngineShall PE_SN wKh_eRne aad y Figure 8.1 33, \"Sink i sP orertc eSitvaetde .Diagram\"\nThe\uf06c Sourc e Capa tbrailnitsieitsioMne tsosa tghee state (see ) when:\nThe has been successfully sent.\nPage 912 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.11 Dual-Role (Source Port) Get Source Capabilities Extended State\nDiagram\nFigure 8.184, \"Dual-Role (Source) Get Source Capabilities Extended State Diagram\"\nSource Device Policy Manager\nPort Partner Source Capabilities Section 6.5.1, \"Source_Capabil sithieosw_Esx ttheen dsteadt eM deisasgargaem\" for a\nDual-Role device, presently operating as a , on receiving a request from the to get the\n'sF eigxuterned 8e.d1 84 Dual-Role (Sou. rSceee) a Glseot Source Capabilities Extended State Diagram .\nget extended source capabilities\nrequest PE_DR_SRC_Get_Source_Cap_Ext\nfrom Device Policy Manager\nPE_SRC_Ready Actions on entry:\nSend Get_Source_Cap_Extended Message\nInitialize and run SenderResponseTimer\nSource_Capabilities_Extended\nMessage received | Actions on exit:\nSenderResponseTimer Pass source extended capabilities/outcome to Device Policy Manager\nTimeout\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.11.1 PE_DR_SRC_Get_Source_Cap_Ext State\nPolicy EngineShall PE_DR_SRC_Get_Source_Cap_Ext PE_SRC_Ready\nSource Capabilities Device Policy Manager\nThe transition to the state, from the state, due\nto a request to gPeEt _tDheR _rSeRmCo_tGee etx_Steonudrecde_ Cap_Ext P forloicmy Ethneg ineShall Get_So. urce_Cap_Extended\nMessage SenderResponseTimer\nOn entry to the state the send a\nand initPiaEli_zDeR a_nSdR Cru_Gne tth_eS ource_Cap_Ext .Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of\nthe oPuotlcicoym Een (gcianpeaSbhialitllies or response timeoutP)E._SRC_Ready Figure 8.132, \"Source Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_Capabilities_ExtendedMessage\n\uf06c A SenderResponseTimer is received\nOr times out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 913\n8.3.3.19.12 Dual-Role (Sink Port) Give Source Capabilities Extended State\nDiagram\nFigure 8.185, \"Dual-Role (Sink) Give Source Capabilities Extended diagram\"\nSink Get_Source_Cap_ExtendedMessage Section 6.5.1,\n\"Source_Capabilities_Extended Message\" shows the state diagram for a Dual-Role\ndevice, presently operating as a , on receiving a . See also\nFigure 8.185 Dual-Ro.le (Sink) Give Source Capabilities Extended diagram\nGet_Source_Cap_Extended Message\nreceived PE_DR_SNK_Give_Source_Cap_Ext\nPE_SNK_Ready\nActions on entry:\nGet present extended source capabilities from Device Policy Manager\nSource_Capabilities_Extended Send Source_Capabilities_Extended Message (based on Device Policy Manager response)\nMessage sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.12.1 PE_DR_SNK_Give_Source_Cap_Ext State\nPolicy EngineShall PE_DR_SNK_Give_Source_Cap_Ext PE_SNK_Ready\nGet_Source_Cap_ExtendedMessage\nThe transition to the state, from the state,\nwhen a PE_DR_SNK_Give_S ource_Ca ips_ rEexcteived. Policy EngineShall\nSource Capabilities Device Policy Manager Source_Capabilities_ExtendedMessage\nOn entry to the state the request the present extended\nfrom the and then send a based\non thPeosleic cya EpnagbiinlietiSehs.all PE_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_Capabilities_ExtendedMessage\nThe has been successfully sent.\nPage 914 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.13 Dual-Role (Sink Port) Get Sink Capabilities Extended State Dia-\ngram\nFigure 8.186, \"Dual-Role (Sink) Get Sink Capabilities Extended State Diagram\"\nSink Device Policy Manager Port\nPartner Sink Capabilities Section 6.5.13, \"Sink_Capabilitie ss_hEoxwtesn tdheed sMtaetses adgiaeg\"ram for a Dual-\nRole device, presently operating as a , on receiving a request from the to get the\n's extendFeidg ure 8.186 Dual-.R Soelee a (lSsoin k) Get Sink Capabilities Extended State Diagram.\nget extended Sink capabilities\nrequest PE_DR_SNK_Get_Sink_Cap_Ext\nfrom Device Policy Manager\nActions on entry:\nPE_SNK_Ready\nSend Get_Sink_Cap_Extended Message\nInitialize and run SenderResponseTimer\nSink_Capabilities_Extended\nMessage received | Actions on exit:\nSenderResponseTimer Pass Sink extended capabilities/outcome to Device\nTimeout Policy Manager\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.13.1 PE_DR_SNK_Get_Sink_Cap_Ext State\nPolicy EngineShall PE_DR_SNK_Get_Sink_Cap_Ext PE_SNK_Ready\nSource Capabilities Device Policy Manager\nThe transition to the state, from the state, due to\na request to get PthEe_D reRm_SoNtKe _eGxetet_nSdiendk _Cap_Ext P forloicmy tEhneg ineShall Get_Si.n k_Cap_Extended\nMessage SenderResponseTimer\nOn entry to the state the send a\nand initiPaEli_zDe Ra_nSdN rKu_nG teht_eS ink_Cap_Ext P.olicy EngineShall Device Policy Manager\nOn exit from the state the inform the of\nthe oPuotlciocym Een (gcianpeaSbhilaitliles or response timeoutP).E_SNK_Ready Figure 8.133, \"Sink Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Sink_Capabilities_ExtendedMessage\n\uf06c A SenderResponseTimer is received.\nOr times out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 915\n8.3.3.19.14 Dual-Role (Source Port) Give Sink Capabilities Extended State\nDiagram\nFigure 8.187, \"Dual-Role (Source) Give Sink Capabilities Extended diagram\"\nSink Get_Sink_Cap_ExtendedMessage Section 6.5.13,\n\"Sink_Capabilities_Extended Message\" shows the state diagram for a Dual-Role\ndevice, presently operating as a , on receiving a . See also\nFigure 8.187 Dual-.Role (Source) Give Sink Capabilities Extended diagram\n_Get_Sink_Cap Message |\nEPR_Get_Sink_Cap Message PE_DR_SRC_Give_Sink_Cap\nPE_SRC_Ready\nActions on entry:\nGet present extended sink capabilities from Device Policy Manager\nSink Capabilities Send Sink_Capabilities_Extended Message (based on Device Policy Manager response):\nMessage sent \u2022If Get_Sink_Cap Message received send Sink_Capabilities Message.\n\u2022In EPR_Get_Sink Cap Message received send EPR_Sink_Capabilities Message\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.14.1 PE_DR_SRC_Give_Sink_Cap_Ext State\nPolicy EngineShall PE_DR_SRC_Give_Sink_Cap_Ext PE_SRC_Ready\nGet_Sink_Cap_ExtendedMessage\nThe transition to the state, from the state, when\na PE_DR_SRC _Give_Si nisk r_eCcaepiv_Eedxt. Policy EngineShall Sink\nCapabilities Device Policy Manager Sink_Capabilities_ExtendedMessage\nOn entry to the state the request the present extended\nfrom the and then send a based on these\ncapaPboilliitciye sE.ngineShall PE_SRC_Ready Figure 8.132, \"Source Port State\nDiagram\"\nThe transition back to the state (see\n\uf06c )whSiennk:_Capabilities_ExtendedMessage\nThe has been successfully sent.\nPage 916 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.19.15 Dual-Role (Source Port) Get Source Information State Diagram\nFigure 8.188, \"Dual-Role (Source) Get Source Information State Diagram\"\nSource Device Policy Manager Port\nPartner Source Section 6.3.23, \"Get_Source_Info Me sshsaogwes\" the sStaetceti doina 6gr.4a.m11 f, o\"rS oau Drcuea_lI-nRfool e\nMdeevsiscaeg, ep\"resently operating as a , on receiving a request from the to get the\n's information. See also and\n. Figure 8.188 Dual-Role (Source) Get Source Information State Diagram\nget source information\nrequest PE_DR_SRC_Get_Source_Info\nfrom Device Policy Manager\nActions on entry:\nPE_SRC_Ready\nSend Get_Source_Info Message\nInitialize and run SenderResponseTimer\nSource_Info Message received |\nActions on exit:\nSenderResponseTimer\nPass source information/outcome to\nTimeout\nDevice Policy Manager\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.15.1 PE_DR_SRC_Get_Source_Info State\nPolicy EngineShall PE_DR_SRC_Get_Source_Info PE_SRC_Ready\nSource Device Policy Manager\nThe transition to the state, from the state, due to a\nrequest to get thPeE r_eDmRo_SteR C_Get_S ionuforrcme_aIntifoon from theP olicy EngineShall . Get_Source_InfoMessage\nSenderResponseTimer\nOn entry to the state the send a and\ninitialize and runP tEh_eD R_SRC_Get_Source_Info. Policy EngineShall Device Policy Manager\nOn exit from the state the inform the of the\noutcPomoliec y(i EnnfogrimneaStihoanl lor response timeout). PE_SRC_Ready Figure 8.132, \"Source Port State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_InfoMessage\n\uf06c A SenderResp onseTim ise rreceived.\nOr times out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 917\n8.3.3.19.16 Dual-Role (Sink Port) Give Source Information State Diagram\nFigure 8.189, \"Dual-Role (Source) Give Source Information diagram\"\nSink Get_Source_InfoMessage Section 6.3.23, \"Get_Source_Info\nMessage\" Section 6.4.11, \"Source_Info Message\" shows the state diagram for a Dual-Role device,\npresently operating as a , on receiving a . See also\nand Figure 8.189 Dual-Role (Sou.rce) Give Source Information diagram\nGet_Source_Info Message\nreceived PE_DR_SNK_Give_Source_Info\nPE_SNK_Ready\nActions on entry:\nGet present source information from Device Policy Manager\nSend Source_Info Message (based on Device Policy Manager response)\nSource_Info Message sent\nPower = Explicit Contract\nPD = Connected\n8.3.3.19.16.1 PE_DR_SNK_Give_Source_Info State\nPolicy EngineShall PE_DR_SNK_Give_Source_Info PE_SNK_Ready\nGet_Source_InfoMessage\nThe transition to the state, from the state, when\na PE_ DR_SNK _iGs irveec_eSiovuedrc.e_Info Policy EngineShall Source\nDevice Policy Manager Source_InfoMessage\nOn entry to the state the request the present information\nfromP tohliec y EngineShall and then sendP aE _SNK_Ready baFsiegdu oren 8 t.h1i3s3 i,n \"fSoirnmk aPtoiortn .State Diagram\"\nThe transition back to the state (see )\nwhe\uf06cn: Source_InfoMessage\nThe has been successfully sent.\nPage 918 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.20 VCONN Swap State Diagram\nShall VCONN Figure 8.190, \"VCONN Swap State Diagram\"\nVCONN Swap\nThe State Diagram in this section apply to Ports that supply .\nshows the state operation for a PortF oignu sreen 8di.1n9g 0o rV rCeOcNeNiv Sinwga ap State Diagr raemquest.\nPE_SRC_Ready,\nPE_SNK_Ready or\nPE_SRC_Ready, PE_SRC_EPR_Mode_Entry_ACK\nPE_SNK_Ready or\nPE_SRC_EPR_Mode_Discover_Cable\nPE_SNK_EPR_Mode_Entry_Wait_For_Response VCONN Swap required (indication from Device Policy Manager)\nReject Message received |\nWait Message received |\nMessage sent VCONN_Swap Message received SenderR ti e m s e p o o u n t seTimer\nPE_VCS_Reject_VCONN_Swap (Not P V r C e O s N e N n t S ly w V a C p O n N o N t S o O k U ) R | CE & PE_VCS_Evaluate_Swap PE_VCS_Send_Swap\nA Se c n ti d o n R s e o je n c t e o n r tr W y: ait Message as Furth R e e r q e u v i a re lu d ation A G c e t t i e o v n a s l u on at e io n n tr o y f : VCONN swap request A Se c n ti d o n V s C O o N n N e _ n Sw tr a y p : Message Not_ N S o u t p p p re o s rt e e n d t l M y e V s C s O a N g N e S r o e u ce rc iv e e 1 d &\nappropriate from Device Policy Manager Initialize and run\nSenderResponseTimer\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected Power = Explicit Contract\nPD = Connected\nVCONNSwap ok Accept Message received &\nPresently VCONN Source1\nAccept Message received &\nNot presently VCONN Source1\nPE_VCS_Accept_Swap\nActions on entry:\nSend Accept Message\nPower = Explicit Contract\nPD = Connected Accept Message sent &\nNot presently VCONN Source1\nAccept Message sent &\nPresently VCONN Source1\nPE_VCS_Wait_for_VCONN PE_VCS_Turn_On_VCONN PE_VCS_Force_VCONN2\nVCONNOnTimer Timeout Actions on entry: Actions on entry: Actions on entry:\nStart VCONNOnTimer Tell Device Policy Manager to turn on Tell Device Policy Manager to turn on\nVCONN VCONN\nPower = Explicit Contract\nPD = Connected Power = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nPS_RDY Message\nreceived VCONNturned on\nHard Reset: PE_VCS_Turn_Off_VCONN PE_VCS_Send_PS_Rdy\nActions on entry:\nConsumer/Provider -> PE_SNK_Hard_Reset Tell Device Policy Manager to turn off Actions on entry:\nProvider/Consumer -> PE_SRC_Hard_Reset VCONN Send PS_RDY Message VCONNturned on\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nDevice Policy Manager Informed\nPS_RDY Message\nsent\nPE_SRC_Ready,\nPE_SNK_Ready or\nPE_SRC_EPR_Mode_Discover_Cable\n1) A Port is presently the VCONNSource if it has the responsibility for supplying VCONNeven if VCONNhas been turned off.\n2) The PE_VCS_Force_VCONNstate is Optional.\n8.3.3.20.1 PE_VCS_Send_Swap State\nPE_VCS_Send_Swap PE_SRC_Ready PE_SNK_Ready Policy\nEngine Device Policy Manager VCONN Swap\nThe state is entered from either the or state when the\nreceives PaE r_eVqCuSe_sSte fnrdom_S wthaep Policy Engine toS hpaelrlform a VCONN_Swa.pMessage\nSenderResponseTimer\nOn entry to the state the send a and start the\nPolicy EngineShall. PE_VCS_Wait_For_VCONN\nThe\uf06c Accept Mess atrgaensition to the state when:\n\uf06c An is receViCvOeNdN a Snodurce\nPoliTcyh eE nPgoirnte isS hparellsently the PE_VC.S_Turn_On_VCONN\nThe\uf06c Accept Mess atrgaensition to the state when:\n\uf06c An is receivedV CaOnNdN Source\nThe Port is not presently the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 919\nPolicy EngineShall PE_SRC_Ready PE_SNK_Ready\nPE_SRC_EPR_Mode_Discover_Cable\nThe transition back to either the , or\n\uf06c RejectMessage state when:\n\uf06c A WaitM essage is received or\n\uf06c A Sen derResp iosn rseecTeiivmeedr or\nPoliTcyh eE ngineMay timPesE _oVuCt.S_Force_VCONN\nThe\uf06c Not_Sup port etrdanMseistisoang eto the state when:\n\uf06c A is rVeCcOeNiNve Sdo uarncde\n8.3.3.2Th0e. 2Port is not p rPeEse_nVtlCy Sth_eE valuate_S.wap State\nPE_VCS_Evaluate_Swap PE_SRC_Ready PE_SNK_Ready\nPolicy Engine VCONN_SwapMessage\nThe state is entered from either the or state when the\nrePceEi_vVeCsS a_ Evaluate_Sw ap . Policy EngineShall Device Policy Manager\nVCONN Swap\nOn entry to the state the request the for an\nevaluPaotliiocyn Eonf gthinee Shall request. PE_VCS_Accept_Swap\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the VCONN Swap state when:\nPoliTcyh eE ngineShall indicaPteEs_ VthCaSt_ Ra eject_Swap is OK.\nThe\uf06c transition to tVhCeO NN Source Dev sictae tPeo wlichye nM:anager VCONN Swap\nThe Port is not presently the and the indicates that a\n\uf06c is noDt eOvKic oe rPolicy Manager VCONN Swap\n8.3.3.2Th0e. 3 PE_VCS _inAdciccaetepst t_hSawt aa p State cannot be done at this time.\nPE_VCS_Accept_Swap Policy EngineShall AcceptMessage\nOn ePnotrliyc yto E tnhgei neShall staPteE t_hVeC S_Wait_For_V CONN send an .\nThe\uf06c Accep tMes staragnesition to the state when:\n\uf06c The V CONN has been sent and\nPoliTcyh eE nPgoirnte'sS hall is on. PE_VCS_Turn_On_VCONN\nThe\uf06c Accep tMes staragnesition to the state when:\n\uf06c The V CONN has been sent and\n8.3.3.2Th0e. 4Port's P isE o_fVf.CS_Reject_Swap State\nPE_VCS_Reject_Swap Policy EngineShall Protocol Layer\nOn e\uf06cntry tRo etjheec tMessage state the VCON Nre Sqwuaepst the to send:\n\uf06c A WaitM essage if the device is unable to pVeCrOfoNrNm S wa ap at this time.\nNote: A if further evaluation of the VCO NreNq_Suwesatp isM reesqsuaigreed.\nPolicyI Enn tghiins ecaSshea iltl is expected that the Port willP sEen_SdR aC _Ready PE_S NK_Read ayt a later time.\nPE_SRC_EPR_Mode_Discover_Cable\nThe transition back to either the , or\n\uf06c Reject WaitMessage state when:\nThe or has been sent.\nPage 920 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.20.5 PE_VCS_Wait_for_VCONN State\nPE_VCS_Wait_For_VCONN Policy EngineShall VCONNOnTimer\nOn ePnotrliyc yto E tnhgei neShall PstEa_tVeC tSh_eT urn_Off_VCON N start the .\nThe\uf06c PS_RDY Messa tgreansition to the state when:\nPoliAcy Engine Shall is received. PE_SRC_Hard_Reset PE_SNK_Hard_Reset\nThe\uf06c VCONN OnTi mtraenrsition to either the or state when:\n8.3.3.2Th0e. 6 PE _tiVmCesS o_Tutu. rn_Off_VCONN State\nPE_VCS_Turn_Off_VCONN Policy EngineShall Device Policy Manager\nVCONN\nOn entry to the state the tell the to turn off\nPo.licy EngineShall PE_SRC_Ready PE_SNK_Ready\nPE_SRC_EPR_Mode_Discover_Cable\nThe transition back to either the , or\n\uf06c Device Policy Manager state when:\n8.3.3.2Th0e. 7 PE_VCS _hTasu brenen_O innfo_rVmCeOd.NN State\nPE_VCS_Turn_On_VCONN Policy EngineShall Device Policy Manager\nVCONN\nOn entry to the state the tell the to turn on\nPo.licy EngineShall PE_VCS_Send_Ps_Rdy\nThe\uf06c VCON Ntransition to the state when:\n8.3.3.2Th0e. 8Port's P isE o_nV.CS_Send_PS_Rdy State\nPE_VCS_Send_Ps_Rdy Policy EngineShall PS_RDYMessage\nOn ePnotrliyc yto E tnhgei neShall state the PE_SRC_ Read ysePnEd_ aS NK_Read y .\nPE_SRC_EPR_Mode_Discover_Cable\nThe transition back to either the , or\n\uf06c PS_RDYMessage state when:\n8.3.3.2Th0e. 9 PE_ VhaCs Sb_eFeno srecnet._VCONN State\nPE_VCS_Force_VCONN Policy EngineShall Device Policy Manager VCONN\nOn ePnotrliyc yto E tnhgei neShall state the PE_SRC _Read tyelPl Eth_eS NK_Ready to turn on .\nPE_SRC_EPR_Mode_Discover_Cable\nThe transition back to either the , or\n\uf06c VCONN state when:\n8.3.3.T2h1e Port's Ini itsi oant.or Structured VDM State Diagrams\nShall Initiator\nThe State Diagrams in this section apply to all s.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 921\n8.3.3.21.1 Initiator Structured VDM Discover Identity State Diagram\nFigure 8.191, \"Initiator to Port VDM Discover Identity State Diagram\" Initiator\nPort Partner Cable Plug\nshows the state diagram for an when\ndiscovering the identFitiyg uorf eit s8 .191 Initiato orr t o Port VDM. Discover Identity State Diagram\nPE_INIT_PORT_VDM_Identity_ACKed PE_INIT_PORT_VDM_Identity_NAKed\nActions on entry: Actions on entry:\nInform DPM of identity Inform DPM of result\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nDiscover Identity ACK\nreceived Discover Identity NAK/BUSY |\nVDMResponseTimer Timeout\nDPM informed\nPE_INIT_PORT_VDM_Identity_Request\nActions on entry:\nSend Discover Identity request\nStart VDMResponseTimer\nPower = Explicit Contract\nPD = Connected\nDPM informed\nDPM requests identity discovery1|\nDiscoverIdentityTimer timeout\nPE_SRC_Ready, PE_SNK_Ready or\nPE_SRC_EPR_Mode_Discover_Cable\nPE_SRC_Ready, PE_SNK_Ready or PE_SRC_EPR_Mode_Evaluate_Cable_EPR\n1) The DPM in an EPR Source Shallrequest the discovery of the identity of the Cable Plug at startup.\n8.3.3.21.1.1 PE_INIT_PORT_VDM_Identity_Request State\nPolicy Engine PE_INIT_PORT_VDM_Identity_Request PE_SRC_Ready\nPE_SNK_Ready\nThe transitions to the state from either the or\n\uf06c Dev sictaet Peo wlihcye nM:anager Port Partner Cable Plug\n\uf06c The DiscoverIdentityTime rrequests the discovery of the identity of the or or\nPoliTcyh eE ngine P tEim_IeNsI To_uPt.ORT_VDM_Identity_Request\nPE_SRC_EPR_Mode_Discover_Cable\nThe transitions to the state from the\n\uf06c Cable PlugDiscovery Pro scteastse when:\nThe has been initiated.\nPage 922 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPE_INIT_PORT_VDM_Identity_Request Policy EngineShall Structured VDM\nDiscover IdentityCommand Shall VDMResponseTimer\nOn entry to the state the send a\nPolicy Engine Shall request andP E_INI sTt_aPrOt tRhTe_ VDM_Identity_ACKed.\nThe\uf06c Structur ed VD tMraDnissictioovne rto I dtheen tityACKCommand state when:\nPoliAcy EngineShall PE_I NIT_ PORT_VDM re_Isdpeonntsiet yis_N rAecKeeivded.\nThe\uf06c Structur ed VD tMraDnissictioovne rto I dtheen tityNAK BUSYCommand state when:\n\uf06c A VDMRespons eTimer or response is received or\n8.3.3.2T1h.e1 .2 PE_IN tiImTe_sP oOutR.T_VDM_Identity_ACKed State\nPE_INIT_PORT_VDM_Identity_ACKed Policy EngineShall Device Policy\nManager\nOn entry to the state the inform the\nPolic yo fE tnhgei nIdeeSnhtaitlyl information. PE_SRC_Ready PE_SNK_Ready\nPE_SRC_EPR_Mode_Evaluate_Cable_EPR\nThe transition to either the , or\n\uf06c Device Policy Manager state when:\n8.3.3.2T1h.e1 .3 PE_IN hITas_ bPeOenR iTn_foVrDmMed_.Identity_NAKed State\nPE_INIT_PORT_VDM_Identity_NAKed Policy EngineShall Device Policy\nManager NAK BUSY\nOn entry to the state the inform the\nPolic yo fE tnhgei nreesSuhlat l(l , or timeout).PE_SRC_Ready PE_SNK_Ready\nPE_SRC_EPR_Mode_Evaluate_Cable_EPR\nThe transition to either the , or\n\uf06c Device Policy Manager state when:\nThe has been informed.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 923\n8.3.3.21.2 Initiator Structured VDM Discover SVIDs State Diagram\nFigure 8.192, \"Initiator VDM Discover SVIDs State Diagram\" Initiator\nSVID Port Partner Cable Plug\nshows the state diagram for an when\ndiscovering s of its Figure 8.1 9or2 Initiator V. DM Discover SVIDs State Diagram\nPE_INIT_VDM_SVIDs_ACKed PE_INIT_VDM_SVIDs_NAKed\nActions on entry: Actions on entry:\nInform DPM of SVIDs Inform DPM of result\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nDPM informed\nDiscover SVIDs ACK\nDiscover SVIDs NAK/BUSY |\nreceived\nVDMResponseTimer Timeout\nPE_INIT_VDM_SVIDs_Request\nActions on entry:\nSend Discover SVIDs request DPM informed\nStart VDMResponseTimer\nPower = Explicit Contract\nPD = Connected\nDPM requests\nSVIDs discovery\nPE_SRC_Ready or PE_SNK_Ready\n8.3.3.21.2.1 PE_INIT_VDM_SVIDs_Request State\nPolicy Engine PE_INIT_VDM_SVIDs_Request PE_SRC_Ready\nPE_SNK_Ready\nThe transitions to the state from either the or\n\uf06c Dev sictaet Peo wlihcye nM:anager SVID Port Partner Cable Plug\nThe PE_INIT_VDM_SVID rse_Rqeuqesutess tthe discoveProyl iocfy t Ehneg ineSsh oafl lthe Structure odr VaD MDiscove.r SVIDs\nCommand Shall VDMResponseTimer\nOn entry to the state the send a\nPolicy rEenqguiensetS ahnadl l start the PE_INIT_VDM_SVID. s_ACKed\nThe\uf06c Structur ed VD tMraDnissictioovne tro S tVhIeD sACKCommand state when:\nPoliAcy EngineShall P E_INI T_VDM_SV rIeDssp_oNnAsKee ids received.\nThe\uf06c Structur ed VD tMraDnissictioovne rto S tVhIeD sNAK BUSYCommand state when:\n\uf06c A VDMRespons eTimer or response is received or\nThe times out.\nPage 924 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.21.2.2 PE_INIT_VDM_SVIDs_ACKed State\nPE_INIT_VDM_SVIDs_ACKed Policy EngineShall Device Policy Manager\nSVID\nOn entry to the state the inform the of the\nPso ilnicfoy rEmnagtiinoenS.hall PE_SRC_Ready PE_SNK_Ready\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or state when:\n8.3.3.2T1h.e2 .3 PE_IN hITas_ bVeDenM in_SfoVrmIDeds._NAKed State\nPE_INIT_VDM_SVIDs_NAKed Policy EngineShall Device Policy Manager\nNAK BUSY\nOn entry to the state the inform the of the\nresuPlto (licy E,n gineS ohra tlilmeout). PE_SRC_Ready PE_SNK_Ready\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or state when:\nThe has been informed.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 925\n8.3.3.21.3 Initiator Structured VDM Discover Modes State Diagram\nFigure 8.193, \"Initiator VDM Discover Modes State Diagram\" Initiator\nPort Partner Cable Plug\nshows the state diagram for an when\ndiscovering Modes of its Figure 8.19 o3r I nitiator VD. M Discover Modes State Diagram\nPE_INIT_VDM_Modes_ACKed PE_INIT_VDM_Modes_NAKed\nActions on entry: Actions on entry:\nInform DPM of Modes Inform DPM of result\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nDPM informed\nDiscover Modes ACK\nDiscover Modes NAK/BUSY |\nreceived\nVDMResponseTimer Timeout\nPE_INIT_VDM_Modes_Request\nActions on entry:\nSend Discover Modes request DPM informed\nStart VDMResponseTimer\nPower = Explicit Contract\nPD = Connected\nDPM requests\nModes discovery\nPE_SRC_Ready or PE_SNK_Ready\n8.3.3.21.3.1 PE_INIT_VDM_Modes_Request State\nPolicy Engine PE_INIT_VDM_Modes_Request PE_SRC_Ready\nPE_SNK_Ready\nThe transitions to the state from either the or\n\uf06c Dev sictaet Peo wlihcye nM:anager Port Partner Cable Plug\nThe PE_INIT_VDM_Mode rse_qRueeqsutse stthe discoveProyl iocfy t Ehneg MinoedSehsa olfl the Structured o Vr DaM Discover. Modes\nCommand Shall VDMResponseTimer\nOn entry to the state the send a\nPolicy rEenqguiensetS ahnadl l start the PE_INIT_VDM_Mod.es_ACKed\nThe\uf06c Structur ed VD tMraDnissictioovne rto M thoed esACKCommand state when:\nPoliAcy EngineShall PE _INIT _VDM_Mo rdeessp_oNnAsKee ids received.\nThe\uf06c Structur ed VD tMraDnissictioovne tro M thoed esNAK BUSYCommand state when:\n\uf06c A VDMRespons eTimer or response is received or\nThe times out.\nPage 926 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.21.3.2 PE_INIT_VDM_Modes_ACKed State\nPE_INIT_VDM_Modes_ACKed Policy EngineShall Device Policy Manager\nOn entry to the state the inform the of the\nModPeso liincfyo ErmngaitnieonS.hall PE_SRC_Ready PE_SNK_Ready DFP\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or state for a when:\n8.3.3.2T1h.e3 .3 PE_IN hITas_ bVeDenM in_Mforomdeeds._NAKed State\nPE_INIT_VDM_Modes_NAKed Policy EngineShall Device Policy Manager\nNAK BUSY\nOn entry to the state the inform the of the\nresuPlto (licy E,n gineS ohra tlilmeout). PE_SRC_Ready PE_SNK_Ready DFP\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or state for a when:\nThe has been informed.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 927\n8.3.3.21.4 Initiator Structured VDM Attention State Diagram\nFigure 8.194, \"Initiator VDM Attention State Diagram\" Initiator\nAttentionCommand\nshows the state diagram for an when sending an\nrequest.Figure 8.194 Initiator VDM Attention State Diagram\nPE_SRC_Ready or PE_SNK_Ready\nAttention request Attention Command\nfrom DPM request sent\nPE_INIT_VDM_Attention_Request\nActions on entry:\nSend Attention Command request\nPower = Explicit Contract\nPD = Connected\n8.3.3.21.4.1 PE_INIT_VDM_Attention_Request State\nPolicy Engine PE_INIT_VDM_Attention_Request PE_SRC_Ready\nPE_SNK_Ready\nThe transitions to the state from either the or\n\uf06c staDtee vwichee Pno:licy Manager Port Partner\nWhen thPeE _INIT_VDM_Attention_ rReeqquueesstst attentionP froolimcy iEtsn gineShall . AttentionCommand\nOn entry to the state the send an\nrequPeostli.cy EngineShall PE_SRC_Ready PE_SNK_Ready\nThe\uf06c Atten tionC tormanmsaitniodn to either the or state when:\nThe request has been sent.\nPage 928 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.22 Responder Structured VDM State Diagrams\n8.3.3.22.1 Responder Structured VDM Discover Identity State Diagram\nFigure 8.195, \"Responder Structured VDM Discover Identity State Diagram\" Responder\nDiscover IdentityCommand\nshows the state diagram for a\nreceiving a Figure 8.19 5 Respond reerq uStersut.ctured VDM Discover Identity State Diagram\nPE_RESP_VDM_Get_Identity_NAK PE_RESP_VDM_Get_Identity PE_RESP_VDM_Send_Identity\nActions on entry: Actions on entry: Identity information Actions on entry:\nSend Discover Identity NAK/BUSY Command DPM says Request Identity information from DPM from DPM Send Discover Identity ACK\nresponse as requested NAK/BUSY\nPower = Explicit Contract Power = Explicit Contract\nPower = Explicit Contract PD = Connected PD = Connected\nPD = Connected\nDiscover Ide s n e t n it t y NAK/BUSY Disco r v e e q r u I e d s e t ntity Discover s I e d n e t ntity ACK\nPE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready\n8.3.3.22.1.1 PE_RESP_VDM_Get_Identity State\nPolicy Engine PE_RESP_VDM_Get_Identity PE_SRC_Ready\nPE_SNK_Ready PE_CBL_Ready\nThe transitions to the state from either the ,\n\uf06c Struct ourr ed VDMDiscove srt aIdtee nwthiteynC:ommand\nA PE_RESP_V DM_Get_Identity Re srpeoqnudeesrt Sish raelcleived. Device\nPolicy Manager\nOn entry to the state the request identity information from the\nPolicy Engin. eShall PE_RESP_VDM_Send_Identity\nThe\uf06c transition to the Device Policy Manage rstate when:\nPoliIcdye Enntigtiyn einSfohramllation is received fProEm_R EthSeP _VDM_Get_Identity_NA.K\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the Disco svteart eId wehnetint:yCommand\nNAK BUSY\nThe indicates that the response to the request is\n8.3.3.22.1 .o2r . PE_RESP_VDM_Send_Identity State\nPE_RESP_VDM_Send_Identity ResponderShall Structured VDMDiscover Identity\nACKCommand\nOn entry to the state the send the\nPolicy Engi nreesSphoanlsle. PE_SRC_Ready PE_SNK_Ready UFP\nThe\uf06c Struct ured VtrDaMnsDitiisocno tvoe re iItdheenr ttihtye ACKCommand or state for a when:\n8.3.3.2T2h.e1 .3 P E_RESP_VDM_ Get _Identity r_eNspAoKns Se thaatse been sent.\nPE_RESP_VDM_Get_Identity_NAK Policy EngineShall Structured VDMDiscover\nIdentityNAK BUSYCommand Device Policy Manager\nOn entry to the state the send a\nPolic y Eng oirn eShal l response as inPdEic_aStReCd_ bRye athdey PE_SNK_Ready PE_.CBL_Ready\nThe\uf06c Struct ured VtrDaMnsDitiisocno tvoe re iItdheenr ttihtye NAK BUSYC,o mmand or state when:\nThe or response has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 929\n8.3.3.22.2 Responder Structured VDM Discover SVIDs State Diagram\nFigure 8.196, \"Responder Structured VDM Discover SVIDs State Diagram\" Responder\nDiscover SVIDsCommand\nshows the state diagram for a\nwhen receiving a Figure 8.196 R esponder. Structured VDM Discover SVIDs State Diagram\nPE_RESP_VDM_Get_SVIDs_NAK PE_RESP_VDM_Get_SVIDs PE_RESP_VDM_Send_SVIDs\nActions on entry: DPM says Actions on entry: SVIDs information Actions on entry:\nSend Discover SVIDs NAK/BUSY Command NAK/BUSY Request SVIDs information from DPM from DPM Send Discover SVIDs ACK\nresponse as requested\nPower = Explicit Contract Power = Explicit Contract\nPower = Explicit Contract PD = Connected PD = Connected\nPD = Connected\nDiscover SV s I e D n s t NAK/BUSY Disc r o e v q e u r e S s V t IDs Discover s e S n V t IDs ACK\nPE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready\n8.3.3.22.2.1 PE_RESP_VDM_Get_SVIDs State\nPolicy Engine PE_RESP_VDM_Get_SVIDs PE_SRC_Ready PE_SNK_Ready\nPE_CBL_Ready\nThe transitions to the state from either the ,\nor \uf06c Structur estda VteD wMhDeins:cover SVIDsCommand\nA PE_RESP_V DM_Get_SVIDs R ersepqounedsetr isS hreaclelived. SVID Device\nPolicy Manager\nOn entry to the state the request s information from the\nPolicy Engin. eShall PE_RESP_VDM_Send_SVIDs\nThe\uf06c SVID transition to the Device Policy Manage rstate when:\nPolicy Ensg iinnfeoSrmhaaltlion is received froPmE _tRheE SP_VDM_Get_SVIDs_NA.K\nThe\uf06c Devic e Polic tyr Manasnitaigoenr to the Disc sotvaeter wSVhIeDns:Command NAK\nBUSY\nThe indicates that the response to the request is\n8.3.3.2o2r .2.2 . PE_UFP_VDM_Send_SVIDs State\nPE_RESP_VDM_Send_SVIDs ResponderShall Structured VDMDiscover SVIDsACK\nCommand\nOn entry to the state the send the\nPolicy rEensgpionnesSeh.all PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready\nThe\uf06c Struct ured VtrDaMnsDitiisocno tvoe re iSthVeIDr sthAeC KCommand , or state when:\n8.3.3.2T2h.e2 .3 P E_UFP_VDM _Ge t_SVIDs_ NreAspKo nSstea hteas been sent.\nPE_RESP_VDM_Get_SVIDs_NAK Policy EngineShall Structured VDMDiscover SVIDs\nNAK BUSYCommand Device Policy Manager\nOn entry to the state the send a\nP oorl icy Eng ineShall response as indicated bPyE t_hSeR C_Ready PE_SNK_Rea.dy PE_CBL_Ready\nThe\uf06c Struct ured VtrDaMnsDitiisocno tvoe re iStVheIDr sthNeA K BUSYCom, mand or state when:\nThe or response has been sent.\nPage 930 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.22.3 Responder Structured VDM Discover Modes State Diagram\nFigure 8.197, \"Responder Structured VDM Discover Modes State Diagram\" Responder\nDiscover ModesCommand\nshows the state diagram for a\non receiving a Figure 8.197 Respond.er Structured VDM Discover Modes State Diagram\nPE_RESP_VDM_Get_Modes_ PE_RESP_VDM_Get_Modes PE_RESP_VDM_Send_Modes\nActions on entry: NAK DPM says Actions on entry: Modes information Actions on entry:\nSend Discover Modes NAK/BUSY NAK/BUSY Request Modes information from DPM from DPM Send Discover Modes ACK\nCommand response as requested\nPower = Explicit Contract Power = Explicit Contract\nPower = Explicit Contract PD = Connected PD = Connected\nPD = Connected\nDiscover Mo s d e e n s t NAK/BUSY Disc r o e v q e u r e M st odes Discover s e M n o t des ACK\nPE_SRC_Ready, PE_SNK_Ready or PE_CBL_Ready\n8.3.3.22.3.1 PE_RESP_VDM_Get_Modes State\nPolicy Engine PE_RESP_VDM_Get_Modes PE_SRC_Ready\nPE_SNK_Ready PE_CBL_Ready\nThe transitions to the state from either the ,\n\uf06c Struct ourr ed VDMDiscove srt aMteo dwehseCno:mmand\nA PE_RESP_V DM_Get_Modes R ersepqounedsetr isS hreaclelived. Device\nPolicy Manager\nOn entry to the state the request Modes information from the\nPolicy Engin. eShall PE_RESP_VDM_Send_Modes\nThe\uf06c transition to the Device Policy Manage srtate when:\nPoliMcyo Ednegsi innefoSrhmalaltion is received frPomE_ RthEeS P_VDM_Get_Modes_NA.K\nThe\uf06c Devic e Polic ytr Manasniatigoenr to the Disco svtearte M wohdeens:Command NAK\nBUSY\nThe indicates that the response to the request is\n8.3.3.2o2r .3.2 . PE_RESP_VDM_Send_Modes State\nPE_RESP_VDM_Send_Modes ResponderShall Structured VDMDiscover Modes\nACKCommand\nOn entry to the state the send the\nPolicy Engi nreesSphoanlsle. PE_SRC_Ready PE_SNK_Ready PE_CBL_Ready\nThe\uf06c Struct ured VtrDaMnsDitiisocno tvoe re iMthoedr etsheA CKCommand , or state when:\n8.3.3.2T2h.e3 .3 P E_RESP_VDM _Ge t_Modes r_eNspAoKns Set haatse been sent.\nPE_RESP_VDM_Get_Modes_NAK Policy EngineShall Structured VDMDiscover\nModesNAK BUSYCommand Device Policy Manager\nOn entry to the state the send a\nPo licy E nogr ineSha ll response as indPicEa_tSeRd Cb_yR tehaed y PE_SNK_Ready P.E_CBL_Ready\nThe\uf06c Struct ured VtrDaMnsDitiisocno tvoe re iMthoedr etsheN AK BUSYCom, mand or state when:\nThe or response has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 931\n8.3.3.22.4 Receiving a Structured VDM Attention State Diagram\nFigure 8.198, \"Receiving a Structured VDM Attention State Diagram\"\nAttentionCommand\nshows the state diagram when receiving an\nrFeiqguuerset .8.198 Receiving a Structured VDM Attention State Diagram\nPE_SRC_Ready or PE_SNK_Ready\nAttention Command\nDPM informed\nrequest received\nPE_RCV_VDM_Attention_Request\nActions on entry:\nInform Device Policy Manager of Attention Command request\nPower = Explicit Contract\nPD = Connected\n8.3.3.22.4.1 PE_RCV_VDM_Attention_Request State\nPolicy Engine PE_RCV_VDM_Attention_Request PE_SRC_Ready\nPE_SNK_Ready\nThe transitions to the state from either the or\n\uf06c Atte nsttaioten wChomenm:and\nAn PE_RC V_VDM_At treenqtuieosnt_ iRse rqeuceeisvted. Policy EngineShall Device Policy Manager\nAttentionCommand\nOn entry to the state the inform the of\nthe Policy Eng ineShall request. PE_SRC_Ready PE_SNK_Ready\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or state when:\nThe has been informed.\nPage 932 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.23 DFP Structured VDM State Diagrams\nShall DFP Structured VDM\nT8h.3e .S3ta.t2e 3D.i1agrams in th iDs sFePct iSotnr uctu arpepldy tVo DallM Mso thdaet sEunpptorryt State Diagrsa.m\nFigure 8.199, \"DFP VDM Mode Entry State Diagram\" DFP\nFigure 8.199 DFP VD sMho Mwos dthee E sntatrtey oSptaetrea tDioina gfroar ma when entering a Mode.\nPE_DFP_VDM_Mode_Entry_ACKed PE_DFP_VDM_Mode_Entry_NAKed\nActions on entry: Actions on entry:\nRequest DPM to enter the mode Inform DPM of reason for failure\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nMode Entry ACK\nreceived Mode Entry NAK/BUSY\nReceived |\nMode entered VDMModeEntryTimer timeout |\nPE_DFP_VDM_Mode_Entry_Request Protocol Error3\nActions on entry:\nSend Mode Entry request DPM informed2\nStart VDMModeEntryTimer\nPower = Explicit Contract\nPD = Connected\nDPM requests\nMode entry1\nPE_SRC_Ready or PE_SNK_Ready\n(DFP)\n1) The Device Policy Manager Shallhave placed the system into USB Safe State before issuing this request when entering Modal operation.\n2) The Device Policy Manager Shallhave returned the system to USB operation if not in Modal operation at this point.\n3) Protocol Errors are handled by informing the DPM, returning to USB Safe State and then processing the Message once the PE_SRC_Readyor\nPE_SNK_Readystate has been entered.\n8.3.3.23.1.1 PE_DFP_VDM_Mode_Entry_Request State\nPolicy Engine PE_DFP_VDM_Mode_Entry_Request PE_SRC_Ready\nPE_SNK_Ready DFP\nThe transitions to the state from either the or\n\uf06c Dev sictaet Peo floicr ya M ana wgehren: Port Partner Cable Plug\nThe PE_DFP_VDM_Mod er_eEqnutersyt_sR tehqaut ethste Poli coyr E an gineShall enter aS Mtroudcetu.red VDMEnter\nModeCommand Shall VDMModeEntryTimer\nOn entry to the state the send a\nPo licy Engin ereSqhuaelslt and start tPhEe_ DFP_VDM_Mode_Entry._ACKed\nThe\uf06c Structur ed VD tMraEnnstiteiro nM tood tehAe CKCommand state when:\nPoliAcy EngineShall PE _DFP_VDM r_Mesopdoen_sEen itsr rye_cNeAivKeedd.\nThe\uf06c Structur ed VD tMraEnnstiteiro nM tood tehNe AK BUSYCommand state when:\n\uf06c A VDMModeEnt ryTimer or response is received or\nThe times out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 933\n8.3.3.23.1.2 PE_DFP_VDM_Mode_Entry_ACKed State\nPE_DFP_VDM_Mode_Entry_ACKed Policy EngineShall Device Policy Manager\nOn entry to the state the request the\nto enPtoelri ctyh eE nMgoindee.Shall PE_SRC_Ready PE_SNK_Ready DFP\nThe\uf06c transition to either the or state for a when:\n8.3.3.2T3h.e1 M.3ode has been ePnEte_rDeFd.P_VDM_Mode_Entry_NAKed State\nPE_DFP_VDM_Mode_Entry_NAKed Policy EngineShall Device Policy Manager\nNAK BUSY Protocol Error\nOn entry to the state the inform the\nof thPeo rleicays oEnn gfoinre faSihluarlel ( , , timeout orP E_SRC_Ready). PE_SNK_Ready DFP\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to either the or state for a when:\nThe has been informed.\nPage 934 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.23.2 DFP Structured VDM Mode Exit State Diagram\nFigure 8.200, \"DFP VDM Mode Exit State Diagram\" DFP\nFigure 8.200 DFP sVhDoMw sM thoed est Eatxei td Siatagrtea mD ifaogrr aa m when exiting a Mode.\nPE_SRC_Ready or PE_SNK_Ready\n(DFP)\nDPM indicates DPM informed1\nMode exit\nPE_DFP_VDM_Mode_Exit_Request\nActions on entry:\nSend Exit Mode request\nStart VDMModeExitTimer\nExit Mode BUSY Received | Power = Explicit Contract\nVDMModeExitTimer Timeout PD = Connected\nExit Mode ACK/NAK\nreceived\nPE_DFP_VDM_Exit_Mode_ACKed\nPE_SRC_Hard_Reset or\nActions on entry:\nPE_SNK_Hard_Reset Inform DPM of ACK or NAK\n(DFP)\nPower = Explicit Contract\nPD = Connected\n1) The Device Policy Manager is required to return the system to USB operation at this point when exiting Modal Operation.\n8.3.3.23.2.1 PE_DFP_VDM_Mode_Exit_Request State\nPolicy Engine PE_DFP_VDM_Mode_Exit_Request PE_SRC_Ready\nPE_SNK_Ready DFP\nThe transitions to the state from either the or\n\uf06c Dev sictaet Peo floicr ya M ana wgehren: Port Partner Cable Plug\nThe PE_DFP_VDM_Mod er_eEqxuite_sRtse qthuaets tthe Policy oErn ag ineShall exit aS Mtroudcetu.red VDMExit Mode\nCommand Shall VDMModeExitTimer\nOn entry to the state the send a\nPolicy rEenqguiensetS ahnadl l start the PE_DFP_VDM_Mod.e_Entry_ACKed\nThe\uf06c Structur ed VD tMraEnxsiitt iMono dtoe tAhCeK NAKCommand state when:\nPoliAcy EngineShall or PE_ SRC_Hard _rReespseotnse PisE r_eScNeKiv_Heda.rd_Reset\nPower Role\nThe transition to either the or state depending on the\npre\uf06csent Structured w VhDeMn:Exit ModeBUSYCommand\n\uf06c A VDMModeExi tTimer response is received or\n8.3.3.2T3h.e2 .2 PE_D tFimPe_sV oDuMt. _DFP_Mode_Exit_ACKed State\nPE_DFP_VDM_Mode_Entry_ACKed Policy EngineShall Device Policy Manager\nACK NAK\nOn Exit to the state the inform the Of\nthe rPeosluiclty: Engi noer Shall. PE_SRC_Ready PE_SNK_Ready DFP\nThe transition to either the or state for a when:\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 935\n\uf06c Device Policy Manager\nThe has been informed.\nPage 936 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.24 UFP Structured VDM State Diagrams\nShall UFP Structured VDM\nT8h.3e .S3ta.t2e 4D.i1agrams in th iUs FsePct iSotnr uctu arpepldy tVo DallM Ens ttheart sMupopdoret State Diagrsa.m\nFigure 8.201, \"UFP Structured VDM Enter Mode State Diagram\" UFP\nEnter ModeCommand\nshows the state diagram for a in response to an\n. Figure 8.201 UFP Structured VDM Enter Mode State Diagram\nPE_SRC_Ready or PE_SNK_Ready (UFP)\nActions on entry:\nPower = Explicit Contract\nPD = Connected\nEnter Modes\nrequest1\nEnter Mode NAK sent PE_UFP_VDM_Evaluate_Mode_Entry\nActions on entry:\nRequest DPM to evaluate request to enter a Mode\nCable = Awake\nPD = Connected\nDPM says Enter Mode ACK\nNAK sent\nDPM says\nMode entered\nPE_UFP_VDM_Mode_Entry_NAK PE_UFP_VDM_Mode_Entry_ACK\nActions on entry:\nActions on entry:\nSend Enter Mode NAK Command response\nSend Enter Mode ACK Command\nas requested\nCable = Awake\nCable = Awake\nPD = Connected\nPD = Connected\n1) The UFP is required to be in USB operation or USB Safe State at this point.\n8.3.3.24.1.1 PE_UFP_VDM_Evaluate_Mode_Entry State\nPolicy Engine PE_UFP_VDM_Evaluate_Mode_Entry PE_SRC_Ready\nPE_SNK_Ready UFP\nThe transitions to the state from either the or\n\uf06c Struct sutraetde VfoDrM a Ente wr hMeond:eCommand DFP\nA PE_UFP_V DM_Evaluate _Mode_En rteryquest is recPeoivliecdy Efrnogmin tehSeh all . Device Policy\nManager Enter ModeCommand Command\nOn Entry to the state the request the\nto evaluate the request and enter the Mode indicated in the request if\nthe rPeoqluiceys tE insg aincceeSphtaabllle. PE_UFP_VDM_Mode_Entry_ACK\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the state when:\nPoliTcyh eE ngineShall indicaPteEs_ UthFaPt_ VthDeM M_oMdoed hea_Es nbtereyn_ NenAtKered.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the state when:NAK\nThe indicates that the response to the Mode request is .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 937\n8.3.3.24.1.2 PE_UFP_VDM_Mode_Entry_ACK State\nPE_UFP_VDM_Mode_Entry_ACK Policy EngineShall Structured VDMEnter Mode\nACKCommand\nOn entry to the state the send a\nPolicy Engi nreesSphoanlsle. PE_SRC_Ready PE_SNK_Ready UFP\nThe\uf06c Struct ured VtrDaMnsEitniotenr t Mo eoidtheeArC tKheC ommand or state for a when:\n8.3.3.2T4h.e1 .3 P E_UFP_VD M_ Mode_En rterspyo_nNsAe Kha Ss tbaeteen sent.\nPE_UFP_VDM_Mode_Entry_NAK Policy EngineShall Structured VDMEnter Mode\nNAKCommand Device Policy Manager\nOn entry to the state the send a\nP olicy Engi nreesSphoanlsle as indicated by the PE_SRC_Ready PE. _SNK_Ready UFP\nThe\uf06c Struct ured VtrDaMnsEitniotenr t Mo eoidtheeNrA thKeC ommand or state for a when:\nThe response has been sent.\nPage 938 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.24.2 UFP Structured VDM Exit Mode State Diagram\nFigure 8.202, \"UFP Structured VDM Exit Mode State Diagram\" UFP\nExit ModeCommand\nshows the state diagram for a in response to an\n. Figure 8.202 UFP Structured VDM Exit Mode State Diagram\nPE_SRC_Ready or PE_SNK_Ready (UFP)\nActions on entry:\nPower = Explicit Contract\nPD = Connected\nExit Mode request\nreceived\nPE_UFP_VDM_Mode_Exit\nActions on entry:\nRequest DPM to evaluate request to exit\nthe requested Mode Exit Mode\nNAK sent\nDPM says NAK\nPower = Explicit Contract\nPD = Connected\nExit Mode ACK\nsent1\nMode exited\nPE_UFP_VDM_Mode_Exit_ACK PE_UFP_VDM_Mode_Exit_NAK\nActions on entry: Actions on entry:\nSend Exit Mode ACK Command Send Exit Mode NAK Command\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\n1) The UFP is required to be in USB operation or USB Safe State at this point.\n8.3.3.24.2.1 PE_UFP_VDM_Mode_Exit State\nPolicy Engine PE_UFP_VDM_Mode_Exit PE_SRC_Ready\nPE_SNK_Ready UFP\nThe transitions to the state from either the or\n\uf06c Struct sutraetde VfoDrM a Exit wMhoedne:Command DFP\nA PE_UFP_VD M_Mode_E xit reqPuoleicsty iEsn rgeicneeivSehda flrlom the .Device Policy Manager\nCommand\nOn entry to the state the request the to exit the\nModPe oinlidcyic Eantegdin ien Sthhea ll . PE_UFP_VDM_Mode_Exit_ACK\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the state when:\nPoliTcyh eE ngineShall indicaPteEs_ UthFaPt_ VthDeM M_oMdoed hea_Es xbiete_NnA eKxited.\nThe\uf06c Devic e Polic tyr Manasnitaigoenr to the Command state whEexnit: ModeCommand\nNAK\nThe indicates that the response to the request is\n.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 939\n8.3.3.24.2.2 PE_UFP_VDM_Mode_Exit_ACK State\nPE_UFP_VDM_Mode_Exit_ACK Policy EngineShall Structured VDMExit ModeACK\nCommand\nOn entry to the state the send a\nPolicy rEensgpionnesSeh.all PE_SRC_Ready PE_SNK_Ready UFP\nThe\uf06c Struct ured VtrDaMnsEitxiiotn M too deeitAheCrK thCoe mmand or state for a when:\n8.3.3.2T4h.e2 .3 P E_UFP_V DM _Mode_E rexsipt_oNnsAeK ha Sst baeteen sent.\nPE_UFP_VDM_Mode_Exit_NAK Policy EngineShall Structured VDMExit ModeNAK\nCommand Device Policy Manager\nOn entry to the state the send a\nPolicy rEensgpionnesSeh aasl lindicated by the PE_S.RC_Ready PE_SNK_Ready UFP\nThe\uf06c Struct ured VtrDaMnsEitxiiotn M too deeitNheArK thCeo meimthaenr dthe or state for a when:\nThe response has been sent.\nPage 940 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.25 Cable Plug Specific State Diagrams\nShall Cable Plug Structured VDM\nT8h.3e .S3ta.t2e 5D.i1agrams in th iCs asebcltieo nP lug Capapblyl eto Ralel ady Statse th Dati saugprpaormt s.\nFigure 8.203, \"Cable Ready State Diagram\" Cable Plug\nFigure s8h.2o0w3s Cthaeb Clea bRleea Rdeya dSyta sttea tDei dagiargarmam for a .\nPower up |\nHard Reset Complete |\nCable Reset Complete\nPE_CBL_Ready\nActions on entry:\nCable = Awake/Asleep\nPD = Not Connected/Connected\n8.3.3.25.1.1 PE_CBL_Ready State\nPE_CBL_Ready Cable Plug\nCable Reset\nThe state shown in the following sections is the normal operational state for a and where\nit starts after power up or a Hard/ .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 941\n8.3.3.25.2 Soft/Hard/Cable Reset\n8.3.3.25.2.1 Cable Plug Soft Reset State Diagram\nFigure 8.204, \"Cable Plug Soft Reset State Diagram\" Cable Plug Soft_Reset\nMessage\nshows the state diagram on reception of a\n. Figure 8.204 Cable Plug Soft Reset State Diagram\nPE_CBL_Ready\nAccept Message sent |\nTransmission Error indication\nfrom Protocol Layer\nPE_CBL_Soft_Reset\nActions on entry:\nReset Protocol Layer\nSend Accept Message\nCable = Awake\nPD = Connected\nSoft Reset Message\nreceived\n8.3.3.25.2.1.1 PE_CBL_Soft_Reset State\nPE_CBL_Soft_Reset Shall Soft_ResetMessage\nProtocol Layer\nThe state be entered from any state when a is received from the\n.PE_CBL_Soft_Reset Policy EngineShall Protocol Layer Cable Plug Shall\nProtocol Layer AcceptMessage\nOn entry to the state the reset the in the and\nthenP roelqicuye Estn tghinee Shall to send aPnE _CBL_R eady .\nThe\uf06c Accep tMes staragnesition to the state when:\n\uf06c The Protoco l Layer has been sent or\nThe indicates that a transmission error has occurred.\nPage 942 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.25.2.2 Cable Plug Hard Reset State Diagram\nFigure 8.205, \"Cable Plug Hard Reset State Diagram\" Cable Plug Hard Reset Cable\nReset\nshows the state diagram for a or\n. Figure 8.205 Cable Plug Hard Reset State Diagram\nHard Reset signalling\nReceived |\nCable Reset Command\nPE_CBL_Hard_Reset\nActions on entry:\nReset Cable Plug\nCable = Awake/Asleep\nPD = Not Connected\nCable reset complete\nPE_CBL_Ready\n8.3.3.25.2.2.1 PE_CBL_Hard_Reset State\nPE_CBL_Hard_Reset Shall Hard ResetSignaling Cable Reset\nSignaling\nThe state be entered from any state when either or\nis detePcEt_eCdB.L_Hard_Reset Policy EngineShall Cable Plug\nOn ePnotrliyc tyo E tnhgei neShall stateP tEh_eC BL_Ready reset the (equivalent to a power cycle).\nThe\uf06c Cable Plug transition to the state when:\nThe reset is complete.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 943\n8.3.3.25.2.3 DFP/VCONN Source SOP'/SOP'' Soft Reset or Cable Reset of a Cable\nPlug or VPD State Diagram\nFigure 8.206, \"DFP/VCONN Source Soft Reset or Cable Reset of a Cable Plug or VPD State Diagram\"\nPolicy Engine VCONN Source Soft Reset Cable Reset Cable Plug\nVPD SOP\u2019 SOP\u2019\u2019 below shows the\nstate diagram for the in a when performing a or of a or\nonF igure/ 8.20.6 T DhFe Pfo/lVloCwONinNg S soeuctricoen Ss odfets Rcreisbeet o opre Craatbiolen Rine seeatc ho fo af tChaeb sltea tPelsu.g or VPD State Diagram\nIn Explicit Contract &\nAccept Message Not in Explicit Contract &\nPE_SRC_Ready or Received on SOP\u2019/SOP\u2019\u2019 Rece A i c v c e e d p o t n M S e O ss P a \u2019/ g S e OP\u2019\u2019 PE_SRC_Send_Capabilities or\nPE_SNK_Ready (VCONN Source) PE_SRC_Discovery2\n(VCONN Source)\nCable Reset sent\nSenderResponseTimer\nTimeout |\nTransmission PE_DFP_VCS_CBL_Send_Soft_Reset\nPE_DFP_VCS_CBL_Send_Cable_Reset Error indication\nfrom Protocol Layer | Actions on entry:\nActions on entry: Protocol Error Reset Protocol Layer\nSend Cable Reset Message Send Soft Reset Message on SOP\u2019/SOP\u2019\u2019\nInitialize and run SenderResponseTimer\nPower = DefauIt/Implicit or Explicit Contract\nPD = Connected; Cable Discovered Power = DefauIt/Implicit or Explicit Contract\nPD = Connected; Cable Discovered\nCable Reset Request\nMessage not sent after retries on SOP\u2019/SOP\u2019\u2019 (no GoodCRC received)1 &\nfrom Device Policy Manager\nPreviously Cable Discovered|Protocol error detected on SOP\u2019/SOP\u2019\u2019\n1) Excludes the Soft_ResetMessage itself.\n2) Sink only communicates with the Cable Plug when in an Explicit Contract. If the Discover IdentityCommand is being sent at startup, then the Policy Engine will\nsubsequently transition to the PE_SRC_Send_Capabilitiesstate as normal. Otherwise, the Policy Engine will transition to the PE_SRC_Discoverystate.\n8.3.3.25.2.3.1 PE_DFP_VCS_CBL_Send_Soft_Reset State\nPE_DFP_VCS_CBL_Send_Soft_Reset Shall Protocol Error\nSOP\u2019 SOP\u2019\u2019 Protocol Layer Section 6.8.1, \"Soft Reset and Protocol Error\" Message\nThe SOP\u2019 SOP\u2019\u2019 state be enteredC afrbolem P alungy sVtaPtDe when a is detected on\n/ by the Cable P (lusege ) or when a Devi chea sP onloict yb een\nsMeannt aagfteerr retries oSno ft Re/set wSOhPil\u2019e ScOomP\u2019\u2019municating with a / and when there was previous\ncommunication with the that did not result in a Transmission Error or whenever the\ndirectsP aE _DFP_VCS _oCnB L_Se/nd_So.ft_Reset DFPPolicy EngineShall SOP\u2019 SOP\u2019\u2019\nProtocol Layer Soft Reset Shall Soft_ResetMessage SOP\u2019 SOP\u2019\u2019 Cable Plug VPD\nOn entry to the SenderResponseTimer state the request the /\nto perform a , then send a on / to the / ,\nand iPnoiltiicayli Ezen gainnde rSuhna tllhe PE. _SRC_Ready PE_SNK_Ready DFP\nVCONN Source Power Role\nThe transition to either the or state, depending on the\n\uf06c 's Explicit, wCohnetnr:act\n\uf06c TheArcec iesp ntoM essage in place andSOP\u2019 SOP\u2019\u2019\nPoliAcyn E ngineS hall has been received oPnE _SRC/_Send._Capabilities PE_SRC_Discovery\nDFP VCONN Source Power Role\nThe transition to either the state or state,\ndep\uf06cending on the Exp'sl icit Contract 's , when:\n\uf06c TheArcec iesp atnM essage in place andSOP\u2019 SOP\u2019\u2019\nPoliAcyn E ngineS hall has been recePivEe_Dd FoPn_ VCS_/CBL_S.end_Cable_Reset\nThe\uf06c SenderR espo ntrsaenTsiimtioenr to the state when:\n\uf06c A Protocol Layer timeout occurs\n\uf06c Or the Protocol Er irnodricates that a traSnOsPm\u2019isSsOioPn\u2019\u2019 error hParso otocccoulr rLeadyer\nOr when a is detected on / by the .\nPage 944 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.25.2.3.2 PE_DFP_VCS_CBL_Send_Cable_Reset State\nPE_DFP_VCS_CBL_Send_Cable_Reset Shall Device Policy Manager\nCable Reset\nThe state be entered from any state when the\nrequests a PE_DFP. _VCS_CBL_Send_Cable_Reset DFPPolicy EngineShall Protocol Layer\nCable ResetSignaling\nOn entry to the state the request the\nto sePnodl icy EngineSh all . PE_SRC_Ready PE_SNK_Ready VCONN\nSource Power Role\nThe transition to either the or state, depending on the\n\uf06c 'sC able Reset, Swighneanl:ing\nhas been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 945\n8.3.3.25.2.4 UFP/VCONN Source SOP'/SOP'' Soft Reset of a Cable Plug or VPD\nState Diagram\nFigure 8.207, \"UFP/VCONN Source Soft Reset of a Cable Plug or VPD State Diagram\"\nUFPPolicy Engine VCONN Source Soft Reset Cable Plug VPD SOP\u2019 SOP\u2019\u2019\nbelow shows the state diagram\nfor the in a when performing a of a or on / . The\nfollowing sectiFoingsu dree s8c.r2ib0e7 o UpFePra/tVioCnO NinN eSaocuhr ocef tShoef ts tRaetesse.t of a Cable Plug or VPD State Diagram\nAccept Message\nReceived on SOP\u2019/SOP\u2019\u2019\nPE_SRC_Ready or\nPE_SNK_Ready (VCONN Source)\nSenderResponseTimer\nTimeout |\nTransmission PE_UFP_VCS_CBL_Send_Soft_Reset\nError indication\nfrom Protocol Layer | Actions on entry:\nPE_SRC_Hard_Reset or Protocol Error Reset Protocol Layer\nSend Soft Reset Message on SOP\u2019/SOP\u2019\u2019\nPE_SNK_Hard_Reset\nInitialize and run SenderResponseTimer\nPower = DefauIt/Implicit or Explicit Contract\nPD = Connected\nMessage not sent after retries on SOP\u2019/SOP\u2019\u2019 (no GoodCRC received)1 &\nPreviously Cable Discovered |Protocol error detected on SOP\u2019/SOP\u2019\u2019\n1) Excludes the Soft_ResetMessage itself.\n8.3.3.25.2.4.1 PE_UFP_VCS_CBL_Send_Soft_Reset State\nPE_UFP_VCS_CBL_Send_Soft_Reset Shall Protocol Error\nSOP\u2019 SOP\u2019\u2019 Protocol Layer Section 6.8.1, \"Soft Reset and Protocol Error\" Message\nThe SOP\u2019 SOP\u2019\u2019 state be enteredC afrbolem P alungy sVtPatDe when a is detected on\n/ by the Cable P (lusege ) or when a Devi chea sP onloict yb een\nsMeannt aagfteerr retries oSno ft Re/set wSOhPil\u2019e ScOomP\u2019\u2019municating with a / and when there was previous\ncommunication with the that did not result in a Transmission Error or whenever the\ndirectsP aE _UFP_VCS _oCnB L_Se/nd_Sof.t_Reset Policy EngineShall SOP\u2019 SOP\u2019\u2019Protocol\nLayer Soft Reset Shall Soft_ResetMessage SOP\u2019 SOP\u2019\u2019 Cable Plug\nOn entry to tSheen derResponseTimer state the request the /\nto perform a , then send a on / to the , and initialize\nand Pruonli ctyh eE ngineShall . PE_SRC_Ready PE_SNK_Ready UFPVCONN\nSource Power Role\nThe transition to either the or state, depending on the\n\uf06c 's AcceptM, ewshsaegne: SOP\u2019 SOP\u2019\u2019\nPolicAyn E ngineS hall has been received PonE _SRC_/Hard._Reset PE_SNK_Hard_Reset\nUFPVCONN Source Power Role\nThe transition to either the or state, depending on the\n\uf06c SenderR'se sponseTim,e wrhen:\n\uf06c A Protocol Layer timeout occurs\n\uf06c Or the Protocol Er irnodricates that a traSnOsPm\u2019isSsOioPn\u2019\u2019 error hParso otocccoulr rLeadyer\nOr when a is detected on / by the .\nPage 946 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.25.3 Source Startup Structured VDM Discover Identity of a Cable Plug\nState Diagram\nFigure 8.208, \"Source Startup Structured VDM Discover Identity State Diagram\" Source\nCable Plug\nshows the state diagram for\ndiscovery of ideFnitgiutyr ein 8fo.2rm08a tSioonu rfrcoem St aa rtup Struc tduurreindg V tDheM s tDairstcuopv seerq Iudeennctei.ty State Diagram\nPE_SRC_Startup\nDPM requests identity discovery3&\nProtocol Layer Reset Complete\nPE_SRC_VDM_Identity_Request\nActions on entry:\nSend Discover Identity request\nIncrement the DiscoverIdentityCounter\nStart VDMResponseTimer\nPower = No or Implicit Contract Discover Identity NAK/BUSY |\nDPM requests identity discovery & Cable Plug = Not PD Connected VDMResponseTimer Timeout |\nDiscoverIdentityCounter < nDiscoverIdentityCount2 Discover Identity request sending\nfailure (without GoodCRC)\nDiscover Identity ACK\nreceived\nPE_SRC_VDM_Identity_ACKed PE_SRC_VDM_Identity_NAKed\nActions on entry: Actions on entry:\nInform DPM of identity Inform DPM of result\nPower = No or Implicit Contract Power =No or Implicit Contract\nCable Plug = PD Connected Cable Plug = PD Connected\nDPM informed\nDPM informed\nPE_SRC_Discovery PE_SRC_Send_Capabilities or\nPE_SRC_Discovery1\n1) If the Discover IdentityCommand is being sent at startup, then the Policy Engine will subsequently transition to the PE_SRC_Send_Capabilitiesstate as\nnormal. Otherwise, the Policy Engine will transition to the PE_SRC_Discoverystate.\n2) The SourceCapabilityTimercontinues to run during the states defined in this diagram even though there has been an exit from the PE_SRC_Discovery\nstate. This ensures that Source_CapabilitiesMessages are sent out at a regular rate.\n3) The DPM in an EPR Source Shall request the discovery of the identity of the Cable Plug at startup.\n8.3.3.25.3.1 PE_SRC_VDM_Identity_Request State\nPolicy EngineShall PE_SRC_VDM_Identity_Request PE_SRC_Startup\nThe transition to the state from the state\nwhe\uf06cn: Device Policy Manager Cable Plug\nPoliTcyh eE ngineShall requePstEs_ SthReC d_VisDcMov_eIdrye notf itthye_R ideeqnuteistyt of the PE._SRC_Discovery\nThe transition to the state from the state\nwhe\uf06cn: Device Policy Manager Cable Plug\n\uf06c The DiscoverIdentityCoun rteerquenstDsi sthceo vdeisrcIdoevnertyit yoCf othuen itdentity of the and\nThe < PE_SRC_Discov.ery SourceCapabilityTimerShall\nFigure 8.208, \"Source Startup Structured VDM Discover Identity State\nEDviaegnr tahmo\"ugh thSehrael hl Naso bteen a transition out of the PE_SRC_Discover sytate the\ncontinue to run during the states shown in\nand be initialized on re-entry to .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 947\nNote: EPR Source Cable Plug First Explicit\nContract Section 6.4.10.1, \"Process to enter EPR Mode\"\nAn is required to discover the identity of the prior to entering the\nPE_ (SsReCe_ VDM_Identity_Request Policy Engin) eShall Structured VDMDiscover\nIdentityCommand Shall DiscoverIdentityCounter Shall\nOVDn MenRterysp toon tsheeT imer state the send a\nrequest, increment the and start the\nPolicy EngineSha.ll PE_SRC_VDM_Identity_ACKed\nThe\uf06c Structur ed VD tMraDnissictioovne rto I dtheen tityACKCommand state when:\nPoliAcy EngineShall PE_S RC_V DM_Ident rietys_pNoAnKsee dis received.\nThe\uf06c Structur ed VD tMraDnissictioovne rto I dtheen tityNAK BUSYCommand state when:\n\uf06c A VDMRespons eTimer or response is received or\n\uf06c The Structured VDMDisco tviemre Isd oeuntt iotryCommand Message GoodCRCMessage\nThe request sending fails (no\n8.3.3.2r5ec.3ei.v2ed after retri e Ps)E. _SRC_VDM_Identity_ACKed State\nPE_SRC_VDM_Identity_ACKed Policy EngineShall Device Policy Manager\nOn entry to the state the inform the of the\nIdenPtiotyli ciny fEonrgminaetioSnh.all PE_SRC_Send_Capabilities PE_SRC_Discovery\nThe\uf06c Devic e Polic tyr aMnasnitaiogner back to either the or state when:\n8.3.3.2T5h.e3 .3 PE_SR hCa_sV bDeeMn i_nIfdoermnetidt.y_NAKed State\nPE_SRC_VDM_Identity_NAKed Policy EngineShall Device Policy Manager\nNAK BUSY\nOn entry to the state the inform the of the\nresuPlto (licy E,n gineS ohra tlilmeout). PE_SRC_Send_Capabilities PE_SRC_Discovery\nThe\uf06c Devic e Polic tyr aMnasnitaiogner back to either the or state when:\nThe has been informed.\nPage 948 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.25.4 Cable Plug Mode Entry/Exit\n8.3.3.25.4.1 Cable Plug Structured VDM Enter Mode State Diagram\nFigure 8.209, \"Cable Plug Structured VDM Enter Mode State Diagram\" Cable Plug\nEnter ModeCommand\nshows the state diagram for a in\nresponse to an Figure 8.209 Cab.le Plug Structured VDM Enter Mode State Diagram\nPE_CBL_Ready\nActions on entry:\nCable = Awake/Asleep\nPD = Not Connected/Connected\nEnter Modes\nrequest1\nEnter Mode NAK sent PE_CBL_Evaluate_Mode_Entry\nDPM says Actions on entry:\nNAK Request DPM to evaluate request to enter\na Mode\nCable = Awake\nPD = Connected\nEnter Mode ACK\nsent\nDPM says\nMode entered\nPE_CBL_Mode_Entry_NAK PE_CBL_Mode_Entry_ACK\nActions on entry:\nActions on entry:\nSend Enter Mode NAK Command response\nSend Enter Mode ACK Command\nas requested\nCable = Awake\nCable = Awake\nPD = Connected\nPD = Connected\n1) The Cable is required to be in USB operation or USB Safe State at this point.\n8.3.3.25.4.1.1 PE_CBL_Evaluate_Mode_Entry State\nPolicy Engine PE_CBL_Evaluate_Mode_Entry PE_CBL_Ready\nThe\uf06c Structur terda nVsDiMtioEnnst teor t Mheo deCommand state from DthFeP state when:\nA PE_CBL_Ev aluate_Mod e_Entry requestP iosl irceyc Eeinvgeidn efrSohma ltlhe . Device Policy Manager\nEnter ModeCommand Command\nOn Entry to the state the request the to\nevaluate the request and enter the Mode indicated in the request if the request is\naccepPtoalibclye .EngineShall PE_CBL_Mode_Entry_ACK\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the state when:\nPoliTcyh eE ngineShall indicaPteEs_ CthBaLt_ Mthoed Me_oEdnet hrya_sN bAeKen entered.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the state when: NAK\n8.3.3.2T5h.e4 .1.2 PE _iCndBicLa_tMes othdaet _tEhen rtersyp_oAnsCeK to S tthaet Meode request is .\nPE_CBL_Mode_Entry_ACK Policy EngineShall Structured VDMEnter ModeACK\nCommand\nOn entry to the state the send a\nresponse.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 949\nPolicy EngineShall PE_CBL_Ready\nThe\uf06c Struct ured VtrDaMnsEitniotenr t Mo tohdee ACKCommand state when:\n8.3.3.2T5h.e4 .1.3 PE_CBL _Mo de_Entry r_eNspAoKns Se thaatse been sent.\nPE_CBL_Mode_Entry_NAK Policy EngineShall Structured VDMEnter ModeNAK\nCommand Device Policy Manager\nOn entry to the state the send a\nPolicy rEensgpionnesSeh aasl lindicated by the PE_CBL_Ready .\nThe\uf06c Struct ured VtrDaMnsEitniotenr t Mo tohdee NAKCommand state when:\nThe response has been sent.\nPage 950 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.25.4.2 Cable Plug Structured VDM Exit Mode State Diagram\nFigure 8.210, \"Cable Plug Structured VDM Exit Mode State Diagram\" Cable Plug\nExit ModeCommand\nshows the state diagram for a in\nresponse to an Figu re 8.210 C.able Plug Structured VDM Exit Mode State Diagram\nPE_CBL_Ready\nActions on entry:\nCable = Awake/Asleep\nPD = Not Connected/Connected\nExit Mode request\nreceived\nPE_CBL_Mode_Exit\nActions on entry:\nRequest DPM to evaluate request to exit\nthe requested Mode Exit Mode\nNAK sent\nDPM says NAK\nCable = Awake\nPD = Connected\nExit Mode ACK\nsent1\nMode exited\nPE_CBL_Mode_Exit_ACK PE_CBL_Mode_Exit_NAK\nActions on entry: Actions on entry:\nSend Exit Mode ACK Command Send Exit Mode NAK Command\nCable = Awake Cable = Awake\nPD = Connected PD = Connected\n1) The Cable is required to be in USB operation or USB Safe State at this point.\n8.3.3.25.4.2.1 PE_CBL_Mode_Exit State\nPolicy Engine PE_CBL_Mode_Exit PE_CBL_Ready\nThe\uf06c Structur terda nVsDiMtioEnxsi tt oM tohde eCommand state from the DFP state when:\nA PE_CBL_Mo de_Exit Poli crye qEunegsitn eisS rheacellived from theD evice. Policy Manager\nCommand\nOn entry to the state the request the to exit the Mode\nindicPaotleidcy i nE nthgein eShall . PE_CBL_Mode_Exit_ACK\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the state when:\nPoliTcyh eE ngineShall indicaPteEs_ CthBaLt_ Mthoed Me_oEdxei th_aNsA bKeen exited.\nThe\uf06c Devic e Polic tyr Manasnitaigoenr to the Command state when: Exit ModeCommand\nNAK\nThe indicates that the response to the request is\n8.3.3.25.4..2.2 PE_CBL_Mode_Exit_ACK State\nPE_CBL_Mode_Exit_ACK Policy EngineShall Structured VDMExit ModeACK\nCommand\nOn entry to the state the send a\nresponse.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 951\nPolicy EngineShall PE_CBL_Ready\nThe\uf06c Struct ured VtrDaMnsEitxiiotn M too dtheeA CKCommand state when:\n8.3.3.2T5h.e4 .2.3 PE_CB L_M ode_Exit r_eNspAoKns Set haatse been sent.\nPE_CBL_Mode_Exit_NAK Policy EngineShall Structured VDMExit ModeNAK\nCommand Device Policy Manager\nOn entry to the state the send a\nPolicy rEensgpionnesSeh aasl lindicated by the PE_CBL_Ready .\nThe\uf06c Struct ured VtrDaMnsEitxiiotn M too dtheeN AKCommand state when:\nThe response has been sent.\nPage 952 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.26 EPR Mode State Diagrams\n8.3.3.26.1 Source EPR Mode Entry State Diagram\nFigure 8.211, \"Source EPR Mode Entry State Diagram\" EPR Source\nEPR_ModeMessage\nshows the state diagram for an in response to an\n. Figure 8.211 Source EPR Mode Entry State Diagram\nEPR Enter Mode (Enter Failed) sent\nPE_SRC_Ready\nEPR_Mode (Enter) received\nPE_SRC_EPR_Mode_Entry_Failed DPM says don\u2019t PE_SRC_Evaluate_EPR Mode_Entry\nActions on entry: enter EPR Mode Actions on entry:\nSend Enter Mode (Enter Failed) with Request DPM to evaluate request to enter EPR Mode\nappropriate failure code.\nPowe P r D = = E x C p o l n ic n i e t c C t o e n d tract Powe P r D = = E x C p o l n ic n i e t c C t o e n d tract\nDPM says enter EPR Mode\nPE_SRC_EPR_Mode_Entry_ACK EPR Enter Mode (Enter Acknowledged) Sent & PE_VCS_Send_Swap\nA Se c n ti d o n E s P o R n E e n n te tr r y M : ode Acknowledge Source U is n n k o n t o V w C n O C N a N b S le ource &\nIf Source is not the VCONN Source initiate VCONN Swap\nprocess\nPowe P r D = = E x C p o l n ic n i e t c C t o e n d tract VCONN Swap Process\nEPR Enter S M o o u d rc e e ( i E s n V te C r O A N c N k S n o o u w r l c e e d & ged) Sent & VCONN Swap Process Complete PE_VCS_Force_VCONN or\nUnknown Cable PE_VCS_Send_PS_RDY\nPE_SRC_EPR_Mode_Discover_Cable\nEP (c R a E p n ti t v e e r c M ab od le e | ( E k n n t o e w r n A c E k P n R o C w a l p e a d b g l e e d C ) a S b e l n e t ) & A C ca h c r t e r i c o i k e n d s V c o o o u n n t e . n n S t w ry a : p Result if Vconn Swap Process Source is the VCONN Source PE_INIT_PORT_VDM_Identity_Request\nPower = Explicit Contract\nPD = Connected Cable Discovery Process\nCable Plug is not EPR capable Cable Discovery Process Complete PE_INIT_PORT_VDM_Identity_ACKed or\nPE_INIT_PORT_VDM_Identity_NAKed\nPE_SRC_EPR_Mode_Evaluate_Cable_EPR\nActions on entry:\nAsk DPM to evaluate Cable Discovery results\nPower = Explicit Contract\nPD = Connected\nCable Plug is EPR capable\nPE_SRC_EPR_Mode_Entry_Succeeded\nActions on entry:\nSend EPR Mode (Enter Succeeded)\nEnter EPR Mode.\nPower = Explicit Contract\nPD = Connected\nEPR Mode Entered\nPE_SRC_Send_Capabilities\n8.3.3.26.1.1 PE_SRC_Evaluate_EPR_Mode_Entry State\nPolicy Engine PE_SRC_Evaluate_EPR_Mode_Entry PE_SRC_Ready\nThe\uf06c EPR_M tordaensitions toM tehses age Sink state from the state when:\nAn PE_SRC (_EEnvtaelru)a te_EPR_ Miso rdeec_eEivnetdry from the Poli.cy EngineShall Device Policy Manager\nEPR_Mode Message\nOn Entry to the state the request the\nto evPaoluliactye E tnhgei neShall (Enter) PE._SRC_EPR_Mode_Entry_Ack\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the EPR Mode state when:\nPoliTcyh eE ngineShall indicaPteEs_ StRhaCt_ EPR_Mode c_Eann tbrey _eFnatielreedd.\nThe\uf06c Devic e Polic tyr aMnasnitaiogner to the EPR Mode state when:\nThe indicates that the is not to be entered.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 953\n8.3.3.26.1.2 PE_SRC_EPR_Mode_Entry_Ack State\nPE_SRC_EPR_Mode_Entry_Ack Policy EngineShall EPR_Mode\nMessage\nOn entry to the state the send a (Enter\nAcknPoowlilceyd Egnegdi)n eShall . PE_SRC_EPR_Mode_Evaluate_Cable_EPR\nThe\uf06c EPR_M ode transition to the Message state when:\n\uf06c The Source (EnterV ACOcNkNn oSwoulercdeged) has been sent and\n\uf06c The is not the andEPR Cable\nPoliTcyh eE ncgabinlee Sish aa lclaptive cable or a kPnEo_wVCnS _Send_Sw.ap\nThe\uf06c EPR_M ode transition to the Message state when:\n\uf06c The Source (EnterV ACOcNkNn oSwoulercdeged) has been sent and\n\uf06c The is not the and\nPoliTcyh eE ncgabinlee Sish uanllknown. PE_SRC_EPR_Mode_Discover_Cable\nThe\uf06c EPR_M ode transition to the Message state when:\n\uf06c The Source (EVnCtOeNr NA Sckounrocweledged) has been sent and\n\uf06c The is the and\n8.3.3.2T6h.e1 c.3able is unkno w PnE. _SRC_EPR_Mode_Discover_Cable State\nPolicy Engine PE_SRC_EPR_Mode_Discover_Cable PE_VCS_Force_VCONN\nPE_VCS_Send_Ps_Rdy\nThe transitions to the state from the state\nor \uf06c Source stVaCteO NwNh Sewna:p\nPoliAcy Engine inSihtiaaltled prPoEce_IsNs IhTa_sP cOoRmTp_VleDteMd_.Identity_Request Cable\nPlug\nThe transition to the state in order to perform\n\uf06c discoveSroyu wrcheen: VCONN Source\nPoliTcyh eE ngineS hisa tlhle . PE_SRC_EPR_Mode_Entry_Failed\nThe\uf06c VCONN Swap transition to the Source VCONN Source state when:\n8.3.3.2T6h.e1 .4 pr o PceEs_sS faRilCe_dE (PthRe _Mode is_ Envota tlhuea te_Cable_E)P. R State\nPE_SRC_EPR_Mode_Evaluate_Cable_EPR Policy Engine Cable\nDiscovery\nIn the state the requests the DPM to evaluate the\nPolicy r Eensuglitnse. Shall PE_SRC_EPR_Mode_Entry_Succeeded\nThe\uf06c Cable Plug transition toE tPhRe Mode state when:\nPoliTcyh eE ngineShall is capable of PE_SR.C_EPR_Mode_Entry_Failed\nThe\uf06c Cable Plug transition to theE PR Mode state when:\n8.3.3.2T6h.e1 .5 is n o Pt cEa_pSaRblCe _oEf PR_Mod.e_Entry_Succeeded State\nPE_SRC_EPR_Mode_Entry_Succeeded Policy EngineShall EPR_Mode\nMessage EPR Mode\nOn entry to the state the send a (Enter\nSuccPeoedliecyd )E ngineSh aanlld enter P.E_SRC_Send_Capabilities\nThe\uf06c EPR Mode transition to the state when:\nhas been entered.\nPage 954 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.26.1.6 PE_SRC_EPR_Mode_Entry_Failed State\nPE_SRC_EPR_Mode_Entry_Failed Policy EngineShall EPR_Mode\nMessage\nOn entry to the state the send a (Enter Failed)\nPolic.y EngineShall PE_SRC_Ready\nThe\uf06c EPR_M ode transition to thMe essage state when:\nThe (Enter Failed) has been sent.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 955\n8.3.3.26.2 Sink EPR Mode Entry State Diagram\nFigure 8.212, \"Sink EPR Mode Entry State Diagram\" EPR Sink EPR Mode\nshows the state diagram for an initiating the\nEntry process. Figure 8.212 Sink EPR Mode Entry State Diagram\nPE_SNK_Ready\nDPM Request EPR Mode Entry\nPE_SNK_Send_EPR Mode_Entry EPR Enter Mode received (!Succceded) |\nSenderResponseTimer timeout |\nActions on entry: SinkEPREnterTimer timeout\nSend EPR Mode Entry Message PE_SNK_Send_Soft_Reset\nStart SenderResponse Timer\nStart SinkEPREnterTimer\nPower = Explicit Contract\nPD = Connected\nEPR Enter Mode Acknowledge received\nPE_SNK_EPR_Mode_Entry_Wait_For_Response EPR Enter Mode received (!Succceded) |\nSinkEPREnterTimer timeout\nActions on entry:\nWait for EPR Enter Mode response\nActions on exit: PE_VCS_Evaluate_Swap\nStop the SinkEPRTimer\nEnter EPR Mode\nVCONN_Swap Message Received\nVCONN Swap Process\nVCONN Swap Process completed\nPE_VCS_Turn_Off_VCONN\nPower = Explicit Contract\nPD = Connected\nEPR Enter Mode Succeeded received\nPE_SNK_Wait_For_Capabilities\n8.3.3.26.2.1 PE_SNK_Send_EPR_Mode_Entry State\nPolicy Engine PE_SNK_Send_EPR_Mode_Entry PE_SNK_Ready\nThe\uf06c transitions to the EPR Mode state from the state when:\nThe DPMP Er_eSqNuKes_Stse nendt_rEyP iRn_tMo ode_Entry. Policy EngineShall EPR_Mode Message\nSenderResponseTimer SinkEPREnterTimer\nOn Entry to the state the send an (Enter)\nNanodt es:tarts the SinkEPREnterTimerSh aanlld the .\nPolicyT Ehneg ineShall P cEo_nStNinKu_Ee PtoR _rMuno dine _eWveariyt _sFtoatre_ Ruenstpilo int isse stopped or times out.\nThe\uf06c EPR_M ode transition to the Message state when:\nPoliAcyn E ngineShal (lEnter AcknowledPgeE)_ SNK_Sen dis_ Sroecfte_iRveesde.t\nThe\uf06c EPR_M odeM tersasnasgiteion to the state when:\nAn is received which is not Enter Succeeded or\nPage 956 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c SenderResponseTimer\n\uf06c The SinkEPREnterTimer times out or\n8.3.3.2T6h.e2 .2 PE_S NtimKe_sE oPuRt._Mode_Wait_For_Response State\nPolicy Engine EPR Mode\nIn the State the PE_SNK_EPR w_Maiotds efo_Wr aa cito_nFfoirrm_Raetsiopno nthsaet the Policy e Enntgryin reeSqhuaesllt has succeeded.\nSinkEPREnterTimer EPR Mode\nOn exit from the state the stop the\nPolicy EngineSha alnld enter P.E_SNK_Send_Soft_Reset\nThe\uf06c EPR_M odeM tersasnasgiteion to the state when:\n\uf06c An SinkEPRE nterTim eisr received which is not Enter Succeeded or\nPoliTcyh eE ngineShall times oPuEt._VCS_Evaluate_Swap\nThe\uf06c VCONN_S wapM treasnsasigteion to the State when:\nPoliAcy EngineShall is received. PE_VCS_Turn_Off_VCONN\nPE_SNK_EPR_Mode_Wait_For_Response\nThe transition back from the State to the\n\uf06c VCONN Swap State when:\nPoliTcyh eE ngineShall process has comPpEle_SteNdK._Wait_for_Capabilities\nThe\uf06c EPR_M ode transition to the Message state when:\nAn (Enter Succeeded) has been received.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 957\n8.3.3.26.3 Source EPR Mode Exit State Diagram\nFigure 8.213, \"Source EPR Mode Exit State Diagram\" EPR Source EPR\nMode\nshows the state diagram for an initiating the\nexit process. Figure 8.213 Source EPR Mode Exit State Diagram\nPE_SRC_Ready\nDPM Requests EPR Mode Exit EPR Mode Exit Message Received\nPE_SRC_Send_EPR Mode_Exit\nActions on entry:\nSend EPR Mode Exit Message PE_SRC_EPR Mode_Exit_Received\nActions on exit: Actions on entry:\nExit EPR Mode Exit EPR Mode\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nEPR Mode Exit Message sent Not in an Explicit Contract with an SPR PDO\nIn Explict Contract with SPR PDO &\nEPR Mode Exited\nPE_SRC_Hard_Reset\nPE_SRC_Send_Capabilities\n8.3.3.26.3.1 PE_SRC_Send_EPR_Mode_Exit State\nPolicy Engine PE_SRC_Send_EPR_Mode_Exit PE_SRC_Ready\nThe\uf06c transitions to the EPR Mode state from the state when:\nThe DPMP Er_eSqRuCe_sStse nedxi_tE fPrRom_M ode_Exit . Policy EngineShall EPR_Mode Message\nOn Entry to the PE_SRC_Send_EPR_Mode_Exi tstate the Policy Engin eShal lsend aEnP R Mode (Exit) .\nOn EPxoitl ifcryo mEn tghine eShall PE_SR Cs_tSaeten dth_eC apabilities exit .\nThe\uf06c EPR_M ode transitMioenss taog tehe state when:\n8.3.3.2T6h.e3 .2 (Ex i tP) E_SRC_ EhPasR b_eMeno sdeent_.Exit_Received State\nPolicy Engine PE_SRC_EPR_Mode_Exit_Received PE_SRC_Ready\nThe\uf06c EPR_M tordaensitionsM toe stshaeg e state from the state when:\nAn PE_SRC (_EExPitR) _Mode_Ex iist r_Receecievievde.d Policy EngineShall EPR Mode\nOn EPnotrliyc yt oE tnhgein eShall PE_SRC_S esntadt_eC tahpea bilities exit .\nThe\uf06c Expl icit Co tnrtarnascittion to thSeP R (A)PDO state when:\n\uf06c IEnP aRn M ode with an and\nPolicy Engine Shhaas lbleen exited. PE_SRC_Hard_Reset\nThe\uf06c Explic ittr Canonsittriaocnt to the SPR (A)PDO state when:\nNot in an with an .\nPage 958 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.26.4 Sink EPR Mode Exit State Diagram\nFigure 8.214, \"Sink EPR Mode Exit State Diagram\" EPR Sink EPR Mode\nshows the state diagram for an initiating the\nexit process. Figure 8.214 Sink EPR Mode Exit State Diagram\nPE_SNK_Ready\nDPM Requests EPR Mode Exit EPR Mode Exit Message Received\nPE_SNK_Send_EPR Mode_Exit\nActions on entry:\nSend EPR Mode Exit Message PE_SNK_EPR Mode_Exit_Received\nActions on exit: Actions on entry:\nExit EPR Mode Exit EPR Mode\nPower = Explicit Contract Power = Explicit Contract\nPD = Connected PD = Connected\nNot in an Explicit Contract with an SPR PDO\nEPR Mode Exit Message sent\nIn Explicit Contract with SPR PDO &\nEPR Mode Exited\nPE_SNK_Wait_for_Capabilities PE_SNK_Hard_Reset\n8.3.3.26.4.1 PE_SNK_Send_EPR_Mode_Exit State\nPolicy Engine PE_SNK_Send_EPR_Mode_Exit PE_SNK_Ready\nThe\uf06c transitions to the EPR Mode state from the state when:\nThe DPMP Er_eSqNuKes_Stse nexdi_tE fProRm_M ode_Exit. Policy EngineShall EPR_Mode Message\nOn Entry to the PE_SNK_Send_EPR_Mode_Exi tstate the Policy Engin eShal slend aEnP R Mode (Exit) .\nOn EPxoitl ifcryo mEn tghine eShall PE_SNK s_tWatea itth_efo r_Capabilitie s exit .\nThe\uf06c EPR_M ode transitMioenss taog tehe state when:\n8.3.3.2T6h.e4 .2 (Ex i tP) E_SNK_ EhaPsR b_eMeno sdenet_.Exit_Received State\nPolicy Engine PE_SNK_EPR_Mode_Exit_Received PE_SNK_Ready\nThe\uf06c EPR_M tordaensitionsM toe stshaeg e state from the state when:\nAn PE_SN K(E_ExPitR) _Mode_E xisit r_eRceecievievde.d Policy EngineShall EPR Mode\nOn EPnotrliyc yt oE tnhgein eShall PE_SNK_W sataitt_ef othre_C apabilities exit .\nThe\uf06c Expl icit Co tnrtarnascittion to thSeP R (A)PDO state when:\n\uf06c IEnP aRn M ode with an and\nPolicy Engine Shhaas lbleen exited. PE_SNK_Hard_Reset\nThe\uf06c Explic ittr Canonsittriaocnt to the SPR (A)PDO state when:\nNot in an with an .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 959\n8.3.3.27 BIST State diagrams\n8.3.3.27.1 BIST Carrier Mode State Diagram\nFigure 8.215, \"BIST Carrier Mode State Diagram\" UUT\nSource Sink Cable Plug BIST Carrier Mode Shall\nPE_SRC_Ready PE_SNK_Ready PE_CBL_Read yshows the state diagram required by a , which can be either a\n, or , when operating in . Transitions be from either the\n, oFri gure 8.215 BIS Tst Cataersr.ier Mode State Diagram\nPE_SRC_Ready or\nPE_SNK_Ready or\nPE_CBL_Ready\nBIST message received\nwith Data Object BIST Carrier Mode &\nV = vSafe5V\nBUS\nPE_BIST_Carrier_Mode\nActions on entry:\nTell Protocol Layer to go to BIST Carrier Mode\nInitialize and run BISTContModeTimer\nV = vSafe5V\nBUS\nPD = Connected\nBISTContModeTimer\ntimeout\nPE_SRC_Transition_to_default or\nPE_SNK_Transition_to_default or\nPE_CBL_Ready\n8.3.3.27.1.1 PE_BIST_Carrier_Mode State\nSource Sink Cable PlugShall PE_BIST_Carrier_Mode PE_SRC_Ready\nPE_SNK_Ready PE_CBL_Ready\nThe , or enter the state from either the ,\n\uf06c BIST More ssage state whBenIS:T Carrier ModeBIST Data Object\n\uf06c AVB US vSafe5 iVs received with a and\nis aPtE _BIST_C.arrier_Mode Policy EngineShall Protocol Layer BIST Carrier\nMode Section 6.4.3.1, \"BIST Carrier Mode\" Shall BISTContModeTimer\nOn entry to the state the tell the to go to\n(see ) and initialize and run the .\nPage 960 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPolicy EngineShall PE_SRC_Transition_to_default\nPE_SNK_Transition_to_default PE_CBL_Ready\nThe transition to either the state,\n\uf06c BISTContModeTim setrate or state (as appropriate) when:\nThe times out.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 961\n8.3.3.27.2 BIST Test Data Mode State Diagram\nFigure 8.216, \"BIST Test Data Mode State Diagram\" UUT\nSource Sink Cable Plug BIST Test Data Mode Shall\nPE_SRC_Ready PE_SNK_Ready PE_CBL_Ready shows the state diagram required by a , which can be either\na , or , when operating in . Transitions be from either the\n, F oigr ure 8.216 BIST s Ttaetsets D. ata Mode State Diagram\nPE_SRC_Ready or\nPE_SNK_Ready or\nPE_CBL_Ready\nBIST message received\nwith Data Object BIST Test Mode &\nV = vSafe5V\nBUS\nPE_BIST_Test_Mode\nActions on entry:\nTell Protocol Layer to go to BIST Test\nMode\nV = vSafe5V\nBUS\nPD = Connected\nHard Reset\nPE_SRC_Transition_to_default or\nPE_SNK_Transition_to_default or\nPE_CBL_Ready\n8.3.3.27.2.1 PE_BIST_Test_Mode State\nSource Sink Cable PlugShall PE_BIST_Test_Mode PE_SRC_Ready\nPE_SNK_Ready PE_CBL_Ready\nThe , or enter the state from either the ,\n\uf06c BIST More ssage state whBenIS:T Test DataBIST Data Object\n\uf06c AVB US vSafe5 iVs received with a and\nis at .\nPage 962 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPE_BIST_Test_Mode Policy EngineShall Protocol Layer BIST Test Data\nMode Message GoodCRCMessage Message\nOSenc teinotnr y6 .t4o.3 t.h2e, \" BIST Test Data Mode \"state the tell the to go into\nwhere it sends no further s except for s in response to received s (see\nPolicy EngineShall ). PE_SRC_Transition_to_default\nPE_SNK_Transition_to_default PE_CBL_Ready\nThe transition to either the state,\n\uf06c Hard Reset state or state (as appropriate) when:\nA occurs.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 963\n8.3.3.27.3 BIST Shared Capacity Test Mode State Diagram\nFigure 8.217, \"BIST Shared Capacity Test Mode State Diagram\" UUT\nSource Sink Cable Plug BIST Shared Capacity Test Mode Shall\nPE_SRC_Ready PE_SNK_Ready PE_CBL_Rea sdhyows the state diagram required by a , which\ncan be either a , or , when operating in . Transitions be\nfrom either the Figure, 8.217 BIST Sh aorre d Capacity Tes stt Matoesd.e State Diagram\nPE_SRC_Ready or\nPE_SNK_Ready or\nPE_CBL_Ready\nBIST message received\nwith Data Object BIST Shared Test Mode Entry\nPE_BIST_Shared Capacity_Test_Mode\nActions on entry:\nTell Protocol Layer to go to BIST Shared Capacity\nTest Mode1.\nVBUS= vSafe5V\nPD = Connected\nBIST message received\nwith Data Object BIST Shared Test Mode Exit\nPE_SRC_Transition_to_default or\nPE_SNK_Transition_to_default or\nPE_CBL_Ready\n1) The UUT Shallexit BIST Shared Capacity Test Mode when It is powered off. The UUT Shallremain in BIST Shared Capacity\nTest Mode for any PD event (except when a BIST Shared Test Mode ExitBIST Data Object, is received); specifically the\nUUT Shallremain in BIST Shared Capacity Test Mode when any of the following PD events occurs: Hard Reset, Cable Reset,\nSoft Reset, Data Role Swap, Power Role Swap, Fast Role Swap, VCONNSwap. The UUT Mayleave test mode if the tester\nmakes a request that exceeds the capabilities of the UUT.\n8.3.3.27.3.1 PE_BIST_Shared_Capacity_Test_Mode State\nSource Sink Cable PlugShall PE_BIST_Shared_Capacity_Test_Mode\nPE_SRC_Ready PE_SNK_Ready PE_CBL_Ready\nThe , or enter the state from either the\n\uf06c BIST, Message or BIST Sh satraeted wThesetn M: ode EntryBIST Data Object\n\uf06c AVB US vSafe5 iVs received with a and\nis aPtE _BIST_Sh. ared_Capacity_Test_Mode Policy EngineShall Protocol Layer\nBIST Shared Capacity Test Mode Section 6.4.3.3, \"BIST Shared Capacity Test Mode\"\nOn entry to the state the tell the to go to\nPolicy EngineShall (see PE_SRC_Transition_to_default ).\nPE_SNK_Transition_to_default PE_CBL_Ready\nThe transition to either the state,\n\uf06c BISTMessage state or BIST Shared sTteatset M(aos daep pErxoitpBriIaStTe )D wathae On:bject\nA is received with a .\nPage 964 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n8.3.3.28 USB Type-C Referenced States\n[USB Type-C 2.4]\nT8h.3is. s3e.c2ti8on.1 contains st a tEers rcroorssR-reecfeorvenecreyd fsrotmat tehe specification.\nErrorRecovery Port Partner USB Type-C\nErrorRecovery Shall USB Type-C\nHThaerd Reset Erro srtRateec oisv uesreyd to elSechtarlolnically dUisScBo nTnyepcet- CErrorRecovse ursying the connector. The\n[USB Type-C 2.4 s]tate be entered when there aSrhe aelrlr Noorst on Ports which cannot be recovered by\n. The state map to state operation as defined in the\nspecification. Bus powered Sinks be required to meet this requirement as removal of\ntheir power willE srerrovreR tehceo svaemrye purpose.Explicit Contract Shall\nOn entry to the ErrorRecovery state the Explicit Contr aancdt SPhDo Cuoldnnection be ended.Port Partner\nCC\nOn exit from the state a new be established once the s have\nre-connected over the wire.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 965\n8.3.3.29 Policy Engine States\nTable8.154, \"Policy Engine States\"\nlists Tthaeb sltea8te.1s 5u4se dP oblyi ctyh eE vnagriinoeu sS tsatatetes machines.\nState name Reference\nSenderResponseTimer\nSRT_Stopped Section 8.3.3.1.1.1\nSRT_Running Section 8.3.3.1.1.2\nSRT_Expired Section 8.3.3.1.1.3\nSource Port\nPE_SRC_Startup Section 8.3.3.2.1\nPE_SRC_Discovery Section 8.3.3.2.2\nPE_SRC_Send_Capabilities Section 8.3.3.2.3\nPE_SRC_Negotiate_Capability Section 8.3.3.2.4\nPE_SRC_Transition_Supply Section 8.3.3.2.5\nPE_SRC_Ready Section 8.3.3.2.6\nPE_SRC_Disabled Section 8.3.3.2.7\nPE_SRC_Capability_Response Section 8.3.3.2.8\nPE_SRC_Hard_Reset Section 8.3.3.2.9\nPE_SRC_Hard_Reset_Received Section 8.3.3.2.10\nPE_SRC_Transition_to_default Section 8.3.3.2.11\nPE_SRC_Give_Source_Cap Section 8.3.3.2.15\nPE_SRC_Get_Sink_Cap Section 8.3.3.2.12\nPE_SRC_Wait_New_Capabilities Section 8.3.3.2.13\nPE_SRC_EPR_Keep_Alive Section 8.3.3.2.14\nSink Port\nPE_SNK_Startup Section 8.3.3.3.1\nPE_SNK_Discovery Section 8.3.3.3.2\nPE_SNK_Wait_for_Capabilities Section 8.3.3.3.3\nPE_SNK_Evaluate_Capability Section 8.3.3.3.4\nPE_SNK_Select_Capability Section 8.3.3.3.5\nPE_SNK_Transition_Sink Section 8.3.3.3.6\nPE_SNK_Ready Section 8.3.3.3.7\nPE_SNK_Hard_Reset Section 8.3.3.3.8\nPE_SNK_Transition_to_default Section 8.3.3.3.9\nPE_SNK_Give_Sink_Cap Section 8.3.3.3.10\nPE_SNK_Get_Source_Cap Section 8.3.3.3.12\nPE_SNK_EPR_Keep_Alive Section 8.3.3.3.11\nPage 966 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.154 Policy Engine States\nState name Reference\nSoft Reset and Protocol Error\nSource Port Soft Reset\nPE_SRC_Send_Soft_Reset Section 8.3.3.4.1.1\nPE_SRC_Soft_Reset Section 8.3.3.4.1.2\nSink Port Soft Reset\nPE_SNK_Send_Soft_Reset Section 8.3.3.4.2.1\nPE_SNK_Soft_Reset Section 8.3.3.4.2.2\nData Reset\nDFP Data Reset\nPE_DDR_Send_Data_Reset Section 8.3.3.5.1.1\nPE_DDR_Data_Reset_Received Section 8.3.3.5.1.2\nPE_DDR_Wait_For_VCONN_Off Section 8.3.3.5.1.3\nPE_DDR_Perform_Data_Reset Section 8.3.3.5.1.4\nUFP Data Reset\nPE_UDR_Send_Data_Reset Section 8.3.3.5.2.1\nPE_UDR_Data_Reset_Received Section 8.3.3.5.2.2\nPE_UDR_Turn_Off_VCONN Section 8.3.3.5.2.3\nPE_UDR_Send_Ps_Rdy Section 8.3.3.5.2.4\nPE_UDR_Wait_For_Data_Reset_Complete Section 8.3.3.5.2.5\nNot Supported Message\nSource Port Not Supported\nPE_SRC_Send_Not_Supported Section 8.3.3.6.1.1\nPE_SRC_Not_Supported_Received Section 8.3.3.6.1.2\nPE_SRC_Chunk_Received Section 8.3.3.6.1.3\nSink Port Not Supported\nPE_SNK_Send_Not_Supported Section 8.3.3.6.2.1\nPE_SNK_Not_Supported_Received Section 8.3.3.6.2.2\nPE_SNK_Chunk_Received Section 8.3.3.6.2.3\nSource Alert\nSource Port Source Alert\nPE_SRC_Send_Source_Alert Section 8.3.3.7.1.1\nPE_SRC_Wait_for_Get_Status Section 8.3.3.7.1.2\nSink Port Source Alert\nPE_SNK_Source_Alert_Received Section 8.3.3.7.2.1\nSink Port Sink Alert\nPE_SNK_Send_Sink_Alert Section 8.3.3.7.3.1\nPE_SNK_Wait_for_Get_Status Section 8.3.3.7.3.2\nSource Port Sink Alert\nPE_SRC_Sink_Alert_Received Section 8.3.3.7.4.1\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 967\nTable8.154 Policy Engine States\nState name Reference\nSource/Sink Extended Capabilities\nSink Port Get Source Capabilities Extended\nPE_SNK_Get_Source_Cap_Ext Section 8.3.3.8.1.1\nSource Port Give Source Capabilities Extended\nPE_SRC_Give_Source_Cap_Ext Section 8.3.3.8.2.1\nSource Port Get Sink Capabilities Extended\nPE_SRC_Get_Sink_Cap_Ext Section 8.3.3.8.3.1\nSource Port Give Source Capabilities Extended\nPE_SNK_Give_Sink_Cap_Ext Section 8.3.3.8.4.1\nSource Information\nSink Port Get Source Information\nPE_SNK_Get_Source_Info Section 8.3.3.9.1.1\nSource Port Give Source Information\nPE_SRC_Give_Source_Info Section 8.3.3.9.2.1\nStatus\nGet Status\nPE_Get_Status Section 8.3.3.10.1.1\nGive Status\nPE_Give_Status Section 8.3.3.10.1.1\nSink Port Get PPS Status\nPE_SNK_Get_PPS_Status Section 8.3.3.10.3.1\nSource Port Give PPS Status\nPE_SRC_Give_PPS_Status Section 8.3.3.10.4.1\nBattery Capabilities\nGet Battery Capabilities\nPE_Get_Battery_Cap Section 8.3.3.11.1.1\nGive Battery Capabilities\nPE_Give_Battery_Cap Section 8.3.3.11.2.1\nBattery Status\nGet Battery Status\nPE_Get_Battery_Status Section 8.3.3.12.1.1\nGive Battery Status\nPE_Give_Battery_Status Section 8.3.3.12.2.1\nManufacturer Information\nGet Manufacturer Information\nPE_Get_Manufacturer_Info Section 8.3.3.13.1.1\nGive Manufacturer Information\nPE_Give_Manufacturer_Info Section 8.3.3.13.2.1\nCountry Codes and Information\nGet Country Codes\nPE_Get_Country_Codes Section 8.3.3.14.1.1\nPage 968 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.154 Policy Engine States\nState name Reference\nGive Country Codes\nPE_Give_Country_Codes Section 8.3.3.14.2.1\nGet Country Information\nPE_Get_Country_Info Section 8.3.3.14.3.1\nGive Country Information\nPE_Give_Country_Info Section 8.3.3.14.4.1\nRevision\nGet Revision\nPE_Get_Revision Section 8.3.3.15.1.1\nGive Revision\nPE_Give_Revision Section 8.3.3.15.2.1\nEnter USB\nDFP Enter USB\nPE_DEU_Send_Enter_USB Section 8.3.3.16.1.1\nUFP Enter USB\nPE_UEU_Enter_USB_Received Section 8.3.3.16.2.1\nSecurity Request/Response\nSend Security Request\nPE_Send_Security_Request Section 8.3.3.17.1.1\nSend Security Response\nPE_Send_Security_Response Section 8.3.3.17.2.1\nSecurity Response Received\nPE_Security_Response_Received Section 8.3.3.17.3.1\nFirmware Update Request/Response\nSend Firmware Update Request\nPE_Send_Firmware_Update_Request Section 8.3.3.18.1.1\nSend Firmware Update Response\nPE_Send_Firmware_Update_Response Section 8.3.3.18.2.1\nFirmware Update Response Received\nPE_Firmware_Update_Response_Received Section 8.3.3.18.3.1\nDual-Role Port\nDFP to UFP Data Role Swap\nPE_DRS_DFP_UFP_Evaluate_Swap Section 8.3.3.19.1.2\nPE_DRS_DFP_UFP_Accept_Swap Section 8.3.3.19.1.3\nPE_DRS_DFP_UFP_Change_to_UFP Section 8.3.3.19.1.4\nPE_DRS_DFP_UFP_Send_Swap Section 8.3.3.19.1.5\nPE_DRS_DFP_UFP_Reject_Swap Section 8.3.3.19.1.6\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 969\nTable8.154 Policy Engine States\nState name Reference\nUFP to DFP Data Role Swap\nPE_DRS_UFP_DFP_Evaluate_Swap Section 8.3.3.19.2.2\nPE_DRS_UFP_DFP_Accept_Swap Section 8.3.3.19.2.3\nPE_DRS_UFP_DFP_Change_to_DFP Section 8.3.3.19.2.4\nPE_DRS_UFP_DFP_Send_Swap Section 8.3.3.19.2.5\nPE_DRS_UFP_DFP_Reject_Swap Section 8.3.3.19.2.6\nSource to Sink Power Role Swap\nPE_PRS_SRC_SNK_Evaluate_Swap Section 8.3.3.19.3.2\nPE_PRS_SRC_SNK_Accept_Swap Section 8.3.3.19.3.3\nPE_PRS_SRC_SNK_Transition_to_off Section 8.3.3.19.3.4\nPE_PRS_SRC_SNK_Assert_Rd Section 8.3.3.19.3.5\nPE_PRS_SRC_SNK_Wait_Source_on Section 8.3.3.19.3.6\nPE_PRS_SRC_SNK_Send_Swap Section 8.3.3.19.3.7\nPE_PRS_SRC_SNK_Reject_Swap Section 8.3.3.19.3.8\nSink to Source Power Role Swap\nPE_PRS_SNK_SRC_Evaluate_Swap Section 8.3.3.19.4.2\nPE_PRS_SNK_SRC_Accept_Swap Section 8.3.3.19.4.3\nPE_PRS_SNK_SRC_Transition_to_off Section 8.3.3.19.4.4\nPE_PRS_SNK_SRC_Assert_Rp Section 8.3.3.19.4.5\nPE_PRS_SNK_SRC_Source_on Section 8.3.3.19.4.6\nPE_PRS_SNK_SRC_Send_Swap Section 8.3.3.19.4.7\nPE_PRS_SNK_SRC_Reject_Swap Section 8.3.3.19.4.8\nSource to Sink Fast Role Swap\nPE_FRS_SRC_SNK_Evaluate_Swap Section 8.3.3.19.5.2\nPE_FRS_SRC_SNK_Accept_Swap Section 8.3.3.19.5.3\nPE_FRS_SRC_SNK_Transition_to_off Section 8.3.3.19.5.4\nPE_FRS_SRC_SNK_Assert_Rd Section 8.3.3.19.5.5\nPE_FRS_SRC_SNK_Wait_Source_on Section 8.3.3.19.5.6\nSink to Source Fast Role Swap\nPE_FRS_SNK_SRC_Start_AMS Section 8.3.3.19.6.1\nPE_FRS_SNK_SRC_Send_Swap Section 8.3.3.19.6.2\nPE_FRS_SNK_SRC_Transition_to_off Section 8.3.3.19.6.3\nPE_FRS_SNK_SRC_VBUS_Applied Section 8.3.3.19.6.4\nPE_FRS_SNK_SRC_Assert_Rp Section 8.3.3.19.6.5\nPE_FRS_SNK_SRC_Source_on Section 8.3.3.19.6.6\nDual-Role Source Port Get Source Capabilities\nPE_DR_SRC_Get_Source_Cap Section 8.3.3.19.7.1\nDual-Role Source Port Give Sink Capabilities\nPE_DR_SRC_Give_Sink_Cap Section 8.3.3.19.8.1\nPage 970 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.154 Policy Engine States\nState name Reference\nDual-Role Sink Port Get Sink Capabilities\nPE_DR_SNK_Get_Sink_Cap Section 8.3.3.19.9.1\nDual-Role Sink Port Give Source Capabilities\nPE_DR_SNK_Give_Source_Cap Section 8.3.3.19.10.1\nDual-Role Source Port Get Source Capabilities Extended\nPE_DR_SRC_Get_Source_Cap_Ext Section 8.3.3.19.11.1\nDual-Role Sink Port Give Source Capabilities Extended\nPE_DR_SNK_Give_Source_Cap_Ext Section 8.3.3.19.12.1\nDual-Role Sink Port Get Sink Capabilities Extended\nPE_DR_SNK_Get_Sink_Cap_Ext Section 8.3.3.19.13.1\nDual-Role Source Port Give Sink Capabilities Extended\nPE_DR_SRC_Give_Sink_Cap_Ext Section 8.3.3.19.14.1\nDual-Role Source Port Get Source Information\nPE_DR_SRC_Get_Source_Info Section 8.3.3.19.15.1\nDual-Role Sink Port Give Source Information\nPE_DR_SNK_Give_Source_Info Section 8.3.3.19.16.1\nUSB Type-C VCONN Swap\nPE_VCS_Send_Swap Section 8.3.3.20.1\nPE_VCS_Evaluate_Swap Section 8.3.3.20.2\nPE_VCS_Accept_Swap Section 8.3.3.20.3\nPE_VCS_Reject_Swap Section 8.3.3.20.4\nPE_VCS_Wait_For_VCONN Section 8.3.3.20.5\nPE_VCS_Turn_Off_VCONN Section 8.3.3.20.6\nPE_VCS_Turn_On_VCONN Section 8.3.3.20.7\nPE_VCS_Send_Ps_Rdy Section 8.3.3.20.8\nPE_VCS_Force_VCONN Section 8.3.3.20.9\nInitiator Structured VDM\nInitiator to Port Structured VDM Discover Identity\nPE_INIT_PORT_VDM_Identity_Request Section 8.3.3.21.1.1\nPE_INIT_PORT_VDM_Identity_ACKed Section 8.3.3.21.1.2\nPE_INIT_PORT_VDM_Identity_NAKed Section 8.3.3.21.1.3\nInitiator Structured VDM Discover SVIDs\nPE_INIT_VDM_SVIDs_Request Section 8.3.3.21.2.1\nPE_INIT_VDM_SVIDs_ACKed Section 8.3.3.21.2.2\nPE_INIT_VDM_SVIDs_NAKed Section 8.3.3.21.2.3\nInitiator Structured VDM Discover Modes\nPE_INIT_VDM_Modes_Request Section 8.3.3.21.3.1\nPE_INIT_VDM_Modes_ACKed Section 8.3.3.21.3.2\nPE_INIT_VDM_Modes_NAKed Section 8.3.3.21.3.3\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 971\nTable8.154 Policy Engine States\nState name Reference\nInitiator Structured VDM Attention\nPE_INIT_VDM_Attention_Request Section 8.3.3.21.4.1\nResponder Structured VDM\nResponder Structured VDM Discovery Identity\nPE_RESP_VDM_Get_Identity Section 8.3.3.22.1.1\nPE_RESP_VDM_Send_Identity Section 8.3.3.22.1.2\nPE_RESP_VDM_Get_Identity_NAK Section 8.3.3.22.1.3\nResponder Structured VDM Discovery SVIDs\nPE_RESP_VDM_Get_SVIDs Section 8.3.3.22.2.1\nPE_RESP_VDM_Send_SVIDs Section 8.3.3.22.2.2\nPE_RESP_VDM_Get_SVIDs_NAK Section 8.3.3.22.2.3\nResponder Structured VDM Discovery Modes\nPE_RESP_VDM_Get_Modes Section 8.3.3.22.3.1\nPE_RESP_VDM_Send_Modes Section 8.3.3.22.3.2\nPE_RESP_VDM_Get_Modes_NAK Section 8.3.3.22.3.3\nReceiving a Structured VDM Attention\nPE_RCV_VDM_Attention_Request Section 8.3.3.22.4.1\nDFP Structured VDM\nDFP Structured VDM Mode Entry\nPE_DFP_VDM_Mode_Entry_Request Section 8.3.3.23.1.1\nPE_DFP_VDM_Mode_Entry_ACKed Section 8.3.3.23.1.2\nPE_DFP_VDM_Mode_Entry_NAKed Section 8.3.3.23.1.3\nDFP Structured VDM Mode Exit\nPE_DFP_VDM_Mode_Exit_Request Section 8.3.3.23.2.1\nPE_DFP_VDM_Mode_Exit_ACKed Section 8.3.3.23.2.2\nUFP Structure VDM\nUFP Structured VDM Enter Mode\nPE_UFP_VDM_Evaluate_Mode_Entry Section 8.3.3.24.1.1\nPE_UFP_VDM_Mode_Entry_ACK Section 8.3.3.24.1.2\nPE_UFP_VDM_Mode_Entry_NAK Section 8.3.3.24.1.3\nUFP Structured VDM Exit Mode\nPE_UFP_VDM_Mode_Exit Section 8.3.3.24.2.1\nPE_UFP_VDM_Mode_Exit_ACK Section 8.3.3.24.2.2\nPE_UFP_VDM_Mode_Exit_NAK Section 8.3.3.24.2.3\nPage 972 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable8.154 Policy Engine States\nState name Reference\nCable Plug Specific\nCable Ready\nPE_CBL_Ready Section 8.3.3.25.1.1\nMode Entry\nPE_CBL_Evaluate_Mode_Entry Section 8.3.3.25.4.1.1\nPE_CBL_Mode_Entry_ACK Section 8.3.3.25.4.1.2\nPE_CBL_Mode_Entry_NAK Section 8.3.3.25.4.1.3\nMode Exit\nPE_CBL_Mode_Exit Section 8.3.3.25.4.2.1\nPE_CBL_Mode_Exit_ACK Section 8.3.3.25.4.2.2\nPE_CBL_Mode_Exit_NAK Section 8.3.3.25.4.1.3\nCable Soft Reset\nPE_CBL_Soft_Reset Section 8.3.3.25.2.1.1\nCable Hard Reset\nPE_CBL_Hard_Reset Section 8.3.3.25.2.2.1\nDFP/VCONN Source Soft Reset or Cable Reset\nPE_DFP_VCS_CBL_Send_Soft_Reset Section 8.3.3.25.2.3.1\nPE_DFP_VCS_CBL_Send_Cable_Reset Section 8.3.3.25.2.3.2\nUFP/VCONN Source Soft Reset or Cable Reset\nPE_UFP_VCS_CBL_Send_Soft_Reset Section 8.3.3.25.2.4.1\nSource Startup Structured VDM Discover Identity\nPE_SRC_VDM_Identity_Request Section 8.3.3.25.3.1\nPE_SRC_VDM_Identity_ACKed Section 8.3.3.25.3.2\nPE_SRC_VDM_Identity_NAKed Section 8.3.3.25.3.3\nEPR Mode\nSource EPR Mode Entry\nPE_SRC_Evaluate_EPR_Mode_Entry Section 8.3.3.26.1.1\nPE_SRC_EPR_Mode_Entry_Ack Section 8.3.3.26.1.2\nPE_SRC_EPR_Mode_Discover_Cable Section 8.3.3.26.1.3\nPE_SRC_EPR_Mode_Evaluate_Cable_EPR Section 8.3.3.26.1.4\nPE_SRC_EPR_Mode_Entry_Succeeded Section 8.3.3.26.1.5\nPE_SRC_EPR_Mode_Entry_Failed Section 8.3.3.26.1.6\nSink EPR Mode Entry\nPE_SNK_Send_EPR_Mode_Entry Section 8.3.3.26.2.1\nPE_SNK_EPR_Mode_Wait_For_Response Section 8.3.3.26.2.2\nSource EPR Mode Exit\nPE_SRC_Send_EPR_Mode_Exit Section 8.3.3.26.3.1\nPE_SRC_EPR_Mode_Exit_Received Section 8.3.3.26.3.2\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 973\nTable8.154 Policy Engine States\nState name Reference\nSink EPR Mode Exit\nPE_SNK_Send_EPR_Mode_Exit Section 8.3.3.26.4.1\nPE_SNK_EPR_Mode_Exit_Received Section 8.3.3.26.4.2\nBIST\nBIST Carrier Mode\nPE_BIST_Carrier_Mode Section 8.3.3.27.1.1\nBIST Carrier Mode\nPE_BIST_Test_Mode Section 8.3.3.27.2.1\nBIST Shared Capacity Test Mode\nPE_BIST_Shared_Capacity_Test_Mode Section 8.3.3.27.3.1\nUSB Type-C referenced states\nErrorRecovery Section 8.3.3.28.1\nPage 974 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "9.1", "title": "Overview", "page": 975, "level": 2, "parent_id": "9", "full_path": "9.1 Overview", "tags": [], "text": "9 States and Status Reporting\n9.1 Overview\nShall\nThis chapter describes the Status reporting mechanisms for devices with data connections (e.g., D+/D- and or\nSSTx+/- and SSRx+/-). It also describes the corresponding USB state a device that supports USB PD transition\nto as a result of changes to the USSBys PteDm s tPaotlei ctyhat the dSyesvtiecme i Ps oinli.c y Manager [UCSI]\nThis chapter does not define the or the . That is defined in . In addition,\nthe Policies themselves are not described here; these are left to the implementers of the relevant products and\nsystems to define. Device Shall\nPort VBUS\nAll PD C[aUpSaBb l2e. 0U]SB [(UPSDBU 3SB.2)] s report themselvVes\nB U\na\nS\ns self-powered devices (over USB) wheCno pnlsuugmgeerd\ninto a PD capableU SB A tetvaecnh eidf t Shteayt eare entiUreSlBy Ppoowweerreedd Sftraotme . However, there are Vso B m US e differences between\nPD and Consu m/ er ; for example, the presence UoSf B Att aaclohnede Sdtoaetse not mSeecatnio tnh a9t.1 t.h2e, \"dMeavipcpei n(g to USB )\nDmeovvicees Sfrtoamtes t\"he to the . Similarly, the removal of alone does not move\nthe device ( ) from any of the USB states to the . See\nPDUSB Device foSrh daelltails. Section 6.4.1.2.1.2, \"USB Suspend\nSupported\"\ns follow the PD requiremTeanbtles 9w.4h,e \"nP iDt cCoomnseusm toe rs Puosprte Dndes (csreipet or\"\n), configured, and operational power. The PD requirements when the device is configured or\nNopoetrea:tional are defined in this section (see ConsumerPort ). Shall\nPDUSB DeviceShall\nThe power requirements reported in the PD descriptor of the device Exp olivceitr rCiodnet rthaect\npowSehr adlrlaw reported in the bMaxPower field in the configuration descriptor. A [U SB\nr2e.0p]or[tU zSeBr o3 i.2n] th[eU SbBM4a]xP[UowSBe rT fyiepled- Ca f2te.4r] succ[UesSsBfuBlCly 1 n.2eg]otiating a mutually a[gUrSeBe a2b.0le] [USB 3.2] [USB\naTnydp e-C 2.4 d]isco[nUnSeBcBt aCn 1d.2 r]e-enumerSahtea lwlhen it switches operation back to operating in standard\n, , , or . When operating in , ,\nProvider Con osurm er mode it report its power draw via the bMaxPPoorwt Pera rfitenledr.\nFigure 9.1, \"Example PD Topology\" Provider\nCEoanchsu mer/Pro avindde r Con wsuimll ehrave their own Local Policies which operate between s. An example\nof a typical PD system is shown in . This example consists of a ,\ns and s connected together in a tree topology. Between directly connected devices\nthere is both a flow of Power and also Communication consisting of both Status and Control information.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 975\nFigure 9.1 Example PD Topology\nAC/Battery\nPower\nProvider\nPD Communication\nP/C Provider/Consumer\nConsumer/\nProvider\nP/C P/C P/C\nConsumer/ AC/Battery\nConsumer Consumer\nProvider\nPage 976 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 9.2, \"Mapping of PD Topology to USB\"\nFigure 9.2 s hMoawpsp hinogw o tfh PisD s aTmoep otolopgoylo tgoy UcaSnB be mapped to USB.\nAC/Battery\nPower\nRoot Hub\nPD Communication\nHub\nAC/Battery\nDevice Device Device\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 977\nVBUS\nIn a USB based system, poLloiccya li sP molaicnyaged by UthSeB hCoosmt manudn cicoamtimonunication of system level policy information is via\nstandard USB data line communSicyasttieomn .P Tohliicsy i Ms aa nseapgaerratSeP mMechanism to the USB PProowviedre DrelivCeornys umer protoFcigoul re\n9w.3h,i c\"hU sies oufs eSdP Mto i nm tahnea PgDe System\" . When is used, status information and control requests\nare passed directly between the ( ) on the host and the or . See\n. Figure 9.3 Use of SPM in the PD System\nAC/Battery\nPower\nHost\n(SPM) PD Communication\nUSB Communication\nHub\nAC/Battery\nDevice Device Device\nProvider Consumer SPM\nStatus information comes from a or to the so it can better manage the resources on the host\nand provide feedback to the end user.\n[USB 2.0] [USB 3.2] [USB4] [USB Type-C 2.4] [USBBC 1.2]\nReal systems will be a mixture of devices which in terms of power managemeSnPtM support might have implemented\nPD, , , , or or they might even just be non-compliant\n\u201cpower sucking devices\u201d. The level of communication of system status to the will therefore not necessarily be\ncomprehensive. The aim of the status mechanisms described here is to provide a mechanism whereby each\nconnected entity in the system provides as much information as poSsPsMible on the status of itself.\nInfo\uf06crmation describUedSB in T tyhpies- sCection that is communicated to the is as follows:\n\u00ae\n\uf06c Versions of Provider,/ PCDo nasnudm BeCr supported.\n\uf06c Capabilities as a Por.t USB Type-C Negotiated\nCurrent operational state of each e.g. Standard, Current, BC, PD and power\n\uf06c level. Battery PDUSB Device\nSPMStatuNs eogf oAtCia oter Pro Pvoidweerr forC eoancshu mer in the system. Local Policy\nProvider Consumer Local Policy\nThe can with s or s in the system in order to request a different , or to\nrequest the amount of power to be delivered by the to the . Any change in could\nPage 978 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nRe-negotiation Explicit Contract\nProvider Consumer Re-negotiation\ntrigger a of the , using USB Power Delivery protocols, between a directly connected\n9.1.1 and PDU. AS cBha nDgee inv hiocwe maunchd p oHwuerb is Raveaiqlabulei rcaenm, foer enxatmsple, cause a .\nPDUSB Device Shall PDUSB Hub Shall\n[UCSI]\nAll s return all relevant descriptors mentioned in this chapter. s also support\na PD bridge as defined in .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 979\n9.1.2 Mapping to USB Device States\nSection 9.1, \"Overview\" PDUSB Device\nShall USB Attached State USB Powered State Figure 9.4,\nA\"UsS mBe Antttiaocnheedd i tno USB Powered State Tra an sition\" Figure r9e.p5,o \"rAtsn yit sUeSlBf a Sst aa tsee tlfo- pUoSwB eArtetda cdheevdi cSet.a Hteo Twreavnesri,t itohne (dWevhiecne\nopera tdinetge arms ain Ceo wnshuemtheerr)\" or noFt iigt uisr ein 9 t.6h,e \" Any USB State to US Bor A ttached State Transs iatiso dne (sWcrhibene do pine rating as a\nProvider)\" PDUSB Dev, iceShall [USB 2.0] [USB 3.2]\nand\nFigure 9.4, A\"UllS oBt hAettra UcShBed s ttoat UesS Bo fP tohwe ered State Tran sition b\"e as describedP iDnU CShBa pDteevri c9e of and .\nUSB Attached State USB Powered State USB Type-CDead Battery\nAttach shows hHoawrd a R eset deUtSeBrm Dienveicse whenS itnok\ntransition from the to the . operation does not\nrequire special handling siFnicgeu trhee 9 d.4ef UauSlBt sAtatttaec aht ed to U SoBr aPftoewr ear ed State T risa tnhsaitt itohne is a .\nNegotiate\nenough\nNo Yes\nPower?\nHard\nReset\nNo\nUSB VBUS Yes Can Yes USB\nAttached Present enumerate? Powered\nDevice\nin Sink\nMode\nNo\nDevice in\nSource\nMode (5V)\nDevice is a Yes Attached Yes\nSource? Sink?\nNo No\nFigure 9.5, \"Any USB State to USB Attached State Transition (When operating as a Consumer)\" PDUSB\nDevice USB Powered State USB Attached State\nConsumer PDUSB Device Power Role Swap shSoewctsio hno 8w.3 a.3 .19.3,\n\"Policy dEentgeirnme iinne Sso wurhceen t oto S tirnakn Psoitwioenr fRroolme Stwhea p State Diagram\" to Sthecet ion 8.3.3.19.4, \"Polic wy hEenng itnhee i dn eSvinicke tios a\nSource Pow. Ae r Role Swap Sta dteet Deriamgirnaems \"that itS iesc ptieornf o7r.1m.5in, \"gR ae sponse to Hard Re saest sd\"escribed in\nHard Reset and\n. See for additional information on\ndevice behavior during s.\nPage 980 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure 9.5 Any USB State to USB Attached State Transition (When operating as a Consumer)\nHard Reset Hard Reset\nand and\nCan Operate Can\u2019t Operate\nSwapping\nAny USB VBUS No No USB\nPower\nState Present Attached\nRoles?\nYes Yes\nHard Reset\nand\nBus Powered\nFigure 9.6, \"Any USB State to USB Attached State Transition (When operating as a Provider)\" PDUSB\nDevice USB Powered State USB Attached State\nProvider shows how a\ndetermines when to transition from the to the when the device is a\nF. igure 9.6 Any USB State to USB Attached State Transition (When operating as a Provider)\nLocal Power Source Lost\nHard\nReset\nAny USB Lack of PD Yes USB\nState comms? Attached\nNo\nFigure 9.7, \"Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap)\"\nPDUSB Device USB Type-C USB Powered State\nUSB Attached State Data Role Swap shows howPD aU SB\nHost using thPeD USB Device conneDcatotar dReotlee rSmwianpes when to transSiteicotnio fnro 6m.3 .t9h, e\" DR_Swap Message\" to Hthaerd\nReset afteSr ian k PDU hSaBs Hbeoestn pePrDfoUrSmBe Dde iv.eic.,e it has just changed from opSeercattiioonn 6a.s8 .a3 , \"Hard\nReset t\"o opeSraectitoionn a 7s. 1a .5, \"Response to. T Hhaer d Resets\" is described in H. aAr d\nReset will also return a acting as a to operation as described in\n. See for additional information on device behavior during\ns.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 981\nFigure 9.7 Any USB State to USB Attached State Transition (After a USB Type-C Data Role Swap)\nHard Reset\nChanges Data\nNo\nRole\nSwapping\nAny USB VBUS Yes Yes USB\nData\nState Present Attached\nRoles?\nPage 982 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n9.1.3 PD Software Stack\nFigure 9.8, \"Software stack on a PD aware OS\"\nMay\nMay Not gives an example of the software stack on a PD aware OS. In this stack\nwe are using the example of a system with an xHCI based controller. The USB Power Delivery hardware or\nbe a part of the xHC. Figure 9.8 Software stack on a PD aware OS\nClient Drivers Client Drivers\nUSB Driver Interface\nClient Drivers\nComposite Class Driver Client Drivers\nUSB Driver Interface\nHub Driver\nInternal Hub/Host Interface\nHost Controller Driver\nxHC Interface\nHost Controller\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 983\nPD\nxface\nSystem\nPolicy\nManager\nPower Delivery\n9.1.4 PDUSB Device Enumeration\nPDUSB Device\nUSB Attached State USB Powered State Figure 9.9, \"Enumeration of a PDUSB Device\"\nAs described earlier, a acts as a self-powered device with somPDe UcaSvBe Datesv iwceith respect to how it\ntransitions from the to Local Policy . gives a\nhigh-level overview of the enumeration steps involved due to this change. A will first (Step1) interact\nwith the Power Delivery hardware and the manager to determine whether or not it can get sufficient\npower to enumerate/operate. Explicit Contract SPM\nNegotiation PDUSB Device\nPD is likely to have established a Explicit Contract prior to enumeration. The will be notified (Step 2) of the\nresult of this between the Power Delivery hardware and the . After successfully\nnPeDgUoStBia Dtienvgi cae mutually agreeable the device will signal a connect to the xHC. The standard USB\nenumeration process (Steps 3, 4 and 5) is then followed to load the appropriate driver for the function(s) that the\nexposes. Figure 9.9 Enumeration of a PDUSB Device\nClient Drivers Client Drivers\nUSB Driver Interface\nClient Drivers\nComposite Class Driver Client Drivers\nUSB Driver Interface\nHub Driver\nInternal Hub/Host Interface\nHost Controller Driver\nxHC Interface\nHost Controller\nPDUSB Device Port\nShould\nIf a cannot perform its intended functioShna wllith the amount of power that it canS egcetti ofrno 8m.2 .t5h.e2 .1, \"L oitc aisl\ndcoenvinceec htaedn dtloin, tgh oefn m thisem haotscth s\"ystem display a notification (on a PD aware OS) about the failure to provide\nsufficient power to the device. In addition, the device follow the requirements listed in\n.\nPage 984 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nPD\nxface\nSystem\n5 Policy\nManager\n4\n2\n3\nPower Delivery\n1"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "9.2", "title": "PD Specific Descriptors", "page": 985, "level": 2, "parent_id": "9", "full_path": "9.2 PD Specific Descriptors", "tags": [], "text": "9.2 PD Specific Descriptors\nPDUSB DeviceShall\nA Shal l return all relevant descriptors mentioned in this section.\nTable9.1, \"USB Power Delivery Type Codes\"\nThe device return its capability descriptors as part of the device's Binary Object Store (BOS) descriptor set.\nTable9. 1li s UtsS tBh Pe otywpeer o Df PelDiv deervyi cTey cpaep aCboidlietises.\nCapability Code Value Description\nPOWER_DELIVERY_CAPABILITY\nBATTERY_INFO_CAPABILITY 06H Defines the various PD Capabi B lit a i t e t s e r o y f this device\nPD_CONSUMER_PORT_CAPABILITY 07H Prov C id o e n s s u in m fo er rmation on each Port supported by the device\nPD_PROVIDER_PORT_CAPABILITY 08H The Provider characteristics of a P ort on the device\n09H The characteristics of a on the device\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 985\n9.2.1 USB Power Delivery Capability Descriptor\nTable9.2, \"USB Power Delivery Capability Descriptor\" POWER_DELIVERY_CAPABILITY\ndetails the fields in the USB\nDescriptor. Table9.2 USB Power Delivery Capability Descriptor\nOffset Field Size Value Description\n0 bLength 1 Number Size of descriptor\n1 bDescriptorType 1 Constant DEVICE CAPABILPIOTWY DERes_cDrEipLtIoVrE tRyYp_eCAPABILITY\n2 bDevCapabilityType 1 RCeosnesrtvaendt CSahpaalblility type:\n3 bReserved 1 be set to zero.\n4 4 Bitmap Bitmap encoding of supported device level features. A value of one in\na bit location indicates a feature is supported; a value of zero\nBit Description\nindicates it is not supported. Encodings are:\nReserved Shall\nShall\n0 . be set to zero.\n[USBBC 1.2]\n1 Battery Charging. This bit be set to one to indicate this\ndevice supports as per the value reported in\nShall\nthe bcdBCVersion field.\n2 USB Power Delivery. This bit be set to one to indicate\nthis device supports the USB Power Delivery Specification\nProvider Shall\nas per the value reported in the bcdPDVersion field.\nValid\n3 . This bit be set to one to indicate this device\nis capable of providing power. This field is only if Bit\nConsumer Shall\n2 is set to one.\nValid\n4 . This bit be set to one to indicate that this\ndevice is a consumer of power. This field is only if Bit\nShall\n2 is set to one.\n5 This bit be set to 1 to indicate that this device supports\ntNhoet fee:ature CHARGING_POLICY.\nSupporting the CHARGING_POLICY feature does not\nbmAttributes USB Typ r e e - q C uire a BC or PD me S c h h a a l n l ism to be implemented.\n[USB\n6 Type-C 2.4] Current. This bit be set to one to indicate\nthis device supports power capabilities defined in\nas per the value reported in the\nReserved Shall\nbcdUSBTypeCVersion field\n7 . be set to zero.\nShall\n15:8 bmPowerSource. At least one of the following bits 8, 9 and\n14 be set to indicate which power sources are\nBit Description\nsupported.\nAC Supply\nBattery\n8\n9\nShall Valid\n10 Other\nShall\n13:11 NumBatteries. This field only be when\nthe Battery field is set to one and be used to\nrepor V t BtUhSe number of batteries in the device.\n14\nRUeseses rved Shall\nRe 1 s 5 erved Shall and be set to zero.\n13:16 . be set to zero.\nPage 986 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable9.2 USB Power Delivery Capability Descriptor\nOffset Field Size Value Description\nShall Valid\n8 2 BCD Battery Charging Specification Release Number in Binary-Coded\n[USBBC 1.2]\nDecimal (e.g., V1.20 is 120H). This field only be if the\nbcdBCVersion\ndevice indicates that it supports in the bmAttributes\nfield.\nShall Valid\n10 2 BCD USB Power Delivery Specification Release Number in Binary-Coded\nbcdPDVersion Decimal. This field only be if the device indicates that it\nsUuSpBp Toyrptse -PCD in the bmAttributes field.\nShall Valid\n12 2 BCD Specification Release Number in Binary-Coded Decimal.\nUSB Type-C\nbcdUSBTypeCVersion This field only be if the device indicates that it supports\nin the bmAttributes field.\n9.2.2 Battery Info Capability Descriptor\nPDUSB DeviceShall Table9.3, \"Battery Info Capability Descriptor\"\nBattery\nA Sh all support tBheA TcaTpEaRbYil_iItNy FdOes_cCrAipPtAoBr IsLhIoTwYn in Battery if it\nreported that one of its power sources was a in the bmPowerSource field in its Power Deliver Capability\nDescriptor. It return one Table9.3 Battery Info Cap Daebsiclirtiyp tDoer spcerri ptor it supports.\nOffset Field Size Value Description\n0 bLength 1 Number Size of descriptor\n1 bDescriptorType 1 Constant DEVICE CAPABILBIATTYT DEeRsYc_rIiNptFoOr _tCyApPeABILITY\nShall\n2 bDevCapabilityType 1 Constant Capability type:\nBattery\n3 iBattery 1 Index Index of string descriptor Shall contain the user-friendly\nname for this .\nBattery\n4 iSerial 1 Index Index of string descriptor Shall contain the Serial\nNumber String for this .\nBattery\n5 iManufacturer 1 Index Index S o h f s a t l r l ing descriptor contain the n B am at e te o ry f the\nManufacturer for this .\n6 bBatteryId 1 Number Value be used to uniquely identify this in\nsRteasteursv MedessageSsh.all\n7 bReserved 1 Number Shall and B abtete sreyt to zero.\nBattery\n8 4 mWh contain the charge value above which this\ndwChargedThreshold is considered to be fully charged but not\nSnhecaellssarily \u201ctopped off.\u201d Battery\n12 4 mWh contain the minimum charge level of this\n[USBBC\nsuch that above this threshold, a device can be assured\ndwWeakThreshold 1.2]\nof being able to power up successfully (see\nShal)l. Battery\n16 dwBatteryDesignCapacity 4 mWh Shall contain the design capacity of the Batt.ery\n20 4 mWh contain the maximum capacity of the\ndwBatteryLastFullchargeCapacity\nwhen fully charged.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 987\n9.2.3 PD Consumer Port Capability Descriptor\nPDUSB DeviceShall PD_CONSUMER_PORT_CAPABILITY Table9.4, \"PD\nConsumer Port Descriptor\" Consumer\nA support the descriptor shown in\nif it is a Table9.4. PD Consumer Port Descriptor\nOffset Field Size Value Description\n0 bLength 1 Number Size of descriptor\n1 bDescriptorType 1 Constant DEVICE CAPABILPIDT_YC ODeNsScUriMptEoRr_ tPyOpReT_CAPABILITY\n2 bDevCapabilityType 1 Constant CRaepsaebrivleitdy typeS: hall\nShall\n3 bReserved 1 Number and be set to zero.\nConsumerPort\n4 2 Bitmap Capability: This field indicate the specification the\nBit Description\nwill operate under.\nbmCapabilities 0 Battery Charging (BC)\nUSB Type-C\n1 USB Power Delivery (PD)\n2\nReserved CuSrrheanltl\nShall\n15:3 and be set to zero.\nConsumer\n6 wMinVoltage 2 Number Shall contain the minimum voltage in 50mV units that this\nis capable of operating at.\nConsumer\n8 wMaxVoltage 2 Number Reser c v o e n d tain th Sh e a m ll aximum voltage in 50mV units that this\nis capable of operating at.\nS hall\n10 wReserved 2 Number and be set to zero.\nConsumer\n12 dwMaxOperatingPower 4 Number Shall contain the maximum power in 10mW units this\ncan draw when it is in a steady state operating mode.\nConsumer\n16 4 Number (dwM acoxPnetaaiknP tohwee mrTaixmimeum power in 10mW units this\ndwMaxPeakPower can draw for a short duration of time\nShall Consumer\n) before it falls back into a steady state.\n20 4 Number contain the time in 100ms units that this can\ndraw peaSkh caulrlrent.\ndwMaxPeakPowerTime\nA device set this field to 0xFFFF if this value is unknown.\nPage 988 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n9.2.4 PD Provider Port Capability Descriptor\nPDUSB DeviceShall PD_PROVIDER_PORT_CAPABILITY Table9.5, \"PD Provider\nPort Descriptor\" Provider\nA support the descriptor shown in\nif it is a . Table9.5 PD Provider Port Descriptor\nOffset Field Size Value Description\n0 bLength 1 Number Size of descriptor\n1 bDescriptorType 1 Constant DEVICE CAPABILPIDT_YP DReOsVcIrDipEtRor_P tOypReT_CAPABILITY\n2\nbRDeesveCravpeadbilityType\n1 Constant\nCRaepsaebrivleitdy typeS: hall\nShall\n3 b 1 Number and be set to zero.\nProviderPort\n4 2 Bitmap Capability: This field indicate the specification the\nBit Description\nwill operate under.\nbmCapabilities 0 Battery Charging (BC)\nUSB Type-C\n1 USB Power Delivery (PD)\n2\nReserved CuSrrheanltl\nSha 1 l 5 l :3 and Pow b e e r s D e a t t t a o O z b e j r e o c . t\n6 bNumOfPDObjects 1 Number Reser ivneddicate tShhea nllumber of s.\nS hall Power Data Object\n7 bReserved 1 Number and be set to zero.\nProviderPort Section 6.4.1, \"Capabilities Message\"\n8 4 Bitmap contain Pthoew feirr sDt ata Object supported by this\nwPowerDataObject1 . See for\ndetails of the s.\nShall Power Data Object\n... ... ... ... ...\nProviderPort Section 6.4.1, \"Capabilities\n4*(N+1) 4 Bitmap Messa cgoen\"tain the 2nd and sPuobwseerq uDeantat Object s\nwPowerDataObjectN supported by this . See\nfor details of the s.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 989"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "9.3", "title": "PD Specific Requests and Events", "page": 990, "level": 2, "parent_id": "9", "full_path": "9.3 PD Specific Requests and Events", "tags": [], "text": "9.3 PD Specific Requests and Events\nPDUSB Device Shall Battery Battery\nA PDUSB Hub that is compliant to this specificatioSnh all support the related requests if i[tU hCaSsI ]a .\nPDUSB Hub Provider Consumer\nA that is compliant to this specification support a USB PD Bridge as described in\ni9rr.e3sp.1ective of w h ePthDer Sthpe ecific Re isq a uests, a , or both.\nPDUSB Device Shall Table9.6, \"PD Requests\" Valid\nTable9.6, \"PD Requests\"Shall PDUSB Device\nPD defines requests to which s respond as outlined in . All\nrequests in be Timabplleem9e.6n t PedD bRye quests s.\nRequest bmRequestType bRequest wValue wIndex wLength Data\nGET_BATTERY_STATUS\nGetBatteryStatus10000000B Zero Battery ID Eight Battery Status\nSetPDFeature 00000000B set_feature Feature SelectorFeature Specific Zero None\nTable9.7, \"PD Request Codes\" Command\n[USB 2.0] [USB 3.2]\ngives the bRequest values for s that are not listed in the hub/device\nframework chapters of , Ta.ble9.7 PD Request Codes\nbRequest Value\nGET_BATTERY_STATUS\n21\nTable9.8, \"PD Feature Selectors\" Valid Section 9.4.2.1,\n\"BATTERY_WAKE_MASK Feature Selector\" Section 9.4.2.2, \"CHARGING_POLICY Feature Selector\"\ngives the feature selectors for the PD class. Refer to\n, and for a description of the\nfeatures. Table9.8 PD Feature Selectors\nFeature Selector Recipient Value\nBATTERY_WAKE_MASK Device\nCHARGING_POLICY Device 40\n54\nPage 990 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "9.4", "title": "PDUSB Hub and PDUSB Peripheral Device Requests", "page": 991, "level": 2, "parent_id": "9", "full_path": "9.4 PDUSB Hub and PDUSB Peripheral Device Requests", "tags": [], "text": "9.4 PDUSB Hub and PDUSB Peripheral Device Requests\n9.4.1 GetBatteryStatus\nTable9.9, \"Get Battery Status Request\" Battery PDUSB\nHub Battery Table9.10, \"Battery Status Structure\"\nThe request shown in returns the current status of the in a\n/Peripheral, with Status iTnafobrlmea9t.i9o n G aest sBhaotwtenr yin S tatus Request .\nbmRequestType bRequest wValue wIndex wLength Data\nGET_BATTERY_STATUS\n10000000B Zero Battery ID Eight Battery Status\nTable9.10 Battery Status Structure\nOffset Field Size Value Description\nShall Battery\n0 1 Number indicate whether a is installed and\nValue Description\nwhether this is charging or discharging.\nBattery\nBattery\n0 There is no\nbBatteryAttributes\nBattery\n1 The is charging\nBattery\n2 The is discharging\n3 RThesee rved is nSehiathlle Nr odtischarging nor charging\nSh2a5l5l...4 and be used\n1 1 Number indicate the Battery State of Charge given as\nbBatterySOC\nperBceanttteargye value from SBhaattlelry Remaining Capacity.\nBattery\n2 1 Number If a is present indicate the present status\nValue Description\nof the .\nBattery\n0 No error\nBattery\n1 required and not present\n2 non-chargeable/wrong chemistry\nbBatteryStatus\n3 Over-temp shutdown\n4 Over-voltage shutdown\nBattery\n5 Over-current shutdown\n6 Fatigued\n7\nURensseprevceifdied erSrohrall Not\n255...8 and be used\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 991\nTable9.10 Battery Status Structure\nOffset Field Size Value Description\nShall\n3 1 Bitmap If the device supports remote wake, then the device\nShall\nsupport Battery Remote wake events. The\ndefault value for the Remote wake events be\nShall\nturned off (set to zero) and can be enable/disabled by\nthe host as required. If set to one the device\nSection 9.4.2, \"SetPDFeature\"\ngenerate a wake event when a change of status\noccurs. See for more\nbRemoteWakeCapStatus\nValue Description\ndetails.\n0 Battery present event\n1 Charging flow\n2\nBRaetsteerrvye edrror Shall\nSha7l:l3 and be set to zero\n4 2 Number contain the operating time (in minutes) until the\nWeak Battery threshold is reached, based on Present\nBattery Strength and the device's present operational\nNote: Shall\npower needs.\nwRemainingOperatingTime\nThis value exclude any additional power re-\nceived from charging.\nShall\nA Battery that is not capable of returning this information\nShall return a value of 0xFFFF.\n6 2 Number contain the remaining time (in minutes) until the\nCharged Battery threshold is reached based on Present\nShall Valid\nBattery Strength, charging power and the device's present\nwRemainingChargeTime operational power needs. Value only be if the\nCharging Flow is \"Charging\".\nShall\nA Battery that is not capable of returning this information\nreturn a value of 0xFFFF.\nPDUSB Device\nIf wValue or wLength are not as specified above, then theP bDeUhSaBvi Dore voifc tehSeh all is not specified.\nIf wInPdDexU rSeBf eDresv tioce a Battery that does notP eDxUisSt,B t hHeunb the respond with a Request Error.\nIf the PDUSB Hub is not configured, thPeD USB Hub 's response to this request is undefined.\n9If t.h4e. 2 iSs neottP coDnfFigeuraedt,u three 's response to this request is undefined.\nTable9.11, \"Set PD Feature\" PDUSB Hub\nThe request shown in Table9 s.1et1s tSheet vPaDlu Fee raetquureested in the /Peripheral.\nbmRequestType bRequest wValue wIndex wLength Data\n00000000B set_ feature Feature Selector Feature Specific Zero None\nTable9.8, \"PD Feature\nSelectors\" May\nSetting a feature enables that feature or starts a process associated with that feature; see\n\uf06c for the feature selector definitions. Features that be set with this request are:\n\uf06c BATTERY_WAKE_MASK.\nCHARGING_POLICY.\nPage 992 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n9.4.2.1 BATTERY_WAKE_MASK Feature Selector\nTable9.12, \"Battery Wake Mask\"\nWhen the feature selector is set to BATTERY_WAKE_MASK, then the wIndex field is structured as shown in\n. Table9.12 Battery Wake Mask\nBit Description\nBattery Present\nPDUSB DeviceShall\n0 : When this bit is set then\nthe generate a wake\nevent if it detects that a Battery has been\nCharging Flow\ninserted.\nPDUSB DeviceShall\n1 : When this bit is set then the\ngenerate a wake event if\nit detects that a Battery switched from\nBattery Error\ncharging to discharging or vice versa.\nPDUSB DeviceShall\n2 : When this bit is set then the\ngenerate a wake event if\nthRee sBeartvteerdy has Sdheatellc tNeodt an error condition.\n15:3 and be used\nSPMMay\nThe Enable or Disable the wake events associated with one or more of the above events by using this\nfeaturPeD. USB Hub PDUSB Hub\nIf the is not configured, the 's response to this request is undefined.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 993\n9.4.2.2 CHARGING_POLICY Feature Selector\nShall\nTable9.13, \"Charging Policy Encoding\" USB Type-C\nWhen the feature selector is set to CHARGING_POLICY, the wIndex field be set to on[Ue SoBf tThyep vea-lCu e2s.4 d]efined in\nShall . If the device is using Current above the default value or is using\nPD then this feature setting has no effect and the rules for power levels specified in the or USB\nPD specifications apply. Table9.13 Charging Policy Encoding\nValue Description\nShall\n00H The device follow the default current limits as defined in the USB 2.0 or USB 3.1 specification, or\nas negotiated through other USB mechanisms such as BC.\nDeviceMay\nThis is the default value.\n01H The draw additional power during the unconfigured and suspend states for the purposes\nof charging. Shall\nFor charging the device itself, the device limit its current draw to the higher of these two values:\nICCHPF as defined in the USB 2.0 or USB 3.1 specification, regardless of its USB state.\nDeviceMay\nCurrent limit as negotiated through other USB mechanisms such as BC.\n02H The draw additional power during the unconfigured and suspend states for the purposes\nof charging. Shall\nFor charging the device itself, the device limit its current draw to the higher of these two values:\nICCLPF as defined in the USB 2.0 or USB 3.1 specification, regardless of its USB state.\nShall Not\nCurrent limit as negotiated through other USB mechanisms such as BC.\n03H TRhees edrevveicde Shall Ncoontsume any current for charging the device itself regardless of its USB state.\n04H-FFFFH and be used\nValidCommand PDUSB Hub\nValid\nThis is a for the /Peripheral in the Address or Configured USB states. Further, it is only\nif the device reports a USB PD capability descriptor in its BOS descriptor and Bit 5 of the bmAttributes in that\ndescriptor is set to 1. The device will go back to the wIndex default value of 0 whenever it is reset.\nPage 994 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "10.1", "title": "Introduction", "page": 995, "level": 2, "parent_id": "10", "full_path": "10.1 Introduction", "tags": [], "text": ""}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "10.2", "title": "Source Power Rules", "page": 995, "level": 2, "parent_id": "10", "full_path": "10.2 Source Power Rules", "tags": [], "text": "10 Power Rules\n10.1 Introduction\nUSB Type-C\n\u00ae\nThe flexibility of power provision on is expected to lead to power adapter re-use and the increasingly\nwidespread provision of USBS poouwrceer outlets inSi ndkomestic and public places and in transport of all kinds.\nEnvironmental considerations could result in unbundled poweSro audracpeters. RSuinleks aSrhea nlleeded to avoid\nincompatibility between the s and the s they are used to power, in order to avoid user confusion and to\nmeet user expectations. This section specifies a set of rules that s and s follow. These rules provide\na simPpDlPe aRnadti ncognsistent user experience.\nCharger Charger PDP PDPShall\nThe is a manufacturer declared valuPeD pPlaced on packaging to help PthDeP uSshear lulnderstand the capabilities\nof a or the size of required to power their device. For values of 10W and above the\nbe declared as an integer number of Watts. For values less than 10W, the be declared in increments\nof 0.5SoWu.rcePower Rules PDP\nPDP Rating\nThe define a to provide a simple way to tell the user about the capabilities of their power\nadapStienrk oPro dweevri cReu. les P isD aPkin to the wattage rating of a light bulb - biggerS nouumrcbeers mean more capability.\nSink\nThe define a to provide a simple way to tell the user which s will provide adequate\np1o0we.2r for the i rS ou. rce Power Rules\nSourcePower Rules Normative Optional\nSource Port Maximum PDP Port\nPTrhees ent PD P Port defined in this section include both and rules. For all of the defined\nrules, the capabilities a exposes are based on the , or if power constrained, the\nGuarant oefe dth Cea pabi.lity Port SourceShall Source_Capabilities\nEPR_Source_CapabilitiesMessage Sink (A)PDO Normative Optional\nFor a , the Port Por ta Mlwaaxyism inucmlu PdDe Pin eveMryo de SoPrR Mode EPR\nMode sent to a all the s that are defined by the (and\nwhen implemented) rules based on the \u2019s and of operation (i.e., or\n)M.anaged Capability Port First Explicit Contract Explicit Contract Port\nPresent PDP Shared Capacity ChargerPort SourceShall\nFSoour rac e_Capabilities EPR_S,o euxrcceep_tC baepfoarbei ltihtiee sMessage Si nokr before (tAh)eP DO after the\nNormative chaOngpetiso onna la , the Po rt P oarlwt Payres sienncltu PdDe Pin eveMryo de\nSPR Mode EPR o Mr ode First Explic it Contra cstent to a all the s that are defined Sbiyn kthe\n(and when implemented) rules based on the \u2019s Source and of operation\n(i.e., or ). After the , this requirement assures that the attached will\nalways know what voltages (or voltage modes) are presently available from the Source. Capabilities APDO\nSource PDP Rating Shall\nIn order to meet the expectations of the user, the Maximum Current/Power in the PDO or\nfor \uf06c s with a Nofo xr mWaattitvse Obpe taiso nfoallloFwixse:d Supply Variable Supply Shall\nMaximum current for and / PDOs be either\n\uf06c RoundUp(x/voltage) or RoundDown(x/voltage) to the nAeParDeOst S1h0amllA. Table10.10, \"SPR\nProgrammable Power Supply PDOs and APDOs based on the Port Maximum PDP\"\nMaximum current for SPR Programmable Power Supply s be as defined in\nNote: APDO .\nTable10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum\nPWDhPe\"n the Constant Power bit is set in the , the programmable power supply's output current is as\ndefined in PDP\nhowever the programmable power supply will limit its output current so that the product of its\n\uf06c actual output voltage times the output current does not exceedA PthDeO A.dvertise\nTable10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\"\nIf a 9V Prog, 15V Prog or 20VSh Parlolg Programmable Power Supply is d when not required\nby SourceShall Maximum Voltage ,\nthen the maximum current be RoundDown (x/Prog Voltage) to the nearest 50mA. When the PPS\n\uf06c Power Limited bit is cOlepatrio tnhae lBatter y Supp plyrovide tShhisa cllurrent at .\nMaximum power for PDOs be \u2264 x.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 995\n10.2.1 Source Power Rule Considerations\nSourcePower Rules\nThe\uf06c PDP Raraet idnegsigPnDePd to:\nEnsure the ( ) of an adapter specified in watts explicitly defines the voltages and\n\uf06c currents at each voltage the adaptPerD sPu Rpaptoinrtgs.\nPDP Rating\nEnsure that adapters with a large s are always capable of providing the power to devices\n\uf06c designed for use with adapters with a smaller .\nEnable an ecosystem of adaSpotuerrcse tPhoawt aerre R iunlteesr-operable with the devices inT tahbel eec1o0s.1y,s \"tCemon.siderations for\nSources\"\nThe considerations that lead to the are based are summarized in\n. Table10.1 Considerations for Sources\nConsiderations Rationale Consequence\nA user going into an electronics retailer Cannot have a complex identification\nSimple to identSiofyu rccaepability Source\nknows what they need scheme\nHigher power s are a superset of Bigger is always better in user\u2019s eyes \u2013 don\u2019t Higher power s do everything smaller\nSource\nsmaller ones want a degradation in performance ones do\nSource\ns with the same power rating but\nTo avoid user confusion, any given power\nUnambiguous definitions different VI combinations might not inter-\nrating has a single definition\noperate\nSource Fixed profiles at specific power levels don\u2019t\nUsers and companies will want freedom to\nA range of power ratings provide adequate flexibility, e.g., profiles as\nUSB Type-CSource pick appropriate ratings\nUSB Type-CSource defined in previous versions of PD.\n[USB Type-C 2.4]\n5V@3A is defined by All > 15W adapters must support 5V@3A or\n5V@3A is considered\nsuperset consideration is violated\nIncrease to maximum voltage (20V) before\nMaximize 3A cable utilization 3A cables will be ubiquitous Source\nincreasing current beyond 3A\nMore rails are a higher burden for s, 5V is a basic USB requirement. 48V provides\nOptimize voltage rail count Battery Source\nparticularly in terms of testing the maximum capability.\nSource\nSome s are not able to provide\nS\nm\no\no\nm\nb\ne\nil e\ns m\nde\na\nv\nll\ni ces, are\n-\na\no\nb\np\nl\ne\ne\nr\nt\na\no\nBt e\np\nad\nr\nt t\no\ne\nv\nr\ni\ny\nde m\ns\no\ne\nr\n.g\ne\n. , I A n d a ve d r d t i i t s i e on to the Bmainttiemryal 5 A V d vertise\nments are able to more\nsignificant power power directly from their than from\nSource power from their\naH urebgulated 5V supplyCharger\nHub Port Section 10.3, \"Sink Power Rules\"\nSCohmareg er s share power between s and multi-port s have to be\nmultiple Ports ( s and multi- See\nsupported\ns)\nPage 996 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n10.2.2 Normative Voltages and Currents\nSPR Source PDP Rating Shall Table10.2,\n\"SPR Normative Voltages and Minimum Currents\"\nThe voltages and currents an with a of x Watts support are as defined in\nTable10.2 SPR Norma.tive Voltages and Minimum Currents\nPort Maximum 5V Fixed 9V Fixed 15V Fixed 20V Fixed SPR AVS\nPDP Rating (W)\nPDP\n3\n0.5 \u2264 x \u2264 15 ( /5)A PDP- - - -\n2 3\n15 < x \u2264 27 3A ( /9)A - - -\nPDP\n\uf06c Fixed Supply\n2 2 3 (9V \u2013 15V):\n27 < x \u2264 45 3A 3A ( /15)A -\n(15V Max Current) A\n\uf06c Fixed Supply\nPDP (9V \u2013 15V):\n4\n2 2 2 3 (15V Max Current) A\n45 < x \u2264 60 3A 3A 3A ( /20)A \uf06c Fixed Supply\n(15V \u2013 20V):\n(20V Max Current) A\n\uf06c Fixed Supply\nPDP (9V \u2013 15V):\n4, 5\n2 2 2 1, 3 (15V Max Current) A\n60 < x \u2264 100 3A 3A 3A ( /20)A \uf06c Fixed Supply\n(15V \u2013 20V):\n1, 5\n(20V Max Current) A\nFixed Supply ShallAdvertise MayAdvertise PDP\n1) Requires a 5A cable.\nAdvertise\n2) The PDOs Maximum Current field at least 3A, but up to RoundUp ( /voltage) to the\nFixed Supply ShallAdvertise PDP PDP\nnearest 10mA. Requires a 5A cable if over 3A is d.\n3) The PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the\nSPR AVS Advertise Fixed Supply\nnearest 10mA.\nNote 2 Advertise\n4) current for this voltage range is the maximum current as d by the 15V PDO. This current can be higher\nSink Fixed Supply\nthan 3A (refer to ). Requires a 5A cable if over 3A is d.\n5) The is allowed to request up to the 20V Max Current when the requested voltage is 15.0V.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 997\nManaged Capability Port Valid(A)PDO Port\nMaximum PDP Table10.2, \"SPR Normative Voltages and Minimum Currents\" Port Present PDP\nSPR Table10.3, \"SPR Sourcse w Chaepna pbiolwitieers cWonhsetnr aPionretd P arerese dnetf PinDePd itso l eosfsfe trh an Po rt Maxims ubmas ePdD oPn\" the port's\n(as per Managed Capability Port ) at lower\n(as per ) because these\nvoltagesT wabolueld1 o0t.3he SrwPRis eS obue racvea iClaabplaeb ifi ltihtiee s When Port Present PD pPo wise lre hssa dthna'tn b Peeonr tc oMnasxtrimainuemd .PDP\nPort Present 5V Fixed 9V Fixed 15V Fixed 20V Fixed SPR AVS with Max Voltage of 15V or\nPDP (W) 20V per Table10.2\n6\n\uf06c Fixed Supply\nPDP PDP PDP PDP (9V \u2013 15V):\n4, 6, 8\n3 3,7, 8 3,7,8 3,7,8 (15V Max Current) A\n5 < x \u2264 15 ( /5)A ( /9)A ( /15)A ( /20)A \uf06c Fixed Supply\n(15V \u2013 20V):\n6,8\nPDP PDP (20V Max Current) A\n2 3 3,7 \uf06c Fixed Supply\n15 < x \u2264 27 3A ( /9)A ( /15)A PDP (9V \u2013 15V):\n4\nPDP 3,7 (15V Max Current) A\n27 < x \u2264 45 3A 2 3A 2 ( /15)A 3 ( /20)A (15 \uf06c V \u2013 20V): Fixed Supply 6\n(20V Max Current) A\n\uf06c Fixed Supply\nPDP (9V \u2013 15V):\n4\n2 2 2 3 (15V Max Current) A\n45 < x \u2264 60 3A 3A 3A ( /20)A \uf06c Fixed Supply\n(15V \u2013 20V):\n(20V Max Current) A\n\uf06c Fixed Supply\nPDP (9V \u2013 15V):\n4, 5\n2 2 2 1, 3 (15V Max Current) A\n60 < x \u2264 100 3A 3A 3A ( /20)A \uf06c Fixed Supply\n(15V \u2013 20V):\n1, 5\n(20V Max Current) A\nFixed Supply ShallAdvertise MayAdvertise PDP\n1) Requires a 5A cable.\nAdvertise\n2) The PDOs Maximum Current field at least 3A, but up to RoundUp ( /voltage) to the\nFixed Supply ShallAdvertise PDP PDP\nnearest 10mA. Requires a 5A cable if over 3A is d.\n3) The PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the\nSPR AVS Advertise Fixed Supply\nnearest 10mA.\nNote 2 Advertise\n4) current for this voltage range is the maximum current as d by the 15V PDO. This current can be higher\nSink Fixed Supply\nthan 3A (refer to ). Requires a 5A cable if over 3A is d.\nSPR AVS Table10.2, \"SPR Normative Voltages and Minimum Currents\"\n5) The is allowed to request up to the 20V Max Current when the requested voltage is 15.0V.\nPort Maximum PDP\n6) The Max Voltage for is what is allowed by based on the port's\nFixed Supply Table10.2, \"SPR Normative Voltages and Minimum Currents\"\n.\nPort Maximum PDP\n7) This SPR voltage is only available if allowed by based on the\nSPR Source May (A)PDO Port Present PDP\nport's .\n8) s offer s at this\nPage 998 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable10.3, \"SPR Source Capabilities When Port Present PDP is less than Port Maximum PDP\"\nTable10.4, \"SPR Source Port Present PDP less than Port Maximum PDP Examples\"\nIn reference to Advertise Port Present PDP Managed Capability Port Port Max, imum\nPDP gives examples of which SPR\ncapabilities are d based on on a and the port's\nand cableT'sa bculerr1e0n.t4 r aStPinRg S. ource Port Present PDP less than Port Maximum PDP Examples\nPort Maximum PDP Port Present Offers\nand Cable Rating PDP\n5V Fixed 9V Fixed 15V Fixed 20V Fixed SPR AVS\n1 1 1 9V \u2013 15V: 3A\n80W / 5A 65W 3A 3A 3A 3.25A\n15V \u2013 20V: 3.25A\n1 1 9V \u2013 15V: 2.67A\n80W / 5A 40W 3A 3A 2.67A 2A\n15V \u2013 20V: 2A\n1 9V \u2013 15V: 2.67A\n80W / 3A 40W 3A 3A 2.67A 2A\n15V \u2013 20V: 2A\n1 1\n40W / 5A 40W 3A 3A 2.67A Not Offered 9V \u2013 15V: 2.67A\n1\n40W / 3A 40W 3A 3A 2.67A Not Offered 9V \u2013 15V: 2.67A\n1 9V \u2013 15V: 1.33A\n80W / 5A 20W 3A 2.22A 1.33A 1A\n15V \u2013 20V: 1A\n1 9V \u2013 15V: 1.33A\n80W / 3A 20W 3A 2.22A 1.33A 1A\n15V \u2013 20V: 1A\n1\n40W / 5A 20W 3A 2.22A 1.33A Not Offered 9V \u2013 15V: 1.33A\n1\n40W / 3A 20W 3A 2.22A 1.33A Not Offered 9V \u2013 15V: 1.33A\n2\n2 2 2 9V - 15V: 1A\n80W/3A 15W 3A 1.67A 1A 0.75A 2\n15V - 20V: 0.75A\n40W/3FAixed Supply 15W 3A Adve 1 rt .6 is 7 e A 2 M 1A a2yAdvertise Not offered PDP 9V - 15V: 1A 2\n1) The PDO Maximum Current field will at least 3A but up to RoundUp ( /voltage) to the\nCapabilities Port Present PDP\nnearest 10mA.\n2) These are not required but may be offered at this .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 999\n10.2.2.1 Fixed Supply PDOs\nFigure 10.1, \"SPR Source Power Rule Illustration for Fixed Supply PDOs\" SPR\nSourceShall PDP Rating Fixed Supply\nillustrates the minimum current that an\nNote: support at each voltage for a given for PDOs.\nSource SourcePDP Rating\nNot illustrated are that currents higher than 3A are allowed to be offered up to a limit of 5A given that a\n5A cable iFsi gduetreec t1e0d. 1b yS PthRe Source aPnodw tehre Rvoulltea gIlel utismtreast ciounrr feonrt Freixmeadi nSsu pwpitlhyi nP DthOes .\n6\n5\n4\n5 + 9V 5 + 9 + 15V\n3\n9 V\n15V\n20V\n2\nV\n5\n1\n0\n0 10 20 30 40 50 60 70 80 90 100\nFigure 10.2, \"SPR Source Power Rule Example For Fixed Supply PDOs\"\nshows an example of an adapter with a rating\nat 50W. The adapter is required to support 20V at 2.5A, 15V at 3A, 9V at 3A and 5V at 3A.\nPage 1000 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nW5.7 W51 W72 W54\nSource PDP Rating (W)\n)A(\ntnerruC\n20V\n5 + 9 + 15V\nRP1 RP2\nFigure 10.2 SPR Source Power Rule Example For Fixed Supply PDOs\n6\n5\n4\n5 + 9V 5 + 9 + 15V\n3\n9 V\n15V\n20V\n2\nV\n5\n1\n0\n0 10 20 30 40 50 60 70 80 90 100\nTable10.5, \"Fixed Supply PDO - Source 5V\" Table10.6, \"Fixed Supply PDO - Source 9V\" Table10.7, \"Fixed Supply PDO\n- Source 15V\" Table10.8, \"Fixed Supply PDO - Source 20V\" Fixed Supply Shall\nNormative , Table10.2, \"SPR Normative Voltages a, nd Minimum Currents\"\nand show the PDOs that be supported\nfor each of the voltagesT daebfilnee1d0 i.n5 Fixed Supply PDO - Source 5V .\nBit(s) Description\nFixed Supply\nDual-Role Power\nB31\u202630\nUSB Suspend Supported\nB29\nUnconstrained Power\nB28\nUSB Communications Capable\nB27\nDual-Role Data\nB26\nUnchunked Extended Messages Supported\nB25\nEPR Capable\nB24\nB23 Reserved Shall\nB22 Peak Current\n\u2013 be set to zero.\nB21\u202620\nPDP\nB19\u202610 5V\nPDP Rating (x) Current (A)\nCurrent based on\nB9...0 0.5 \u2264 x \u2264 15 x \u00f7 5\n15 < x \u2264 25 3 \u2264 A \u2264 x \u00f7 5\n25 < x \u2264 100 3 \u2264 A \u2264 5\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1001\nW5.7 W51 W72 W54\nSource PDP Rating (W)\n)A(\ntnerruC\nRP1 RP2\nW05\n20V\n5 + 9 + 15V\nTable10.6 Fixed Supply PDO - Source 9V\nBit(s) Description\nFixed Supply\nReserved Shall\nB31\u202630\nPeak Current\nB29...22 \u2013 be set to zero.\nB21\u202620\nPDP\nB19\u202610 9V\nPDP Rating (x) Current (A)\nCurrent based on\n0.5 \u2264 x \u2264 15 PDO not required\nB9...0\n15 < x \u2264 27 x \u00f7 9\n27 < x \u2264 45 3 \u2264 A \u2264 x \u00f7 9\n45 < x \u2264 100 3 \u2264 A \u2264 5\nTable10.7 Fixed Supply PDO - Source 15V\nBit(s) Description\nFixed Supply\nReserved Shall\nB31\u202630\nPeak Current\nB29...22 \u2013 be set to zero.\nB21\u202620\nPDP\nB19\u202610 15V\nPDP Rating (x) Current (A)\nCurrent based on\n0.5 \u2264 x \u2264 27 PDO not required\nB9...0\n27 < x \u2264 45 x \u00f7 15\n45 < x \u2264 75 3 \u2264 A \u2264 x \u00f7 15\n75 < x \u2264 100 3 \u2264 A \u2264 5\nTable10.8 Fixed Supply PDO - Source 20V\nBit(s) Description\nFixed Supply\nReserved Shall\nB31\u202630\nPeak Current\nB29...22 \u2013 be set to zero.\nB21\u202620\nPDP\nB19\u202610 20V\nPDP Rating (x) Current (A)\nCurrent based on\nB9...0\n0.5 \u2264 x \u2264 45 PDO not required\n45 < x \u2264 100 x \u00f7 20\nMay Optional\nSection 10.2.3, \"Optional Voltages/Currents\"\nMore current be offered in the PDOs when voltages/currents are supported and a 5A cable is being\nused (see ).\nPage 1002 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n10.2.2.2 SPR Adjustable Voltage Supply (AVS)\nSPR AVS Figure 10.3, \"Valid SPR AVS Operating Region for a Source advertising in the range of 27W < PDP \u2264 45W\"\nFigure 10.4, \"Valid SPR AVS Operating Region for a Source advertising in the range of 45W < PDP \u2264 60W\" Figure\nF1o0r.5 , \"Valid ,S PR AVS Operating Region for a Source advertising in the range of 60W < PDP \u2264 100W\" ,\nSPR AVSRDO PDP PDP and PDP\nillustrate the valid\noperating region for requests in the ranges of 27W < \u2264 45W, 45W < \u2264 60W and 60W < \u2264\n10F0iWgu,r ree s1p0e.c3t iVvaelliyd. SPR AVS Operating Region for a Source advertising in the range of 27W < PDP \u2264 45W\n6\n5\n4\n3\n2\n1\n0\n0 15 30 45 60\nFigure 10.4 Valid SPR AVS Operating Region for a Source advertising in the range of 45W < PDP \u2264 60W\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1003\n)A(\ntnerruC\nODR\nValid RDO Requests\n9V 15V 20V\nInvalid Requests\n(Crosshatched Area)\n15V Fixed PDO Max Current\nValid Operating Region\nfor SPR AVS Sink Requests\nfor 27W < PDP (cid:1095)(cid:3)(cid:1008)(cid:1009)(cid:116)\nRDO Voltage (V)\n6\n5\n4\n3\n2\n1\n0\n30\n)A(\ntnerruC\nODR\nValid RDO Requests\n9V 15V 20V\nInvalid Requests\n(Crosshatched Area)\n15V Fixed PDO Max Current\n(Minimum of 3A)\n20V Fixed PDO Max Current\nValid Operating Region\nfor SPR AVS Sink Requests\nfor 27W < PDP (cid:1095)(cid:3)(cid:1008)(cid:1009)(cid:116)\nRDO Voltage (V)\nFigure 10.5 Valid SPR AVS Operating Region for a Source advertising in the range of 60W < PDP \u2264 100W\n6\n5\n4\n3\n2\n1\n0\n30\n10.2.2.2.1 SPR Adjustable Voltage Supply (AVS) Voltage Ranges\nTable10.12, \"EPR Source Capabilities based on the Port Maximum PDP and using an EPR Capable Cable\"\nSPR AVS\nshows the\nMinimum and MaximuTma bVloelt1a0ge.9 f o SrP tRhe A djustab rlaen Vgeoslt.age Supply (AVS) Voltage Ranges\nAVS Voltage Range\n15V AVS 20V AVS\nMaximum Voltage 15V 20V\nMinimum Voltage 9V 9V\nSource Shall\nThe voltage output at the 's connector be +/-5% for both the Maximum Voltage and the Minimum\nVoltage.\nPage 1004 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n)A(\ntnerruC\nODR\nValid RDO Requests\n9V 15V* 20V\nInvalid Requests\n(Crosshatched Area)\n20V Fixed PDO Max Current\n15V Fixed PDO Max Current\nValid Operating Region\nfor SPR AVS Sink Requests\nfor 27W < PDP (cid:1095)(cid:3)(cid:1008)(cid:1009)(cid:116) * At 15.0V, up to the (20V Fixed PDO\nCurrent)A is allowed\nRDO Voltage (V)\n10.2.3 Optional Voltages/Currents\n10.2.3.1 Optional Normative Fixed, Variable and Battery Supply\nSection 10.2.2, \"Normative Voltages and Currents\" SPR\nSource Sink Sink MayOptionally\nIn addition to the voltages and currents specifieOdp itnio nal Shall Not , an\nthat is optimized for use with a specific or a specific class of s supply additional\nvOoplttiaogneas land increaSsheadl lc Nurortents. However, the EPR Sou vrcoeltages exceSePdR 9MVo.de EPR Mode\nEPR Variable Supply Battery SupplyPDO Shall Not\nSvPoRltaVgaersia ble Supply be imBpaletmteeryn tSeudp opnly PDO includingE fPorR bMoothd e and s of\noperation. versions of and s are not defined and be implemented,\nhowever Opt iaonnda l s are allowed in . Source PDP\nRating Optional\nWhile allowed, the use of voltages and currents is not recommended as two s with the same\nSec btiuotn n 1o0t. 2s,u \"pSpoourrtcien Pg otwhee rs aRmulee s\" voltages aSnhda cllurrents caOnp bteiohnaavle differently thus confusing the user.\nPDP Rating Normative\nSee for the rules that apply to PDOs in order to be consistent with\n1th0e d.2ec.l3ar.e2d Op atnido thnea l Norma vtoiltvaege sS aPnRd c Purrreongtsr.ammable Power Supply\nPDP Rating Shall\nTable10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port Maximum PDP\"\nThe voltages and currents a Programmable Power Supply with a of x Watts support are as defined\nOptional APDO Sha.ll\nWh\uf06cen Source ProgrAamdvmeratbislee POopwteiorn Saulpply s are offered, the follAoPwDinOg rSehqaulilrAedmveenrttiss e apply:\nAPDO Table10.10, \"SPR Programmable Power Supply PDOs and APDOs based on the Port\nAM aximum t hPaDtP \" s Programmable Power Supply s the PDOs and\ns shown in\n\uf06c SourceShallA.dvertiseOptional APDO\nTable10.11, \"SPR Programmable Power Supply\nAVo ltage R anges \" Programmable Power Supply s with Maximum Voltage and\nMinimum Voltages for nominal voltage as defined in\n\uf06c SourceShall N.o tAdvertise APDO\nTable10.11, \"SPR Programmable Power Supply Voltage\nARa nges\" a Programmable Power Supply that does not follow the Minimum\nVoltage and Maximum Voltage defined in\n\uf06c . Shall SourceAdvertise Attached\n\uf06c In no case aS hall No t a current thaSt PeRxc Meeoddse the cable's current rating.\nTabTlehe1 0M.1ax0 V SoPltRag Per ogramma ebxlcee Pedo w21eVr Swuhpilpel yin P DOs and. APDOs based on the Port Maximum PDP\nPDP Maximum PDP SPR Fixed and AVS 9V Prog 15V Prog 20V Prog\n(W)\n3 3 3\nx < 15W - - -\n15W PDP- - -\n1\n15 < x < 27W ( /9)A - -\nTable10.2, \"SPR Normative Voltages\n27W and Minimum Currents\" Table10.3, \"SPR 3A PDP- -\nSRoeuqruciree Cd appear bilities When Port Present PDP is less\n2 1\n27 < x < 45W than Port Maximum PD (Po\"r 3A ( /15)A -\n45W - 3A PDP -\nwhen applicable)\n2 1\n45 < x < 60W - 3A ( /20)A\nPDP\n60W - - 3A\n1\n60 < x < 100W - - ( /20)A\nSPR PPSAPDO ShallAdvertise PDP\n100W - - 5A\nSPR PPSAPDO ShallAdvertise MayAdvertise PDP\n1) The s Maximum Current field RoundDown ( /Prog Voltage) to the nearest 50mA.\n2) The s Maximum Current field at least 3A, but up to RoundDown( /Prog Voltage)\nAPDO\nto the nearest 50mA.\n3) Applies to s regardless of value of the PPS Power Limited bit.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1005\n10.2.3.2.1 SPR Programmable Power Supply Voltage Ranges\nSPR PPS Fixed Supply\nSPR PPSAPDO Table10.11, \"SPR Programmable Power Supply Voltage Ranges\"\nThe Voltage ranges map to the Voltages. For each fixed voltage there is a defined voltage range\nfor the matching . shows the\nMinimum and Maximum Voltage for the Programmable Power Supply that corresponds to the Fixed nominal\nvoltage. Table10.11 SPR Programmable Power Supply Voltage Ranges\nFixed Nominal Voltage\n9V Prog 15V Prog 20V Prog\nMaximum Voltage 11V 16V 21V\nMinimum Voltage 5V 5V 5V\nSource Shall\nThe voltage output at the 's connector be +/-5% for both the Maximum Voltage and the Minimum\nV1o0lt.a2g.e3..2.2 Examples of the use of SPR Programmable Power Supplies\nAdvertise PDP RatingMay\nThe folloPwDiPng examples illustrate what a power adapter that s a particular offer:\n1) \uf06d 27W implementation includes:\n\uf06d 5V @ 3A,\n\uf06d 9V @ 3A, and\nPDP9V Prog @ 3A.\n2) \uf06d 36W implementation includes:\n\uf06d 5V @ 3A,\n\uf06d 9V @ 3A,\n\uf06d 1SP5R @ AV 2S.4A,\n\uf06d with 9V - 15V @ 2.4A,\n\uf06d 9V Prog @ 3 A, and\nPDP15V Prog @ 2.4A. Optionally\n3) \uf06d 36W implementation that includes higher current in the 9V Prog PPS:\n\uf06d 5V @ 3A,\n\uf06d 9V @ 3A,\n\uf06d 1SP5R @ AV 2S.4A,\n\uf06d with 9V - 15V @ 2.4A,\n\uf06d 9V Prog @ >3A up to 4A (with a 5A cable) and 15V\nPDPProg @ 2.4A.\n4) \uf06d 50W implementation includes:\n\uf06d 5V @ 3A,\n\uf06d 9V @ 3A,\n\uf06d 15 @ 3A,\n20V @ 2.5A,\nPage 1006 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06d SPR AVS\n\uf06d with 9V - 15V @ 3A & 15V - 20V @ 2.5A,\n\uf06d 15V Prog @ 3A, and\nPDP20V Prog @ 2.5A.\n5) \uf06d 80W implementation includes:\n\uf06d 5V @ 3A,\n\uf06d 9V @ 3A,\n\uf06d 15 @ 3A,\n\uf06d 2SP0RV A @VS 4A,\n\uf06d with 9V - 15V @ 3A & 15V - 20V @ 4A,\n\uf06d 15V Prog @ 3A, and\n20V Prog @ 4A.\nThe first example illustrates a basic example of aP sDuPp Rpalyti tnhgat can only support 5V and 9V.\nPower Rules SPR AVS Power Rules\nThe second and thirSdP eRx Mamodpeles illustrates as the goes higShPeRr (thAe)PreD aOre morAeP pDoOssible combinations that\nmeet the . These examples also add . Although there are multiple ways to meet the ,\nwhile operating in no more than a combination of seven s and s can be offered.\nAdvertise SPR AVS\nThe fourth and fifth example show that the 15SVPR P AroVgS @AP 3DAO fully covers the 9V Prog @3A range so it is not necessary\nto both. These examples also illustrate being extended up to 20V with separate current limits for\nthe 9V - 15V and 15V - 20V ranges - a single covers advertising both ranges.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1007\n10.2.3.3 Optional Normative Extended Power Range (EPR)\nEPR Mode Optional EPR Capable PDP Rating EPR Capable\nSource Port EPR Source Port May SPR Mode EPR Mode\nSupport of is . An port has a that is >100W and \u2264240W. An\nEPR Sou r(ce Port ) SP Ro pMeoradteeM ina eyither or when operating at 100W or less.\nEPR Mode EPR Source PortShall\nAn operating in offer less than 100W to avoid violating safety regulations. When\noperating in , an offer 100W in Fixed 20V when not constrained by multi- port\nshaEriPnRg Sliomuirtcse. May Shared Capacity\nCharger Assured Capacity Charger [USB Type-C 2.4]\nAn include multiple ports and these ports can be functionally implemented as\nor EPR Source Ppoorrtts P arse dseenfitn PedD Pin Sh.all Normative\nSPR Source Port Shall SPR Mode EPR Source\nAny port oEnP aRn C apableSha tllhat has a SPR Mode of E1P0R0 WSo uorrc leess follow the SPR Mode requirements\nfMoar y s and operate only in . Any port on an that is operating with a cable\nthat is not Should operate only in . An , when operating in with a 5A cable,\noffer less than 5A due to design tolerances in order to meet applicable safety standards. For best user\nTexapbeleri1e0n.c1e2 ,i t\" EPR Sou brcee a Csa cploasbeil titoi e1s0 b0aWse da so pno tshsei bPloer.t Maximum PDP and using an EPR Capable Cable\"\nTable10.13, \"EPR Source Capabilities when Port Present PDP is less than Port Maximum PDP and using an EPR-\ncapable cable\" Normative EPR Source Port and EPR\nSource Port SPR PPSShall APDO\ndefineP DthPe requirements s.P WDhPile not included in EthPeRs Me toadbeles, any\nthat also supports offer the SPR Fixed 20V PDO and PPS 20V Prog at 100W (or the\nmax\uf06cimum availabEleP R So uwrchee nP otrhte port is operating at an EquPiDvPa lRenatt ing <S1h0a0lWl ) when in :\nTable10.12, \"EPR Source Capabilities based on the Port Maximum PDP and using an EPR\nWCahpeanb laen C able\" is PcDapPa Rbalet ionfg supplying its , it adhere to the requirements\ndefined in\n\uf06c Source Pboarsted on itEs PRCharger of x Watts. Port Maximum PDP Shall\nTable10.13, \"EPR Source Capabilities when Port Present PDP is less than\nWPohrte nM aa ximum PDP aonnd a uns ing a n EPR-ca isp aubnlaeb claeb tloe \"provide its Port Present PDP , it adhere to\nthe requirements defined in\nbased on a of x Watts. Some\n\uf06dexampElePsR: Source PortMay PDP Rating\nNegotiation\nAn be unable to provide its because it is thermally constrained at\n\uf06d the time of power .EPRCharger\n\uf06c A SharEePdR pCohrta orgne ar multi-poArdtj usta ble Volta gthea Stu ips plilmy iAteVdS byE xthplei criet mCoanintrinagc tavailable power.\n\uf06dWhenS ahna ll is in an ( ) Table1:0 .15, \"EPR Adjustable\nVoltage Supply (AVS) Voltage Ranges\"\nIt Reject all Requests outsidAed ovfe trhties edefPinDePd voltage range (see\n) or for a requested voltage and Current that results in a power\n\uf06d level that iSsh maollre Stohuarnc tehAed Pvoerrtt'isse d . Sink\nAttached\nIn no case a a Current or accept a Current requested by a that exceeds the\ncable's current rating.\nPage 1008 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n\uf06c EPR SourceShall Not\nTableT1h0e.1 M2a xE PVRol tSaoguer ocfef eCraepda bbyi lainti es based on the Port eMxcaexeidm 4u8mV .PDP and using an EPR Capable Cable\nPort SPR Fixed and AVS 28V Fixed 36V 48V Fixed EPR AVS ,\nMaximum Fixed\n34\nPDP (W)\n3\nPDP\n\uf06c\nPDP N/A N/A (15V \u2013 /5A):\nPDP\n2 1 1 5A\n100 < x \u2264 140 ( /28)A \uf06c PDP AVS\n(> /5A \u2013 28V):\nTable10.2, \"SPR PDP\nNormative Voltages and Minimum ( / voltage) A\nC C a u p rR a re b en i q l t i us t \"i i r e e s d W pT h ea e rb n l e Po 1 r 0 t . 3 P , r \" e S s P e R nt S P o D u P rc i e s PDP N/A (15 P \uf06c V D P \u2013 /5A):\nless than P(oorr t Maximum PDP\" ( / 1 5A\n140 < x \u2264 180 5A 2 \uf06c PDP AVS\n36)A (> /5A \u2013 36V):\nwhen PDP\napplicable) ( / voltage) A\n\uf06c\nPDP (15V \u2013 /5A):\nPDP\n2 5A\n180 < x \u2264 240 5A 5A ( /48)A \uf06c PDP AVS\n(> /5A \u2013 48V):\nEPR Source Fixed Supply PDP\n( / voltage) A\nPDP\n1) s are disallowed from offerin S g h allAdvertise voltages that are abov P e D t P he defined voltages for a P g D iv P en , e.g., 36V is\ndisallowed for any of 140W or lower.\n2) The Fixed PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the\nEPR Source Shall Advertise PDP\nnearest 10mA.\nSinkRDO AVS Advertise PDP RDO\n3) s reject any requ A e V s S t for more than the d , i.e., when output voltage and operating current requested\nin the is outside of the defined voltage and current range represented by the d , the will be rejected.\nValid Figure 10.6, \"Valid EPR AVS Operating Region\" AVSAPDO\n4) The current available for a given voltage is as indicated in this column. TheP cDuPrrent defined here is describing the top edge of\nthe Operating Region as illustrated in . The does not have a\nMaximum Current field, so the maximum current has to be calculated from the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1009\nTable10.13 EPR Source Capabilities when Port Present PDP is less than Port Maximum PDP and using an\nEPR-capable cable\nPort Present SPR Fixed and AVS 28V Fixed 36V Fixed 48V Fixed EPR AVS with Max Voltage of 28V, 36V or 48V\nPDP (W) per\n4 4\n28V 36V 2, 5, 6 48V\nTable10.12\nTable10.2, \"SPR \uf06c\nNormative Voltages and PDP\n7 1 . 5 5 < \u2264 x x \u2264 \u2264 2 1 7 5 Req T M C u a a iin b r p ei l a m e d b 1 up il 0 me it . r 3 i e C , s u \" S W r P re h R n e S t n s o \" P u o( r o c rtr e ( /28) A 3 ( PDP /36) A 3 PDP 3 ( \uf06d 15V ( P \u2013 D m P a / x A V vo S l V ta o g l e ta ): ge) A 3\nPresent PDP is less than Port ( /48) A\n27 < x \u2264 45 Maximum PDP\" PDP\n45 < x \u2264 60 ( /28) A 1 PDP Up to 75W:\nwhen\n60 < x \u2264 100 applicable) ( / 1 36) \uf06c\nA \uf06d PDP\n100 < x \u2264 140 Table10.3, \"SPR Source (15V \u2013 max voltage):\nPDP Above 75W:\nCapabilities When Port ( /AVS voltage) A\n140 < x \u2264 180 Present PDP is less than Port 5A \uf06c PDP\nMaximum PDP\" Port ( / 1 48) \uf06d\nPresent PDP A (15V \u2013 /5A):\n180 < x \u2264 240 o w f i 1 th 0 0 a W. 5A 5A \uf06c \uf06d PD 5 P P A D P\n(> /5A \u2013 max voltage):\nFixed Supply ShallAdvertise PDP PDP\n( /AVS voltage) A\n1) The PDOs Maximum Current field either RoundDown ( /voltage) or RoundUp ( /voltage) to the\nEPR Source Shall Advertise PDP\nnearest 10mA.\nSinkRDO AVS Advertise PDP RDO\n2) EPR Sources May reject an (A y ) R P e D q O uest for m P o o r r e t t P h r a e n s t e h n e t PDP d , i.e., when F o ix u e t d p S u u t p v p o l l y ta P g D e O an M d o a p x e im ra u ti m ng C c u u r r r r e e n n t t reque S s h t a e l d l in\nthe is outside of the defined voltage and current range represented by the d , the will be rejected.\nAdvertise PDP PDP\n3) EPRFixse d Sup o p f l f y er an s at this T . a W b h le en 1 0 o . f 1 fe 2 r , e \" d E , P th R e S ource Capa bilit s ie s based on the Por f t i e M ld a ximu m\neither RoundDown ( /Voltage) or RoundUp ( /Voltage) to the nearest 10mA.\nPDP and using an EPR Capable Cable\" PDP Rating\n4) This voltage is only available if allowed by\nAVS Table10.12, \"EPR Source Capabilities based on the Port Maximum PDP and\nbased on the port\u2019s .\nusing an EPR Capable Cable\" Port Maximum PDP\n5) The Max Voltage for is what is allowed by T\nAVS\nbased on the port\u2019s .\nValid Figure 10.6, \"Valid EPR AVS Operating Region\" AVSAPDO\n6) The current available based on voltage is as indicated in this colPumDPn. The current defined here is describing the top edge of the\nOperating Region as illustrated in . does not have a Maximum\nCurrent field so the maximum current has to be calculated from the .\nNote: EPRManaged Capability Port Port\nPresent PDP Table10.13, \"EPR Source Capabilities when Port Present PDP is less than Port\nMax imum PDP and using an EsP wR-hceanp apbolwe ecra bcolen\"strained are definPeodr tt oM oaffxeirm huigmh ePrD vPoltages atT laobwleer1 0.12,\n\"EPR Source C (aapsa pbeilrit ies based on the Port Maximum PDP and using an EPR Capable Cable\"\nMa) nthaganed t hCea ppaobrti'lsit y Port (as per\nManaged Capability Port ) becauPseo trht ese\nMvoaltxaigmeus mw oPuDldP otherwise be available if the power hadn't been constrained.\ns are required to be properly identified to the user based on the port's\nTable10.1.3, \"EPR Source Capabilities when Port Present PDP is less than Port Maximum PDP and\nusing an EPR-capable cable\" Table10.14, \"EPR Source Examples when Port Present PDP is less than Port Maximum\nIPnD rPe\"ference to EPR Capabilities SPRFixed Supply SPR AVS\nAPDO Advertise , Port Present PDP Port Maximum PDP\ngives examples of which , in addition to the required PDOs and\n, arTea ble10.1d4 b EaPseRd S oonu rce Examples wh eann dP othret Pporerts'es nt PDP is less than P.ort Maximum PDP\nPort Maximum Port Present Offers\nPDP PDP\n28V Fixed 36V Fixed 48V Fixed AVS\n200W 108W 3.86A 3A 2.25A 48V@108W\n160W 108W 3.86A 3A Not offered 36V@108W\n120W 108W 3.86A Not offered Not offered 28V@108W\n200W 72W 2.57A 2A 1.5A 48V@72W\n160W 72W 2.57A 2A Not offered 36V@72W\n120W 72W 2.57A Not offered Not offered 28V@72W\n200WCapabilities 36W 1.29A 1A P1ort Present 0 P .7 D 5 P A 1 48V@36W 1\n1) These are not required but may be offered at this .\nPage 1010 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTable10.14 EPR Source Examples when Port Present PDP is less than Port Maximum PDP\nPort Maximum Port Present Offers\nPDP PDP\n28V Fixed 36V Fixed 48V Fixed AVS\n1 1\n160W 36W 1.29A 1A Not offered 36V@36W\nCapabilities Port Present PDP\n120W 36W 1.29A Not offered Not offered 28V@36W\n1) These are not required but may be offered at this .\nEPR Source AVSExplicit Contract PDP Shall\nPDP RejectMessage Figure 10.6, \"Valid EPR AVS Operating\nRegion\" s when operating in an Valid are requiredE tPoR s tSaoyu wrciethin their as AsVucShE txhpeliyc it\nCreosnptorancdt to any requesAtd (vVeArt)i sfeor mPDoPre than the with a .\nillustrates the definition of the operating range for an operating in an\nbased on its d Figu.re 10.6 Valid EPR AVS Operating Region\n6\n5\n4\n3\n2\n1\n0\n0 15 30 45 60\nFigure 10.7, \"EPR Source Power Rule Illustration for Fixed PDOs\" EPR Source\nShall PDP Rating\nillustrates the minimum current that an\nNote: support at each voltage for a given .\nSource SourcePDP Rating\nNot illustrated are that currents higher than 3A are allowed to be offered up to a limit of 5A given that a\n5A cable is detected by the and the voltage times current remains within the .\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1011\n)A(\ntnerruC\nODR\nValid RDO Requests\nAdvertised\nVoltage = Voltage =\n15V PDP/5A 28, 36 or 48V\n5A\nCurrent =\nAdvertised PDP/Advertised Voltage\nValid Operating Region Invalid Requests\n(Crosshatched Area)\nfor EPR AVS Sink Requests\nRDO Voltage (V)\nFigure 10.7 EPR Source Power Rule Illustration for Fixed PDOs\n6\n5\n4\n3\n2\n1\n0\n0 20 40 60 80 100\nSource PDP Rating (W)\n10.2.3.3.1 EPR Adjustable Voltage Supply (AVS) Voltage Ranges\nTable10.15, \"EPR Adjustable Voltage Supply (AVS) Voltage Ranges\"\nEPR AVS\nshows the Minimum and Maximum Voltage for\nthe ranges. Table10.15 EPR Adjustable Voltage Supply (AVS) Voltage Ranges\nAVS Voltage Ranges\n28V AVS 36V AVS 48V AVS\nMaximum Voltage 28V 36V 48V\nMinimum Voltage 15V 15V 15V\nSource Shall\nThe voltage output at the 's connector be +/-5% for both the Maximum Voltage and the Minimum\nVoltage.\nPage 1012 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\n)A(\ntnerruC\n5 + 9V 5 + 9 + 15V\n5 V 20 V\n1\nV\n5\n120 140 160 180 200 220 240\nRP1RP2\nW5.7 W51 W72 W54 W001 W041 W081\n20V 20+28V 20+28+36V\n28V\n36V\n48V\nV 20\n5 + 9 + 15V 5 + 9 + 15V 5 + 9 + 15V 5 + 9 + 15V\nV 9"}
{"doc_title": "USB Power Delivery Specification Rev X", "section_id": "10.3", "title": "Sink Power Rules", "page": 1013, "level": 2, "parent_id": "10", "full_path": "10.3 Sink Power Rules", "tags": [], "text": "10.3 Sink Power Rules\n10.3.1 Sink Power Rule Considerations\nSinkPower Rules Sink\nSource Normative\nThe are designed to ensure the best possible user experience when a given used with a\ncompSilniaknPto wer Ru olef sarbitrary Output Power Rating that only supplies the voltages and currents.\nThe\uf06c S oaurerc beased on the following considerations: Sink\nPDP\nLow power s (e.g., 5V) are expected to be very common and will be used with s designed for\n\uf06c a higher . Source PDP Rating Sink\n\uf06c Optimizing Sthinek user experience when s with a higher Optional are used with low power s.\n10.3.2Preventin gN orsm thaat toinvlye fu Sncitniokn wRelul (loer sat all) when using voltages and currents.\nSink Source PDP Rating Shall\n\uf06cs designed to use s with a Source of x W PD:P Rating\n\uf06c Either operate or charge from Cas pthaabtil hitaievse M a ismatch \u2265S xe cWtio.n 6.4.2.3, \"Capability Mismatch\"\nSource PDP Rating\nEither operate, charge or indicate a (see )\nSink from s Sthoautr cheave a Optional < x W and \u2265 0.5W. Section 10.2.3, \"Optional\nVoltages/Currents\" PDP Rating Shall Source\nA oPpDtiPm Rizaetidn fgor a with voltageNso arnmda ctuivrreents or power as described in Section 10.2.2,\n\"Normative Voltage sw aitnhd a C urrents\" of x W proviSdoeu ar cseimilar user experience when powered from a\nwith a of \u2265 x W that supplies onlyT athbele 10.10, \"SPR v Porlotaggreasm amnadb clue rProewntesr aSsu spppelyc iPfiDeOd si na nd APDOs based\non the Port Maximum PDP\" . For example, a 60W might not offer 9V Prog or 15V Prog since 20V Prog\nis a suitable substitute for both (as shown in\n). Sink Capabilities Sink PDP Shall\nThe Operational Current/Power in the PDO for s with an Operational of x Watts be\nas f\uf06collows: Fixed Supply Variable Supply\nOperational current for / PDOs: RoundDown(x/voltage) to the nearest\n\uf06c 10mA. Battery Supply\n\uf06c Operational power for PDOs: \u2264 x. APDO Table10.10, \"SPR\nProgrammable Power Supply PDOs and APDOs based on the Port Maximum PDP\"\nOperational current for Programmable Power Supply s as defined in\n: RoundDown (x/Prog\nVoltage) to the nearest 50mAS.inkRDO Sink PDP PDP\nShall\nThe Maximum Current/Power in the for s with an Operational of x Watts and Maximum of y\nWat\uf06cts be as follows: Fixed Supply Variable SupplyRDO Sink Battery\nMaximum current for / s from s without a : RoundDown(x/\n\uf06c voltage) to the nearestF 1ix0emd ASu.pply Variable SupplyRDO Sink Battery\nMaximum current for / s from s with a : RoundDown(y/\n\uf06c Voltage) to the nearesBta 1tt0emryA S.upplyRDO Sink Battery\n\uf06c Maximum power for Battery Supply RDOs from Sinks withouBt aat tery : \u2264 x.\n\uf06c Maximum power for RD O s fromSo urces with a : \u2264 y.Table10.10, \"SPR\nProgrammable Power Supply PDOs and APDOs based on the Port Maximum PDP\" Table10.14, \"EPR\nMSoauxricme uEmxa cmuprlreesn wt hfoern P PPoSr tS Purpepsleyn t PDPs ifsr olemss than P oPrDt OMsa axsim duemfin PeDdP in\"\nor\n: RoundDown (y/Prog Voltage)\nto the nearest 50mA.Shall Advertise Sink Capabilities\nThe following requirements apply to the d :\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1013\n\uf06c SinkShall NotAdvertiseFixed Supply PDP Rating\nA PDO maximum voltages and currents that exceed the\n\uf06c thSeiyn kwSehrae ldl eNsoigtnAeddv etort uisseeV. ariable Supply PDP\nRating\nA PDO maximum voltages and currents that exceed the\n\uf06c SinkS thhaelyl NwoetrAe ddveesritginseed Btoa tutseer.y Supply PDP Rating\nA a PDO maximum allowable power that exceeds the\n\uf06c thSeiyn kwSehrae ldl eNsoigtnAeddv etort uissee. APDO PDP Rating\nA a PPS maximum allowable power that exceeds the they\n\uf06c weSrinek dSehsaiglnl Nedo ttoA duvseer.tise AVSAPDO PDP Rating\nA an maximum allowable power that exceeds the they\nwere designed to use.\nPage 1014 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nA CRC calculation\nA.1 C code example\n//\n// USB PD CRC Demo Code.\n//\n#include <stdio.h>\nint crc;\n//-----------------------------------------------------------------------------\nvoid crcBits(int x, int len) {\nconst int poly = 0x04C11DB6; //spec 04C1 1DB7h\nint newbit, newword, rl_crc;\nfor(int i=0; i<len; i++) {\nnewbit = ((crc>>31) ^ ((x>>i)&1)) & 1;\nif(newbit) newword=poly; else newword=0;\nrl_crc = (crc<<1) | newbit;\ncrc = rl_crc ^ newword;\nprintf(\"%2d newbit=%d, x>>i=0x%x, crc=0x%x\\n\", i, newbit,(x>>i),crc);\n}\n}\nint crcWrap(int c){\nint ret = 0;\nint j, bit;\nc = ~c;\nprintf(\"~crc=0x%x\\n\", c);\nfor(int i=0;i<32;i++) {\nj = 31-i;\nbit = (c>>i) & 1;\nret |= bit<<j;\n}\nreturn ret;\n}\n//-----------------------------------------------------------------------------\nint main(){\nint txCrc=0,rxCrc=0,residue=0,data;\nprintf(\"using packet data 0x%x\\n\", data=0x0101);\ncrc = 0xffffffff;\ncrcBits(data,16);\ntxCrc = crcWrap(crc);\nprintf(\"crc=0x%x, txCrc=0x%x\\n\", crc, txCrc);\nprintf(\"received packet after decode= 0x%x, 0x%x\\n\", data, txCrc);\ncrc = 0xffffffff;\ncrcBits(data,16);\nrxCrc = crcWrap(crc);\nprintf(\"Crc of the received packet data is (of course) =0x%x\\n\", rxCrc);\nprintf(\"continue by running the transmit crc through the crc\\n\");\ncrcBits(rxCrc,32);\nprintf(\"Now the crc residue is 0x%x\\n\", crc);\nprintf(\"should be 0xc704dd7b\\n\");\n}\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1015\nB Message Sequence Examples (Deprecated)\nDeprecated\nThis appendix has been .\nPage 1016 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nC VDM Command Examples\nC.1 Discover Identity Example\nC.1.1 Discover Identity Command request\nTableC.1, \"Discover Identity Command request from Initiator Example\"\nMessage Header VDM Header Initiator Discover IdentityCommand\nbelow shows the contents of the key fields\nin the Tab alnedC .1 Discover fIodre annt ity Comm saennddi nreg qau est from Initiato r Example request.\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID) PD SID\nB31\u202616 VDM Type 0xSFtrFu0c0tu (red VDM)\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type 0I0n0itbiator\nReserved\nB7\u20266 00b ( )\nB5 Command Discove0r Identity\nB4\u20260 1 ( )\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1017\nC.1.2 Discover Identity Command response - Active Cable.\nTableC.2, \"Discover Identity Command response from Active Cable Responder Example\"\nMessage Header VDM Header Responder VDO Discover\nIdentityCommand Responder shows the contMenotdsa ol f the\nkOepye rfaietlidosn in the and for a returning s in response to a\nrequest. In this illustration, the is an active Gen2 cable which supports\n.TableC.2 Discover Identity Command response from Active Cable Responder Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM Header ID Head0er VDO Cert Stat VDO\nProduct VDO Cable VDO\n14\u202612 5 ( + + +\nMessageID\n+ )\nCable Plug\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID) PD SID\nB31\u202616 VDM Type 0xSFtrFu0c0tu (red VDM)\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type Res0p0o0nbderACK\nReserved\nB7\u20266 01b ( )\nB5 Command Discove0r Identity\nID Header VDO\nB4\u20260 2 ( )\nUSB Communication USB\nUSB Communications Capable as USB Host\nHost\nB31 0 (not s capable as a\nUSB Communications Capable as a USB Device\n)\nB30 SOP\u2019 Product Type (Cable Plug/VPD) 0 (not data caApcatibvlee Caasb al eDevice)\nModal Operation Supported\nB29\u202627 100b ( )\nReserved Shall\nB26 1 (supports Modes)\nB25\u202616 . be set toU zSeBro V.endor ID VID0\nCert Stat VDO\nB15\u20260 16-bit unsigned integer. USB-IF assigned for this cable vendor\nProduct VDO\nB31\u20260 32-bit unsigned integer USB-IF assigned XID for this cable\nB31\u202616 16-bit unsigned integer. USB Product ID Product ID assigned by the cable vendor\nCable VDO1 (returned for Product Type \u201cActive Cable\u201d)\nB15\u20260 16-bit unsigned integer. bcdDevice Device version assigned by the cable vendor\nHW Version\nFirmware Version\nB31\u202628 Cable HW version number (vendor defined)\nVDO Version\nB27\u202624 Cable FW version number (vendor defined)\nB23\u202621 010b (Version 1.2)\nPage 1018 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTableC.2 Discover Identity Command response from Active Cable Responder Example\nBit(s) Field Value\nReserved\nB20 USB Type-C plug to USB Type-C/Captive USB0 Type-C\nB19\u202618 EPR Capable (Active Cable) 10b ( EPR Capab \u00ae le)\nCable Latency\nB17 0 (not )\nB16\u202613 Cable Termination Type (Active Cable) 0001b (<10ns V(~CO1NmN))\nB12\u202611\nMaximum VBUS Voltage (Active Cable)\n11b (Both ends Active, required)\nSBU Supported\nB10\u20269 00b (20V)\nSBU Type\nB8 0 (SBUs connections supported)\nVBUS Current Handling Capability (Active Cable)\nB7 0 (SBU is passive)\nVBUS Through Cable\nB6\u20265 01b (3A)\nB4 SOP\u2019\u2019 Controller Present SOP\u2019\u2019 1 (Yes)\nReserved\nB3 1 ( controller present)\nCable VDO2 (returned for Product Type \u201cActive Cable\u201d)\nB2\u20260 0\nMaximum Operating Temperature\nShutdown Temperature\nB31\u202624 70\nReserved\nB23\u202616 80\nU3/CLd Power\nB15 0\nU3 to U0 transition mode\nB14\u202612 010b (1-5mW)\nPhysical connection\nB11 00b (U3 to U0 direct)\nActive element\nB10 0 (Copper)\nUSB4 Supported\nB9 0 (Active Re-driver)\nUSB 2.0 Hub Hops Consumed\nB8 0 (USB4 Supported)\nB7\u20266 USB 2.0 Supported [USB 2.02]\nB5 USB 3.2 Supported [USB0 (3.2] supported)\nUSB Lanes Supported\nB4 0 ( SuperSpeed supported)\nOptically Isolated Active Cable\nB3 1b (Two lanes)\nUSB4 Asymmetric Mode Supported\nB2 0 (Not supported)\nUSB Gen\nB1 0 (Not Supported)\nB0 1b (Gen 2 or higher)\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1019\nC.1.3 Discover Identity Command response - Hub.\nTableC.3, \"Discover Identity Command response from Hub Responder Example\"\nMessage Header VDM Header Responder Discover SVIDsCommand\nResponder Hub shows the contents of the key fields\nin the and for a returning VDOs in response to a\nrequest. In thisT iallbulsetrCa.t3io nD,i tshceo ver Identi tiys aC omm. and response from Hub Responder Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM Header ID Head0er VDO Cert Stat VDO\nProduct VDO\n14\u202612 4 ( + + +\nMessageID\n)\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID) PD SID\nB31\u202616 VDM Type 0xSFtrFu0c0tu (red VDM)\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type Res0p0o0nbderACK\nReserved\nB7\u20266 01b ( )\nB5 Command Discove0r Identity\nID Header VDO\nB4\u20260 2 ( )\nUSB Communications Capable as USB Host USB Communication USB Host\nUSB Communications Capable as a USB Device\nB31 0 (not s capable as a )\nB30 SOP\u2019 Product Type (Cable Plug/VPD) 1 (data capableH ausb a Device)\nModal Operation Supported\nB29\u202627 001b ( )\nReserved Shall\nB26 0 (doesn\u2019t support Modes)\nB25\u202616 . be set toU zSeBro V.endor ID VID0 Hub\nCert Stat VDO\nB15\u20260 16-bit unsigned integer. USB-IF assigned for this vendor\nHub\nProduct VDO\nB31\u20260 32-bit unsigned integer USB-IF assigned XID for this\nHub\nB31\u202616 16-bit unsigned integer. USB Product ID Product ID assigned by the Hu vbendor\nB15\u20260 16-bit unsigned integer. bcdDevice Device version assigned by the vendor\nPage 1020 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nC.2 Discover SVIDs Example\nC.2.1 Discover SVIDs Command request\nTableC.4, \"Discover SVIDs Command request from Initiator Example\"\nMessage Header VDM Header Initiator Discover SVIDsCommand\nbelow shows the contents of the key fields in\nthe aTnadb leC.4 Disco vfoerr aSnV IDs Com smenadnidn gr eaq uest from Initi ator Exam rpelqeuest.\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID) PD SID\nB31\u202616 VDM Type 0xSFtrFu0c0tu (red VDM)\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type 0I0n0itbiator\nReserved\nB7\u20266 00b ( )\nB5 Command Discov0er SVIDs\nB4\u20260 2 ( )\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1021\nC.2.2 Discover SVIDs Command response\nTableC.5, \"Discover SVIDs Command response from Responder Example\"\nMessage Header VDM Header Responder Discover SVIDsCommand\nNumber o fs Dhoawtas O thbeje ccotnstents of the key fields in the\nand for a returning VDOs in response to a\nrequest. In this illustration, the value 3 in the Message Header field indicates that one VDO\ncNoonttea:ining the supported SVIDs would be returned followed by a terminating VDO.\nThe last VDO returned (the terminator of the transmission) contains zero value SVIDs. If a SVID value is\nzero, it isT naobtl eusCe.5d . Discover SVIDs Command response from Responder Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM Head0er\nMessageID\n14\u202612 3 ( + 2*VDO)\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID) PD SID\nB31\u202616 VDM Type 0xSFtrFu0c0tu (red VDM)\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type Res0p0o0nbderACK\nReserved\nB7\u20266 01b ( )\nB5 Command Discov0er SVIDs\nVDO 1\nB4\u20260 2 ( )\nB31\u202616 SVID 0 SVID value\nVDO 2\nB15\u20260 SVID 1 SVID value\nB31\u202616 SVID 2 0x0000\nB15\u20260 SVID 3 0x0000\nPage 1022 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nC.3 Discover Modes Example\nC.3.1 Discover Modes Command request\nTableC.6, \"Discover Modes Command request from Initiator Example\"\nMessage Header VDM Header Initiator Discover ModesCommand Initiator\nDiscover ModesCommandAMS Nu smhboewrs o tfh De actoan tOebnjtesc otsf the key fields in the\nVDM Heade rand Comma fnord aTny pe sending a Command request. ThIen itiator of the\nCommand sends a Message Header with the field set to 1 followed\nby a with the (B7\u20266) set to zero indicating the is from an and the\n(B4\u20260) iTs asebtl etoC 3.6 i n Ddiisccaotivnegr M Moodde edsi sCcoomvemrya.nd request from Initiator Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID for whichS tMruocdteusr eadre V bDeMing requested\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type 0I0n0itbiator\nReserved\nB7\u20266 00b ( )\nB5 Command Discov0er Modes\nB4\u20260 3 ( )\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1023\nC.3.2 Discover Modes Command response\nResponder Discover ModesCommand Number of Data\nObjects VDM\nTHheae der toC tohme mand Type request returnsC oam Mmesasnadge Header Rweistpho tnhdee r Command\nfield set to a value of 1 to 7 (the actual value is the number of Mode objects plus one) followedV IbDy a\nwith the (B7\u20266) set to 1 indicating the is from a and the\n(B4\u20260) set to 3 indicating the following objects describe the Modes the device supports. If the ID is a , the\nstructure and content of the VDO is left to the vendor. If the ID is a SID, the structure and content of the VDO is\ndTeafbinleeCd. 7b,y \" Dthisec Sotvaenr dMaordde. s Command response from Responder Example\"\nMessage Header VDM Header Responder Discover ModesCommand\nNumber oshf oDwatsa t hOeb cjoencttsents of the key fields in the\nand for a returning VDOs in response toR ae sponder\nrequest. In this illustration, the value 2 in the Message Header field indicates that the\ndevice is returning one VDO describing the Mode it supports. It is possible for a to report up to six\ndifferent Modes. TableC.7 Discover Modes Command response from Responder Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM Header0\nMessageID\n14\u202612 2 ( + 1 Mode VDO)\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID for whiScthr uMctoudreesd w VeDrMe requested\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type Res0p0o0nbderACK\nReserved\nB7\u20266 01b ( )\nB5 Command Discov0er Modes\nMode VDO\nB4\u20260 3 ( )\nB31\u20260 Mode 1 Standard or Vendor defined Mode value\nPage 1024 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nC.4 Enter Mode Example\nC.4.1 Enter Mode Command request\nInitiator Enter ModeCommand Number of Data Objects\nVDM Header Command Type Command\nTInhitei ator of thCeo mmand request sends a MReesspsaogned eHreader with the field\nset to 1 followed by a with the (B7\u20266) set to 0 indicating the is from an\nand the (B4\u20260) set to 4 to request the to enter its mode of operation and sets the\nOTabbjelectC P.8o, s\"iEtinotne rf iMelodd teo Ctohme dmeasnirde rde fquunecstti ofrnoaml VInDiOti abtaosre Edx oanm iptsle o\"ffset as received during Discovery.\nMessage Header VDM Header Initiator Enter ModeCommand\nshows the contents of the key fields in the\nand TableC.8 Efonrt earn Mode Co msemndainngd arne quest from I nitiator E xreaqmupeslet.\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID for tShter uMcotudree db eViDngM entered\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nB12\u202611 Object Position 01b (Version 2.1)\nDiscover Modes\nB10\u20268 001b (a one in this field indicates a request to enter\nCommand Type the first Mode in list retIunrintieadto bry )\nReserved\nB7\u20266 00b ( )\nB5 Command Ente0r Mode\nB4\u20260 4 ( )\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1025\nC.4.2 Enter Mode Command response\nResponder Enter ModeCommand Number of\nData Objects VDM Header Command Type\nTheC ommand that is thRee tsaprognedt eorf the Comma nd request sends a MessagRe eHsepaodnedre rwith the\nfield set to a value of 1 followed by a with the (B7\u20266) set to 1 indicating\nthe is from a and the (B4\u20260) set to 4 indicating the has entered the\nMTaobdlee Ca.n9d, \"iEs nrteeard My otod eo pCoermamtea.nd response from Responder Example\"\nMessage Header VDM Header Responder Enter ModeCommand ACK\nshows the contents of the key fields in the\nandT ableC.9 En ftoerr aM ode Comm seannddi nrge sapno nse from R esponder Erexsapmonpslee with an .\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID foSrtr tuhcet uMreodd eV DenMtered\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type 001b (offsetR oefs pthoen dMeordAeC Kentered)\nReserved\nB7\u20266 01b ( )\nB5 Command Ente0r Mode\nB4\u20260 4 ( )\nPage 1026 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nC.4.3 Enter Mode Command request with additional VDO.\nInitiator Enter ModeCommand Number of Data Objects\nVDM Header Command Type\nThe ofC tohme mand Initiato rrequest senCdosm am Maensdsage Header with the Responder field\nset to 2 indicating an additional VDO followed by a with the (B7\u20266) set to zero\nindicating the is from an and the (B4\u20260) set to 4 to request the to enter\nits mode of operation and sets the Object Position field to the desired functional VDO based on its offset as received\ndTuarbilnegC D.1i0s,c \"oEvnetreyr. Mode Command request with additional VDO Example\"\nMessage Header VDM Header Initiator Enter ModeCommand\nshows the contents of the key fields in the\nanTda bleC.10 En ftoerr aMno de Com smenadnidn gr eaqnu est with ad ditional V rDeOqu Eexsat mwipthle an additional VDO.\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID for tShter uMcotudree db eViDngM entered\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nB12\u202611 Object Position 01b (Version 2.1)\nDiscover Modes\nB10\u20268 001b (a one in this field indicates a request to enter\nCommand Type the first Mode in list retIunrintieadto bry )\nReserved\nB7\u20266 00b ( )\nB5 Command Ente0r Mode\nB4\u20260 Optional 4 ( )\nIncluding Mode specific VDO\nB31\u20260 Mode specific\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1027\nC.5 Exit Mode Example\nC.5.1 Exit Mode Command request\nInitiator Exit ModeCommand Number of Data Objects\nVDM Header Command Type Command\nTInhitei ator of thCeo mmand request sends a MResessapgoen dHeerader with the field\nset to 1 followed by a with the (B7\u20266) set to zero indicating the is from an\nTableC.1 a1n, \"dE txhite M ode Comm (aBn4d\u2026 re0q)u seestt t foro 5m t oIn rietiqautoesr tE txhaem ple\" to exit its Mode of operation. Message\nHeader VDM Header Initiator Exit ModeCommand\nshows the contents of the key fields in the\nand Ta fbolre aCn. 11 Exit M seonddei nCgo amnm and requ est from I rneiqtiuaetsotr. Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID for Sthtreu Mctuordeed b VeDinMg exited\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nB12\u202611 Object Position 01b (Version 2.1)\nB10\u20268 001b (identifies the previously entered Mode by its\nCommand Type Object Position Itnhiattia isto tro be exited)\nReserved\nB7\u20266 00b ( )\nB5 Command Exit0 Mode\nB4\u20260 5 ( )\nPage 1028 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nC.5.2 Exit Mode Command response\nResponder Exit ModeCommand Number of Data\nObjects VDM Header Command Type\nTCohme mand that Rreescpeoivnedse rthe Comm and request sends a Message RHeesapdoenrd werith the\nfield set to a value of 1 followed by a with the (B7\u20266) set to 1 indicating the\nis from a and the (B4\u20260) set to 5 indicating the has exited the Mode and\nhTaasb lreeCtu.1r2n,e \"dE txoit nMoordmea Cl oUmSBm oapnedr raetsiopnon.se from Responder Example\"\nMessage Header VDM Header Responder Exit ModeCommandACK\nshows the contents of the key fields in the\nand TableC.12 E fxoirt aM ode Comm seannddi nrge sapno nse from Responde r Exa rmespploense.\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID fSotrr utchteu Mreodd VeD eMxited\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type 001b (offset oRf etshpeo MndoedreA tCoK be exited)\nReserved\nB7\u20266 01b ( )\nB5 Command Exit0 Mode\nB4\u20260 5 ( )\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1029\nC.6 Attention Example\nC.6.1 Attention Command request\nInitiator AttentionCommand Number of Data Objects\nVDM Header Command Type Command\nTInhitei ator of thCeo mmand request sends a Message Header wReitshp othned er field\nset to 1 followed by a with the (B7\u20266) set to zero indicating the is from an\nTableC.1 a3n, \"dA tthteen tion Comm a(Bnd4 \u2026re0q)u seestt tforo 6m t oIn riteiqautoers tE axtatmenptlieo\"n from the . Message\nHeader VDM Header Initiator AttentionCommand\nshows the contents of the key fields in the\nand Ta fbolre aCn. 13 Atten steinodni nCgo manm and requ est from I rneiqtiuaetsotr. Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM0 Header\nMessageID\n14\u202612 1 ( )\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID for whichS attrtuecnttuiroend i sV DbeMing requested\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type 001b (offset of the MoIndiet iraetqouresting attention)\nReserved\nB7\u20266 00b ( )\nB5 Command Atte0ntion\nB4\u20260 6 ( )\nPage 1030 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nC.6.2 Attention Command request with additional VDO.\nInitiator AttentionCommand Number of Data Objects\nVDM Header Command Type\nThe oCf othmem and Respo nrdeeqruest sendCso am Mmeassnadge Header with the field\nsReets ptoo n2d ienrdicating an additional VDO followed by a with the (B7\u20266) set to zero\nindicating the is from a and the (B4\u20260) set to 6 to request attention from the\nTableC.14,. \"Attention Command request from Initiator with additional VDO Example\"\nMessage Header VDM Header Initiator AttentionCommand\nshows the contents of the key\nfields in the and for an sending an request with an\nadditional VTDaOb.leC.14 Attention Command request from Initiator with additional VDO Example\nBit(s) Field Value\nMessage Header\nReserved\n15 Number of Data Objects VDM Hea0der\nMessageID\n14\u202612 2 ( + VDO)\nPort Power Role\n11\u20269 0\u20267\nSpecification Revision Revision 3.x\n8 0 or 1\nReserved\n7\u20266 10b ( )\n5\u20264 Message Type Vendor D0efined Message\nVDM Header\n3\u20260 1111b ( )\nStandard or Vendor ID (SVID)\nB31\u202616 VDM Type SVID for whichS attrtuecnttuiroend i sV DbeMing requested\nStructured VDM Version (Major)\nB15 1 ( )\nStructured VDM Version (Minor)\nB14\u202613 01b (Version 2.0)\nObject Position\nB12\u202611 01b (Version 2.1)\nB10\u20268 Command Type 001b (offset of the MoIdnei triaeqtouresting attention)\nReserved\nB7\u20266 000b ( )\nB5 Command Atte0ntion\nIncluding Optional Mode specific VDO\nB4\u20260 6 ( )\nB31\u20260 Mode specific\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1031\nD BMC Receiver Design Examples\nBMC IR Drop BMC\nSink VBUS\nTheB MC signal is DC-coupled so that the voltage leveSl iinsk affected by the ground . The DC offset of the\nsignal at Power Source aBnMdC Power are in the opposite directions. When the current is increased from 0A,\nthe signal waveform shifts downward at Power Sink and shifts upward at Power Source. This section\nintroduces two sample receiver circuit implementations, which are immune from DC offset and high current\nDloa.d1 step. The y F cainn biet uese Dd iinf Pfoewreer Snoucrece ,S Pcowheer me and inside cables.\nD.1.1 Sample Circuitry\nBMC Figure D.1, \"Circuit Block of BMC Finite Difference\nReceiver\" tRxFilter\nThe sample Finite Difference receiver shown in\nconsists of the Rx bandwidth limiting filter with the time constant , a sampler with the sampling\nstep \u0394tS, 50ns, a Finite Difference Calculator which calculates the voltage difference between the time interval of\n\u0394tFD, 300ns, an edge detector controlled by two voltage thresholds, Vth, H and Vth, L and a logic block for bit\nrecognition. Figure D.1 Circuit Block of BMC Finite Difference Receiver\nD.1.2 Theory\nBMC\nFigure D.1, \"Circuit Block of BMC Finite\nTDhififse rseencctieo Rne dceesivcerrib\"es the fundamental theory of Finite Difference Scheme toV r\nB\ne\nU\nc\nS\nover the received signal with\nthe input and output signal waveforms Soinf kthe circuiFt ibgluorcek sD s.2h, o\"wBMn Cin A C and DC noise from VBUS at Power Sink\"\n. To illustrVa\nB\nt\nU\ne\nS\nthe robustness of the implementSaitnikon, the current load step rate is\nintentionally increased to 2A/\u00b5s at the loadV. I B n U S USB Type-C (a),\nSthinek red curve represents the current measured at the Power when the current i\n\u00ae\ns increased at 9 \u00b5s from\n0iOAv teor 5shAo aontdF tihgeu brelu De. 2d,a \"sBhM cuC rAvCe arenpdr DeCse nnotiss eth freo m VB c U u S r arte Pnot wmeera Ssiunrke\"d at the BcMoCnnector of the poSwinekr\n. In this exVa B m U p S le, the peak current overshoot[ UwSiBth T layrpgee-rC l2o.a4d] step rate is increased to 518 mA which exceeds\n. tRxFilter (b) shows the total noise at Power ,\ncoupled from and D+/D- through the woVr\nB\ns\nU\nt\nS\ncompliant cable, after the Rx bandwidth limiting\nfilter with the time constanSt ink is applied. The noise can be decomposed into 3 components. The firstV is B U th S e\nDC offset, IVBUS(t)*RGND, while IVBUS is the current and RGND is Vth\nB\ne\nU S\ngrounCdC DC resistance of the cable. The\noffset is negative in Power and positive at P[oUwSBer 2 S.0ou]rce. The second noise component is the inductive\nnoise, M*d IVBUS(t)/dt, while M is the mutual inductance between the and wires in the cable and d IVBUS(t)/\ndt is the load BsMteCp rate[.U TShBe 2th.0ir]d componenFitg ius re D.3, \"Sa mFupllle SBpMeeCd S SigEn0a clso (uap)l iwnigt hnoouist eU wSBh i2c.h0 wSEo0u lNdo nisoer (mba) lwlyi th\noUcScBu 2r .r0a SnEd0o mNolyis be\"ut was assumed to occur periodicallyB iMn Cthe simulation to accountV f\nB\no\nU\nr\nS\nthe crosstalk in any phase\nbetween the andB MC signals. In VBUS Figure D.2, \"BMC AC and DC noise from\nVBUS at Power Sink,\" the blue dash curve represents the s[iUgSnBal 2 w.0h]en there is no current, and the red solid\ncurve represents the tR sxiFginltaelr affected by the coupling noise shown in\n(b). The green solid curve is the sample noise, after the Rx bandwidth limiting filter\nwith the time constant is applied.\nPage 1032 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure D.2 BMC AC and DC noise from VBUS at Power Sink\nFigure D.3 Sample BMC Signals (a) without USB 2.0 SE0 Noise (b) with USB 2.0 SE0 Noise\nBMC Figure D.3, \"Sample BMC Signals (a) without USB 2.0 SE0 Noise (b) with USB 2.0 SE0 Noise\"\n[USB 2.0]\nThe signals shoFwignu irne D.4, \"Scaled BMC Signal Derivative with 50ns Sampling Rate (a) without USB 2.0 Noise (b)\nawrieth s aUmSBp l2e.d0 eNvoeirsey\" 50ns and the scaled derivativFeig wuraev eDf.o4r, m\"Ssc,a Vlecdc( Bt)M -C V Scicg (nta -l 5D0enrisv)a, wtiviteh wouitth a 5n0dn ws Sitahm pling Rat e\nn(ao)i swei athroe usth UowSBn 2 in.0 Noise (b) with USB 2.0 Noise\" [USB 2.0]\n(a) and (b), respeVct B i U v S ely. In BMC\n(a), if there is no noise, the derivative waveform just\nchanges slightly before and afte[rU tShBe 2.0] current transition. That means, the slope Foifg tuhree D.4, w\"Sacvaelefodr BmM iCs Sniogtn al\nsDeenrsivitaitviev eto w tihteh D50Cn osf fSsaemt apnlidn gis Rvaetrey (uas)e wfuilt htoo bute UuSseBd 2 t.o0 dNeosiisgen ( ab )r owbituhs tU rSeBc e2i.v0e Nr oagisaei\"nst a large DC offset. However,\nthe derivative waveforms with noise have large perturbation as shown in\n(b).\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1033\nFigure D.4 Scaled BMC Signal Derivative with 50ns Sampling Rate (a) without USB 2.0 Noise (b) with USB\n2.0 Noise\n[USB 2.0]\nBMC [USB 2.0] Figure D.3, \"Sample BMC Signals (a) without USB\nT2.o0 rSeEm0 oNvoei steh e(b h)i gwhit fhr eUqSuBe 2n.c0y S cEo0n tNeonits eo\"f the noise, Finite Difference technique with the proper time\niFnigteurrvea Dl i.5s ,a \"pBpMliCe dS itgon tahle a nd F iwniatve eDfoifrfemre wnciteh O utput wit hn oViasrei oinu s Time Steps\"\n. Using Backward Finite Difference Calculator, \u0394Vcc = Vcc (t) - Vcc(t- \u0394t),\nBsMhoCws the Finite Difference Output\nwhile \u0394t = 500ns. The larger the time interval \u0394t is, the larger the peak-to-peak magnitude of the Finite Difference\nOutput will be. However, the time interval is bounded by the rise time of the signal so that 300ns to 500ns is\na good range of tFhige utirme eD i.n5t eBrMvaCl .Signal and Finite Difference Output with Various Time Steps\nD.1.3 Data Recovery\nThe edge detection is followed by the Finite Difference Calculation. At the input of the edge detector, if the voltage\nis larger than Vth, H at the rising edge, Fthigeu orue tDp.u6t, \"wOiullt bpeuct oomf Fei nhiitgeh D vioffletraegnec lee ivne dl, aVsHh, liifn teh aen vdo Eltdaggee Dise stmecatollre rin t hsoalnid\nVlinthe, \"L at the falling edge, the output will become low voltage level, VL. In this example, Vth, H and Vth, L are 0.2V and\n-0.2V, respectively. The solid curve in\nrepresents the output of the edge detector, where VH is 0.5V and VL is -0.5V.\nPage 1034 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure D.6 Output of Finite Difference in dash line and Edge Detector in solid line\nTheB dMuCty cycle of the output signal from the edge detector varies depending on the thresholds, Vth, H and Vth, L, as\nwell as jitter and noise from silicon and channel. The techniques such as integrating receiver can be used to recover\nDthe.1 .4 signal. Noise Zone and Detection Zone\nFigure D.7, \"Noise Zone and Detect Zone of BMC Receiver\"\nshows the output of Finite Difference when the time\ninterval of Finite Difference is set to 300ns. The noise Zone is defined in between +Vnoise and -Vnoise, in which the\nnoise glitches occur. The detect zone is defined in between +Vdetect and -Vdetect, excluding the noise zone. The\nthresholds of the edge detectors, Vth, H and Vth, L, must be properly set within the detect zone so that the data can\nbe recovered successfully.\nIn this example, Vdetect is 250mV and Vnoise is 50mV. It is highly recommended that the product implemented\nwith the similar techniques indicates the performance with the range of Vnoise and Vdetect in the electrical\nspecification. Figure D.7 Noise Zone and Detect Zone of BMC Receiver\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1035\nD.2 Subtraction Scheme\nD.2.1 Sample Circuitry\nBMC Figure D.8, \"Circuit Block of BMC Subtraction Receiver\"\nThe sample Subtraction receiver shown in consists of\nthe two Low Pass Filters (LPF1 and LPF2), a Subtractor, an Edge Detector and a logic block for bit recognition. The\ntime constant of the first and second LPF are 200ns and 300ns, respectively. The Subtractor subtracts the LPF1\noutput from the LPF2 output. The Edge Detector controlled by two voltage thresholds, Vth, H and Vth, L to recover\nthe data. Figure D.8 Circuit Block of BMC Subtraction Receiver\nD.2.2 Output of Each Circuit Block\nFigure D.9, \"(a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output\"\n[USB 2.0] Figure D.9, \"(a)\nOutput of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output\" (a) shows the output of LPF1 as\nthe red solid line and LPF2 as the blue dash line as well as the noise in green solid line.\nFigure D.6, \"Output of Finite D (ibff)e srhenocwes i nth dea vsho lltiangee a dnidf fEedregne cDee bteecttwoere inn stohleid\nltiwneo\" output filters, Vdiff = Vcc_afterLPF1 - Vcc_afterLPF2. The Vdiff waveform looks very simiSlaerc ttioo nth De. 1F.i3n,i \"teD ata\nRDeifcfoevreernyc\"e output waveform shown in\nso that the data recovery method through the edge detector is the same as described in\n. Figure D.9 (a) Output of LPF1 and LPF2 (b) Subtraction of LPF1 and LPF2 Output\nD.2.3 Subtractor Output at Power Source and Power Sink\nVBUS\nSink\nFTihgeu froel Dlo.w10in, \"gO fuigtpuuret so fs hthoew BsM thCe L ePxFa1m inp lbel uweh deans hth ceu rve a cnudr trheen St uinbctrraeactsoers ifnr ormed 0soAl itdo c5uAr vaen (da t)h aetn P doewcerre aSsoeusr ctoe (0bA)\nwati tPho whiegrh S lionakd\" step rate. The output of the LPF1 and tBhMe CSubtractor at Power Source and PowSeirn k are shown in\nSink\n(a) and (b), respectively. Although the signals at Power Source and Power shift toward the\nopposite direction, the Subtractor outputs at Power Source and Power are almost identical disregard of the\nopposite direction of the DC offset.\nPage 1036 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure D.10 Output of the BMC LPF1 in blue dash curve and the Subtractor in red solid curve (a) at Power\nSource (b) at Power Sink\nD.2.4 Noise Zone and Detection Zone\nSection D.1.4, \"Noise Zone and Detection Zone\"\nThe zone definition is the same as defined in . The sizes of the noise\nzone and detection zone of the Subtraction Scheme are dependent on the filter time constant. When the time\nconstant of the first and second LPF are 200ns and 300ns, respectively, Vdetect is 250mV and Vnoise is 50mV. It is\nhighly recommended that the product implemented with the similar techniques indicates the performance with\nthe range of Vnoise and Vdetect in the electrical specification.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1037\nE FRS System Level Example\nE.1 Overview\nAppendix E, \"FRS System Level Example\" Fast Role Swap FRS\nis intended to clarify ( ) functionality at the system level\ntFhigrouureg hE .1th, e\"E uxsaem opf laen F RexSa Cmappaleb liem Spylsetmemen\"tation. Hub Fast Role\nSwap Figure 7.16, \"VBUS Power during Fast Role Swap\" Hub\nis an example of a and laptop implementation that supports Fast Role\nSwap (see ). It is not the only possible or laptop architecture.\nHowever, it is intended to provide an example system whose functionality is used here to illustrate how\nworks. Figure E.1 Example FRS Capable System\nNotebook\nHub\n(cid:87)(cid:381)(cid:396)(cid:410)(cid:3)(cid:1005)(cid:3) (cid:87)(cid:381)(cid:396)(cid:410)(cid:3)(cid:1006)(cid:3)\nPower (cid:18)(cid:381)(cid:374)(cid:410)(cid:396)(cid:381)(cid:367)(cid:367)(cid:286)(cid:396) (cid:18)(cid:18) (cid:18)(cid:18) (cid:18)(cid:381)(cid:374)(cid:410)(cid:396)(cid:381)(cid:367)(cid:367)(cid:286)(cid:396)\nAdapter\n(cid:24)(cid:18)(cid:24)(cid:18)\nVHubVB H4\nV\n1\nB V\n2\nB (cid:18)(cid:346)(cid:258)(cid:396)(cid:336)(cid:286)(cid:396)\n(cid:4)(cid:18) F F (cid:69)(cid:1006) (cid:1095)(cid:3)(cid:3)(cid:1013)(cid:1004)(cid:3)F\n(cid:44)(cid:1005) H3 (cid:44)(cid:1006) (cid:1095)(cid:3)(cid:3)(cid:1005)(cid:1004)(cid:3)F\n(cid:282)(cid:286)(cid:410)(cid:286)(cid:272)(cid:410) (cid:373)(cid:381)(cid:374)(cid:349)(cid:410)(cid:381)(cid:396) FRS (cid:94) (cid:381) (cid:437) (cid:396) (cid:272) (cid:286) (cid:3) (cid:381) (cid:296) (cid:296) (cid:400)(cid:349)(cid:336)(cid:374)(cid:258)(cid:367) VNbVB (cid:1009)(cid:115)(cid:3)(cid:24)(cid:18)\nPeripheral (cid:346)(cid:381)(cid:367)(cid:282) (cid:410)(cid:349)(cid:373)(cid:286)(cid:396) N4 F\nH6\n(cid:18)(cid:18) (cid:18)(cid:18) (cid:69)(cid:1005) N3\n(cid:1095)(cid:3)(cid:3)(cid:1005)(cid:1004)(cid:3)F 3 4 (cid:1009)(cid:115)(cid:3)(cid:24)(cid:18) (cid:17)(cid:258)(cid:410)(cid:410)(cid:286)(cid:396)(cid:455)\nVB VB F (cid:1095)(cid:3)(cid:3)(cid:1005)(cid:1004)(cid:3)F (cid:282)(cid:286)(cid:410)(cid:286)(cid:272)(cid:410) (cid:373)(cid:381)(cid:374)(cid:349)(cid:410)(cid:381)(cid:396) FRS (cid:94)(cid:349)(cid:374)(cid:364)(cid:3)(cid:381)(cid:296)(cid:296) (cid:94)(cid:381)(cid:437)(cid:396)(cid:272)(cid:286)(cid:3)(cid:381)(cid:374)\nH5\n(cid:44)(cid:381)(cid:367)(cid:282)(cid:882)(cid:104)(cid:393)(cid:3)(cid:18)(cid:258)(cid:393)(cid:3)(cid:3)(cid:3)(cid:3)\nThis\uf06c appendixV BdUeSscribes two cases tVhBaUt Scover a varietHy uobf behaviors that might be seen in practicteF.R SwapInit\nvSafe5V FR_SwapMessage\nSVl B o U w S Discharge whevrSea fe5V between theF igur ae nEd.2 t,h \"eS lloawpt oVp BU t S a kDeissc mhaorrgee t\"han 15ms ( )\nto discharge below 5.5 V ( (max)). In this case the is sent by the laptop while\n\uf06c VisB UstSill greater than VBUS (max). See Hub .\nFast Role Swap Request Figure E.3, \"Fast VBUS Discharge\"\nFast Discharge where between the and the laptop discharges very quickly, perhaps be-\nfore the Hub is even complete. See VBUS .\nAC Supply Hub\nHowever, neither the nor the laptop can anticipate how quickly will discharge until the power adapter is\ndiscoFnanste Rctoelde Sfrwoamp aRne quest or it is unplugged from the H.ub CC\nTFihgeu re E.2, \"Slow VBUS Disch iasr tghee\" momFeignutarrey E l.o3w, \" Fdarisvte VnB bUyS Dthisec harg oen\" the wire which is detectVeBdU bSy the laptop.\nFast Role Swap Request Hub\nVBUS and VBUS show the voltage seen on in\nrelationship to the They also show the transition between when the stops supplying\nand when the laptop starts supplying .\nPage 1038 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nFigure E.2 Slow VBUS Discharge\nVBUS voltage when it discharges slowly\n(assume very small cable IR drop prior to FR swap)\nH1\nOOld Source detects power loss and\nOld Voltage\nVBUSat Hub& signals Fast Role Swap\nNotebook\nNew Source may\nturn on at any time\n(cid:1091) after VBUSfalls below\nvSafe5V(max)\nvSafe5V(max)\nVBUSat\nNotebook\nvSafe5V(min) Cable IR\nVBUSat drop\ntFRSwapTx Hub\nCC\n0V\nN1\ntSrcFRSwap\nH2 N3\nN4\nCurrent from Notebook to Hub\ntSnkFRSwap\n+3A N2\n<iSnkStdby\n0A\nIn this example the Notebook is drawing little current prior to the\nFRS signaling. In other cases it may be drawing more current.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1039\nFigure E.3 Fast VBUS Discharge\nVBUS voltage when it discharges quickly\nvSafe5V(max)\nN4\nVBUSat Hub\nCable IR\nvSafe5V(min)\nCable IR drop drop\nOld Voltage\nVBUSat\nNotebook\ntFRSwapRx\nCC\n0V\nOld Source sends Fast H2 tSrcFRSwap\nRole Swap signal\nN1\nCurrent from Notebook to Hub\ntSnkFRSwap\n+3A\n<iSnkStdby N2\n0A\n-5A\nIn this example the Notebook is drawing 5A prior to the FRS\nsignaling. In other cases it may be drawing less current.\nPage 1040 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nE.2 FRS Initial Setup\nFast Role Swap\nFast Role Swap Hub Hub Fast Role Swap\nBefore a can occur, some initial setup steps are required. They require the laptop to discoveVr\nCONN\nwhether is sFuRpSpoTratbelde bEy.1 t, h\"See quen, tchee f oarm soetuunpt ooff ac uFrarsetn Rto tlhee S wap r(Hequubi rceosn naeftcetre da to Power Adapte, r\nfainrsdt )w\"hethTera bthlee Ela.2p,t \"oSpe qisu aebnlcee afonrd s wetiullpin ogf tao F parsot vRiodlee tShwaat pa m(Houubn ct.o Tnhneeyct aelds oto e lnasputroep tbheafto trhee P loawpetor pA sduappptelire)s\"\nbefore, during and after an . Fast Role Swap\nand below\nshow twoT taybpliecaEl. 1se qSueqenuceensc teh afot rm siegthut pb eo fu ase Fda tsot pRroelpea Srwe aa pla (pHtoupb tcoo snunpepcotretd to Power Ada.pter first)\nStep # Hub Laptop\nHub\n1 Hub connected to power adapter\n2 is connected to laptop. VBUS vSafe5V\n3 Laptop sources 5 V to VCON N( ).\nLaptop sources 5 V to\nActive Cable\n4 Laptop reads the cable to check its current\nVCONN\ncarrying capability and/or if it is an\nrequiring C.apabilitiesMessage\n5 Hub RequestMessage Laptop sends a\n6 Hub sends a Explicit Contract Hub Sink\n7 and laptop establish an with as . Get_Source_Cap Message\nHub\n8 Laptop sends a to\nHub Source_CapabilitiesMessage determine how much power the can provide.\nDual-Role Power Unconstrained Power\n9 sends a with the\nMaximum Current\nbit set, and\nbit set, and > 0. Hub\nPR_SwapMessage\n10 Since the can supply power the laptop sends a\nHub AcceptMessage\nVBUS\n11 sends an and starts supplying\nGet_Sink_CapMessage\nHub\n12 Laptop sends a to\nFRS Hub FRS\ndetermine the current required by the to\nsupport an . If the does not support or\nIgnores Fast Role Swap Request\nthe laptop cannot supply the required current, the\nlaptop any s it\nHub might see.\nVCONN Swap VCONN Source\n13 If the can supply more than 3A, it initiates a\nto make to make itself the\nand reads the cable to check its current carrying\ncHaupbability. Sink_CapabilitiesMessage\n14 sends a RequestMessage\n15 Hub Explicit Contract Hub Laptop sends a\n16 and laptop establish an with as source.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1041\nTableE.1 Sequence for setup of a Fast Role Swap (Hub connected to Power Adapter first)\nStep # Hub Laptop\nActive Cable Alternate\n17 If the laptop has detected that it is connected via\nMode FRS\nan (or one that supports\nVCONN Swap VCONN\ns) and/or that it can support an , it\nSource Hub\ninitiates a to make itself the\nVCONN FRS\n. This removes a requirement that the\nto hold up during the .\n18 NormHaulb PD Power traffic flow Fast Role Swap\n19 The and laptop are now ready to do a in case the power adapter gets removed.\nTableE.2 Sequence for setup of a Fast Role Swap (Hub connected to laptop before Power Adapter)\nStep # Hub Laptop\nHub\n0 is connected to laptop. VBUS vSafe5V\n1 Laptop sources 5 V to VCON N( ).\nLaptop sources 5 V to\nActive Cable\n2 Laptop reads the cable to check its current carrying\nVCONN\ncapability and/or if it is an requiring\n. Source_CapabilitiesMessage\n3 Hub RequestMessage Laptop sends\n4 Hub sends Explicit Contract Hub Sink\n5 and laptop establish an with as . Get_Source_CapMessage\nHub\n6 Laptop sends a to\nHub Source_CapabilitiesMessage determine how much power the can provide\nDual-Role Power Unconstrained Power\n7 sends a with the\nMaximum Current\nbit set, and\nbit cleared, and = 0. Hub\nPR_SwapMessage\n8 Since the cannot supply power, the laptop does\nHub not send a\n9 The poHwuber adapter is connected to the VCONN\nSwap VCONN Source\n10 If the can source more than 3A, it initiates a\nHub to become the .\n11 reads the e-marker to determine the cable\u2019s\ncHuurbrent carryinPgo cwaepra bRioliltey S.wap Source\n12 Hub initiatesS ao urce_Capabilitie stoM beescsoagmee the\n13 sends a with the\nUnconstrained Power bit set and Maximum Current >\n0H.ub Explicit Contract Hub\n14 and laptop establish an with as source. Get_Sink_CapMessage\nHub FRS\n15 Laptop sends a to determine\nHub FRS\nthe current required by the to support an . If\nIgnores\nthe does not support or the laptop cannot\nFast Role Swap Request\nsupply the required current, the laptop any\ns it might see.\nPage 1042 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTableE.2 Sequence for setup of a Fast Role Swap (Hub connected to laptop before Power Adapter)\nStep # Hub Laptop\nActive Cable Alternate Mode\n16 If the laptop has detected that it is connected via an\nFRS VCONN\n(or one that supports s)\nSwap VCONN Source\nand/or that it can support an , it initiates a\nHub VCONN\nto make itself the . This removes\nFRS\na requirement that the also hold up\nHub Fast Role Swapduring the .\n17 The and laptop are now ready to do a in case the power adapter gets removed.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1043\nE.3 FRS Process\nHub FRS\nFRS\nAfter the initial setup is completed and the laptop has deteFramsti nReodle b Sowtha pthat the can request and that the\nlaptop is able and willinDg etovi cseu pPpollyic tyh Me arenqaugeersted current, the system is ready to support . This section\ndescribes the sequence of events that take place during a . The following figures and tables do not\ncover the actions of the or the Policy Engine. Those actions occur orthogonally to the\nelectrical events shown in this appendix. However, the diagrams do indicate the inputs/outputs where the DPM\nand\uf06c Policy Engine interact wiFthR _tShwe aelpecMtreiscsaalg eevents: FRSAMS Figure 7.43, \"Transition Diagram for\nFast Role Swap\" Fast Role Swap Request CC\nThe laptop sends the to initiate the (see\n\uf06c ) within 15PmSs_ RaDftYerM theses laagpetop deteFcRtSs AthMe S oVnB US.\nThe laptop sendFsi tghuer fein Ea.4l Slow VB US disch ianr tghee a fter FR_ Sownlayp a mfteers ista igs es oisu rsceinntg .\nHub: Notebook:\nH2 Send FRS Initiates FRS Hub:\nsignal message sequence VBUS>vSafe5V (min)\nand sinking Signals to/\nHub: Notebook: Notebook: from DPM &\nH1 Adapter FRS signal N1 Sourcing 5V Policy\nMains Loss detected Engine\nDetected\nHub\nPower Path Source Waiting to Sink Sink\nPower Path\nInteraction\nNotebook\nSink Wait to Source Turning on Source Source vSafe5V\nPower Path\nVBUSVoltage Adapter discharging to vSafe5V(max) Source\nN3 N4 New Source = vSafe5V V BUS Voltage\nVBUSCurrent Old Sink (old current)\nNew Sink (0.5A, 0.9A, 1.5A, or 3.0A) Sink\nV Current\nBUS\nPage 1044 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTableE.3 Sequence for slow VBUS discharge (it discharges after FR_Swap message is sent)\nStep # Hub Laptop\nAC Supply\n1 THhueb power adapter\u2019s power is lost.\n2 detects the power adapter disconnect (H1) as\nqHuuibckly as pFoassst iRbolel.e Swap Request CC\nHub\n3 sends on (H2) and\ntSnkFRSwap\nstarts monitoring VHubVB (H3). also starts a\nVBUS vSafe5V\ntimer after the FRS signal begins and\nhas fallen below (min). Fast Role Swap Request CC\nFR_SwapMessage\n4 Laptop detects on (N1)\nthat triggers sending of the . This\ntFRSwapInit\ncan happen at any point in the following steps so\nlong as it is within 15 ms ( ).\nHub\n5 Laptop opens the sinking switch (N2), as quickly as\nFast Role Swap Request\npossible to minimize power drained from after\nthe V.BUS\nSource\n6 Laptop begins monitoring (N3) to know when\nto turn the laptop into a\nHub .\nFast Role Swap Request\n7 opens the sourcing switch (H4) while VHubVB >\n5.5V (after the is sent).\nHowever, the sourcing switch (H4) must be kept\nHub\nclosed until VHubVB is as close to 5.5V as possible. It is\nimportant for the to open its sourcing switch (H4)\nbefore the laptop\u2019s sourcing switch (N4) gets closed to\nmHuinbimize inrush current.\nVBUS\n8 closes the switch (H5) to use the hold-up\ncapacitor to supply to the peripheral(s).\nHub\nSystems with a holding cap permanently in place do\niSnkStdby VBUS tSnkFRSwap\nnot need the switch (H5). does not draw more\nthan from , until the timer\nexpires. VBUS\n9 Laptop detects < VNbVB (N1) before closing the\nVBUS\nsourcing switch (N4) when VNbVB is as close as\npossible to 5.5V. This minimizes the time when\nis not sourced.\nHub VBUS\n10 Laptop closes sourcing switch (N4). When this\n\uf06d cSnkBulk\noccurs the \u2019s input capacitance on will be\nHub tSnkFRSwap less than 10 F ( ).\n11 Hub\u2019s timer expirAesd v(eHr6ti)s.e Fast\nRole Swap required USB Type-C Current\n12 draws up to the current it d in the\nSink_CapabilitiesMessage\nfield of its\nHub .\n13 s with (H5) will open (H5) and remove the Hold-\nUp capacitor.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1045\nFigure E.5 VBUS discharges quickly before FR_Swap message is sent after adapter disconnected\nHub:\nStart Fast H2 Hub: Signals to/\nSwap Signal VBUS>vSafe5V from DPM &\nHub: Hub: N FR o S te s b ig o n o a k l : and sinking policy\nAdapter VBUS< detected Notebook: engine\nH1 Detached vSafe5V Sourcing 5V\nDetected (max)\nSource Port\nH4\nInteraction\nSource Waiting to Sink Sink\nSink Port\nDevice Policy Mgr\nSink Port\nN1\nInteraction\nSink Port Turning On\nPower Path Sink Source Source vSafe5V\nSource Port\nAdapter\nVoltage Source\nvSafe5V (max) N3 N4 New Source = vSafe5V V Voltage\nBUS\nSink Port\nOld Sink\nCurrent New Sink (0.5A, 0.9A, 1.5A, or 3.0A) Sink\nN2 V Current\nBUS\nTableE.4 VBUS discharges quickly after adapter disconnected\nStep # Hub Laptop\nDetached Hub\n1 THhueb power adapter is from the .\n2 detects power adapter disconnect (H1) causing\nHub Fast Role Swap Request CC\nVHubVB to drop below 5.5V very rapidly.\nHub\n3 seHnudbs tSnkFRSwa opn (H2) and starts\nmonitoring VHubVB (H3). opens sourcing switch\n(HHu4b). also starts a timer.\nVBUS\n4 closes the switch (H5) to use the hold-up\ncapacitor to supply to the peripheral(s).\nHub\nSystems with a holding cap permanently in place do\niSnkStdby VBUS tSnkFRSwap\nnot need the switch (H5). does not draw more\nthan from , until the\ntimer expires. Fast Role Swap Request CC\nFR_SwapMessage\n5 Laptop detects on (N1)\nthat triggers sending of the . This\ntFRSwapInit\ncan happen at any point in the following steps so\nlong as it is within 15 ms ( ).\nHub\n6 Laptop opens the sinking switch (N2), as quickly as\nFast Role Swap Request\npossible to minimize power drained from after\nthe V.BUS\nSource\n7 Laptop begin monitoring (N3) to know when\nto turn the laptop into a\n.\nPage 1046 Universal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10\nTableE.4 VBUS discharges quickly after adapter disconnected\nStep # Hub Laptop\nVBUS\n8 Laptop detects < VNbVB (N3).\nHub VBUS\n9 Laptop closes sourcing switch (N4). When this\n\uf06d cSnkBulk\noccurs the \u2019s input capacitance on will be\nHub tSnkFRSwap less than 10 F ( ).\n10 Hub\u2019s timer expirAesd v(Her6ti)s.e Fast\nRole Swap required USB Type-C Current\n11 draws up to the current it d in the\nSink_Capabilities Message\nfield of its\nHub .\n12 s with (H5) will open (H5) and remove the Hold-\nUp capacitor.\nUniversal Serial Bus Power Delivery Specification, Revision 3.2, Version 1.1, 2024-10 Page 1047"}
